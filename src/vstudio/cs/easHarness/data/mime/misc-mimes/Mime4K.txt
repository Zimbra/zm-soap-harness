Date: Mon, 24 Oct 2016 03:57:01 -0700 (PDT)
From: foo@example.com
To: bar@example.com
Subject: MimeSizeOver4KCharacters
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
Thread-Index: CjP3PSJ5rzWD2fC08zNIiJ7vXnWRfg==
Thread-Topic: MimeSizeOver4KCharacters

Software testing is an investigation conducted to provide stakeholders with=
 information about the quality of the product or service under test. Softwa=
re testing can also provide an objective, independent view of the software =
to allow the business to appreciate and understand the risks of software im=
plementation. Test techniques include the process of executing a program or=
 application with the intent of finding software bugs (errors or other defe=
cts).

Software testing involves the execution of a software component or system c=
omponent to evaluate one or more properties of interest. In general, these =
properties indicate the extent to which the component or system under test:

meets the requirements that guided its design and development,
responds correctly to all kinds of inputs,
performs its functions within an acceptable time,
is sufficiently usable,
can be installed and run in its intended environments, and
achieves the general result its stakeholders desire.
As the number of possible tests for even simple software components is prac=
tically infinite, all software testing uses some strategy to select tests t=
hat are feasible for the available time and resources. As a result, softwar=
e testing typically (but not exclusively) attempts to execute a program or =
application with the intent of finding software bugs (errors or other defec=
ts). The job of testing is an iterative process as when one bug is fixed, i=
t can illuminate other, deeper bugs, or can even create new ones.

Software testing can provide objective, independent information about the q=
uality of software and risk of its failure to users and/or sponsors.

Software testing can be conducted as soon as executable software (even if p=
artially complete) exists. The overall approach to software development oft=
en determines when and how testing is conducted. For example, in a phased p=
rocess, most testing occurs after system requirements have been defined and=
 then implemented in testable programs. In contrast, under an Agile approac=
h, requirements, programming, and testing are often done concurrently.

Overview
Although testing can determine the correctness of software under the assump=
tion of some specific hypotheses (see hierarchy of testing difficulty below=
), testing cannot identify all the defects within software. Instead, it fur=
nishes a criticism or comparison that compares the state and behavior of th=
e product against oracles=E2=80=94principles or mechanisms by which someone=
 might recognize a problem. These oracles may include (but are not limited =
to) specifications, contracts, comparable products, past versions of the sa=
me product, inferences about intended or expected purpose, user or customer=
 expectations, relevant standards, applicable laws, or other criteria.

A primary purpose of testing is to detect software failures so that defects=
 may be discovered and corrected. Testing cannot establish that a product f=
unctions properly under all conditions but can only establish that it does =
not function properly under specific conditions. The scope of software test=
ing often includes examination of code as well as execution of that code in=
 various environments and conditions as well as examining the aspects of co=
de: does it do what it is supposed to do and do what it needs to do. In the=
 current culture of software development, a testing organization may be sep=
arate from the development team. There are various roles for testing team m=
embers. Information derived from software testing may be used to correct th=
e process by which software is developed.

Every software product has a target audience. For example, the audience for=
 video game software is completely different from banking software. Therefo=
re, when an organization develops or otherwise invests in a software produc=
t, it can assess whether the software product will be acceptable to its end=
 users, its target audience, its purchasers and other stakeholders. Softwar=
e testing is the process of attempting to make this assessment.