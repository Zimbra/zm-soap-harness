<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="uploadFile.name" value="${testMailRaw.root}/bugs/43066/bug43066.ics"/>
<t:property name="Resource.name1" value="testresource1.${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="Resource.name2" value="testresource2.${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="displayName1" value="TestName.${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="Resource.location" value="Location"/>
<t:property name="Resource.equipment" value="Equipment"/>
<t:property name="active" value="active"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Account_Setup" type="always" >
	<t:objective>setup accounts</t:objective>

	<t:test required="true" >
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="bug_43066" type="bhr" bugids="43066">
	<t:objective> MUST_BE_ORGANIZER exception when trying to delete an imported task </t:objective>
		<t:steps>
		1. Import task using rest.
		2. Send CancelTaskRequest to delete imported task  - verify that there is no error
		</t:steps>
		
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>
	<t:property name="server.restServlet" value="${account1.server}"/>


	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest>
		<t:restServletRequest method="POST">
			<filename>${uploadFile.name}</filename>
			<folder>tasks</folder>
			<fmt>ics</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>
	
	<t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="task" sortBy="taskStatusAsc" offset="0" limit="25">
                <query>in: tasks</query>
            </SearchRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:task" attr="invId" set="task1.id"/>
        </t:response>
    </t:test>
	
	<t:test id="CancelTaskRequest1a">
		<t:request>
			<CancelTaskRequest xmlns="urn:zimbraMail" id="${task1.id}" comp="0">
			</CancelTaskRequest>
		</t:request>
        <t:response>
            <t:select path = "//mail:CancelTaskResponse"/>
        </t:response>
	</t:test>
	
</t:test_case>
</t:tests>