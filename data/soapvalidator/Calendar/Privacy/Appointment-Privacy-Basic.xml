<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:property name="account1.name" value="privacy.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account3.name" value="owner.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.name" value="delegatee.${TIME}.${COUNTER}@${defaultdomain.name}"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>




<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_test_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>


    <t:test id="create_test_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>


	<t:test id="create_test_account3">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>

	<t:test id="create_test_account4">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="Appointment_Privacy_Basic_01" type="bhr" bugids="18316">
    <t:objective>Create a private appointment</t:objective>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:property name="appt1.start" value="1263902400000"/>
	<t:property name="appt1.subject" value="appt1.${TIME}.${COUNTER}"/>
	<t:property name="appt1.content" value="appt1.${TIME}.${COUNTER}"/>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <su>${appt1.subject}</su>
                    <inv >
                    	<comp class="PRI" method="REQUEST" type="event" fb="B" name="${appt1.subject}" >
	                        <s d="${ICALTIME[${appt1.start}]}"/>  
	                        <e d="${ICALTIME(+1h)[${appt1.start}]}"/>  
	                        <or a="${account1.name}"/>
                        </comp>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appt1.content}</content>
                    </mp>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="calItemId" set="appt1.calItemId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="apptId" set="appt1.apptId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="invId" set="appt1.invId"/>
        </t:response>
    </t:test>


</t:test_case>

<t:test_case testcaseid="Appointment_Privacy_Basic_02" type="bhr" >
    <t:objective>Get a private appointment</t:objective>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:property name="appt2.start" value="1263902400000"/>
	<t:property name="appt2.subject" value="appt2.${TIME}.${COUNTER}"/>
	<t:property name="appt2.content" value="appt2.${TIME}.${COUNTER}"/>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <su>${appt2.subject}</su>
                    <inv >
                    	<comp class="PRI" method="REQUEST" type="event" fb="B" name="${appt2.subject}" >
	                        <s d="${ICALTIME[${appt2.start}]}"/>  
	                        <e d="${ICALTIME(+1h)[${appt2.start}]}"/>  
	                        <or a="${account1.name}"/>
                        </comp>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appt2.content}</content>
                    </mp>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="calItemId" set="appt2.calItemId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="apptId" set="appt2.apptId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="invId" set="appt2.invId"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetAppointmentRequest xmlns="urn:zimbraMail" id="${appt2.calItemId}"/>
        </t:request>
        <t:response>
            <t:select path="//mail:GetAppointmentResponse">
	            <t:select path="//mail:comp" attr="class" match="PRI"/>
	            <t:select path="//mail:s" attr="d" match="${ICALTIME[${appt2.start}]}"/>
	            <t:select path="//mail:e" attr="d" match="${ICALTIME(+1h)[${appt2.start}]}"/>
	            <t:select path="//mail:or" attr="a" match="${account1.name}"/>
            </t:select>
        </t:response>
    </t:test>


</t:test_case>

<t:test_case testcaseid="Appointment_Privacy_Basic_03" type="bhr" >
    <t:objective>Modify a public appointment - mark it private</t:objective>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:property name="appt3.start" value="1263902400000"/>
	<t:property name="appt3.subject" value="appt3.${TIME}.${COUNTER}"/>
	<t:property name="appt3.content" value="appt3.${TIME}.${COUNTER}"/>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <su>${appt3.subject}</su>
                    <inv >
                    	<comp class="PUB" method="REQUEST" type="event" fb="B" name="${appt3.subject}" >
	                        <s d="${ICALTIME[${appt3.start}]}"/>  
	                        <e d="${ICALTIME(+1h)[${appt3.start}]}"/>  
	                        <or a="${account1.name}"/>
                        </comp>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appt3.content}</content>
                    </mp>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="calItemId" set="appt3.calItemId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="apptId" set="appt3.apptId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="invId" set="appt3.invId"/>
        </t:response>
    </t:test>

	<t:property name="appt3.start" value="1263988800000"/>
	<t:property name="appt3.subject" value="appt3.${TIME}.${COUNTER}"/>
	<t:property name="appt3.content" value="appt3.${TIME}.${COUNTER}"/>

    <t:test>
        <t:request>
            <ModifyAppointmentRequest xmlns="urn:zimbraMail" id="${appt3.invId}" comp="0">
                <m>
                    <su>${appt3.subject}</su>
                    <inv >
                    	<comp class="PRI" method="REQUEST" type="event" fb="B" name="${appt3.subject}" >
	                        <s d="${ICALTIME[${appt3.start}]}"/>  
	                        <e d="${ICALTIME(+1h)[${appt3.start}]}"/>  
	                        <or a="${account1.name}"/>
                        </comp>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appt3.content}</content>
                    </mp>
                </m>
            </ModifyAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyAppointmentResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetAppointmentRequest xmlns="urn:zimbraMail" id="${appt3.calItemId}"/>
        </t:request>
        <t:response>
            <t:select path="//mail:GetAppointmentResponse">
	            <t:select path="//mail:comp" attr="class" match="PRI"/>
	            <t:select path="//mail:s" attr="d" match="${ICALTIME[${appt3.start}]}"/>
	            <t:select path="//mail:e" attr="d" match="${ICALTIME(+1h)[${appt3.start}]}"/>
	            <t:select path="//mail:or" attr="a" match="${account1.name}"/>
            </t:select>
        </t:response>
    </t:test>


</t:test_case>

<t:test_case testcaseid="Appointment_Privacy_Basic_04" type="bhr" >
    <t:objective>Cancel a private appointment</t:objective>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:property name="appt4.start" value="1263902400000"/>
	<t:property name="appt4.subject" value="appt4.${TIME}.${COUNTER}"/>
	<t:property name="appt4.content" value="appt4.${TIME}.${COUNTER}"/>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <su>${appt4.subject}</su>
                    <inv >
                    	<comp class="PRI" method="REQUEST" type="event" fb="B" name="${appt4.subject}" >
	                        <s d="${ICALTIME[${appt4.start}]}"/>  
	                        <e d="${ICALTIME(+1h)[${appt4.start}]}"/>  
	                        <or a="${account1.name}"/>
                        </comp>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appt4.content}</content>
                    </mp>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="calItemId" set="appt4.calItemId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="apptId" set="appt4.apptId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="invId" set="appt4.invId"/>
        </t:response>
    </t:test>


    <t:test>
        <t:request>
            <CancelAppointmentRequest xmlns="urn:zimbraMail" id="${appt4.calItemId}" comp="0"/>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match ="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

<!-- Need to hard delete -->
    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action op="delete" id="${appt4.calItemId}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
                <t:select path="//mail:ItemActionResponse/mail:action">
				<t:select attr="op" match="delete"/>
                </t:select>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetAppointmentRequest xmlns="urn:zimbraMail" id="${appt4.calItemId}"/>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match ="^mail.NO_SUCH_ITEM"/>
        </t:response>
    </t:test>


</t:test_case>

<t:test_case testcaseid="Appointment_Privacy_Basic_05" type="bhr" >
    <t:objective>Search for a private appointment</t:objective>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:property name="appt5.start" value="1263902400000"/>
	<t:property name="appt5.subject" value="appt5.${TIME}.${COUNTER}"/>
	<t:property name="appt5.content" value="appt5.${TIME}.${COUNTER}"/>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <su>${appt5.subject}</su>
                    <inv >
                    	<comp class="PRI" method="REQUEST" type="event" fb="B" name="${appt5.subject}" >
	                        <s d="${ICALTIME[${appt5.start}]}"/>  
	                        <e d="${ICALTIME(+1h)[${appt5.start}]}"/>  
	                        <or a="${account1.name}"/>
                        </comp>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appt5.content}</content>
                    </mp>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="calItemId" set="appt5.calItemId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="apptId" set="appt5.apptId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="invId" set="appt5.invId"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${TIME(-2d)[${appt5.start}]}" calExpandInstEnd="${TIME(+2d)[${appt5.start}]}">
				<query>${appt5.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:appt[@name='${appt5.subject}']" attr="invId" set="appt5.invId"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="Appointment_Privacy_Basic_06" type="bhr" >
    <t:objective>Invite someone to a private appointment</t:objective>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:property name="appt6.start" value="1263902400000"/>
	<t:property name="appt6.subject" value="appt6.${TIME}.${COUNTER}"/>
	<t:property name="appt6.content" value="appt6.${TIME}.${COUNTER}"/>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <e a="${account2.name}" t="t"/>
                    <su>${appt6.subject}</su>
                    <inv >
                    	<comp class="PRI" method="REQUEST" type="event" fb="B" name="${appt6.subject}" >
              				<at role="OPT" ptst="NE" rsvp="1" a="${account2.name}"/>
          	                <s d="${ICALTIME[${appt6.start}]}"/>  
	                        <e d="${ICALTIME(+1h)[${appt6.start}]}"/>  
	                        <or a="${account1.name}"/>
                        </comp>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appt6.content}</content>
                    </mp>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="calItemId" set="appt6.calItemId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="apptId" set="appt6.apptId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="invId" set="appt6.invId"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:inbox</query>
			</SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${TIME(-2d)[${appt6.start}]}" calExpandInstEnd="${TIME(+2d)[${appt6.start}]}">
				<query>${appt6.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:appt[@name='${appt6.subject}']" attr="invId" set="account2.appt6.invId"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetAppointmentRequest xmlns="urn:zimbraMail" id="${account2.appt6.invId}"/>
        </t:request>
        <t:response>
            <t:select path="//mail:GetAppointmentResponse">
	            <t:select path="//mail:comp" attr="class" match="PRI"/>
	            <t:select path="//mail:s" attr="d" match="${ICALTIME[${appt6.start}]}"/>
	            <t:select path="//mail:e" attr="d" match="${ICALTIME(+1h)[${appt6.start}]}"/>
	            <t:select path="//mail:or" attr="a" match="${account1.name}"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="Appointment_Privacy_Basic_07" type="bhr" >
    <t:objective>Verify any other user can see F/B status of private appt </t:objective>
	<t:steps> 1. Login to account1 and create an appt
			  2. Login to other user(account4) and chk the F/B status of account
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:property name="appt7.start" value="1263902400000"/>
	<t:property name="appt7.subject" value="appt7.${TIME}.${COUNTER}"/>
	<t:property name="appt7.content" value="appt7.${TIME}.${COUNTER}"/>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <su>${appt7.subject}</su>
                    <inv >
                    	<comp class="PRI" method="REQUEST" type="event" fb="B" name="${appt7.subject}" >
	                        <s d="${ICALTIME[${appt7.start}]}"/>  
	                        <e d="${ICALTIME(+1h)[${appt7.start}]}"/>  
	                        <or a="${account1.name}"/>
                        </comp>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appt7.content}</content>
                    </mp>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="calItemId" set="appt7.calItemId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="apptId" set="appt7.apptId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="invId" set="appt7.invId"/>
        </t:response>
    </t:test>

   	<t:property name="server.zimbraAccount" value="${account4.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
   
    <t:test >
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${TIME(-1d)[${appt7.start}]}" e="${TIME(+1d)[${appt7.start}]}"  uid="${account1.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr">
            	<t:select path="//mail:b" attr="s" match="^\d+$"/>        			
            	<t:select path="//mail:b" attr="e" match="^\d+$"/>        			
            </t:select>
		</t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="Appointment_Privacy_Basic_08" type="bhr" bugids="18604">
    <t:objective> Organizer shares calendar with a delagatee. Can the delagatee see the private appointment </t:objective>
	
	<t:steps> 1. Login to account3 and create an appointment and share the calendar to account4 with manager rights
			  2. Login to account4 and create mountpoint 
			  3. Search for the appointment using appt's subject
	</t:steps>
   	<t:property name="server.zimbraAccount" value="${account3.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:property name="appt8.start" value="1264098600000"/>
	<t:property name="appt8.subject" value="appt8.${TIME}.${COUNTER}"/>
	<t:property name="appt8.content" value="appt8.${TIME}.${COUNTER}"/>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <su>${appt8.subject}</su>
                    <inv >
                    	<comp class="PRI" method="REQUEST" type="event" fb="B" name="${appt8.subject}" >
	                        <s d="${ICALTIME[${appt8.start}]}"/>  
	                        <e d="${ICALTIME(+1h)[${appt8.start}]}"/>  
	                        <or a="${account3.name}"/>
                        </comp>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appt8.content}</content>
                    </mp>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="calItemId" set="appt8.calItemId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="apptId" set="appt8.apptId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="invId" set="appt8.invId"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder/mail:folder[@name='${globals.calendar}']" attr="id" set="account3.folder.calendar"/>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="account3.folder.root"/>
        </t:response>
    </t:test>

<t:property name="op.grant"	value="grant"/>
<t:property name="grant.usr" value="usr"/>
<t:property name="rights.manager"		value="rwidx"/>

    <t:test required="true">
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${account3.folder.calendar}" op="${op.grant}">
                    <grant d="${account4.name}" gt="${grant.usr}" perm="${rights.manager}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action" attr="zid" set="folder.zid"/>
        </t:response>
    </t:test>

   	<t:property name="server.zimbraAccount" value="${account4.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="account4.folder.root"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account4.folder.root}" name="Calendar.${TIME}.${COUNTER}" view="appointment" rid="${account3.folder.calendar}" zid="${account3.id}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account2.delegated.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${TIME(-2d)[${appt8.start}]}" calExpandInstEnd="${TIME(+2d)[${appt8.start}]}">
				<query>is:remote</query>
			</SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:appt"/>
            <t:select path="//mail:SearchResponse/mail:appt" attr= "invId" set="appt.ID"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="Appointment_Privacy_Basic_09" type="bhr">
    <t:objective> Verify Delagatee (non-administrator) cann't modifies a private appointment (accept/tentative/cancel) </t:objective>

<t:steps> 1. Authenticate with the Delagatee account created in the above TC
		  2. Try to modify that private appt. by ModifyAppointmentRequest
		  3. Try to mark it as Tentative
  		  4. Try to mark it as Accept 
  		  5. Try to mark it as Cancel

</t:steps>

   	<t:property name="server.zimbraAccount" value="${account4.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

   	<t:property name="account4.authToken" value="${authToken}"/>


    <t:test>
        <t:request>
            <ModifyAppointmentRequest xmlns="urn:zimbraMail" id="${appt.ID}" comp="0">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" status="CONF" allDay="0" name="${appt8.subject}" >
                        <s d="${ICALTIME[${appt8.start}]}"/>  
                        <e d="${ICALTIME(+1h)[${appt8.start}]}"/>  
                        <or a="${account3.name}"/>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appt8.content} abc </content>
                    </mp>
                    <su>${appt8.subject}</su>
                </m>
            </ModifyAppointmentRequest>
        </t:request>
        <t:response>
           <t:select path = "//zimbra:Code" match="^service.PERM_DENIED$"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SendInviteReplyRequest xmlns="urn:zimbraMail" id="${appt.ID}" compNum="0" verb="TENTATIVE">
                <m>
                    <e t="t" a="${account3.name}"/>
                    <su>${appt8.subject}</su>
                    <mp ct="text/plain">
                        <content>${appt8.content}</content>
                    </mp>
                </m>
            </SendInviteReplyRequest>
        </t:request>
        <t:response>
           <t:select path = "//zimbra:Code" match="^service.PERM_DENIED$"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SendInviteReplyRequest xmlns="urn:zimbraMail" id="${appt.ID}" compNum="0" verb="ACCEPT">
                <m>
                    <e t="t" a="${account3.name}"/>
                    <su>${appt8.subject}</su>
                    <mp ct="text/plain">
                        <content>${appt8.content}</content>
                    </mp>
                </m>
            </SendInviteReplyRequest>
        </t:request>
        <t:response>
           <t:select path = "//zimbra:Code" match="^service.PERM_DENIED$"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SendInviteReplyRequest xmlns="urn:zimbraMail" id="${appt.ID}" compNum="0" verb="DECLINE">
                <m>
                    <e t="t" a="${account3.name}"/>
                    <su>${appt8.subject}</su>
                    <mp ct="text/plain">
                        <content>${appt8.content}</content>
                    </mp>
                </m>
            </SendInviteReplyRequest>
        </t:request>
        <t:response>
           <t:select path = "//zimbra:Code" match="^service.PERM_DENIED$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="Appointment_Privacy_Basic_10" type="bhr">
    <t:objective> Organizer creates a private appointment with a) a resource and b) a location. The resource and location should auto-accept </t:objective>
<t:steps> 1. Authenticate to admin and create a Cos
		  2. Create a location and Equipment
		  3. Login to account 4 and create private appt
		  4. Login to resource
		  5. Search for that aapt.
</t:steps>

    <t:test id="admin_login">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateCosRequest xmlns="urn:zimbraAdmin">
                <name >TestCos${TIME}${COUNTER}</name>        
            </CreateCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos.id"/>
        </t:response>
    </t:test>

<t:property name="Resource.equipment" value="Equipment"/>
<t:property name="Resource.location" value="Location"/>
<t:property name="active" value="active"/>
<t:property name="Equipment.name" value="resource1.${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="Location.name" value="location.${TIME}${COUNTER}@${defaultdomain.name}"/>
    <t:test>
        <t:request>
			<CreateCalendarResourceRequest xmlns="urn:zimbraAdmin">
				<name>${Equipment.name}</name>
				<password>${defaultpassword.value}</password>
				<a n="zimbraCOSId">${cos.id}</a>
				<a n="zimbraCalResType">${Resource.equipment}</a>
				<a n="zimbraAccountStatus">${active}</a>
				<a n="displayName">${Equipment.name}</a>
				<a n="zimbraCalResAutoAcceptDecline">${globals.true}</a>
				<a n="zimbraCalResAutoDeclineIfBusy">${globals.false}</a>
			</CreateCalendarResourceRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource" attr="id" set="resource.id"/>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource" attr="name" match="${Equipment.name}"/>
            <t:select path='//admin:CreateCalendarResourceResponse/admin:calresource/admin:a[@n="zimbraMailHost"]' set="resource.server"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateCalendarResourceRequest xmlns="urn:zimbraAdmin">
				<name>${Location.name}</name>
				<password>${defaultpassword.value}</password>
				<a n="zimbraCOSId">${cos.id}</a>
				<a n="zimbraCalResType">${Resource.location}</a>
				<a n="zimbraAccountStatus">${active}</a>
				<a n="displayName">${Location.name}</a>
				<a n="zimbraCalResAutoAcceptDecline">${globals.true}</a>
				<a n="zimbraCalResAutoDeclineIfBusy">${globals.false}</a>
			</CreateCalendarResourceRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource" attr="id" set="location.id"/>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource" attr="name" match="${Location.name}"/>
            <t:select path='//admin:CreateCalendarResourceResponse/admin:calresource/admin:a[@n="zimbraMailHost"]' set="location.server"/>
        </t:response>
    </t:test>


	<t:property name="appt10.start" value="1264098600000"/>
	<t:property name="appt10.subject" value="appt10.${TIME}.${COUNTER}"/>
	<t:property name="appt10.content" value="appt10.${TIME}.${COUNTER}"/>
   	<t:property name="server.zimbraAccount" value="${account4.server}"/>
   	<t:property name="authToken" value="${account4.authToken}"/>


    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <e a="${Location.name}" t="t"/>
                    <e a="${Equipment.name}" t="t"/>
                    <su>${appt10.subject}</su>
                    <inv >
                    	<comp class="PRI" method="REQUEST" type="event" fb="B" name="${appt10.subject}" loc="${Location.name}">
	                        <s d="${ICALTIME[${appt10.start}]}"/>  
	                        <e d="${ICALTIME(+1h)[${appt10.start}]}"/>  
	                        <or a="${account4.name}"/>
							<at role="NON" ptst="NE" cutype="RES" rsvp="1" a="${Location.name}" d="${Location.name}"/>
							<at role="NON" ptst="NE" cutype="RES" rsvp="1" a="${Equipment.name}" d="${Equipment.name}"/>
                        </comp>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appt10.content}</content>
                    </mp>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="calItemId" set="appt10.calItemId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="apptId" set="appt10.apptId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="invId" set="appt10.invId"/>
        </t:response>
    </t:test>

		<t:property name="server.zimbraAccount" value="${location.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${Location.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${TIME(-2d)[${appt10.start}]}" calExpandInstEnd="${TIME(+2d)[${appt10.start}]}">
				<query>is:local</query>
			</SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:appt"/>
            <t:select path="//mail:SearchResponse/mail:appt" attr= "invId" set="appt.ID"/>
            <t:select path="//mail:SearchResponse/mail:appt" attr= "name" emptyset="0"/>
        </t:response>
    </t:test>


   <t:test >
        <t:request>
            <SendInviteReplyRequest xmlns="urn:zimbraMail" id="${appt.ID}" compNum="0" verb="ACCEPT" updateOrganizer="TRUE">
                <m origid="${appt.ID}" rt="r">
                    <e t="t" a="${account4.name}"/>
                    <su>${appt10.subject} </su>
                    <mp ct="text/plain">
                        <content>Yes, I'll. </content>
                    </mp>
                </m>
            </SendInviteReplyRequest>
        </t:request>
        <t:response>
           <t:select path = "//mail:SendInviteReplyResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="Appointment_Privacy_Basic_11" type="bhr">
    <t:objective> Verify Resource can Edit (Accept/Decline) the private appt. </t:objective>
	<t:steps> 1. Authenticate to admin and create a Cos
			  2. Create a location and Equipment
			  3. Login to account 4 and create private appt
			  4. Login to resource
			  5. Try to accept and Decline the appt.
	</t:steps>

    <t:test id="admin_login">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateCosRequest xmlns="urn:zimbraAdmin">
                <name >TestCos${TIME}${COUNTER}</name>        
            </CreateCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos.id2"/>
        </t:response>
    </t:test>

<t:property name="Resource.equipment" value="Equipment"/>
<t:property name="Resource.location" value="Location"/>
<t:property name="active" value="active"/>
<t:property name="Equipment.name" value="resource2.${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="Location.name" value="location2.${TIME}${COUNTER}@${defaultdomain.name}"/>

	<t:test>
        <t:request>
			<CreateCalendarResourceRequest xmlns="urn:zimbraAdmin">
				<name>${Equipment.name}</name>
				<password>${defaultpassword.value}</password>
				<a n="zimbraCOSId">${cos.id2}</a>
				<a n="zimbraCalResType">${Resource.equipment}</a>
				<a n="zimbraAccountStatus">${active}</a>
				<a n="displayName">${Equipment.name}</a>
				<a n="zimbraCalResAutoAcceptDecline">${globals.true}</a>
				<a n="zimbraCalResAutoDeclineIfBusy">${globals.false}</a>
			</CreateCalendarResourceRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource" attr="id" set="resource.id2"/>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource" attr="name" match="${Equipment.name}"/>
            <t:select path='//admin:CreateCalendarResourceResponse/admin:calresource/admin:a[@n="zimbraMailHost"]' set="resource.server2"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateCalendarResourceRequest xmlns="urn:zimbraAdmin">
				<name>${Location.name}</name>
				<password>${defaultpassword.value}</password>
				<a n="zimbraCOSId">${cos.id}</a>
				<a n="zimbraCalResType">${Resource.location}</a>
				<a n="zimbraAccountStatus">${active}</a>
				<a n="displayName">${Location.name}</a>
				<a n="zimbraCalResAutoAcceptDecline">${globals.true}</a>
				<a n="zimbraCalResAutoDeclineIfBusy">${globals.false}</a>
			</CreateCalendarResourceRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource" attr="id" set="location.id2"/>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource" attr="name" match="${Location.name}"/>
            <t:select path='//admin:CreateCalendarResourceResponse/admin:calresource/admin:a[@n="zimbraMailHost"]' set="location.server2"/>
        </t:response>
    </t:test>


	<t:property name="appt11.start" value="1264098600000"/>
	<t:property name="appt11.subject" value="appt11.${TIME}.${COUNTER}"/>
	<t:property name="appt11.content" value="appt11.${TIME}.${COUNTER}"/>
   	<t:property name="server.zimbraAccount" value="${account4.server}"/>
   	<t:property name="authToken" value="${account4.authToken}"/>


    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <e a="${Location.name}" t="t"/>
                    <e a="${Equipment.name}" t="t"/>
                    <su>${appt10.subject}</su>
                    <inv >
                    	<comp class="PRI" method="REQUEST" type="event" fb="B" name="${appt11.subject}" loc="${Location.name}">
	                        <s d="${ICALTIME[${appt11.start}]}"/>  
	                        <e d="${ICALTIME(+1h)[${appt11.start}]}"/>  
	                        <or a="${account4.name}"/>
							<at role="NON" ptst="NE" cutype="RES" rsvp="1" a="${Location.name}" d="${Location.name}"/>
							<at role="NON" ptst="NE" cutype="RES" rsvp="1" a="${Equipment.name}" d="${Equipment.name}"/>
                        </comp>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appt11.content}</content>
                    </mp>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="calItemId" set="appt11.calItemId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="apptId" set="appt11.apptId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="invId" set="appt11.invId"/>
        </t:response>
    </t:test>

		<t:property name="server.zimbraAccount" value="${location.server2}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${Location.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${TIME(-2d)[${appt11.start}]}" calExpandInstEnd="${TIME(+2d)[${appt11.start}]}">
				<query>is:local</query>
			</SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:appt"/>
            <t:select path="//mail:SearchResponse/mail:appt" attr= "invId" set="appt2.ID"/>
        </t:response>
    </t:test>


   <t:test >
        <t:request>
            <SendInviteReplyRequest xmlns="urn:zimbraMail" id="${appt2.ID}" compNum="0" verb="ACCEPT" updateOrganizer="TRUE">
                <m origid="${appt2.ID}" rt="r">
                    <e t="t" a="${account4.name}"/>
                    <su>${appt10.subject} </su>
                    <mp ct="text/plain">
                        <content>Yes, I'll. </content>
                    </mp>
                </m>
            </SendInviteReplyRequest>
        </t:request>
        <t:response>
           <t:select path = "//mail:SendInviteReplyResponse"/>
        </t:response>
    </t:test>

   <t:test >
        <t:request>
            <SendInviteReplyRequest xmlns="urn:zimbraMail" id="${appt2.ID}" compNum="0" verb="DECLINE" updateOrganizer="TRUE">
                <m origid="${appt2.ID}" rt="r">
                    <e t="t" a="${account4.name}"/>
                    <su>${appt10.subject} </su>
                    <mp ct="text/plain">
                        <content>Yes, I'll. </content>
                    </mp>
                </m>
            </SendInviteReplyRequest>
        </t:request>
        <t:response>
           <t:select path = "//mail:SendInviteReplyResponse"/>
        </t:response>
    </t:test>

</t:test_case>


</t:tests>