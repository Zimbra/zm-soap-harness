<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:property name="account1.name" value="account1${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="account2${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="account3${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.name" value="account4${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account5.name" value="account5${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account6.name" value="account6${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account7.name" value="account7${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account8.name" value="account8${TIME}${COUNTER}@${defaultdomain.name}"/>

<t:property name="group8a.name" value="group8a${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="group8b.name" value="group8b${TIME}${COUNTER}@${defaultdomain.name}"/>

<t:property name="timezone.pst" value="(GMT-08.00) Pacific Time (US &amp; Canada) / Tijuana"/>
<t:property name="timezone.pst.regex" value="America\/Los_Angeles"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>




<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account5.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account5.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account5.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account6.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account6.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account6.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account7.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account7.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account7.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account8.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account8.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account8.server"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${group8a.name}</name>
                <a n="description">A test distribution list</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="group8a.id"/>
        </t:response>
    </t:test>
    <t:test>
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${group8b.name}</name>
                <a n="description">A test distribution list</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="group8b.id"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="CheckPermissionRequest_Accounts_01" type="bhr" >
    <t:objective>Verify CheckPermissionRequest returns allow="1" if all accounts are allowed to invite</t:objective>
    <t:steps>
    1. Account2 allows all to invite
    2. Account1 checks permission status = verify allow=1
    </t:steps>
   
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
   
	<t:test>
		<t:request>
			<GrantPermissionRequest xmlns="urn:zimbraMail" >
				<ace right="invite" gt="pub"/>
			</GrantPermissionRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GrantPermissionResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
   
	<t:test>
		<t:request>
			<CheckPermissionRequest xmlns="urn:zimbraMail">
				<target type="account" by="name">${account2.name}</target>
				<right>invite</right>
			</CheckPermissionRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:CheckPermissionResponse" attr="allow" match="1"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="CheckPermissionRequest_Accounts_02" type="bhr" >
    <t:objective>Verify CheckPermissionRequest returns allow="0" if no account is not allowed to invite</t:objective>
    <t:steps>
    1. Account2 allows nobody to invite
    2. Account1 checks permission status = verify allow=0
    </t:steps>
   
	<t:property name="server.zimbraAccount" value="${account3.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
   
	<t:test>
		<t:request>
			<GrantPermissionRequest xmlns="urn:zimbraMail" >
				<ace right="invite" gt="all" deny="1"/>
			</GrantPermissionRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GrantPermissionResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
   
	<t:test>
		<t:request>
			<CheckPermissionRequest xmlns="urn:zimbraMail">
				<target type="account" by="name">${account3.name}</target>
				<right>invite</right>
			</CheckPermissionRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:CheckPermissionResponse" attr="allow" match="0"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="CheckPermissionRequest_Accounts_03" type="bhr" >
    <t:objective>Verify CheckPermissionRequest returns allow="1" if only internal accounts are allowed to invite</t:objective>
    <t:steps>
    1. Account2 allows internal to invite
    2. Account1 checks permission status = verify allow=1
    </t:steps>
   
	<t:property name="server.zimbraAccount" value="${account4.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
   
	<t:test>
		<t:request>
			<GrantPermissionRequest xmlns="urn:zimbraMail" >
				<ace right="invite" gt="all"/>
			</GrantPermissionRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GrantPermissionResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
   
	<t:test>
		<t:request>
			<CheckPermissionRequest xmlns="urn:zimbraMail">
				<target type="account" by="name">${account4.name}</target>
				<right>invite</right>
			</CheckPermissionRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:CheckPermissionResponse" attr="allow" match="1"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="CheckPermissionRequest_Accounts_04" type="bhr" >
    <t:objective>Verify CheckPermissionRequest returns allow="1" if specific account is allowed to invite</t:objective>
    <t:steps>
    1. Account2 allows account1 to invite
    2. Account1 checks permission status = verify allow=1
    </t:steps>
   
	<t:property name="server.zimbraAccount" value="${account5.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account5.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
   
	<t:test>
		<t:request>
			<GrantPermissionRequest xmlns="urn:zimbraMail" >
				<ace right="invite" gt="usr" d="${account1.name}"/>
			</GrantPermissionRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GrantPermissionResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
   
	<t:test>
		<t:request>
			<CheckPermissionRequest xmlns="urn:zimbraMail">
				<target type="account" by="name">${account5.name}</target>
				<right>invite</right>
			</CheckPermissionRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:CheckPermissionResponse" attr="allow" match="1"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="CheckPermissionRequest_Accounts_05" type="bhr" >
    <t:objective>Verify CheckPermissionRequest returns allow="0" if account allows only another account to invite</t:objective>
    <t:steps>
    1. Account2 allows account3 to invite
    2. Account1 checks permission status = verify allow=0
    </t:steps>
   
	<t:property name="server.zimbraAccount" value="${account6.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account6.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
   
	<t:test>
		<t:request>
			<GrantPermissionRequest xmlns="urn:zimbraMail" >
				<ace right="invite" gt="usr" d="${account7.name}"/>
			</GrantPermissionRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GrantPermissionResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
   
	<t:test>
		<t:request>
			<CheckPermissionRequest xmlns="urn:zimbraMail">
				<target type="account" by="name">${account6.name}</target>
				<right>invite</right>
			</CheckPermissionRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:CheckPermissionResponse" attr="allow" match="0"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="CheckPermissionRequest_Accounts_06" type="bhr" bugids="42132">
    <t:objective>Verify CheckPermissionRequest if accounts indirectly belong to a circular group(containing itself as a member)</t:objective>
    <t:steps>
    1. Account2 allows account3 to invite
    2. Account1 checks permission status = verify allow=0
    </t:steps>
   
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
   <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${group8a.id}</id>
                <dlm>${group8b.name}</dlm>
             </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

   <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${group8b.id}</id>
                <dlm>${group8b.name}</dlm>
             </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

   <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${group8b.id}</id>
                <dlm>${account8.name}</dlm>
             </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
   
	<t:test timeframeMax="10000">
		<t:request>
			<CheckPermissionRequest xmlns="urn:zimbraMail">
				<target type="account" by="name">${account8.name}</target>
				<right>viewFreeBusy</right>
			</CheckPermissionRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:CheckPermissionResponse"/>
		</t:response>
	</t:test>

</t:test_case>


</t:tests>
