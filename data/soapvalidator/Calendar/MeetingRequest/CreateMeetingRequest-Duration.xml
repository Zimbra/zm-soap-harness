<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:property name="organizer1.name" value="organizer1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="invitee1.name" value="invitee1.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="organizer2.name" value="organizer2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="invitee2.name" value="invitee2.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="organizer3.name" value="organizer3.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="invitee3.name" value="invitee3.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="organizer4.name" value="organizer4.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="invitee4.name" value="invitee4.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="organizer5.name" value="organizer5.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="invitee5.name" value="invitee5.${TIME}.${COUNTER}@${defaultdomain.name}"/>



<t:property name="appointment.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.location" value="Location of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.content" value="Content of the message${TIME}.${COUNTER}"/>

<t:property name="timezone.pst" value="(GMT-08.00) Pacific Time (US &amp; Canada) / Tijuana"/>
<t:property name="timezone.pst.regex" value="America\/Los_Angeles"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>




<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_test_organizer1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${organizer1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="organizer1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="organizer1.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_organizer1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${organizer2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="organizer2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="organizer2.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_organizer1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${organizer3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="organizer3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="organizer3.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_organizer1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${organizer4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="organizer4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="organizer4.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_organizer1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${organizer5.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="organizer5.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="organizer5.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_organizer1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${invitee1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="invitee1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="invitee1.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_organizer1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${invitee2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="invitee2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="invitee2.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_organizer1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${invitee3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="invitee3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="invitee3.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_organizer1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${invitee4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="invitee4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="invitee4.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_organizer1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${invitee5.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="invitee5.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="invitee5.server"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="CreateMeetingRequest_Duration_01" type="smoke" areas="Calendar">
    <t:objective>Create a meeting request with a specified duration</t:objective>
    <t:steps>
    1. Login as organizer
    2. Create a single occurrence meeting request.  Set duration of 3 hours.
    3. Login as the invitee
    4. Verify the organizer is busy during the 3 hours.
    5. Search for the meeting request
    6. Verify the meeting request settings
    </t:steps>



	<t:property name="server.zimbraAccount" value="${organizer1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${organizer1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
   
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="organizer1.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    
   
	<t:property name="appointment.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment.location" value="Location of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment.content" value="Content of the message${TIME}.${COUNTER}"/>

	<t:property name="time.20180101120000.gmt" value="1514808000000"/>
	<t:property name="time.20180101120000.pst" value="${TIME(-8h)[${time.20180101120000.gmt}]}"/>

    <t:test>
        <t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m >
					<inv>
						<comp status="CONF" fb="B" transp="O" allDay="0" name="${appointment.subject}">
							<or a="${organizer1.name}"/>
							<at a="${invitee1.name}" role="REQ" ptst="NE" rsvp="1"/>
							<s d="${ICALTIME[${time.20180101120000.pst}]}" tz="${timezone.pst}" />
							<dur h="3"/>
						</comp>
					</inv>
					<e a="${invitee1.name}" t="t"/>
					<su>${appointment.subject}</su>
					<mp ct="text/plain">
						<content>${appointment.content}</content>
					</mp>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">
            	<t:select attr="calItemId" set="organizer1.appt1.calItemId"/>
            	<t:select attr="invId" set="organizer1.appt1.invId"/>
            	<t:select attr="apptId" set="organizer1.appt1.apptId"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${organizer1.appt1.invId}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${organizer1.appt1.invId}']">
        		<t:select path="//mail:comp">
        			<t:select path="//mail:s" attr="d" match="${ICALTIME[${time.20180101120000.pst}]}"/>
        			<t:select path="//mail:s" attr="tz" match="${timezone.pst.regex}"/>
        			<t:select path="//mail:dur" attr="h" match="3"/>
            	</t:select>
            </t:select>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${invitee1.server}"/>
    
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${invitee1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="invitee1.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${TIME(-1d)[${time.20180101120000.gmt}]}" e="${TIME(+1d)(+3h)[${time.20180101120000.gmt}]}" uid="${organizer1.id}" />
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr[@id='${organizer1.id}']">
				<t:select path="//mail:b[@s='${time.20180101120000.gmt}']" attr="e" match="${TIME(+3h)[${time.20180101120000.gmt}]}"/>
            </t:select>      
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${TIME(-1d)[${time.20180101120000.gmt}]}" calExpandInstEnd="${TIME(+1d)[${time.20180101120000.gmt}]}" types="appointment">
				<query>inid:${invitee1.calendar.folder.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse/mail:appt">
            	<t:select attr="invId" set="invitee1.appt1.invId"/>
            </t:select> 
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${invitee1.appt1.invId}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${invitee1.appt1.invId}']">
        		<t:select path="//mail:comp">
        			<t:select path="//mail:s" attr="d" match="${ICALTIME[${time.20180101120000.pst}]}"/>
        			<t:select path="//mail:s" attr="tz" match="${timezone.pst.regex}"/>
        			<t:select path="//mail:dur" attr="h" match="3"/>
            	</t:select>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="CreateMeetingRequest_Duration_02" type="sanity" areas="Calendar">
    <t:objective>Create a meeting request with a specified duration (days, hours, min, sec)</t:objective>
    <t:steps>
    1. Login as organizer
    2. Create a single occurrence meeting request.  Set duration of 1 days, 2 hours, 3 mins, 4 sec
    3. Login as the invitee
    4. Verify the organizer is busy during the duration.
    5. Search for the meeting request
    6. Verify the meeting request settings
    </t:steps>



	<t:property name="server.zimbraAccount" value="${organizer2.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${organizer2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
   
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="organizer2.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    
   
	<t:property name="appointment.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment.location" value="Location of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment.content" value="Content of the message${TIME}.${COUNTER}"/>

	<t:property name="time.20180101120000.gmt" value="1546344000000"/>
	<t:property name="time.20180101120000.pst" value="${TIME(-8h)[${time.20180101120000.gmt}]}"/>

    <t:test>
        <t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m >
					<inv>
						<comp status="CONF" fb="B" transp="O" allDay="0" name="${appointment.subject}">
							<or a="${organizer2.name}"/>
							<at a="${invitee2.name}" role="REQ" ptst="NE" rsvp="1"/>
							<s d="${ICALTIME[${time.20180101120000.pst}]}" tz="${timezone.pst}" />
							<dur d="1" h="2" m="3" s="4"/>
						</comp>
					</inv>
					<e a="${invitee2.name}" t="t"/>
					<su>${appointment.subject}</su>
					<mp ct="text/plain">
						<content>${appointment.content}</content>
					</mp>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">
            	<t:select attr="calItemId" set="organizer2.appt1.calItemId"/>
            	<t:select attr="invId" set="organizer2.appt1.invId"/>
            	<t:select attr="apptId" set="organizer2.appt1.apptId"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${organizer2.appt1.invId}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${organizer2.appt1.invId}']">
        		<t:select path="//mail:comp">
        			<t:select path="//mail:s" attr="d" match="${ICALTIME[${time.20180101120000.pst}]}"/>
        			<t:select path="//mail:s" attr="tz" match="${timezone.pst.regex}"/>
        			<t:select path="//mail:dur" attr="d" match="1"/>
        			<t:select path="//mail:dur" attr="h" match="2"/>
        			<t:select path="//mail:dur" attr="m" match="3"/>
        			<t:select path="//mail:dur" attr="s" match="4"/>
            	</t:select>
            </t:select>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${invitee2.server}"/>
    
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${invitee2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="invitee2.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${TIME(-1d)[${time.20180101120000.gmt}]}" e="${TIME(+1d)(+3h)[${time.20180101120000.gmt}]}" uid="${organizer2.id}" />
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr[@id='${organizer2.id}']">
				<t:select path="//mail:b[@s='${time.20180101120000.gmt}']" attr="e" match="${TIME(+1d)(+2h)(+3m)(+4s)[${time.20180101120000.gmt}]}"/>
            </t:select>      
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${TIME(-1d)[${time.20180101120000.gmt}]}" calExpandInstEnd="${TIME(+1d)[${time.20180101120000.gmt}]}" types="appointment">
				<query>inid:${invitee2.calendar.folder.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse/mail:appt">
            	<t:select attr="invId" set="invitee2.appt1.invId"/>
            </t:select> 
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${invitee2.appt1.invId}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${invitee2.appt1.invId}']">
        		<t:select path="//mail:comp">
        			<t:select path="//mail:s" attr="d" match="${ICALTIME[${time.20180101120000.pst}]}"/>
        			<t:select path="//mail:s" attr="tz" match="${timezone.pst.regex}"/>
        			<t:select path="//mail:dur" attr="d" match="1"/>
        			<t:select path="//mail:dur" attr="h" match="2"/>
        			<t:select path="//mail:dur" attr="m" match="3"/>
        			<t:select path="//mail:dur" attr="s" match="4"/>
            	</t:select>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="CreateMeetingRequest_Duration_03" type="sanity" areas="Calendar" bugids="22511">
    <t:objective>Create a meeting request with a specified duration (2 weeks)</t:objective>
    <t:steps>
    1. Login as organizer
    2. Create a single occurrence meeting request.  Set duration of 2 weeks
    3. Login as the invitee
    4. Verify the organizer is busy during the 2 weeks
    5. Search for the meeting request
    6. Verify the meeting request settings
    </t:steps>



	<t:property name="server.zimbraAccount" value="${organizer3.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${organizer3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
   
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="organizer3.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    
   
	<t:property name="appointment.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment.location" value="Location of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment.content" value="Content of the message${TIME}.${COUNTER}"/>

	<t:property name="time.20180101120000.gmt" value="1546344000000"/>
	<t:property name="time.20180101120000.pst" value="${TIME(-8h)[${time.20180101120000.gmt}]}"/>

    <t:test>
        <t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m >
					<inv>
						<comp status="CONF" fb="B" transp="O" allDay="0" name="${appointment.subject}">
							<or a="${organizer3.name}"/>
							<at a="${invitee3.name}" role="REQ" ptst="NE" rsvp="1"/>
							<s d="${ICALTIME[${time.20180101120000.pst}]}" tz="${timezone.pst}" />
							<dur w="2"/>
						</comp>
					</inv>
					<e a="${invitee3.name}" t="t"/>
					<su>${appointment.subject}</su>
					<mp ct="text/plain">
						<content>${appointment.content}</content>
					</mp>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">
            	<t:select attr="calItemId" set="organizer3.appt1.calItemId"/>
            	<t:select attr="invId" set="organizer3.appt1.invId"/>
            	<t:select attr="apptId" set="organizer3.appt1.apptId"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${organizer3.appt1.invId}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${organizer3.appt1.invId}']">
        		<t:select path="//mail:comp">
        			<t:select path="//mail:s" attr="d" match="${ICALTIME[${time.20180101120000.pst}]}"/>
        			<t:select path="//mail:s" attr="tz" match="${timezone.pst.regex}"/>
        			<t:select path="//mail:dur" attr="w" match="2"/>
            	</t:select>
            </t:select>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${invitee3.server}"/>
    
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${invitee3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="invitee3.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${TIME(-1d)[${time.20180101120000.gmt}]}" e="${TIME(+1d)(+3h)[${time.20180101120000.gmt}]}" uid="${organizer3.id}" />
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr[@id='${organizer3.id}']">
				<t:select path="//mail:b[@s='${time.20180101120000.gmt}']" attr="e" match="${TIME(+1d)(+3h)[${time.20180101120000.gmt}]}"/>
            </t:select>      
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${TIME(-1d)[${time.20180101120000.gmt}]}" calExpandInstEnd="${TIME(+1d)[${time.20180101120000.gmt}]}" types="appointment">
				<query>inid:${invitee3.calendar.folder.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse/mail:appt">
            	<t:select attr="invId" set="invitee3.appt1.invId"/>
            </t:select> 
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${invitee3.appt1.invId}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${invitee3.appt1.invId}']">
        		<t:select path="//mail:comp">
        			<t:select path="//mail:s" attr="d" match="${ICALTIME[${time.20180101120000.pst}]}"/>
        			<t:select path="//mail:s" attr="tz" match="${timezone.pst.regex}"/>
        			<t:select path="//mail:dur" attr="w" match="2"/>
            	</t:select>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="CreateMeetingRequest_Duration_04" type="bhr" areas="Calendar">
    <t:objective>Create a meeting request (recurring) with a specified duration</t:objective>
    <t:steps>
    1. Login as organizer
    2. Create a weekly recurring meeting request.  Set duration of 3 hours.
    3. Login as the invitee
    4. Verify the organizer is busy during the 3 hours.
    5. Search for the meeting request
    6. Verify the meeting request settings
    </t:steps>



	<t:property name="server.zimbraAccount" value="${organizer4.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${organizer4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
   
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="organizer4.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    
   
	<t:property name="appointment.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment.location" value="Location of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment.content" value="Content of the message${TIME}.${COUNTER}"/>

	<t:property name="time.20180101120000.gmt" value="1514808000000"/>
	<t:property name="time.20180101120000.pst" value="${TIME(-8h)[${time.20180101120000.gmt}]}"/>

    <t:test>
        <t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m >
					<inv>
						<comp status="CONF" fb="B" transp="O" allDay="0" name="${appointment.subject}">
							<or a="${organizer4.name}"/>
							<at a="${invitee4.name}" role="REQ" ptst="NE" rsvp="1"/>
							<s d="${ICALTIME[${time.20180101120000.pst}]}" tz="${timezone.pst}" />
							<dur h="3"/>
							<recur>
								<add>
									<rule freq="WEE"/>
								</add>
							</recur>
						</comp>
					</inv>
					<e a="${invitee4.name}" t="t"/>
					<su>${appointment.subject}</su>
					<mp ct="text/plain">
						<content>${appointment.content}</content>
					</mp>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">
            	<t:select attr="calItemId" set="organizer4.appt1.calItemId"/>
            	<t:select attr="invId" set="organizer4.appt1.invId"/>
            	<t:select attr="apptId" set="organizer4.appt1.apptId"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${organizer4.appt1.invId}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${organizer4.appt1.invId}']">
        		<t:select path="//mail:comp">
        			<t:select path="//mail:s" attr="d" match="${ICALTIME[${time.20180101120000.pst}]}"/>
        			<t:select path="//mail:s" attr="tz" match="${timezone.pst.regex}"/>
        			<t:select path="//mail:dur" attr="h" match="3"/>
            	</t:select>
            </t:select>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${invitee4.server}"/>
    
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${invitee4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="invitee4.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    <!-- First instance -->
    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${TIME(-1d)[${time.20180101120000.gmt}]}" e="${TIME(+1d)(+3h)[${time.20180101120000.gmt}]}" uid="${organizer4.id}" />
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr[@id='${organizer4.id}']">
				<t:select path="//mail:b[@s='${time.20180101120000.gmt}']" attr="e" match="${TIME(+3h)[${time.20180101120000.gmt}]}"/>
            </t:select>      
        </t:response>
    </t:test>

    <!-- Second instance -->
    <t:property name="instance.s" value="${TIME(+7d)[${time.20180101120000.gmt}]}"/>
    <t:property name="instance.e" value="${TIME(+7d)(+3h)[${time.20180101120000.gmt}]}"/>
    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${TIME(+7d)(-1d)[${time.20180101120000.gmt}]}" e="${TIME(+7d)(+1d)(+3h)[${time.20180101120000.gmt}]}" uid="${organizer4.id}" />
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr[@id='${organizer4.id}']">
				<t:select path="//mail:b[@s='${instance.s}']" attr="e" match="${instance.e}"/>
            </t:select>      
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${TIME(-1d)[${time.20180101120000.gmt}]}" calExpandInstEnd="${TIME(+1d)[${time.20180101120000.gmt}]}" types="appointment">
				<query>inid:${invitee4.calendar.folder.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse/mail:appt">
            	<t:select attr="invId" set="invitee4.appt1.invId"/>
            </t:select> 
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${invitee4.appt1.invId}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${invitee4.appt1.invId}']">
        		<t:select path="//mail:comp">
        			<t:select path="//mail:s" attr="d" match="${ICALTIME[${time.20180101120000.pst}]}"/>
        			<t:select path="//mail:s" attr="tz" match="${timezone.pst.regex}"/>
        			<t:select path="//mail:dur" attr="h" match="3"/>
            	</t:select>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>


</t:tests>
