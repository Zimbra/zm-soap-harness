<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="tz" value="(GMT-08.00) Pacific Time (US &amp; Canada) / Tijuana"/>

<t:property name="account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
   
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="MeetingRequests_SetAppointmentRequest01" type="bhr" >
    <t:objective>Create a basic meeting request using SetAppointmentRequest</t:objective>
    <t:steps>
    1. Login to account1
    2. Use SetAppointmentRequest to create an appointment
    3. Use SendMsgRequest to send the invitation to account3
    4. Login to account3
    5. Verify the meeting appears correctly
    </t:steps>
    
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
        
	<t:property name="appt1.subject" value="subject.${TIME}.${COUNTER}"/>
	<t:property name="appt1.content" value="content.${TIME}.${COUNTER}"/>
	<t:property name="appt1.location" value="location.${TIME}.${COUNTER}"/>
	<t:property name="appt1.uid" value="${TIME}${COUNTER}"/>
	
	
	<!-- PST is -8 hours from GMT time -->
	<t:property name="appt1.start.gmt" value="1263830400000"/>
	<t:property name="appt1.start.pst" value="${TIME(-8h)[${appt1.start.gmt}]}"/>
	
    <t:test >
        <t:request>
            <SetAppointmentRequest xmlns="urn:zimbraMail" bugid="7619">
	      		<default ptst="AC">
	        		<m>
	          			<inv uid="${appt1.uid}" allDay="0" name="${appt1.subject}" seq="0" class="PUB" loc="${appt1.location}" method="REQUEST" transp="O" fb="B">
                            <s d="${ICALTIME[${appt1.start.pst}]}" tz="${tz}"/>  
                            <e d="${ICALTIME(+1h)[${appt1.start.pst}]}" tz="${tz}"/>  
	            			<or a="${account1.name}"/>
	            			<at a="${account3.name}" rsvp="1" role="REQ" ptst="NE"/>
	          			</inv>
	          			<su>${appt1.subject}</su>
	            		<mp ct="text/plain">
	              			<content>${appt1.content}</content>
	            		</mp>
        			</m>
      			</default>
            </SetAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SetAppointmentResponse" attr="apptId" set="appt1.apptId"/>
            <t:select path="//mail:SetAppointmentResponse/mail:default" attr="id" set="appt1.id"/>
        </t:response>
    </t:test>

	<t:test >
  		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a="${account3.name}"/>
					<su>${appt1.subject}</su>
					<mp ct="text/calendar; method=REQUEST">
	    				<content>BEGIN:VCALENDAR
PRODID:-//Microsoft Corporation//Outlook 11.0 MIMEDIR//EN
VERSION:2.0
METHOD:REQUEST
BEGIN:VEVENT
ATTENDEE;CN=${account3.name};ROLE=REQ-PARTICIPANT;RSVP=TRUE:MAILTO:${account3.name}
ORGANIZER:MAILTO:${account1.name}
DTSTART:${ICALTIME[${appt1.start.gmt}]}Z
DTEND:${ICALTIME(+1h)[${appt1.start.gmt}]}Z
LOCATION:${appt1.location}
TRANSP:OPAQUE
SEQUENCE:0
UID:${appt1.uid}
DTSTAMP:${ICALTIME[${appt1.start.gmt}]}Z
DESCRIPTION:${appt1.content}
SUMMARY:${appt1.subject}
PRIORITY:5
X-MICROSOFT-CDO-IMPORTANCE:1
CLASS:PUBLIC
BEGIN:VALARM
TRIGGER:-PT15M
ACTION:DISPLAY
DESCRIPTION:Reminder
END:VALARM
END:VEVENT
END:VCALENDAR
</content>
					</mp>
     			</m>
    		</SendMsgRequest>
		</t:request>
  		<t:response>
			<t:select path="//mail:SendMsgResponse"/>
		</t:response>
	</t:test>
	
	
	<t:property name="server.zimbraAccount" value="${account3.server}"/>
	
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${TIME(-1d)[${appt1.start.gmt}]}" calExpandInstEnd="${TIME(+4d)[${appt1.start.gmt}]}">
				<query>${appt1.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:appt"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" id="${appt1.apptId}"/>
        </t:request>
        <t:response>
            <t:select path="//mail:GetAppointmentResponse">
            	<t:select path="//mail:comp" attr="loc"		match="${appt1.location}"/>
            	<t:select path="//mail:comp" attr="name"		match="${appt1.subject}"/>
            	<t:select path="//mail:or" attr="a"	match="${account1.name}"/>
            </t:select>
        </t:response>
    </t:test>



</t:test_case>

</t:tests>
