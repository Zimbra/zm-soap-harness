
<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="test_account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account3.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account4.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="test_account.password" value="${defaultpassword.value}"/>

<t:property name="appointment.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.location" value="Meeting Room 1"/>
<t:property name="appointment.content" value="Content of the message"/>
<t:property name="appointment.newsubject" value="Subject of meeting${TIME}.${COUNTER}"/>

<t:property name="appointment11.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment11.location" value="Meeting Room 1"/>
<t:property name="appointment11.content" value="Content of the message"/>

<t:property name="appointment14.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment14.location" value="Meeting Room 1"/>
<t:property name="appointment14.content" value="Content of the message"/>

<t:property name="cos1.name" value="Cos${TIME}.${COUNTER}"/>

<t:property name="timezone.pst" value="(GMT-08.00) Pacific Time (US &amp; Canada) / Tijuana"/>

<t:property name="Time1" value="${ICALTIME(+30m)}"/>
<t:property name="Time2" value="${ICALTIME(+1h)}"/>
<t:property name="Time3" value="${ICALTIME(+2h)}"/>
<t:property name="Time4" value="${ICALTIME(+3h)}"/>
<t:property name="Time5" value="${ICALTIME(+4h)}"/>
<t:property name="Time6" value="${ICALTIME(+5h)}"/>
<t:property name="Time7" value="${ICALTIME(+6h)}"/>
<t:property name="Time8" value="${ICALTIME(+7h)}"/>
<t:property name="Time9" value="${ICALTIME(+8h)}"/>
<t:property name="Time10" value="${ICALTIME(+9h)}"/>
<t:property name="Time11" value="${ICALTIME(+10h)}"/>
<t:property name="Time12" value="${ICALTIME(+11h)}"/>
<t:property name="Time13" value="${ICALTIME(+12h)}"/>
<t:property name="Time14" value="${ICALTIME(+13h)}"/>
<t:property name="Time15" value="${ICALTIME(+14h)}"/>
<t:property name="Time16" value="${ICALTIME(+15h)}"/>
<t:property name="Time17" value="${ICALTIME(+15h)}"/>

<t:property name="now" value="${TIME}"/>
	<t:property name="end" value="${TIME(+10h)}"/>
	
<t:property name="notification.content" value="Your device verification code for receiving reminders is"/>

<t:property name="uploadFile.name" value="${soapxml.root}/REST/Calendar/Post/basic.ics"/>


<t:test_case testcaseid="CalendarRequest_AccountSetup" type="always" >
    <t:objective>Account setup for all calendar requests smoke test</t:objective>
   
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account.password}</password>
                <a n="zimbraCalendarReminderDeviceEmail">"foo@foo.com"}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server"/>
        </t:response>
    </t:test>
    
     <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${test_account.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="GetWorkingHoursRequest_01" type="smoke">
    <t:objective>Verify user can retrieve the user's working hours within the given time range. </t:objective>	

	<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${test_account2.name}"/>
                        <s d="${Time5}"/>  
                        <e d="${Time6}"/>  
                        <or a="${test_account1.name}"/>
                    </inv>
                    <e a="${test_account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse" attr="invId" set="appointment1.id"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
           <GetWorkingHoursRequest xmlns="urn:zimbraMail" s="${now}" e="${end}" id="${test_account1.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetWorkingHoursResponse/mail:usr"/>           
        </t:response>
    </t:test>     
         
</t:test_case>

<t:test_case testcaseid="GetWorkingHoursRequest_02" type="bhr">
    <t:objective>Send GetWorkingHoursRequest with blank s="RANGE_START" time - service.INVALID_REQUEST </t:objective>	

	<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${test_account2.name}"/>
                        <s d="${Time5}"/>  
                        <e d="${Time6}"/>  
                        <or a="${test_account1.name}"/>
                    </inv>
                    <e a="${test_account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse" attr="invId" set="appointment1.id"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
           <GetWorkingHoursRequest xmlns="urn:zimbraMail" s="" e="${end}" id="${test_account1.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>     
         
</t:test_case>

<t:test_case testcaseid="GetWorkingHoursRequest_03" type="bhr">
    <t:objective>Send GetWorkingHoursRequest with blank e="RANGE_END" time - service.INVALID_REQUEST</t:objective>	

	<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${test_account2.name}"/>
                        <s d="${Time5}"/>  
                        <e d="${Time6}"/>  
                        <or a="${test_account1.name}"/>
                    </inv>
                    <e a="${test_account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse" attr="invId" set="appointment1.id"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
           <GetWorkingHoursRequest xmlns="urn:zimbraMail" s="${now}" e="" id="${test_account1.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>     
         
</t:test_case>


<t:test_case testcaseid="GetWorkingHoursRequest_04" type="bhr">
    <t:objective>Send GetWorkingHoursRequest with negative value for s="RANGE_START" time - service.INVALID_REQUEST</t:objective>	

	<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${test_account2.name}"/>
                        <s d="${Time5}"/>  
                        <e d="${Time6}"/>  
                        <or a="${test_account1.name}"/>
                    </inv>
                    <e a="${test_account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse" attr="invId" set="appointment1.id"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
           <GetWorkingHoursRequest xmlns="urn:zimbraMail" s="-111111" e="${end}" id="${test_account1.id}"/>
        </t:request>
        <t:response>      
             <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>     
         
</t:test_case>

<t:test_case testcaseid="GetWorkingHoursRequest_05" type="bhr">
    <t:objective>Send GetWorkingHoursRequest with negative value for e="RANGE_END" time - service.INVALID_REQUEST</t:objective>	

	<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${test_account2.name}"/>
                        <s d="${Time5}"/>  
                        <e d="${Time6}"/>  
                        <or a="${test_account1.name}"/>
                    </inv>
                    <e a="${test_account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse" attr="invId" set="appointment1.id"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
           <GetWorkingHoursRequest xmlns="urn:zimbraMail" s="${now}" e="-11111" id="${test_account1.id}"/>
        </t:request>
        <t:response>      
             <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>     
         
</t:test_case>

<t:test_case testcaseid="GetWorkingHoursRequest_06" type="bhr">
    <t:objective>Send GetWorkingHoursRequest with s="RANGE_START" and e="RANGE_END" time as alphabets. - service.INVALID_REQUEST </t:objective>	

	<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${test_account2.name}"/>
                        <s d="${Time5}"/>  
                        <e d="${Time6}"/>  
                        <or a="${test_account1.name}"/>
                    </inv>
                    <e a="${test_account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse" attr="invId" set="appointment1.id"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
           <GetWorkingHoursRequest xmlns="urn:zimbraMail" s="aaaa" e="bbbb" id="${test_account1.id}"/>
        </t:request>
        <t:response>      
             <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>     
         
</t:test_case>

<t:test_case testcaseid="GetWorkingHoursRequest_07" type="deprecated" >
    <t:objective>Send GetWorkingHoursRequest with spaces/Special Character/Zero/Negative numbers/Leading Spaces / Trailling Spaces / Space before and after the id </t:objective>


	<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${test_account2.name}"/>
                        <s d="${Time5}"/>  
                        <e d="${Time6}"/>  
                        <or a="${test_account1.name}"/>
                    </inv>
                    <e a="${test_account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse" attr="invId" set="appointment1.id"/>
        </t:response>
    </t:test>
    
    <!-- Blank ID  -->
    <t:test>
        <t:request>
           <GetWorkingHoursRequest xmlns="urn:zimbraMail" s="${now}" e="${end}" id=""/>
        </t:request>
        <t:response>      
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
    
    <!-- Alphabets -->
    <t:test>
        <t:request>
           <GetWorkingHoursRequest xmlns="urn:zimbraMail" s="${now}" e="${end}" id="aaaa"/>
        </t:request>
        <t:response>      
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
    
    <!-- Leading spaces -->
    <t:test>
        <t:request>
           <GetWorkingHoursRequest xmlns="urn:zimbraMail" s="${now}" e="${end}" id="    ${test_account1.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>     
    
    <!-- trailing spaces -->
     <t:test>
        <t:request>
           <GetWorkingHoursRequest xmlns="urn:zimbraMail" s="${now}" e="${end}" id="${test_account1.id}      "/>
        </t:request>
        <t:response>      
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>     
    
    <!-- Leading and trailing Spaces --> 
    <t:test>
        <t:request>
           <GetWorkingHoursRequest xmlns="urn:zimbraMail" s="${now}" e="${end}" id="    ${test_account1.id}   "/>
        </t:request>
        <t:response>      
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>   
    
    <!-- Leading & trailing Spaces --> 
    <t:test>
        <t:request>
           <GetWorkingHoursRequest xmlns="urn:zimbraMail" s="${now}" e="${end}" id="#@!*"/>
        </t:request>
        <t:response>      
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>   
    
    <t:test>
        <t:request>
           <GetWorkingHoursRequest xmlns="urn:zimbraMail" s="${now}" e="${end}" id="8ef2300f-a7ab-4bd1-a47c-70fdf942d1d9"/>
        </t:request>
        <t:response>      
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>  
    
    
        
</t:test_case>

<t:test_case testcaseid="GetWorkingHoursRequest_08" type="bhr" bugids="50209">
    <t:objective> Verify GetWorkingHoursRequest soap api for retrieving working hours of multiple users </t:objective>	

	<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${test_account2.name}"/>
                        <s d="${Time5}"/>  
                        <e d="${Time6}"/>  
                        <or a="${test_account1.name}"/>
                    </inv>
                    <e a="${test_account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse" attr="invId" set="appointment1.id"/>
        </t:response>
    </t:test>
    
  	<t:property name="time1" value="${TIME(-1d)}"/>
	<t:property name="time2" value="${TIME(+1d)}"/>
    
    <!-- Send GetWorkingHoursRequest with multiple name : check for free/no data available.  -->
    <t:test>
        <t:request>
           <GetWorkingHoursRequest xmlns="urn:zimbraMail" s="${time1}" e="${time2}" name="${test_account2.name},${test_account3.name}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetWorkingHoursResponse/mail:usr[@id='${test_account2.name}']" attr="f"/>
            <t:select path="//mail:GetWorkingHoursResponse/mail:usr[@id='${test_account3.name}']" attr="n"/>         
        </t:response>
    </t:test>     
    
   
    <t:property name="time1" value="${TIME(-1d)}"/>
	<t:property name="time2" value="${TIME(+1d)}"/>
	<t:property name="Time4" value="${CURRDATE(+1d)}"/>
	
    
    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="O" transp="O" status="CONF"  allDay="1" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst  ="NE" rsvp="1" a="${test_account1.name}"/>
                        <s d="${Time4}"/>  
                        <e d="${Time4}"/>  
                        <or a="${test_account1.name}"/>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse"/>
        </t:response>
    </t:test>
    
    <t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

   	<!-- Send GetWorkingHoursRequest with name : check for out of office response (u).  -->
     <t:test>
        <t:request>
           <GetWorkingHoursRequest xmlns="urn:zimbraMail" s="${time1}" e="${time2}" name="${test_account1.name}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetWorkingHoursResponse/mail:usr[@id='${test_account1.name}']" attr="u"/>
        </t:response>
    </t:test>
    
       
       <!-- Send GetWorkingHoursRequest with uid : No data should returned.  -->
      <t:test>
        <t:request>
           <GetWorkingHoursRequest xmlns="urn:zimbraMail" s="${time1}" e="${time2}" uid="${test_account1.id}"/>
        </t:request>
        <t:response>      
        	<t:select path="//mail:GetWorkingHoursResponse"/>
   
        </t:response>
    </t:test>
         
</t:test_case>


</t:tests>
