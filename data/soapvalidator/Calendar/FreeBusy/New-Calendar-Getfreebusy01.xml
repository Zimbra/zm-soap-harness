<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="accountNonExist.name" value="testNonExisting${TIME}.${COUNTER}@${defaultdomain.name} "/>
<t:property name="accountNonExist1.name" value="ABCD@ABCD.com"/>

<t:property name="tz.default" value="(GMT-08.00) Pacific Time (US &amp; Canada) / Tijuana"/>
<t:property name="TimeRangeStart" value="${TIME(-2d)}"/>
<t:property name="TimeRangeFinish" value="${TIME(+2d)}"/>

<t:property name="calendar.spchar" value="//\\'^%"/>
<t:property name="calendar.space" value="           "/>
<t:property name="calendar.blank" value=""/>
<t:property name="calendar.sometext" value="some text"/>

<t:property name="calendar.verb1" value="ACCEPT"/>
<t:property name="calendar.verb2" value="DECLINE"/>
<t:property name="calendar.verb3" value="TENTATIVE"/>

<t:property name="time.now" value="${TIME}"/>
<t:property name="time.end" value="${TIME(+2s)}"/>
<t:property name="time.+1" value="${TIME(-1d)}"/>
<t:property name="time.+2" value="${TIME(+2d)}"/>
<t:property name="time.+3" value="${TIME(+3d)}"/>
<t:property name="time.+4" value="${TIME(+4d)}"/>
<t:property name="time.+5" value="${TIME(+5d)}"/>

<t:property name="Time1" value="${ICALTIME(+1h)}"/>
<t:property name="Time2" value="${ICALTIME(+2h)}"/>
<t:property name="Time6" value="${ICALTIME(+30m)}"/>

<t:property name="Time3" value="${CURRDATE}"/>
<t:property name="Time4" value="${CURRDATE(+1d)}"/>
<t:property name="Time5" value="${CURRDATE(+2d)}"/>

<t:property name="appointment.subject" value="Subject is Get Free Busy Calendar meeting${TIME}.${COUNTER}"/>
<t:property name="appointment1.subject" value="Subject1 is Get Free Busy Calendar meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.location" value="Location of Get Free Busy Calendar meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.content" value="Content of Get Free Busy Calendar message${TIME}.${COUNTER}"/>
<t:property name="test_acct.server" value="NOT_DEFINED"/>
<t:property name="account2.appointment1.id" value="NOT_DEFINED"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="new_acct_setup01_calendar_getfreebusy" type="always" >
    <t:objective>Create a test account</t:objective>
    <steps> 
        1. Login to admin account
        2. Create a test account1     
    </steps>

    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>              
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test> 

    <t:test id="create_account2" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>              
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>

    <t:test id="create_account3" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>              
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="new_GetFreeBusyRequest1" type="bhr" >
    <t:objective>GetFreeBusyRequest with valid values for s, e and uid </t:objective>
    <t:steps>1.Login into account1.
             2.Check the status FreeBusy for account1.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
	<t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

            </t:response>
    </t:test>

    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${time.now}" e="${time.end}"  uid="${account1.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr"/>      
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="new_GetFreeBusyRequest2" type="bhr" >
    <t:objective>GetFreeBusy status of attendees </t:objective>
    <t:steps>1.login to the test account.
			 2.Create an appointment of account1 with account2.
             3.Check the status FreeBusy for account1 and account2.
    </t:steps>
   
<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
	
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

            </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${account2.name}"/>
                        <s d="${Time1}"/>  
                        <e d="${Time2}"/>  
                        <or a="${account1.name}"/>
                    </inv>
                    <e a="${account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse"/>
        </t:response>
    </t:test>


    <t:test>
        <t:request>
			<GetFreeBusyRequest xmlns="urn:zimbraMail" s="${time.+1}" e="${time.+2}" uid="${account1.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:b"/>  
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<GetFreeBusyRequest xmlns="urn:zimbraMail" s="${time.+1}" e="${time.+2}" uid="${account2.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:f"/>  
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="new_GetFreeBusyRequest03" type="bhr" > 
    <t:objective>GetFreeBusy status of attendees after the attendee has accepted the meeting </t:objective>
    <t:steps> 1. Login to account1.
			  2. Create an appointment of account1 with account2.
              3. Login to account2 and accept the invitation.
              4. Check the status FreeBusy for account2(busy).
			  5. Login ino account1 and Check the status FreeBusy for account1(busy).
    </t:steps>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>   
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment1.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${account2.name}"/>
                        <s d="${Time1}" tz="${tz.default}"/>  
                        <e d="${Time2}" tz="${tz.default}"/>  
                        <or a="${account1.name}"/>
                    </inv>
                    <e a="${account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment1.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse"/>
        </t:response>

	</t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${TimeRangeStart}" calExpandInstEnd="${TimeRangeFinish}">
				<query>${appointment1.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
			 <t:select path = "//mail:SearchResponse/mail:appt" attr="invId" set="account1.appointment1.id"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${TimeRangeStart}" calExpandInstEnd="${TimeRangeFinish}">
				<query>${appointment1.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
			 <t:select path = "//mail:SearchResponse/mail:appt" attr="invId" set="account2.appointment1.id"/>
			 <t:select path = "//mail:SearchResponse/mail:appt" attr="id" set="appt1.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SendInviteReplyRequest xmlns="urn:zimbraMail" id="${account2.appointment1.id}" compNum="0" verb="${calendar.verb1}" updateOrganizer="${globals.true}">
                <m origid="${account2.appointment1.id}" rt="r">
                    <e t="t" a="${account1.name}"/>
                    <su>${calendar.verb1}${appointment1.subject} </su>
                    <mp ct="text/plain">
                        <content>Yes, I will attend. </content>
                    </mp>
                </m>
            </SendInviteReplyRequest>
        </t:request>
        <t:response>
           <t:select path = "//mail:SendInviteReplyResponse" attr="apptId" match="${appt1.id}"/>
        </t:response>
    </t:test>    

    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${time.+1}" e="${time.+2}" uid="${account2.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:b"/>  
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:b"/>     
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${time.+1}" e="${time.+2}" uid="${account1.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:b"/>  
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:b"/>     
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="new_GetFreeBusyRequest04" type="bhr" >  
    <t:objective>GetFreeBusy status of attendees when Account2 is free all day </t:objective>
    <t:steps> 1. Login to account1.
			  2. Check the status FreeBusy for account2(free).
    </t:steps>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>   
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${time.+1}" e="${time.+2}" uid="${account2.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:f"/>  
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="new_GetFreeBusyRequest05" type="bhr" >  
    <t:objective>GetFreeBusy status of attendees when Account2 is busy all day </t:objective>
    <t:steps> 1. Login to account2.
			  2. Create a all day appointment with fb=busy.
			  3. Login into account1.
			  4. Check the status FreeBusy for account2(busy).
    </t:steps>

<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>   
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" status="CONF"  allDay="1" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst  ="NE" rsvp="1" a="${account1.name}"/>
                        <s d="${Time3}"/>  
                        <e d="${Time3}"/>  
                        <or a="${account2.name}"/>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>   
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>


    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${time.+1}" e="${time.+2}" uid="${account2.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:b"/>  
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="new_GetFreeBusyRequest06" type="bhr" >  
    <t:objective>GetFreeBusy status of attendees when status of Account2 is tentative all day </t:objective>
    <t:steps> 1. Login to account2.
			  2. Create a all day appointment with fb=tentative.
			  3. Login into account1.
			  4. Check the status FreeBusy for account2(tentative).
    </t:steps>

<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>   
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="T" transp="O" status="CONF"  allDay="1" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst  ="NE" rsvp="1" a="${account1.name}"/>
                        <s d="${Time4}"/>  
                        <e d="${Time4}"/>  
                        <or a="${account2.name}"/>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>   
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>


    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${time.+1}" e="${time.+2}" uid="${account2.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:t"/>  
        </t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="new_GetFreeBusyRequest07" type="bhr" >  
    <t:objective>GetFreeBusy status of attendees when status of Account is unknown </t:objective>
    <t:steps> 1. Login to account1.
			  2. Check the status FreeBusy for account(unknown).
    </t:steps>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>   
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${time.+1}" e="${time.+2}" uid="${accountNonExist.name}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:n"/>  
        </t:response>
    </t:test>

    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${time.+1}" e="${time.+2}" uid="${accountNonExist1.name}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:n"/>  
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="new_GetFreeBusyRequest08" type="bhr" >  
    <t:objective>GetFreeBusy status of attendees when status of Account2 is Out of Office </t:objective>
    <t:steps> 1. Login to account2.
			  2. Create a all day appointment with fb=tentative.
			  3. Login into account1.
			  4. Check the status FreeBusy for account2(tentative).
    </t:steps>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>   
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="O" transp="O" status="CONF"  allDay="1" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst  ="NE" rsvp="1" a="${account1.name}"/>
                        <s d="${Time4}"/>  
                        <e d="${Time4}"/>  
                        <or a="${account1.name}"/>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>   
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>


    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${time.+1}" e="${time.+2}" uid="${account1.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:u"/>  
        </t:response>
    </t:test>
</t:test_case>

<t:test_case testcaseid="new_GetFreeBusyRequest09" type="bhr" >
    <t:objective>GetFreeBusy status of Account2 who is in a meeting for 1 hour (daily occurrence) </t:objective>
    <t:steps>1.login to the test account2.
			 2.Create a never ending daily appointment.
             3.Login into account1.
			 4.Check the status FreeBusy for account2(busy).
    </t:steps>
   
<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

            </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${account1.name}"/>
                        <s d="${Time1}" tz="${tz.default}"/>  
                        <e d="${Time2}" tz="${tz.default}"/>  

                        <or a="${account2.name}"/>
                        <recur>
                            <add>
                                <rule freq="DAI" ival="1"/>
                            </add>
                        </recur>
                    </inv>
                    <e a="${account1.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse"/>
        </t:response>
    </t:test>


<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

            </t:response>
    </t:test>

    <t:test>
        <t:request>
			<GetFreeBusyRequest xmlns="urn:zimbraMail" s="${time.+1}" e="${time.+5}" uid="${account2.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:f"/>  
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:b"/>  
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="new_GetFreeBusyRequest10" type="bhr" > 
    <t:objective>GetFreeBusy status of attendees after the attendee has accepted the meeting and then declines the meeting. </t:objective>
    <t:steps> 1. Login to account1.
			  2. Create an appointment of account1 with account2.
              3. Login to account2 and accept the invitation.
              4. Check the status FreeBusy for account2(busy).
			  5. Login ino account1 and Check the status FreeBusy for account1(busy).
    </t:steps>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>   
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment1.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${account2.name}"/>
                        <s d="${Time1}" tz="${tz.default}"/>  
                        <e d="${Time2}" tz="${tz.default}"/>  
                        <or a="${account1.name}"/>
                    </inv>
                    <e a="${account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment1.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse"/>
        </t:response>

	</t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${TimeRangeStart}" calExpandInstEnd="${TimeRangeFinish}">
				<query>${appointment1.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
			 <t:select path = "//mail:SearchResponse/mail:appt" attr="invId" set="account1.appointment1.id"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${TimeRangeStart}" calExpandInstEnd="${TimeRangeFinish}">
				<query>${appointment1.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
			 <t:select path = "//mail:SearchResponse/mail:appt" attr="invId" set="account2.appointment1.id"/>
			 <t:select path = "//mail:SearchResponse/mail:appt" attr="id" set="appt2.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SendInviteReplyRequest xmlns="urn:zimbraMail" id="${account2.appointment1.id}" compNum="0" verb="${calendar.verb1}" updateOrganizer="${globals.true}">
                <m origid="${account2.appointment1.id}" rt="r">
                    <e t="t" a="${account1.name}"/>
                    <su>${calendar.verb1}${appointment1.subject} </su>
                    <mp ct="text/plain">
                        <content>Yes, I will attend. </content>
                    </mp>
                </m>
            </SendInviteReplyRequest>
        </t:request>
        <t:response>
           <t:select path = "//mail:SendInviteReplyResponse" attr="apptId" match="${appt2.id}"/>
        </t:response>
    </t:test>    

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${time.+1}" e="${time.+2}" uid="${account2.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:b"/>  
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:b"/>     
        </t:response>
    </t:test>


<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SendInviteReplyRequest xmlns="urn:zimbraMail" id="${account2.appointment1.id}" compNum="0" verb="${calendar.verb1}" updateOrganizer="${globals.true}">
                <m origid="${account2.appointment1.id}" rt="r">
                    <e t="t" a="${account1.name}"/>
                    <su>${calendar.verb2}${appointment1.subject} </su>
                    <mp ct="text/plain">
                        <content>No, I won't attend. </content>
                    </mp>
                </m>
            </SendInviteReplyRequest>
        </t:request>
        <t:response>
           <t:select path = "//mail:SendInviteReplyResponse" attr="apptId" match="${appt2.id}"/>
        </t:response>
    </t:test>    

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${time.+1}" e="${time.+2}" uid="${account2.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:f"/>  
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:f"/>     
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="new_GetFreeBusyRequest11" type="bhr" >
    <t:objective>GetFreeBusyRequest a new account that has not logged in yet </t:objective>
    <t:steps>1.Login into account1.
             2.Check the status FreeBusy for account3.
    </t:steps>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
	<t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

            </t:response>
    </t:test>

    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${time.now}" e="${time.end}"  uid="${account3.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr/mail:f"/>  
        </t:response>
    </t:test>

</t:test_case>

</t:tests>