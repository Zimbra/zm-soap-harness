<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>    
 
<t:property name="testdomain.name" value="domain${TIME}${COUNTER}.com"/>    
    
<t:property name="account1.user" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.user" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.user" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.user" value="test.${TIME}.${COUNTER}@${testdomain.name}"/>
    
<t:property name="appointment1.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment2.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment3.subject" value="Subject of meeting${TIME}.${COUNTER}"/>    
<t:property name="appointment4.subject" value="Subject of meeting${TIME}.${COUNTER}"/>    
<t:property name="appointment5.subject" value="Subject of meeting${TIME}.${COUNTER}"/>        
<t:property name="appointment6.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment7.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment8.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment9.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment10.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment10b.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment11.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment12.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment13.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment14.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment15a.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment15b.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment15c.subject" value="Subject of meeting${TIME}.${COUNTER}"/>    
<t:property name="appointment15d.subject" value="Subject of meeting${TIME}.${COUNTER}"/>        
<t:property name="appointment16.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment17.subject" value="Subject of meeting${TIME}.${COUNTER}"/>

<t:property name="appointment.location" value="Location of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.content" value="Content of the message${TIME}.${COUNTER}"/>
    
    
<t:property name="Time1" value="1167048000000"/> <!-- 12/25/2006 12:00:00 -->
<t:property name="Time2" value="1167051600000"/> <!-- 12/25/2006 13:00:00 -->
<t:property name="Time3" value="1167058800000"/> <!-- 12/25/2006 15:00:00 -->
<t:property name="Time4" value="1167062400000"/> <!-- 12/25/2006 16:00:00 -->
<t:property name="Time5" value="1167069600000"/> <!-- 12/25/2006 18:00:00 -->
<t:property name="Time6" value="1167073200000"/> <!-- 12/25/2006 19:00:00 -->

<t:property name="TimeRangeStart" value="${TIME(-1d)[${Time1}]}"/>
<t:property name="TimeRangeFinish" value="${TIME(+1d)[${Time6}]}"/>

<t:property name="test_acct1.server" value="NOT_DEFINED"/>
<t:property name="test_acct2.server" value="NOT_DEFINED"/>


<t:property name="password" value="${defaultpassword.value}"/>

<t:test_case testcaseid="Ping" type="always">
    <t:objective>Basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

    
<t:test_case testcaseid="acctSetup1_calendar_delegated" type="always">
    <t:objective>Create test account</t:objective>
    <t:steps>
        1. Login to admin.
        2. Create a domain.
        3. Create few accounts.
    </t:steps>

    <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id="create_test-domain" required="true" >
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${testdomain.name}</name>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain"/>
        </t:response>
    </t:test>

    <t:test id="create_test_account1" required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.user}</name>
                <password>${password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_account2" required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.user}</name>
                <password>${password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_account3" required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.user}</name>
                <password>${password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_account4" required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.user}</name>
                <password>${password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct4.server"/>
        </t:response>
    </t:test>

</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

<t:test_case testcaseid="acctSetup2_calendar_delegated" type="always">
    <t:objective>Create account setup</t:objective>
    <t:steps>
        1. Login to account1
        2. Get the folder details
        3. Delegate the Calendar folder
        4. Login to account2
        5. Mount the delegated folder.
    </t:steps>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.user}</account>
                <password>${password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder/mail:folder[@name='${globals.calendar}']" attr="id" set="folder.calendar"/>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="folder.root"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${folder.calendar}" op="grant">
                    <grant d="${account2.user}" gt="usr" perm="r"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action" attr="zid" set="folder.zid"/>
        </t:response>
    </t:test>
    
<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.user}</account>
                <password>${password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${folder.root}" name="user1 Calendar" view="appointment" rid="${folder.calendar}" zid="${account1.id}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="delegated.id"/>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="owner" match="${account1.user}"/>
        </t:response>
    </t:test>

</t:test_case>
    
    
<!-- See bug 15513 for more details -->
<t:test_case testcaseid="calendar_delegated6_bug15513" type="deprecated" bugids="15513">
    <t:objective>Verify that an account2 can accept the appointment on a shared calendar with "rx" permissions</t:objective>
    <t:steps>
        1. Login as boss and grant proper permissions to assistant.
        2. Boss creates an appointment and sends it to attendee.
        3. Login to assistant account.
        4. Get the id of appointment from the boss's calendar
        5. Accept the appointment (which is incorrect, since an organizer cannot accept his own appointment)
    </t:steps>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test id="calendar_delegated6a">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.user}</account>
                <password>${password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test id="calendar_delegated6b" depends="calendar_delegated6a">
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${folder.calendar}" op="grant">
                    <grant d="${account2.user}" gt="usr" perm="rx"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
    <t:test id="calendar_delegated6c" depends="calendar_delegated6a">
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment6.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${account3.user}"/>
                        <s d="${ICALTIME[${Time1}]}"/>
                        <e d="${ICALTIME[${Time2}]}"/>
                        <or a="${account1.user}"/>
                        <recur>
                            <add>
                                <rule freq="DAI" ival="1"/>
                            </add>
                        </recur>
                    </inv>
                    <e a="${account3.user}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment6.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse/mail:m" attr="id"/>
        </t:response>
    </t:test>
    
<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>

    <t:test id="calendar_delegated6d">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.user}</account>
                <password>${password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test id="calendar_delegated6e" depends="calendar_delegated6c,calendar_delegated6d">
        <t:request>
            <GetApptSummariesRequest xmlns="urn:zimbraMail" s="${TimeRangeStart}" e="${TimeRangeFinish}" l="${delegated.id}"/>
        </t:request>
        <t:response>
            <t:select path = "//mail:GetApptSummariesResponse/mail:appt[@name='${appointment6.subject}']" attr="invId" set="appointment6.id"/>
        </t:response>
    </t:test>

    <t:test id="calendar_delegated6f" depends="calendar_delegated6e">
        <t:request>
            <SendInviteReplyRequest xmlns="urn:zimbraMail" id="${appointment6.id}" compNum="0" verb="ACCEPT" updateOrganizer="${globals.true}">
                <m origid="${appointment6.id}" rt="r">
                    <e t="t" a="${account1.user}"/>
                    <su>ACCEPT ${appointment6.subject} </su>
                    <mp ct="text/plain">
                        <content>Yes, I will attend. </content>
                    </mp>
                </m>
            </SendInviteReplyRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:SendInviteReplyResponse" attr="id" match="${appointment6.id}"/>
        </t:response>
    </t:test>

</t:test_case>   
    

    

</t:tests>