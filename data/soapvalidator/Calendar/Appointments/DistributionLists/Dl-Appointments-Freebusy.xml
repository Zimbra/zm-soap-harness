<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="account0.name" value="account${TIME}.${COUNTER}@${defaultdomain.name}"/>


<t:property name="list1.name" value="dl${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="list1.account1.name" value="account${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="list1.account2.name" value="account${TIME}.${COUNTER}@${defaultdomain.name}"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account0.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account0.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account0.server"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="DL_Appointments_01" type="sanity" >
    <t:objective>Send a meeting request to a DL.  Verify the members can accept the request.</t:objective>
    <t:steps>
    1. Create a DL with two members
    2. Login as source account
    3. Send a meeting invitation to the DL
    4. Login to each member's accounts.
    5. Accept the request
    </t:steps>

    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${list1.account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="list1.account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="list1.account1.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${list1.account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="list1.account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="list1.account2.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${list1.name}</name>
                <a n="description">A distribution list with two members</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="list1.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${list1.account1.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>
 
    <t:test >
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${list1.account2.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>
    
    
	<t:property name="server.zimbraAccount" value="${account0.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account0.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
	
	<t:property name="appointment.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="appointment.start" value="1233489600000"/>	<!-- Feb 1, 2009  12:00:00 -->

	<t:test >
		<t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m >
					<inv>
						<comp status="CONF" fb="B" class="PUB" transp="O" allDay="0" name="${appointment.subject}">
							<s tz="${defaultlocale.timezone}" d="${ICALTIME[${appointment.start}]}"/>
							<e tz="${defaultlocale.timezone}" d="${ICALTIME(+1h)[${appointment.start}]}"/>
							<at role="REQ" ptst="NE" rsvp="1" a="${list1.name}"/>
							<or a="${account0.name}"/>
						</comp>
					</inv>
					<e a="${list1.name}" t="t" />
					<su>${appointment.subject}</su>
					<mp ct="text/plain">
						<content>
That's a good thing, right? Well, it can be, but don't make a quick ruling on that. It's true that vegetables are the lowest-calorie food group; the problem is that salads aren't just composed of vegetables anymore.
						</content>
					</mp>
				</m>
			</CreateAppointmentRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:CreateAppointmentResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${list1.account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${list1.account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${TIME(-1d)[${appointment.start}]}" calExpandInstEnd="${TIME(+1d)[${appointment.start}]}">
				<query>${appointment.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
			 <t:select path = "//mail:SearchResponse/mail:appt" attr="invId" set="list1.account1.appointment.invId"/>
			 <t:select path = "//mail:SearchResponse/mail:appt" attr="id" set="list1.account1.appointment.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SendInviteReplyRequest xmlns="urn:zimbraMail" id="${list1.account1.appointment.invId}" compNum="0" verb="ACCEPT" updateOrganizer="${globals.true}">
                <m origid="${list1.account1.appointment.id}" rt="r">
                    <e t="t" a="${account0.name}"/>
                    <su>ACCEPT: ${appointment.subject}</su>
                    <mp ct="text/plain">
                        <content>Yes, I will attend. </content>
                    </mp>
                </m>
            </SendInviteReplyRequest>
        </t:request>
        <t:response>
           <t:select path = "//mail:SendInviteReplyResponse" />
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account0.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account0.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
	
    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${TIME(-1d)[${appointment.start}]}" e="${TIME(+1d)[${appointment.start}]}"  uid="${list1.id},${list1.account1.id},${list1.account2.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse">
            	<!--t:select path="//mail:usr[@id='${list1.id}']">
            		<t:select path="//mail:n"/>
            	</t:select-->
            	<t:select path="//mail:usr[@id='${list1.account1.id}']">
            		<t:select path="//mail:b" attr="s" match="${appointment.start}"/>
            		<t:select path="//mail:b" attr="e" match="${TIME(+1h)[${appointment.start}]}"/>
            	</t:select>
            	<t:select path="//mail:usr[@id='${list1.account2.id}']">
            		<t:select path="//mail:t" attr="s" match="${appointment.start}"/>
            		<t:select path="//mail:t" attr="e" match="${TIME(+1h)[${appointment.start}]}"/>
            	</t:select>
            </t:select>      
        </t:response>
    </t:test>
 
</t:test_case>


</t:tests>
