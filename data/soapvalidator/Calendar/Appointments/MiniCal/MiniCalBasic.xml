<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="domain1.name" value="domain.${TIME}.${COUNTER}.${defaultdomain.name}"/>
<t:property name="timezone.pst" value="(GMT-08.00) Pacific Time (US &amp; Canada) / Tijuana"/>
<t:property name="appt1.subject" value="subject.${TIME}.${COUNTER}"/>
<t:property name="appt1.content" value="content.${TIME}.${COUNTER}"/>
<t:property name="appt1.location" value="location.${TIME}.${COUNTER}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>

    <t:test required="true">
     <t:request>
       <PingRequest xmlns="urn:zimbraAdmin"/>
     </t:request>
      <t:response>
        <t:select path="//admin:PingResponse"/>
     </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct_setup" type="always" >
 <t:objective>Create an account </t:objective>

    <t:test required="true" >
	     <t:request>
		     <AuthRequest xmlns="urn:zimbraAdmin">
		        <name>${admin.user}</name>
		        <password>${admin.password}</password>
		     </AuthRequest>
	     </t:request>
	     <t:response>
	     	<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
	     </t:response>
    </t:test>

   <t:test id="create_test_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
   </t:test>
    
</t:test_case> 

<t:test_case testcaseid="GetCalendarFolderID" type="always" >
    <t:objective>login as the test account</t:objective>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
  
    <t:test id="getFolderRequest">
        <t:request>
            <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>          
            <t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="folder.calendar.id"/> 
        </t:response>
    </t:test>   

</t:test_case>


<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
<t:property name="server.zimbraAdmin" value="${test_acct1.server}"/>

<t:test_case testcaseid="MiniCalBasic_01" type="smoke" >
 <t:objective>Create an appointment and check the appointment date using GetMiniCalRequest</t:objective>
 
 <t:steps>
    1. Make calendar appointment 
    2. Verify the GetMiniCalResponse has proper date.  
 </t:steps> 	
	
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${test_account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>
    
    <t:property name="appt1.uid" value="${TIME}${COUNTER}"/>
   <t:property name="appointment1.start" value="1448928000000"/> <!-- 12/1/2015 00:00:00 GMT -->
    
    <t:test id="minical2b">
        <t:request>
            <SetAppointmentRequest xmlns="urn:zimbraMail">
                <default needsReply="0" ptst="AC">
                    <m>
                        <inv uid="${appt1.uid}" method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appt1.subject}" loc="${appt1.location}">
                            <s d="${ICALTIME[${appointment1.start}]}" />  
                            <e d="${ICALTIME(+1h)[${appointment1.start}]}" />  
                            <or a="${test_account1.name}"/>
                        </inv>
                        <mp content-type="text/plain">
                            <content>${appt1.content}</content>
                        </mp>
                        <su>${appt1.subject}</su>
                    </m>
                </default>
            </SetAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SetAppointmentResponse"/>          
        </t:response>    
    </t:test> 
     
    <t:test >
        <t:request>
            <GetMiniCalRequest xmlns="urn:zimbraMail" s="${TIME(-1d)[${appointment1.start}]}" e="${TIME(+1d)[${appointment1.start}]}">       
			<folder id="${folder.calendar.id}" />			
			</GetMiniCalRequest>
        </t:request>        
        <t:response>
			<t:select path = "//mail:GetMiniCalResponse/mail:date" match="${CURRDATE()[${appointment1.start}]}"/>
        </t:response>
    </t:test> 
     
 </t:test_case>   
  
</t:tests>