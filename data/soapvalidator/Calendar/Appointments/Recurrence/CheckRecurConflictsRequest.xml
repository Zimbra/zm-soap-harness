<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="today" value="${CURRDATE}"/>
<t:property name="meeting.subject1" value="Test Meeting 1"/>
<t:property name="meeting.subject2" value="Test Meeting 2"/>
<t:property name="meeting.subject3" value="Test Meeting 3"/>

<t:property name="account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.password" value="test123"/>
<t:property name="account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.password" value="test123"/>
<t:property name="user3.name" value="test3.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="user3.password" value="test123"/>
<t:property name="user4.name" value="user4@${defaultdomain.name}"/>
<t:property name="user4.password" value="test123"/>

<t:property name="uid1" value="1-${TIME}-${COUNTER}"/>
<t:property name="uid2" value="2-${TIME}-${COUNTER}"/>
<t:property name="uid3" value="3-${TIME}-${COUNTER}"/>
<t:property name="uid4" value="4-${TIME}-${COUNTER}"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_test_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>
 
</t:test_case>


<t:test_case testcaseid="CheckRecurConflictsRequest1" type="smoke" areas="Calendar">
    <t:objective>Verify user can check conflicts in recurrence against list of users.</t:objective>
    <t:steps>1. Login as user 
             2. Send CheckRecurConflictsRequest to check conflicts in recurrence against list of users.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
	<!-- Login as account2 -->
    <t:test id="login account2">
      <t:request>
        <AuthRequest xmlns="urn:zimbraAccount">
          	<account by="name">${account2.name}</account>
          	<password>${account2.password}</password>
        </AuthRequest>
      </t:request>
      <t:response>
        	<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
        	<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
      </t:response>
    </t:test>
    
    <t:test id="test 1">
      <t:request>
        <CheckRecurConflictsRequest xmlns="urn:zimbraMail" s="1230768000000" e="1262304000000">
          <tz dayoff="-420" stdoff="-480" id="America/Los_Angeles">
            <standard sec="0" min="0" hour="2" wkday="1" week="1" mon="11"/>
            <daylight min="0" wkday="1" sec="0" week="2" mon="3" hour="2"/>
          </tz>
          <comp>
            <s tz="America/Los_Angeles" d="20090105T120000"/>
            <e tz="America/Los_Angeles" d="20090105T130000"/>
            <recur>
              <add>
                <rule freq="WEE">
                  <count num="52"></count>
                  <interval ival="1"></interval>
                </rule>
              </add>
            </recur>
          </comp>
          <except>
            <exceptId tz="America/Los_Angeles" d="20090112T120000"/>
            <s tz="America/Los_Angeles" d="20090112T130000"/>
            <e tz="America/Los_Angeles" d="20090112T150000"/>
          </except>
          <cancel>
            <exceptId tz="America/Los_Angeles" d="20090119T120000"/>
          </cancel>
          <usr name="account2@wii.zimbra.com"/>
          <usr name="account1@wii.zimbra.com"/>
        </CheckRecurConflictsRequest>
      </t:request>
      <t:response>
        <t:select path="//mail:CheckRecurConflictsResponse"/>
      </t:response>
    </t:test>
	
</t:test_case>


<t:test_case testcaseid="CheckRecurConflictsRequest2" type="bhr" areas="Calendar">
    <t:objective>Verify user can check conflicts in recurrence against list of users.</t:objective>
    <t:steps>1. Login as user 
             2. Send CheckRecurConflictsRequest with all="1" to get all instances, even those without conflicts.
             
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
	<!-- Login as account2 -->
    <t:test id="login account2">
      <t:request>
        <AuthRequest xmlns="urn:zimbraAccount">
          	<account by="name">${account2.name}</account>
          	<password>${account2.password}</password>
        </AuthRequest>
      </t:request>
      <t:response>
        	<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
        	<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
      </t:response>
    </t:test>
    
    <t:test id="test 2">
      <t:request>
        <CheckRecurConflictsRequest xmlns="urn:zimbraMail" s="1230768000000" e="1262304000000" all="1">
          <tz dayoff="-420" stdoff="-480" id="America/Los_Angeles">
            <standard sec="0" min="0" hour="2" wkday="1" week="1" mon="11"/>
            <daylight min="0" wkday="1" sec="0" week="2" mon="3" hour="2"/>
          </tz>
          <comp>
            <s tz="America/Los_Angeles" d="20090105"/>
            <e tz="America/Los_Angeles" d="20090106"/>
            <recur>
              <add>
                <rule freq="WEE">
                  <count num="52"></count>
                  <interval ival="1"></interval>
                </rule>
              </add>
            </recur>
          </comp>
          <except>
            <exceptId d="20090112"/>
            <s d="20090113"/>
            <e d="20090115"/>
          </except>
          <cancel>
            <exceptId tz="America/Los_Angeles" d="20090119"/>
          </cancel>
          <usr name="account2@wii.zimbra.com"/>
          <usr name="account1@wii.zimbra.com"/>
        </CheckRecurConflictsRequest>
      </t:request>
      <t:response>
        <t:select path="//mail:CheckRecurConflictsResponse"/>
      </t:response>
    </t:test>
	
	
</t:test_case>


<t:test_case testcaseid="CheckRecurConflictsRequest3" type="bhr" areas="Calendar">
    <t:objective>Verify user can check conflicts in recurrence against list of users.</t:objective>
    <t:steps>1. Login as user 
             2. Send CheckRecurConflictsRequest with tz="Asia/Colombo". 
    </t:steps>


	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
	<!-- Login as account2 -->
    <t:test id="login account2">
      <t:request>
        <AuthRequest xmlns="urn:zimbraAccount">
          	<account by="name">${account2.name}</account>
          	<password>${account2.password}</password>
        </AuthRequest>
      </t:request>
      <t:response>
        	<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
        	<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
      </t:response>
    </t:test>
    
    <t:test id="test 3">
      <t:request>
        <CheckRecurConflictsRequest xmlns="urn:zimbraMail" all="1">
          <comp>
            <s tz="Asia/Colombo" d="20090105T120000"/>
            <e tz="Asia/Colombo" d="20090105T130000"/>
            <recur>
              <add>
                <rule freq="WEE">
                  <interval ival="1"></interval>
                </rule>
              </add>
            </recur>
          </comp>
          <except>
            <exceptId tz="Asia/Colombo" d="20090112T120000"/>
            <s tz="Asia/Colombo" d="20090112T130000"/>
            <e tz="Asia/Colombo" d="20090112T150000"/>
          </except>
          <cancel>
            <exceptId tz="Asia/Colombo" d="20090119T120000"/>
          </cancel>
          <usr name="user2@wii.zimbra.com"/>
          <usr name="user1@wii.zimbra.com"/>
        </CheckRecurConflictsRequest>
      </t:request>
      <t:response>
        <t:select path="//mail:CheckRecurConflictsResponse"/>
      </t:response>
    </t:test>
	
</t:test_case>


<t:test_case testcaseid="CheckRecurConflictsRequest4" type="bhr" areas="Calendar">
    <t:objective>Verify user can check conflicts in recurrence against list of users.</t:objective>
    <t:steps>1. Login as user 
             2. Send CheckRecurConflictsRequest exceptId d="20090112". 
    </t:steps>


	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
	<!-- Login as account2 -->
    <t:test id="login account2">
      <t:request>
        <AuthRequest xmlns="urn:zimbraAccount">
          	<account by="name">${account2.name}</account>
          	<password>${account2.password}</password>
        </AuthRequest>
      </t:request>
      <t:response>
        	<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
        	<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
      </t:response>
    </t:test>
    
    <t:test id="test 4">
      <t:request>
        <CheckRecurConflictsRequest xmlns="urn:zimbraMail" s="1230768000000" e="1262304000000" all="1">
          <comp>
            <s tz="Asia/Colombo" d="20090105"/>
            <e tz="Asia/Colombo" d="20090106"/>
            <recur>
              <add>
                <rule freq="WEE">
                  <count num="52"></count>
                  <interval ival="1"></interval>
                </rule>
              </add>
            </recur>
          </comp>
          <except>
            <exceptId d="20090112"/>
            <s d="20090113"/>
            <e d="20090115"/>
          </except>
          <cancel>
            <exceptId tz="Asia/Colombo" d="20090119"/>
          </cancel>
          <usr name="user2@wii.zimbra.com"/>
          <usr name="user1@wii.zimbra.com"/>
        </CheckRecurConflictsRequest>
      </t:request>
      <t:response>
        <t:select path="//mail:CheckRecurConflictsResponse"/>
      </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="CheckRecurConflictsRequest5" type="bhr" areas="Calendar">
    <t:objective>Send CheckRecurConflictsRequest with invalid start and end time.</t:objective>
    <t:steps>1. Login as user 
             2. Send CheckRecurConflictsRequest s="aaa" e="bbb" 
    </t:steps>


	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
	<!-- Login as account2 -->
    <t:test id="login account2">
      <t:request>
        <AuthRequest xmlns="urn:zimbraAccount">
          	<account by="name">${account2.name}</account>
          	<password>${account2.password}</password>
        </AuthRequest>
      </t:request>
      <t:response>
        	<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
        	<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
      </t:response>
    </t:test>
    
    <t:test id="test 4">
      <t:request>
        <CheckRecurConflictsRequest xmlns="urn:zimbraMail" s="aaa" e="bbb" all="1">
          <comp>
            <s tz="Asia/Colombo" d="20090105"/>
            <e tz="Asia/Colombo" d="20090106"/>
            <recur>
              <add>
                <rule freq="WEE">
                  <count num="52"></count>
                  <interval ival="1"></interval>
                </rule>
              </add>
            </recur>
          </comp>
          <except>
            <exceptId d="20090112"/>
            <s d="20090113"/>
            <e d="20090115"/>
          </except>
          <cancel>
            <exceptId tz="Asia/Colombo" d="bbb"/>
          </cancel>
          <usr name="user2@wii.zimbra.com"/>
          <usr name="user1@wii.zimbra.com"/>
        </CheckRecurConflictsRequest>
      </t:request>
      <t:response>
        <t:select path= "//zimbra:Code" match ="^service.INVALID_REQUEST"/>
      </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="CheckRecurConflictsRequest6" type="bhr" areas="Calendar">
    <t:objective>Send CheckRecurConflictsRequest with start and end time as alphabets.</t:objective>
    <t:steps>1. Login as user 
             2. Send CheckRecurConflictsRequest s="aaa" e="bbb" 
    </t:steps>


	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
	<!-- Login as account2 -->
    <t:test id="login account2">
      <t:request>
        <AuthRequest xmlns="urn:zimbraAccount">
          	<account by="name">${account2.name}</account>
          	<password>${account2.password}</password>
        </AuthRequest>
      </t:request>
      <t:response>
        	<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
        	<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
      </t:response>
    </t:test>
    
    <t:test id="test 4">
      <t:request>
        <CheckRecurConflictsRequest xmlns="urn:zimbraMail" s="1230768000000" e="1262304000000" all="1">
          <comp>
            <s tz="Asia/Colombo" d="aaa"/>
            <e tz="Asia/Colombo" d="bbb"/>
            <recur>
              <add>
                <rule freq="WEE">
                  <count num="52"></count>
                  <interval ival="1"></interval>
                </rule>
              </add>
            </recur>
          </comp>
          <except>
            <exceptId d="20090112"/>
            <s d="20090113"/>
            <e d="20090115"/>
          </except>
          <cancel>
            <exceptId tz="Asia/Colombo" d="bbb"/>
          </cancel>
          <usr name="user2@wii.zimbra.com"/>
          <usr name="user1@wii.zimbra.com"/>
        </CheckRecurConflictsRequest>
      </t:request>
      <t:response>
        <t:select path= "//zimbra:Code" match ="^service.INVALID_REQUEST"/>
      </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="CheckRecurConflictsRequest7" type="bhr" areas="Calendar">
    <t:objective>Send CheckRecurConflictsRequest with blank start and end time.</t:objective>
    <t:steps>1. Login as user 
             2. Send CheckRecurConflictsRequest with blank start and end time. - service.INVALID_REQUEST
    </t:steps>


	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
	<!-- Login as account2 -->
    <t:test id="login account2">
      <t:request>
        <AuthRequest xmlns="urn:zimbraAccount">
          	<account by="name">${account2.name}</account>
          	<password>${account2.password}</password>
        </AuthRequest>
      </t:request>
      <t:response>
        	<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
        	<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
      </t:response>
    </t:test>
    
    <t:test id="test 4">
      <t:request>
        <CheckRecurConflictsRequest xmlns="urn:zimbraMail" s="1230768000000" e="1262304000000" all="1">
          <comp>
            <s tz="Asia/Colombo" d=""/>
            <e tz="Asia/Colombo" d=""/>
            <recur>
              <add>
                <rule freq="WEE">
                  <count num="52"></count>
                  <interval ival="1"></interval>
                </rule>
              </add>
            </recur>
          </comp>
          <except>
            <exceptId d="20090112"/>
            <s d="20090113"/>
            <e d="20090115"/>
          </except>
          <cancel>
            <exceptId tz="Asia/Colombo" d="bbb"/>
          </cancel>
          <usr name="user2@wii.zimbra.com"/>
          <usr name="user1@wii.zimbra.com"/>
        </CheckRecurConflictsRequest>
      </t:request>
      <t:response>
        <t:select path= "//zimbra:Code" match ="^service.INVALID_REQUEST"/>
      </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="CheckRecurConflictsRequest8" type="bhr" areas="Calendar">
    <t:objective>Send CheckRecurConflictsRequest with blank exceptId</t:objective>
    <t:steps>1. Login as user 
             2. Send CheckRecurConflictsRequest with blank exceptId - service.INVALID_REQUEST
    </t:steps>


	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
	<!-- Login as account2 -->
    <t:test id="login account2">
      <t:request>
        <AuthRequest xmlns="urn:zimbraAccount">
          	<account by="name">${account2.name}</account>
          	<password>${account2.password}</password>
        </AuthRequest>
      </t:request>
      <t:response>
        	<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
        	<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
      </t:response>
    </t:test>
    
    <t:test id="test 4">
      <t:request>
        <CheckRecurConflictsRequest xmlns="urn:zimbraMail" s="1230768000000" e="1262304000000" all="1">
          <comp>
            <s tz="Asia/Colombo" d="20090105"/>
            <e tz="Asia/Colombo" d="20090106"/>
            <recur>
              <add>
                <rule freq="WEE">
                  <count num="52"></count>
                  <interval ival="1"></interval>
                </rule>
              </add>
            </recur>
          </comp>
          <except>
            <exceptId d=""/>
            <s d="20090113"/>
            <e d="20090115"/>
          </except>
          <cancel>
            <exceptId tz="Asia/Colombo" d="20090119"/>
          </cancel>
          <usr name="user2@wii.zimbra.com"/>
          <usr name="user1@wii.zimbra.com"/>
        </CheckRecurConflictsRequest>
      </t:request>
      <t:response>
         <t:select path= "//zimbra:Code" match ="^service.INVALID_REQUEST"/>
      </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="CheckRecurConflictsRequest9" type="bhr" areas="Calendar">
    <t:objective>Send CheckRecurConflictsRequest with invalid value for exceptId</t:objective>
    <t:steps>1. Login as user 
             2. Send CheckRecurConflictsRequest with invalid value for exceptId - service.INVALID_REQUEST
    </t:steps>


	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
	<!-- Login as account2 -->
    <t:test id="login account2">
      <t:request>
        <AuthRequest xmlns="urn:zimbraAccount">
          	<account by="name">${account2.name}</account>
          	<password>${account2.password}</password>
        </AuthRequest>
      </t:request>
      <t:response>
        	<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
        	<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
      </t:response>
    </t:test>
    
    <t:test id="test 4">
      <t:request>
        <CheckRecurConflictsRequest xmlns="urn:zimbraMail" s="1230768000000" e="1262304000000" all="1">
          <comp>
            <s tz="Asia/Colombo" d="20090105"/>
            <e tz="Asia/Colombo" d="20090106"/>
            <recur>
              <add>
                <rule freq="WEE">
                  <count num="52"></count>
                  <interval ival="1"></interval>
                </rule>
              </add>
            </recur>
          </comp>
          <except>
            <exceptId d="aaa"/>
            <s d="20090113"/>
            <e d="20090115"/>
          </except>
          <cancel>
            <exceptId tz="Asia/Colombo" d="20090119"/>
          </cancel>
          <usr name="user2@wii.zimbra.com"/>
          <usr name="user1@wii.zimbra.com"/>
        </CheckRecurConflictsRequest>
      </t:request>
      <t:response>
         <t:select path= "//zimbra:Code" match ="^service.INVALID_REQUEST"/>
      </t:response>
    </t:test>
    
</t:test_case>


</t:tests>
