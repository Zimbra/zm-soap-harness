  <t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:property name="account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="timezone.pst" value="(GMT-08.00) Pacific Time (US &amp; Canada) / Tijuana"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>




<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test id="create_account2" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>

    <t:test id="create_account3" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>


</t:test_case>


<t:test_case testcaseid="ForwardAppointmentRequest_Basic_01" type="functional" areas="Calendar">
    <t:objective>Organizer forwards an appointment to another user.</t:objective>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
	<t:property name="appointment.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="appointment.content" value=".content${TIME}${COUNTER}"/>
	<t:property name="time.20141201120000.gmt" value="1417435200000"/>
   
    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv > 
                    	<comp method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" >
	                        <s d="${ICALTIME[${time.20141201120000.gmt}]}" />  
	                        <e d="${ICALTIME(+1h)[${time.20141201120000.gmt}]}"/>  
	                        <or a="${account1.name}"/>
                        </comp>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">
            	<t:select attr="apptId" set="appointment.apptId"/>
            </t:select>
       </t:response>
    </t:test>

	<t:property name="forward.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="forward.content" value=".content${TIME}${COUNTER}"/>

    <t:test>
        <t:request>
            <ForwardAppointmentRequest xmlns="urn:zimbraMail" id="${appointment.apptId}">
                <m>
					<e t="t" a="${account2.name}"/>
					<su>${forward.subject}</su>
					<mp ct="text/plain">
					    <content>${forward.content}</content>
					</mp>
                </m>
            </ForwardAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ForwardAppointmentResponse">
            </t:select>
       </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

   <t:test required="true">
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${forward.subject})</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse">
            	<t:select path="//mail:m" attr="id" set="message.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m">
            </t:select>
        </t:response>
    </t:test>

</t:test_case>
<t:test_case testcaseid="ForwardAppointmentRequest_Basic_02" type="smoke" areas="Calendar">
    <t:objective>Invitee forwards an appointment to another user.</t:objective>
    <t:steps>
		1. Login to account1
		2. Create an appointment invite account2.
		3. Login to account2
		4. Accept the invitation
		5. Forward the appointment to account3.
		6. Login to account3
		7. Verify it get forwarded appointment.
		8. Accept the invitation.
		9. Login to account1
		10. Verify appointment is updated with account3.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
	<t:property name="appointment.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="appointment.content" value=".content${TIME}${COUNTER}"/>
	<t:property name="time.20110630000000.gmt" value="1309392000000"/>
   	
    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv > 
                    	<comp method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" >
                    		<at a="${account2.name}" role="REQ" ptst="NE" rsvp="1"/>
	                        <s d="${ICALTIME[${time.20110630000000.gmt}]}"/>  
	                        <e d="${ICALTIME(+1h)[${time.20110630000000.gmt}]}"/>  
	                        <or a="${account1.name}"/>
                        </comp>
                    </inv>
                    <e a="${account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">
            	<t:select attr="apptId" set="appointment.apptId"/>
            	<t:select attr="invId" set="account1.appointment.invId"/>
            </t:select>
       </t:response>
    </t:test>
    
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>    


	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="account2.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    <t:test required="true" >
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${TIME(-1d)[${time.20110630000000.gmt}]}" calExpandInstEnd="${TIME(+1d)[${time.20110630000000.gmt}]}" types="appointment">
				<query>inid:${account2.calendar.folder.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse/mail:appt[@name='${appointment.subject}']">
            	<t:select attr="invId" set="account2.appt1.invId"/>
            	<t:select attr="compNum" set="account2.appt1.compNum"/>
            	<t:select attr="name" set="account2.appt1.name"/>
            	<t:select path="//mail:or" attr="a" set="account2.appt1.or"/>
            </t:select> 
        </t:response>
    </t:test>    

	<t:property name="forward.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="forward.content" value=".content${TIME}${COUNTER}"/>

    <t:test>
        <t:request>
            <ForwardAppointmentRequest xmlns="urn:zimbraMail" id="${account2.appt1.invId}">
                <m>
					<e t="t" a="${account3.name}"/>
					<su>${forward.subject}</su>
					<mp ct="text/plain">
					    <content>${forward.content}</content>
					</mp>
                </m>
            </ForwardAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ForwardAppointmentResponse">
            </t:select>
       </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

   <t:test required="true">
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${forward.subject})</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse">
            	<t:select path="//mail:m" attr="id" set="message.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
             <t:select path="//mail:GetMsgResponse/mail:m/mail:inv/mail:comp" attr="compNum" set="account3.compNum"/>
             <t:select path="//mail:GetMsgResponse/mail:m/mail:inv/mail:comp" attr="apptId" set="account3.apptId" />
            
        </t:response>
    </t:test>
	
	<t:property name="verb.response" value="ACCEPT"/>
	<t:property name="verb.expected" value="AC"/>
	
	<t:test>
        <t:request>
			<SendInviteReplyRequest xmlns="urn:zimbraMail" verb="${verb.response}" id="${message.id}" compNum="${account3.compNum}" updateOrganizer="TRUE">
				<m rt="r">
					<e t="t" a="${account1.name}"/>
					<su>${verb.response}: ${appointment.subject}</su>
					<mp ct="text/plain">
						<content>${verb.response}: ${account2.appt1.name}</content>
					</mp>
				</m>
			</SendInviteReplyRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendInviteReplyResponse"/>
        </t:response>
    </t:test>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.appointment.invId}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
             <t:select path="//mail:GetMsgResponse/mail:m/mail:inv/mail:comp/mail:at[@a='${account3.name}']" attr="ptst" set="AC"/>
        </t:response>
    </t:test>    
</t:test_case>

<t:test_case testcaseid="ForwardAppointmentRequest_Basic_03" type="smoke" areas="Calendar" bugids="45971">
    <t:objective>Forward appointment request with out To address.</t:objective>
    <t:steps>
	1. Login to account1
	2. Create an appointment. 
	3. Forward the appointment without giving any to address
	4. It should give error service.INVALID_REQUEST.
	</t:steps>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
	<t:property name="appointment.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="appointment.content" value=".content${TIME}${COUNTER}"/>
	<t:property name="time.20141201120000.gmt" value="1417435200000"/>
   
    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv > 
                    	<comp method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" >
	                        <s d="${ICALTIME[${time.20141201120000.gmt}]}"/>  
	                        <e d="${ICALTIME(+1h)[${time.20141201120000.gmt}]}"/>  
	                        <or a="${account1.name}"/>
                        </comp>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                     <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">
            	<t:select attr="apptId" set="appointment.apptId"/>
            </t:select>
       </t:response>
    </t:test>

	<t:property name="forward.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="forward.content" value="content${TIME}${COUNTER}"/>

    <t:test>
        <t:request>
            <ForwardAppointmentRequest xmlns="urn:zimbraMail" id="${appointment.apptId}">
                <m>
					<su>${forward.subject}</su>
					<mp ct="text/plain">
					    <content>${forward.content}</content>
					</mp>
                </m>
            </ForwardAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.INVALID_REQUEST">
            </t:select>
       </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ForwardAppointmentRequest_Basic_04" type="smoke" areas="Calendar">
    <t:objective>Invitee forwards all instances of recurring appointment to another user.</t:objective>
    <t:steps>
		1. Login to account1
		2. Create an recurring appointment invite account2.
		3. Login to account2
		4. Accept the invitation
		5. Forward the entire appointment to account3.
		6. Login to account3
		7. Verify it gets forwarded appointment.
		8. Accept the invitation.
		9. Verify it shows busy for all instances of recurring appointment in account3.
		9. Login to account1
		10. Verify appointment is updated with account3.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
	<t:property name="appointment.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment.location" value="Location of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment.content" value="Content of the message${TIME}.${COUNTER}"/>

	<t:property name="time.20180101120000.gmt" value="1514808000000"/>
	<t:property name="time.20180101120000.pst" value="${TIME(-8h)[${time.20180101120000.gmt}]}"/>

    <t:test>
        <t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m >
					<inv>
						<comp status="CONF" fb="B" transp="O" allDay="0" name="${appointment.subject}">
							<s d="${ICALTIME[${time.20180101120000.pst}]}" tz="${timezone.pst}" />
							<e  d="${ICALTIME(+3h)[${time.20180101120000.pst}]}" tz="${timezone.pst}"  />
							<or a="${account1.name}"/>
							<at a="${account2.name}" role="REQ" ptst="NE" rsvp="1"/>
							<recur>
								<add>
									<rule freq="DAI">
										<interval ival="1"/>
										<count num="5"/>
									</rule>
								</add>
							</recur>
						</comp>
					</inv>
					<e a="${account2.name}" t="t"/>
					<su>${appointment.subject}</su>
					<mp ct="text/plain">
						<content>${appointment.content}</content>
					</mp>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">
            	<t:select attr="calItemId" set="account1.appt.calItemId"/>
            	<t:select attr="invId" set="account1.appt.invId"/>
            	<t:select attr="apptId" set="account1.appt.apptId"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.appt.invId}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${account1.appt.invId}']">
        		<t:select path="//mail:comp">
        			<t:select path="//mail:s" attr="d" match="${ICALTIME[${time.20180101120000.pst}]}"/>
        			<t:select path="//mail:e" attr="d" match="${ICALTIME(+3h)[${time.20180101120000.pst}]}"/>
            		<t:select path="//mail:recur">
            			<t:select path="//mail:rule" attr="freq" match="DAI">
            				<t:select path="//mail:interval" attr="ival" match="1"/>
            				<t:select path="//mail:count" attr="num" match="5"/>
        				</t:select>
            		</t:select>
        		</t:select>
            </t:select>
        </t:response>
    </t:test>
	
	<t:property name="instance0.s" value="${TIME[${time.20180101120000.gmt}]}"/>
	<t:property name="instance0.e" value="${TIME(+3h)[${time.20180101120000.gmt}]}"/>
	<t:property name="instance1.s" value="${TIME(+1d)[${time.20180101120000.gmt}]}"/>
	<t:property name="instance1.e" value="${TIME(+1d)(+3h)[${time.20180101120000.gmt}]}"/>
	<t:property name="instance2.s" value="${TIME(+2d)[${time.20180101120000.gmt}]}"/>
	<t:property name="instance2.e" value="${TIME(+2d)(+3h)[${time.20180101120000.gmt}]}"/>
	<t:property name="instance3.s" value="${TIME(+3d)[${time.20180101120000.gmt}]}"/>
	<t:property name="instance3.e" value="${TIME(+3d)(+3h)[${time.20180101120000.gmt}]}"/>
	<t:property name="instance4.s" value="${TIME(+4d)[${time.20180101120000.gmt}]}"/>
	<t:property name="instance4.e" value="${TIME(+4d)(+3h)[${time.20180101120000.gmt}]}"/>

    
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>    


	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="account2.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    <t:test required="true" >
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${instance0.s}" calExpandInstEnd="${instance0.e}" types="appointment">
				<query>inid:${account2.calendar.folder.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse/mail:appt[@name='${appointment.subject}']">
            	<t:select attr="invId" set="account2.appt.invId"/>
            	<t:select attr="compNum" set="account2.appt.compNum"/>
            	<t:select attr="name" set="account2.appt.name"/>
            	<t:select path="//mail:or" attr="a" set="account2.appt.or"/>
            </t:select> 
        </t:response>
    </t:test>    

	<t:property name="forward.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="forward.content" value="content${TIME}${COUNTER}"/>

    <t:test>
        <t:request>
            <ForwardAppointmentRequest xmlns="urn:zimbraMail" id="${account2.appt.invId}">
                <m>
					<e t="t" a="${account3.name}"/>
					<su>${forward.subject}</su>
					<mp ct="text/plain">
					    <content>${forward.content}</content>
					</mp>
                </m>
            </ForwardAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ForwardAppointmentResponse">
            </t:select>
       </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

   <t:test required="true">
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${forward.subject})</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse">
            	<t:select path="//mail:m" attr="id" set="message.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
             <t:select path="//mail:GetMsgResponse/mail:m/mail:inv/mail:comp" attr="compNum" set="account3.compNum"/>
             <t:select path="//mail:GetMsgResponse/mail:m/mail:inv/mail:comp" attr="apptId" set="account3.apptId" />
            
        </t:response>
    </t:test>
	
	<t:property name="verb.response" value="ACCEPT"/>
	<t:property name="verb.expected" value="AC"/>
	
	<t:test>
        <t:request>
			<SendInviteReplyRequest xmlns="urn:zimbraMail" verb="${verb.response}" id="${message.id}" compNum="${account3.compNum}" updateOrganizer="TRUE">
				<m rt="r">
					<e t="t" a="${account1.name}"/>
					<su>${verb.response}: ${appointment.subject}</su>
					<mp ct="text/plain">
						<content>${verb.response}: ${account2.appt.name}</content>
					</mp>
				</m>
			</SendInviteReplyRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendInviteReplyResponse"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${TIME(-1d)[${time.20180101120000.pst}]}" e="${TIME(+10d)[${time.20180101120000.pst}]}"  uid="${account3.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr[@id='${account3.id}']">
            	<t:select path="//mail:b[@s='${instance0.s}']" attr="e" match="${instance0.e}"/>
            	<t:select path="//mail:b[@s='${instance1.s}']" attr="e" match="${instance1.e}"/>
            	<t:select path="//mail:b[@s='${instance2.s}']" attr="e" match="${instance2.e}"/>
            	<t:select path="//mail:b[@s='${instance3.s}']" attr="e" match="${instance3.e}"/>
            	<t:select path="//mail:b[@s='${instance4.s}']" attr="e" match="${instance4.e}"/>
            </t:select>       
        </t:response>
    </t:test>
    

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.appt.invId}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
             <t:select path="//mail:GetMsgResponse/mail:m/mail:inv/mail:comp/mail:at[@a='${account3.name}']" attr="ptst" match="AC"/>
        </t:response>
    </t:test>    
</t:test_case>
<t:test_case testcaseid="ForwardAppointmentRequest_Basic_05" type="functional" areas="Calendar" bugids="47823">
    <t:objective>Invitee forwards single instance of recurring appointment to another user.</t:objective>
    <t:steps>
		1. Login to account1
		2. Create an recurring appointment invite account2.
		3. Login to account2
		4. Accept the invitation
		5. Forward the an instance of appointment to account3.
		6. Login to account3
		7. Verify it gets forwarded appointment.
		8. Accept the invitation.
		9. Verify it shows busy for particular instances of recurring appointment in account3.
		10. Login to account1
		11. Verify appointment is updated with account3.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
	<t:property name="appointment.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment.location" value="Location of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment.content" value="Content of the message${TIME}.${COUNTER}"/>
	<t:property name="appointment.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment.location" value="Location of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment.content" value="Content of the message${TIME}.${COUNTER}"/>

	<t:property name="time.20191201120000.gmt" value="1575201600000"/>
	<t:property name="time.20191201120000.pst" value="${TIME(-8h)[${time.20191201120000.gmt}]}"/>

    <t:test>
        <t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m >
					<inv>
						<comp status="CONF" fb="B" transp="O" allDay="0" name="${appointment.subject}">
							<s d="${ICALTIME[${time.20191201120000.pst}]}" tz="${timezone.pst}" />
							<e  d="${ICALTIME(+3h)[${time.20191201120000.pst}]}" tz="${timezone.pst}"  />
							<or a="${account1.name}"/>
							<at a="${account2.name}" role="REQ" ptst="NE" rsvp="1"/>
							<recur>
								<add>
									<rule freq="DAI">
										<interval ival="1"/>
										<count num="5"/>
									</rule>
								</add>
							</recur>
						</comp>
					</inv>
					<e a="${account2.name}" t="t"/>
					<su>${appointment.subject}</su>
					<mp ct="text/plain">
						<content>${appointment.content}</content>
					</mp>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">
            	<t:select attr="calItemId" set="account1.appt.calItemId"/>
            	<t:select attr="invId" set="account1.appt.invId"/>
            	<t:select attr="apptId" set="account1.appt.apptId"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.appt.invId}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${account1.appt.invId}']">
        		<t:select path="//mail:comp">
        			<t:select path="//mail:s" attr="d" match="${ICALTIME[${time.20191201120000.pst}]}"/>
        			<t:select path="//mail:e" attr="d" match="${ICALTIME(+3h)[${time.20191201120000.pst}]}"/>
            		<t:select path="//mail:recur">
            			<t:select path="//mail:rule" attr="freq" match="DAI">
            				<t:select path="//mail:interval" attr="ival" match="1"/>
            				<t:select path="//mail:count" attr="num" match="5"/>
        				</t:select>
            		</t:select>
        		</t:select>
            </t:select>
        </t:response>
    </t:test>
	
	<t:property name="instance0.s" value="${TIME[${time.20191201120000.gmt}]}"/>
	<t:property name="instance0.e" value="${TIME(+3h)[${time.20191201120000.gmt}]}"/>
	<t:property name="instance1.s" value="${TIME(+1d)[${time.20191201120000.gmt}]}"/>
	<t:property name="instance1.e" value="${TIME(+1d)(+3h)[${time.20191201120000.gmt}]}"/>
	<t:property name="instance2.s" value="${TIME(+2d)[${time.20191201120000.gmt}]}"/>
	<t:property name="instance2.e" value="${TIME(+2d)(+3h)[${time.20191201120000.gmt}]}"/>
	<t:property name="instance3.s" value="${TIME(+3d)[${time.20191201120000.gmt}]}"/>
	<t:property name="instance3.e" value="${TIME(+3d)(+3h)[${time.20191201120000.gmt}]}"/>
	<t:property name="instance4.s" value="${TIME(+4d)[${time.20191201120000.gmt}]}"/>
	<t:property name="instance4.e" value="${TIME(+4d)(+3h)[${time.20191201120000.gmt}]}"/>

    
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>    


	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="account2.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    <t:test required="true" >
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${instance0.s}" calExpandInstEnd="${instance0.e}" types="appointment">
				<query>inid:${account2.calendar.folder.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse/mail:appt[@name='${appointment.subject}']">
            	<t:select attr="invId" set="account2.appt.invId"/>
            	<t:select attr="compNum" set="account2.appt.compNum"/>
            	<t:select attr="name" set="account2.appt.name"/>
            	<t:select path="//mail:or" attr="a" set="account2.appt.or"/>
            </t:select> 
        </t:response>
    </t:test>    

	<t:property name="forward.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="forward.content" value="content${TIME}${COUNTER}"/>

    <t:test>
        <t:request>
            <ForwardAppointmentRequest xmlns="urn:zimbraMail" id="${account2.appt.invId}">
                <exceptId  tz="${timezone.pst}" d="20191203T040000"/>
                <m>
					<e t="t" a="${account3.name}"/>
					<su>${forward.subject}</su>
					<mp ct="text/plain">
					    <content>${forward.content}</content>
					</mp>
                </m>
            </ForwardAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ForwardAppointmentResponse">
            </t:select>
       </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

   <t:test required="true">
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${forward.subject})</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse">
            	<t:select path="//mail:m" attr="id" set="message.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
             <t:select path="//mail:GetMsgResponse/mail:m/mail:inv/mail:comp" attr="compNum" set="account3.compNum"/>
             <t:select path="//mail:GetMsgResponse/mail:m/mail:inv/mail:comp" attr="apptId" set="account3.apptId" />
            
        </t:response>
    </t:test>
	
	<t:property name="verb.response" value="ACCEPT"/>
	<t:property name="verb.expected" value="AC"/>
	
	<t:test>
        <t:request>
			<SendInviteReplyRequest xmlns="urn:zimbraMail" verb="${verb.response}" id="${message.id}" compNum="${account3.compNum}" updateOrganizer="TRUE">
				<m rt="r">
					<e t="t" a="${account1.name}"/>
					<su>${verb.response}: ${appointment.subject}</su>
					<mp ct="text/plain">
						<content>${verb.response}: ${account2.appt.name}</content>
					</mp>
				</m>
			</SendInviteReplyRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendInviteReplyResponse"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
           <GetFreeBusyRequest xmlns="urn:zimbraMail" s="${TIME(-1d)[${time.20191201120000.pst}]}" e="${TIME(+6d)[${time.20191201120000.pst}]}"  uid="${account3.id}"/>
        </t:request>
        <t:response>      
            <t:select path="//mail:GetFreeBusyResponse/mail:usr[@id='${account3.id}']">
            	<t:select path="//mail:b[@s='${instance0.s}']" emptyset="1"/>
            	<t:select path="//mail:b[@s='${instance1.s}']" emptyset="1"/>
            	<t:select path="//mail:b[@s='${instance2.s}']" attr="e" match="${instance2.e}"/>
            	<t:select path="//mail:b[@s='${instance3.s}']" emptyset="1"/>
            	<t:select path="//mail:b[@s='${instance4.s}']" emptyset="1"/>
            </t:select>       
        </t:response>
    </t:test>
    

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
      
    
    <t:test >
        <t:request>       
             <GetAppointmentRequest id="${account1.appt.apptId}" xmlns="urn:zimbraMail">
            </GetAppointmentRequest>
        </t:request>
        <t:response>
        	 
             <!--<t:select path="//mail:GetMsgResponse/mail:m/mail:inv/mail:comp/mail:at[@a='${account3.name}']" attr="ptst" match="AC"/>    -->
             <t:select path="//mail:reply[@at='${account3.name}']" attr="ptst" match="AC"/>      
        </t:response>
    </t:test>
</t:test_case>
</t:tests>

