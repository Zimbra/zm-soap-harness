<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="customTimezone_basic_AccountSetup" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>


</t:test_case>


<t:test_case testcaseid="customTimezone_basic_01" type="bhr">
    <t:objective>Use CreateAppointmentRequest to create a custom timezone - check the appointment settings</t:objective>
	<t:steps>
	1. Use CreateAppointmentRequest to create a custom timezone
	2. Use GetAppointmentRequest to verify the settings on the timezone
	</t:steps>
	    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
	<t:property name="timezone1.name" value="timezone.${TIME}.${COUNTER}"/>
	<t:property name="timezone.stdoff" value="60"/>	<!-- 60 minutes ahead of GMT (GMT+01.00) -->
	

	<t:property name="appointment1.subject" value="subject1.${TIME}.${COUNTER}"/>
	<t:property name="appointment1.start.gmt" value="1263902400000"/>							<!-- 01/19/2010 12:00:00 UTC time -->
	<t:property name="appointment1.start.tz" value="${TIME(+1h)[${appointment1.start.gmt}]}"/>	<!-- 01/19/2010 13:00:00 local time -->

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m d="${TIME}">
					<inv >
       					<tz id="${timezone1.name}" stdoff="${timezone.stdoff}"/>
						<comp method="REQUEST" type="event" fb="B" transp="O" status="CONF" allDay="0" name="${appointment1.subject}">
							<s tz="${timezone1.name}" d="${ICALTIME[${appointment1.start.tz}]}"/>
							<e tz="${timezone1.name}" d="${ICALTIME(+1h)[${appointment1.start.tz}]}"/>
							<or a="${account1.name}"/>
						</comp>
					</inv>
					<mp ct="multipart/alternative">
						<mp ct="text/plain"><content/></mp>
						<mp ct="text/html"><content><html><body></body></html></content></mp>
					</mp>
					<su>${appointment1.subject}</su>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="apptId" set="appointment1.apptId"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request> 
            <GetAppointmentRequest xmlns="urn:zimbraMail" id="${appointment1.apptId}"/>
        </t:request>
        <t:response>
            <t:select path="//mail:GetAppointmentResponse/mail:appt">
            	<t:select path="//mail:tz" attr="stdoff" match="${timezone.stdoff}"/>
            	<t:select path="//mail:tz" attr="dayoff" emptyset="1"/>
            	<t:select path="//mail:tz/mail:standard"  emptyset="1"/>
            	<t:select path="//mail:tz/mail:daylight"  emptyset="1"/>
				<!-- As per bug 33396 comment #1 If the client-supplied TZID is not listed in timezones.ics, we look 
        at its definition to map it to an exact match. Hence for this test case the mathced TZ is returned instead of custom TZ. -->
            	<t:select path="//mail:s[@tz='Africa/Algiers']" attr="d" match="${ICALTIME[${appointment1.start.tz}]}"/>
            	<t:select path="//mail:e[@tz='Africa/Algiers']" attr="d" match="${ICALTIME(+1h)[${appointment1.start.tz}]}"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="customTimezone_basic_02" type="bhr" bugids="13949">
    <t:objective>Create an appointment (standard time) with a custom timezone offset (stdoff and dayoff) - check GMT setting of the appointment</t:objective>
	<t:steps>
	1. Define a custom timezone:
		A. Standard time is +1 hour from GMT, Ends April 1
		B. Savings time is +2 hours from GMT, Ends November1
	2. Create an appointment in the timezone, Feb 1 (Standard Time)
	3. Get the appointment.  Verify the local start/end times
	4. Get the appointment summaries.  Verify the gmt start/end times
	</t:steps>
	    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
	<t:property name="timezone2.name" value="timezone2.${TIME}.${COUNTER}"/>
	<t:property name="timezone.stdoff" value="60"/>		<!-- Standard time: 60 minutes ahead of GMT (GMT+01.00) -->
	<t:property name="timezone.dayoff" value="120"/>	<!-- Savings time: 120 minutes ahead of GMT (GMT+02.00) -->
	

	<t:property name="appointment2.subject" value="subject2.${TIME}.${COUNTER}"/>
	<t:property name="appointment2.start.gmt" value="1265025600000"/>							<!-- 02/01/2010 12:00:00 UTC time -->
	<t:property name="appointment2.start.tz" value="${TIME(+1h)[${appointment2.start.gmt}]}"/>	<!-- 02/01/2010 13:00:00 local time -->

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m d="${TIME}">
					<inv >
       					<tz id="${timezone2.name}" stdoff="${timezone.stdoff}" dayoff="${timezone.dayoff}">
       						<daylight mon="1" week="1" wkday="5" hour="3" min="4" sec="5"/>
       						<standard mon="6" week="1" wkday="7" hour="8" min="9" sec="10"/>
           				</tz>
						<comp method="REQUEST" type="event" fb="B" transp="O" status="CONF" allDay="0" name="${appointment2.subject}">
							<s tz="${timezone2.name}" d="${ICALTIME[${appointment2.start.tz}]}"/>
							<e tz="${timezone2.name}" d="${ICALTIME(+1h)[${appointment2.start.tz}]}"/>
							<or a="${account1.name}"/>
						</comp>
					</inv>
					<mp ct="multipart/alternative">
						<mp ct="text/plain"><content/></mp>
						<mp ct="text/html"><content><html><body></body></html></content></mp>
					</mp>
					<su>${appointment2.subject}</su>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="apptId" set="appointment.apptId"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request> 
            <GetAppointmentRequest xmlns="urn:zimbraMail" id="${appointment.apptId}"/>
        </t:request>
        <t:response>
            <t:select path="//mail:GetAppointmentResponse/mail:appt">
            	<t:select path="//mail:tz" attr="id" match="${timezone2.name}"/>
            	<t:select path="//mail:tz" attr="stdoff" match="${timezone.stdoff}"/>
            	<t:select path="//mail:tz" attr="dayoff" match="${timezone.dayoff}"/>
            	<t:select path="//mail:tz/mail:daylight">
            		<t:select attr="mon" match="1"/>	
            		<t:select attr="wkday" match="5"/>
            		<t:select attr="week" match="1"/>
            		<t:select attr="hour" match="3"/>
            		<t:select attr="min" match="4"/>
            		<t:select attr="sec" match="5"/>
            	</t:select>
            	<t:select path="//mail:tz/mail:standard">
            		<t:select attr="mon" match="6"/>
            		<t:select attr="wkday" match="7"/>
            		<t:select attr="week" match="1"/>
            		<t:select attr="hour" match="8"/>
            		<t:select attr="min" match="9"/>
            		<t:select attr="sec" match="10"/>
            	</t:select>
            	<!--  Changed wkday to 5 because in 2012 7 june is on Thus so wkday = 5  -->
            	<t:select path="//mail:s[@tz='${timezone2.name}']" attr="d" match="${ICALTIME[${appointment2.start.tz}]}"/>
            	<t:select path="//mail:e[@tz='${timezone2.name}']" attr="d" match="${ICALTIME(+1h)[${appointment2.start.tz}]}"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="customTimezone_basic_03" type="sanity">
	<t:objective>Create an appointment (standard time) with a custom timezone offset (stdoff and dayoff) - check GMT setting of the appointment</t:objective>
	<t:steps>
	1. Define a custom timezone:
		A. Standard time is +1 hour from GMT.
		B. Savings time is +2 hours from GMT.
	2. Create an appointment in the timezone, 03/03/2008 (Standard Time).
	3. Get the appointment and verify the local and GMT start/end times.
	</t:steps>
	    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
	<t:property name="timezone3.name" value="timezone3.${TIME}.${COUNTER}"/>
	<t:property name="timezone.stdoff" value="60"/>		<!-- Standard time: 60 minutes ahead of GMT (GMT+01.00) -->
	<t:property name="timezone.dayoff" value="120"/>	<!-- Savings time: 120 minutes ahead of GMT (GMT+02.00) -->
	

	<t:property name="appointment3.subject" value="subject3.${TIME}.${COUNTER}"/>
	<t:property name="appointment3.start.gmt" value="1204502400000"/>							<!-- 03/03/2008 00:00:00 UTC time -->
	<t:property name="appointment3.start.tz" value="${TIME(+1h)[${appointment3.start.gmt}]}"/>	<!-- 03/03/2008 13:00:00 local time -->

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m d="${TIME}">
					<inv >
       					<tz id="${timezone3.name}" stdoff="${timezone.stdoff}" dayoff="${timezone.dayoff}">
       						<daylight mon="1" week="1" wkday="5" hour="3" min="4" sec="5"/>
       						<standard mon="6" week="1" wkday="5" hour="8" min="9" sec="10"/>
           				</tz>
						<comp method="REQUEST" type="event" fb="B" transp="O" status="CONF" allDay="0" name="${appointment3.subject}">
							<s tz="${timezone3.name}" d="${ICALTIME[${appointment3.start.tz}]}"/>
							<e tz="${timezone3.name}" d="${ICALTIME(+1h)[${appointment3.start.tz}]}"/>
							<or a="${account1.name}"/>
						</comp>
					</inv>
					<mp ct="multipart/alternative">
						<mp ct="text/plain"><content/></mp>
						<mp ct="text/html"><content><html><body></body></html></content></mp>
					</mp>
					<su>${appointment3.subject}</su>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="apptId" set="appointment3.apptId"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request> 
            <GetAppointmentRequest xmlns="urn:zimbraMail" id="${appointment3.apptId}"/>
        </t:request>
        <t:response>
            <t:select path="//mail:GetAppointmentResponse/mail:appt">
            	<t:select path="//mail:tz" attr="id" match="${timezone3.name}"/>
            	<t:select path="//mail:tz" attr="stdoff" match="${timezone.stdoff}"/>
            	<t:select path="//mail:tz" attr="dayoff" match="${timezone.dayoff}"/>
            	<t:select path="//mail:tz/mail:daylight">
            		<t:select attr="mon" match="1"/>
            		<t:select attr="wkday" match="5"/>
            		<t:select attr="week" match="1"/>
            		<t:select attr="hour" match="3"/>
            		<t:select attr="min" match="4"/>
            		<t:select attr="sec" match="5"/>
            	</t:select>
            	<t:select path="//mail:tz/mail:standard">
            		<t:select attr="mon" match="6"/>
            		<t:select attr="wkday" match="5"/>
            		<t:select attr="week" match="1"/>
            		<t:select attr="hour" match="8"/>
            		<t:select attr="min" match="9"/>
            		<t:select attr="sec" match="10"/>
            	</t:select>
            	<t:select path="//mail:s[@tz='${timezone3.name}']" attr="d" match="${ICALTIME[${appointment3.start.tz}]}"/>
            	<t:select path="//mail:e[@tz='${timezone3.name}']" attr="d" match="${ICALTIME(+1h)[${appointment3.start.tz}]}"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>

</t:tests>