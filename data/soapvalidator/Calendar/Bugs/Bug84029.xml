<t:tests xmlns:t="urn:zimbraTestHarness">
    
<t:property name="account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>    

<t:test_case testcaseid="Ping" type="always">
    <t:objective>Basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>
 
<t:test_case testcaseid="bug84029" type="always" bugids="84029">
    <t:objective>Create test account</t:objective>
    <t:steps>
        1. Login to admin.
        2. Create accounts
    </t:steps>

    <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder/mail:folder[@name='${globals.calendar}']" attr="id" set="account1.folder.calendar"/>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="account1.folder.root"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="bug84029" type="bhr" bugids="84029">
    <t:objective>Cannot create an annual recurrence with start date before 1870</t:objective>
    <t:steps>
        1. Login as account1.
        2. Create Annual recurrence meeting starting date of 1870
    </t:steps>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:property name="appt.subject"		value="subject.${TIME}.${COUNTER}"/>
	<t:property name="appt.timezone"	value="(GMT-05.00) Eastern Time (US &amp; Canada)"/>
	<t:property name="appt.start.gmt"	value="18700720T180000"/> <!-- 07/21/1870 3:30:00 UTC time -->
	<t:property name="appt2.start.gmt"	value="18700720T190000"/> <!-- 07/21/1870 4:30:00 UTC time -->
	
	<t:property name="appt.start.tz"	value="${appt.start.gmt}"/>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m d="${TIME}">
					<inv >
						<comp method="REQUEST" type="event" fb="B" transp="O" status="CONF" allDay="0" name="${appt.subject}">
							<s d="${appt.start.gmt}" tz="${appt.timezone}"/>
							<e d="${appt2.start.gmt}" tz="${appt.timezone}"/>
							<or a="${account1.name}"/>
							<recur>
								<add>
									<rule freq="YEA">
										<interval ival="1"/>
										<count num="5"/>
									</rule>
								</add>
							</recur>
						</comp>						
					</inv>
					<mp ct="multipart/alternative">
						<mp ct="text/plain"><content/></mp>
						<mp ct="text/html"><content><html><body></body></html></content></mp>
					</mp>
					<su>${appt.subject}</su>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
                <t:select path="//mail:CreateAppointmentResponse">
            	<t:select attr="calItemId" set="appt1.calItemId"/>
            	<t:select attr="invId" set="appt1.invId"/>
            	<t:select attr="apptId" set="appt1.apptId"/>   
            </t:select>         
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${appt1.invId}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${appt1.invId}']">
        		<t:select path="//mail:comp">
        			<t:select path="//mail:s" attr="d" match="${appt.start.gmt}"/>
        			<t:select path="//mail:s" attr="tz" match="America/New_York"/>
        			<t:select path="//mail:e" attr="d" match="${appt2.start.gmt}"/>
        			<t:select path="//mail:e" attr="tz" match="America/New_York"/>
            		<t:select path="//mail:recur">
            		<t:select path="//mail:rule" attr="freq" match="YEA">
            		<t:select path="//mail:interval" attr="ival" match="1"/>
            		<t:select path="//mail:count" attr="num" match="5"/>
        				</t:select>
            		</t:select>
            	</t:select>
            </t:select>
        </t:response>
    </t:test>

    <t:test >
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" id="${appt1.apptId}"/>
        </t:request>
        <t:response>
            <t:select path = "//mail:GetAppointmentResponse">
            	<t:select path="//mail:appt" attr="id" match="${appt1.apptId}"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>
    

</t:tests>