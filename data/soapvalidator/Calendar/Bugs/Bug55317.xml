<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="test_account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account1.password" value="test123"/>
<t:property name="test_account2.password" value="test123"/>

<t:property name="calendar.verb1" value="ACCEPT"/>
<t:property name="calendar.verb2" value="DECLINE"/>
<t:property name="calendar.verb3" value="TENTATIVE"/>

<t:property name="calendar.comp1" value="0"/>
<t:property name="calendar.comp2" value="1"/>    

<t:property name="appointment.subject1" value="subject1 ${TIME}.${COUNTER}"/>
<t:property name="appointment.subject2" value="subject2 ${TIME}.${COUNTER}"/>
<t:property name="appointment.subject3" value="subject3 ${TIME}.${COUNTER}"/>
<t:property name="appointment.subject4" value="subject4 ${TIME}.${COUNTER}"/>
<t:property name="appointment.location" value="Location of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.content" value="Content of the message${TIME}.${COUNTER}"/>

<t:property name="tz.default" value="(GMT-08.00) Pacific Time (US &amp; Canada) / Tijuana"/>

<t:property name="Time1" value="${ICALTIME(+1h)}"/>
<t:property name="Time2" value="${ICALTIME(+2h)}"/>
<t:property name="Time3" value="${ICALTIME(+3h)}"/>
<t:property name="Time4" value="${ICALTIME(+4h)}"/>
<t:property name="Time5" value="${ICALTIME(+5h)}"/>
<t:property name="Time6" value="${ICALTIME(+6h)}"/>
<t:property name="Time7" value="${ICALTIME(+7h)}"/>
<t:property name="Time8" value="${ICALTIME(+8h)}"/>


<!-- Make sure that the range includes all created appointments -->
<t:property name="TimeRangeStart" value="${TIME(-2d)}"/>
<t:property name="TimeRangeFinish" value="${TIME(+2d)}"/>

<t:property name="test_acct1.server" value="NOT_DEFINED"/>
<t:property name="test_acct2.server" value="NOT_DEFINED"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct_setup1_sendInviteReply" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_test_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account1.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_account2" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${test_account2.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>

</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

<t:test_case testcaseid="bug55317" type="bhr" bugids="55317">
    <t:objective>Searching for appointments fails after recipient changes status</t:objective>
    <t:steps>
    1. User1 creates meeting request
	2. Login to user2 using ZWC
	3. Accept the appointment
	4. Search for "body" ... meeting displays
	5. Change the response to "Tentative" ... Search request doesn't return with appt
    </t:steps>
 
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject1}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${test_account2.name}"/>
                        <s d="${Time1}" tz="${tz.default}"/>  
                        <e d="${Time2}" tz="${tz.default}"/>  
                        <or a="${test_account1.name}"/>
                    </inv>
                    <e a="${test_account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject1}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse"/>
        </t:response>
    </t:test>

    <t:test required="true" >
        <t:request>
            <GetApptSummariesRequest xmlns="urn:zimbraMail" s="${TimeRangeStart}" e="${TimeRangeFinish}"/>
        </t:request>
        <t:response>
			 <t:select path = "//mail:GetApptSummariesResponse/mail:appt[@name='${appointment.subject1}']" attr="invId" set="test_account1.appointment1.id"/>
			 <t:select path = "//mail:GetApptSummariesResponse/mail:appt[@name='${appointment.subject1}']" attr="id" set="account1_appt1.id"/>
        </t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account2.name}</account>
                <password>${test_account2.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <GetApptSummariesRequest xmlns="urn:zimbraMail" s="${TimeRangeStart}" e="${TimeRangeFinish}"/>
        </t:request>
        <t:response>
			 <t:select path = "//mail:GetApptSummariesResponse/mail:appt[@name='${appointment.subject1}']" attr="invId" set="test_account2.appointment1.id"/>
			 <t:select path = "//mail:GetApptSummariesResponse/mail:appt[@name='${appointment.subject1}']" attr="id" set="account2_appt1.id"/>
       </t:response>
    </t:test>
        
    <t:test >
        <t:request>
            <SendInviteReplyRequest xmlns="urn:zimbraMail" id="${test_account2.appointment1.id}" compNum="0" verb="${calendar.verb1}" updateOrganizer="${globals.true}">
                <m origid="${test_account2.appointment1.id}" rt="r">
                    <e t="t" a="${test_account1.name}"/>
                    <su>${calendar.verb1}${appointment.subject1}</su>
                    <mp ct="text/plain">
                        <content>Yes, I will attend. </content>
                    </mp>
                </m>
            </SendInviteReplyRequest>
        </t:request>
        <t:response>
           <t:select path = "//mail:SendInviteReplyResponse" attr="apptId" match="${account2_appt1.id}"/>
        </t:response>
    </t:test>    

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
	
	<t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
        <t:test depends="sendInviteReplyRequest4a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${calendar.verb1}${appointment.subject1})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m/mail:su" match="${calendar.verb1}${appointment.subject1}"/>
        </t:response>
    </t:test>
    
       <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${TimeRangeStart}" calExpandInstEnd="${TimeRangeFinish}">
				<query>${appointment.content}</query>
			</SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:appt" attr="name" match="${appointment.subject1}"/>
        </t:response>
    </t:test>
    
    <t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account2.name}</account>
                <password>${test_account2.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
      <t:test id="sendInviteReplyRequest3b" >
        <t:request>
            <SendInviteReplyRequest xmlns="urn:zimbraMail" id="${test_account2.appointment1.id}" compNum="0" verb="${calendar.verb3}" updateOrganizer="${globals.true}">
                <m origid="${test_account2.appointment1.id}" rt="r">
                    <e t="t" a="${test_account1.name}"/>
                    <su>${calendar.verb3}${appointment.subject1}</su>
                    <mp ct="text/plain">
                        <content>I might attend. </content>
                    </mp>
                </m>
            </SendInviteReplyRequest>
        </t:request>
        <t:response>
           <t:select path = "//mail:SendInviteReplyResponse" attr="apptId" match="${account2_appt1.id}"/>
        </t:response>
    </t:test>
    
    <t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
	
	<t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    
 	 <t:test depends="sendInviteReplyRequest4a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${calendar.verb3}${appointment.subject1})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m/mail:su" match="${calendar.verb3}${appointment.subject1}"/>
        </t:response>
    </t:test>
    
     <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${TimeRangeStart}" calExpandInstEnd="${TimeRangeFinish}">
				<query>${appointment.subject1}</query>
			</SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:appt" attr="name" match="${appointment.subject1}"/>
        </t:response>
    </t:test>
    
       <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${TimeRangeStart}" calExpandInstEnd="${TimeRangeFinish}">
				<query>${appointment.content}</query>
			</SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:appt" attr="name" match="${appointment.subject1}"/>
        </t:response>
    </t:test>

</t:test_case>

</t:tests>
