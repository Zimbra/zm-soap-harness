<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="test_account1.name" value="test1${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account2.name" value="test2${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="appointment.subject1" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.location" value="Meeting Room 1"/>
<t:property name="appointment.content" value="Content of the message"/>

<t:property name="Time1" value="${ICALTIME(+30m)}"/>
<t:property name="Time2" value="${ICALTIME(+1h)}"/>
<t:property name="TimeRangeStart" value="${TIME-1d}"/>
<t:property name="TimeRangeFinish" value="${TIME(+2d)}"/>

<t:property name="grant.usr" value="usr"/>
<t:property name="rights.none" value=""/>
<t:property name="rights.read" value="r"/>
<t:property name="rights.write" value="w"/>
<t:property name="rights.insert" value="i"/>
<t:property name="rights.delete" value="d"/>
<t:property name="rights.administer" value="a"/>
<t:property name="rights.workflow" value="x"/>
<t:property name="rights.private" value="p"/>
<t:property name="rights.manager" value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}"/>
<t:property name="rights.managerwp" value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}${rights.private}"></t:property>

<t:property name="view.conversation" value="conversation"/>
<t:property name="view.message" value="message"/>
<t:property name="view.contact" value="contact"/>
<t:property name="view.appointment" value="appointment"/>
<t:property name="view.note" value="note"/>

<t:property name="op.grant" value="grant"/>



<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acctSetup1_appointment" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_test_account1" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>
    
    <t:test id="create_test_account1" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>
  
</t:test_case>


<t:test_case testcaseid = "bug_68676" type="bhr" areas="Calendar" bugids="68676">
    <t:objective>Verify DismissCalendarItemAlarmRequest returned with error - permission denied: cannot dismiss alarms of a shared calendar </t:objective>
    <t:steps>1. Log as user say user1
			 2. Create an appointment with Reminder
		     3. Share calendar with user2
		     4. Log in as user2 > mount user1's calendar
	         5. send DismissCalendarItemAlarmRequest to dissmiss the alarms.
    </t:steps>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder/mail:folder[@name='${globals.calendar}']" attr="id" set="organizer.folder.calendar"/>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="organizer.folder.root"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${organizer.folder.calendar}" op="${op.grant}">
                    <grant d="${test_account2.name}" gt="${grant.usr}" perm="${rights.manager}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action" attr="zid" set="folder.zid"/>
        </t:response>
    </t:test>	
    
 <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject1}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${test_account1.name}"/>
                        <s d="${Time1}"/>  
                        <e d="${Time2}"/>  
                        <or a="${test_account1.name}"/>
                        
                        <alarm action="DISPLAY">
                		  <trigger>
                    			<rel related="START" neg="1" m="30"/>
                  		  </trigger>
                  	      <desc>Reminder 2</desc>
                          <repeat count="2" m="29"/>
                       </alarm>
                    </inv>
                    <e a="${test_account1.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject1}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse" attr="invId" set="appointment1.id"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${TimeRangeStart}" calExpandInstEnd="${TimeRangeFinish}">
				<query>${appointment.subject1}(inid:10)</query>
			</SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:appt" attr="name" match="${appointment.subject1}"/>
        </t:response>
    </t:test>

   <t:property name="server.zimbraAccount" value="${test_acct2.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <!-- Get Folders in Invitee list and set the id-->
    <t:test required="true">
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="invitee.folder.root"/>
        </t:response>
    </t:test>
    
    	<!-- Mount the shared folder in invitees calendar root folder-->
    <t:test required="true">
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${invitee.folder.root}" name="Calendar.${TIME}.${COUNTER}" view="appointment" rid="${organizer.folder.calendar}" zid="${test_account1.id}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>        
            <!--  <t:select path="//mail:CreateMountpointResponse/mail:link" attr="name" set="invitee.delegated.name"/>
            <t:select path="//mail:CreateMountPointResponse/mail:link" attr="id" set="invitee.mounted.cal.id"/> -->        
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="invitee1.mounted.cal.id"/>
             <t:select path="//mail:CreateMountpointResponse/mail:link" attr="name" set="calendar.name"/>     
        </t:response>
    </t:test>
    
     <t:test required="true">
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder/mail:link" attr="name" set="calendar.folder"/>
            <t:select path="//mail:folder/mail:link" attr="id" set="calendar.id"/>
            <t:select path="//mail:folder/mail:link" attr="zid" set="calendar.zid"/>
        </t:response>
    </t:test>  
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${TimeRangeStart}" calExpandInstEnd="${TimeRangeFinish}">
				<query>${appointment.subject1}(inid:${calendar.id})</query>
			</SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:appt" attr="name" match="${appointment.subject1}"/>
           
            
        </t:response>
    </t:test>
    
    <t:property name="apptId1" value="${calendar.zid}:${calendar.id}"/>
    
    <t:test>
        <t:request>
			<SnoozeCalendarItemAlarmRequest xmlns="urn:zimbraMail">
				<appt xmlns="" id="${apptId1}" until="${TIME(+6h)}"/>
			</SnoozeCalendarItemAlarmRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^service.PERM_DENIED" />
		</t:response>
	</t:test>
	
    <!-- Dismiss alarm -->
    <t:test id="Dismiss alarm">
      <t:request>
        <DismissCalendarItemAlarmRequest xmlns="urn:zimbraMail">
          <appt id="${apptId1}" dismissedAt="1331052041000"/>
        </DismissCalendarItemAlarmRequest>
      </t:request>
      <t:response>
        <t:select path="//zimbra:Code"  match="^service.PERM_DENIED" />
      </t:response>
    </t:test>
    
</t:test_case>

</t:tests>
