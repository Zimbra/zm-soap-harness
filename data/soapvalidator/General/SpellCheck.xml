<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="spellcheck.${TIME}.${COUNTER}@${defaultdomain.name}"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="check.word1" value="hello"/>
<t:property name="check.word2" value="helli"/>
<t:property name="check.word3" value="HELLO"/>
<t:property name="check.word4" value="HeLLo"/>
<t:property name="check.word5" value="hello!"/>
<t:property name="check.word6" value="hello world"/>
<t:property name="check.word7a" value="                   hello"/>
<t:property name="check.word7b" value="hello                   "/>
<t:property name="check.word7c" value="         hello          "/>
<t:property name="check.word9" value="Hello! Good Morning!!"/>
<t:property name="check.word12" value="Hello! 
                                       Good Morning!!
                                       Have a nice day!!!
                                       "/>
<t:property name="check.word13" value="# Hello! Good Morning!! -432.45a Have a nice day #"/>
<t:property name="check.blank" value=""/>
<t:property name="check.spaces" value="     "/>
<t:property name="check.spchar" value=":/\\.;&lt;*''"/>
<t:property name="check.utf8char" value="grüße"/>
<t:property name="check.digit" value="1"/>
<t:property name="check.decimal" value="12.34"/>
<t:property name="check.negative" value="-1"/>

<!-- <t:property name="check.zimbra1" value="zimbra"/> -->
<t:property name="check.zimbra2" value="ZIMBRA"/>
<t:property name="check.zimbra3" value="Zimbra"/>
    
<!-- <t:property name="check.comcast1" value="comcast"/> -->
<t:property name="check.comcast2" value="COMCAST"/>
<t:property name="check.comcast3" value="Comcast"/>
    

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Login to admin </t:objective>
   
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>   

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>              
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>


</t:test_case> 


<t:test_case testcaseid="CheckSpellingRequest1" type="smoke">
    <t:objective>CheckSpelling of any word</t:objective>
    
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.word1}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="CheckSpellingRequest2" type="bhr">
    <t:objective>CheckSpelling of a non existing word</t:objective>
    
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.word2}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" attr="word" match="${check.word2}"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="CheckSpellingRequest3" type="sanity">
    <t:objective>CheckSpelling of word but in capital letters.</t:objective>
    
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.word3}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="CheckSpellingRequest4" type="sanity">
    <t:objective>CheckSpelling of a word, whose alphabets are in capital and small letters, both.</t:objective>
    
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.word4}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" attr="word" match="${check.word4}"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="CheckSpellingRequest5" type="sanity">
    <t:objective>CheckSpelling of a word with special character(!).</t:objective>
    
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.word5}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="CheckSpellingRequest6" type="sanity">
    <t:objective>CheckSpelling of two words.</t:objective>
    
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.word6}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="CheckSpellingRequest7" type="sanity">
    <t:objective>CheckSpelling of a word with spaces.</t:objective>
    
    <!--CheckSpelling of a word with leading spaces.-->
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.word7a}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>
    
    <!--CheckSpelling of a word with trailing spaces.-->
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.word7b}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>
    
    <!--CheckSpelling of a word with leading and trailing spaces.-->
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.word7c}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>   
    
</t:test_case>


<t:test_case testcaseid="CheckSpellingRequest8" type="sanity">
    <t:objective>CheckSpellingRequest for blank,spaces,spchar,digit,decimal,negative.</t:objective>
    
    <!--CheckSpellingRequest for blank.-->
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.blank}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>
    
    <!--CheckSpellingRequest for spaces.-->
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.spaces}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>
  
    <!--CheckSpellingRequest for spchar.-->
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.spchar}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            </t:select>
        </t:response>
    </t:test>
    
    <!--CheckSpellingRequest for digit.-->
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.digit}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test> 
    
    <!--CheckSpellingRequest for decimal.-->
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.decimal}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>
    
    <!--CheckSpellingRequest for negative.-->
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.negative}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>
      
</t:test_case>    


<t:test_case testcaseid="CheckSpellingRequest9" type="sanity">
    <t:objective>CheckSpelling of a correct sentence.</t:objective>
    
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.word9}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="CheckSpellingRequest10" type="sanity">
    <t:objective>CheckSpelling of a sentence in which one word is wrong.</t:objective>
    
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">Hello! Gud Morning!!</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse/mail:misspelled" attr="word" match="Gud"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="CheckSpellingRequest11" type="sanity">
    <t:objective>CheckSpelling of a sentence in which all words are wrong.</t:objective>
    
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">Helloo! Gud Mornin!!</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse/mail:misspelled" attr="word" match="Helloo"/>
            <t:select path="//mail:CheckSpellingResponse/mail:misspelled" attr="word" match="Gud"/>
            <t:select path="//mail:CheckSpellingResponse/mail:misspelled" attr="word" match="Mornin"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="CheckSpellingRequest12" type="sanity">
    <t:objective>CheckSpelling of a multi line statement.</t:objective>
    
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.word12}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>
</t:test_case> 

<t:test_case testcaseid="CheckSpellingRequest13" type="sanity">
    <t:objective>CheckSpelling of a multi line statement that contains special characters, symbols, digits and spaces.</t:objective>
    
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.word13}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>
</t:test_case>
<t:test_case testcaseid="CheckSpellingRequest14" type="sanity" bugids="4493">
    <t:objective>Verify the word zimbra is correct</t:objective>
<!--        
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.zimbra1}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>
-->
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.zimbra2}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.zimbra3}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>
</t:test_case>     
<t:test_case testcaseid="CheckSpellingRequest15" type="sanity" areas="comcast" bugids="18186">
    <t:objective>Verify the word comcast is correct</t:objective>
<!--        
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.comcast1}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>
-->
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.comcast2}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">${check.comcast3}</CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
            	<t:select path="//mail:misspelled" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>
</t:test_case>     
<t:test_case testcaseid="CheckSpellingRequest16" type="bhr" bugids="41760,ZBUG-1109">
    <t:objective>Verify various characters does not throw exception</t:objective>
    <t:test>
        <t:request>
            <CheckSpellingRequest xmlns="urn:zimbraMail">
            úó
            amed “atlas GMV”.
            RIM’s
            sehr geehrte damen und herren
            herzliche grüße
	    读写汉字 - 学中文
	    Wǒ xiān zǒu le
            </CheckSpellingRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CheckSpellingResponse">
                 <t:select path="//mail:misspelled" emptyset="0"/>
                 <t:select path="//mail:misspelled" attr="word"  match="${check.utf8char}"/>
                 <t:select path='//mail:misspelled[@word="${check.utf8char}"]' attr="suggestions" match=".*grue,Gere,Gore,Grey,gore,grew,guru,gruel,grues.*"/>
            </t:select>
        </t:response>
    </t:test>
</t:test_case>
</t:tests>

