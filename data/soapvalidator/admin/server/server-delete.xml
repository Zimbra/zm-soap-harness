<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.name" value="testserver${TIME}${COUNTER}"/>
<t:property name="server.spaceinname" value="testserver    ${TIME}${COUNTER}"/>
<t:property name="server.notes" value="test of adding Server via SOAP"/>
<t:property name="server.desc" value="test server description"/>

<t:property name="server.blank" value=""/>
<t:property name="server.space" value="             "/>
<t:property name="server.sometext" value="Some text"/>
<t:property name="server.spchar" value=":''&lt;//\\"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
</t:test>

</t:test_case>


<t:test_case testcaseid="acct1_setup" type="always" >
    <t:objective>Login to admin </t:objective>
    <t:steps>1. Login to admin account       
    </t:steps>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="DeleteServerRequest1" type="bhr" areas="dev_sanity">
    <t:objective> Delete a server with valid id </t:objective>
    
    <t:test id="deleteserverrequest1a">
        <t:request>
            <CreateServerRequest xmlns="urn:zimbraAdmin">
                <name>${server.name}</name>
                <a n="zimbraNotes">${server.notes}</a>
                <a n="description">${server.desc}</a>
            </CreateServerRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateServerResponse/admin:server" attr="id" set="server.id1"/>
        </t:response>
    </t:test>
    <t:test id="deleteserverrequest1b" depends="deleteserverrequest1a">
        <t:request>
            <DeleteServerRequest xmlns="urn:zimbraAdmin">
                <id>${server.id1}</id>
            </DeleteServerRequest>
            
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteServerResponse"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="DeleteServerRequest2" type="functional">
    <t:objective> Delete a server with non existing/deleted id </t:objective>
    
    <t:test depends="deleteserverrequest1b">
        <t:request>
            <DeleteServerRequest xmlns="urn:zimbraAdmin">
                <id>${server.id1}</id>
            </DeleteServerRequest>            
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^account.NO_SUCH_SERVER$"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="DeleteServerRequest3" type="functional">
    <t:objective> Delete a server with blank id </t:objective>
    
    <t:test depends="deleteserverrequest1b">
        <t:request>
            <DeleteServerRequest xmlns="urn:zimbraAdmin">
                <id>${server.blank}</id>
            </DeleteServerRequest>            
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^account.NO_SUCH_SERVER$"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="DeleteServerRequest4" type="functional">
    <t:objective> Delete a server with special character in id </t:objective>
    
    <t:test depends="deleteserverrequest1b">
        <t:request>
            <DeleteServerRequest xmlns="urn:zimbraAdmin">
                <id>${server.blank}</id>
            </DeleteServerRequest>            
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^account.NO_SUCH_SERVER$"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="DeleteServerRequest5" type="functional">
    <t:objective> Delete a server with some text in id </t:objective>
    
    <t:test depends="deleteserverrequest1b">
        <t:request>
            <DeleteServerRequest xmlns="urn:zimbraAdmin">
                <id>${server.blank}</id>
            </DeleteServerRequest>            
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^account.NO_SUCH_SERVER$"/>
        </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="DeleteServerRequest6" type="functional" bugids="36785">
    <t:objective> Delete a server with the name localhost - verify no proxy loop </t:objective>
    <t:steps>This test case leaves an extra server on the setup called localhost that cannot be deleted</t:steps>
    
    <t:test >
        <t:request>
            <CreateServerRequest xmlns="urn:zimbraAdmin">
                <name>localhost</name>
            </CreateServerRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateServerResponse/admin:server" attr="id" set="server.id"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <DeleteServerRequest xmlns="urn:zimbraAdmin">
                <id>${server.id}</id>
            </DeleteServerRequest>            
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.TOO_MANY_HOPS"/>
        </t:response>
    </t:test>

	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/zmprov -l ds localhost\'" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>

    
</t:test_case>


</t:tests>
