<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain1.name" value="preauth.${TIME}.${COUNTER}.com"/>
<t:property name="domain1.preauthkey" value="7c9d4c4372457f2e9df0a681e31559e691199762171b832ec042861bc9b610ba"/>

<t:property name="account1.name" value="preauth${TIME}${COUNTER}@${domain1.name}"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>

	<t:test required="true">
	 <t:request>
	   <PingRequest xmlns="urn:zimbraAdmin"/>
	 </t:request>
	  <t:response>
		<t:select path="//admin:PingResponse"/>
	 </t:response>
	</t:test>

</t:test_case>



<t:test_case testcaseid="LastLogon_PreAuthRequest_Setup_01" type="always" >
 <t:objective>Find the current zimbraLastLogonTimestampFrequency</t:objective>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test required="true">
        <t:request>
            <GetConfigRequest xmlns="urn:zimbraAdmin">
            	<a n="zimbraLastLogonTimestampFrequency"/>
            </GetConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetConfigResponse">
            	<t:select path="//admin:a[@n='zimbraLastLogonTimestampFrequency']" set="server.setting.zimbraLastLogonTimestampFrequency.value"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test  required="true">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain1.name}</name>
                <a n="zimbraPreAuthKey">${domain1.preauthkey}</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse">
	            <t:select path="//admin:domain" attr="id" set="domain1.id"/>
	            <t:select path="//admin:a[@n='zimbraPreAuthKey']" match="${domain1.preauthkey}"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  


</t:test_case>

<t:finally>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

	<t:test  required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <ModifyConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraLastLogonTimestampFrequency">${server.setting.zimbraLastLogonTimestampFrequency.value}</a>
            </ModifyConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyConfigResponse"/>
        </t:response>
    </t:test> 

    <t:test>
        <t:request>
			<FlushCacheRequest xmlns="urn:zimbraAdmin">
				<cache type="config"/>
			</FlushCacheRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:FlushCacheResponse"/>
        </t:response>
    </t:test> 


</t:finally>



<t:test_case testcaseid="LastLogon_PreAuthRequest_01" type="sanity" bugids="23249" >
	<t:objective>AuthRequest - verify zimbraLastLogonTimestamp is updated</t:objective>
	<t:steps>
	1. Set the zimbraLastLogonTimestampFrequency to 1 second
	2. Login as account1
	3. Wait for 60 seconds
	4. Login as account1
	5. Verify that the zimbraLastLogonTimestamp is updated 
	</t:steps>


	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test required="true">
        <t:request>
            <ModifyConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraLastLogonTimestampFrequency">1s</a>
            </ModifyConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyConfigResponse"/>
        </t:response>
    </t:test> 

	<t:property name="server.zimbraAdmin" value="${account1.server}"/>
    <t:test>
        <t:request>
			<FlushCacheRequest xmlns="urn:zimbraAdmin">
				<cache type="config"/>
			</FlushCacheRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:FlushCacheResponse"/>
        </t:response>
    </t:test> 



	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:property name="authToken" value=""/>

	
	<t:property name="account1.timestamp" value="${TIME}"/>
	<t:property name="account1.expires" value="0"/>
	
	<t:preauth
		account="${account1.name}"
		by="name"
		timestamp="${account1.timestamp}"
		expires="${account1.expires}"
		key="${domain1.preauthkey}"
		set="account1.preauthkey"/>
	
	<t:test  required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<preauth timestamp="${account1.timestamp}" expires="${account1.expires}">${account1.preauthkey}</preauth>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse"/>
		</t:response>
	</t:test>


	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="id">${account1.id}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse/admin:account">
				<t:select path="//admin:a[@n='zimbraLastLogonTimestamp']" set="account1.zimbraLastLogonTimestamp"/>
			</t:select>
		</t:response>
	</t:test>

	<t:delay sec="60"/>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:property name="authToken" value=""/>

	
	<t:property name="account1.timestamp" value="${TIME}"/>
	<t:property name="account1.expires" value="0"/>
	
	<t:preauth
		account="${account1.name}"
		by="name"
		timestamp="${account1.timestamp}"
		expires="${account1.expires}"
		key="${domain1.preauthkey}"
		set="account1.preauthkey"/>
	
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<preauth timestamp="${account1.timestamp}" expires="${account1.expires}">${account1.preauthkey}</preauth>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse"/>
		</t:response>
	</t:test>



	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="id">${account1.id}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse/admin:account">
				<t:select path="//admin:a[@n='zimbraLastLogonTimestamp']" match="${account1.zimbraLastLogonTimestamp}" emptyset="1"/>
			</t:select>
		</t:response>
	</t:test>
	
</t:test_case>



</t:tests>
