<t:tests xmlns:t="urn:zimbraTestHarness">

	<t:property name="invalidDomain_name" value="invalid.com" />
	<t:property name="invalid_user" value="invaliduser${TIME}@${defaultdomain.name}" />
	
	<t:property name="message.subject" value="subject1" />
	<t:property name="message.content" value="content1" />

	<t:property name="test_account1.name"
		value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account1.newname"
		value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account1.password" value="${defaultpassword.value}" />
	<t:property name="test_account2.name"
		value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account2.newname"
		value="test2.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account2.password" value="${defaultpassword.value}" />
	<t:property name="test_account3.name"
		value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account3.alias"
		value="test3alias.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account3.newname"
		value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account3.password" value="${defaultpassword.value}" />
	<t:property name="test_account4.name"
		value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account4.newname"
		value="test4.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account4.password" value="${defaultpassword.value}" />
	<t:property name="test_account5.name"
		value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account5.newname"
		value="test5.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account5.password" value="${defaultpassword.value}" />
	<t:property name="test_account6.name"
		value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account6.newname"
		value="test6.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account6.password" value="${defaultpassword.value}" />
	<t:property name="test_account7.name"
		value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account7.newname"
		value="test7.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account7.password" value="${defaultpassword.value}" />
	<t:property name="test_account8.name"
		value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account8.password" value="${defaultpassword.value}" />
	<t:property name="test_account10.name"
		value="test10.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account10.newname"
		value="test10.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account10.password" value="${defaultpassword.value}" />

	<t:test_case testcaseid="Ping" type="always">
		<t:objective>basic system check</t:objective>

		<t:test required="true">
			<t:request>
				<PingRequest xmlns="urn:zimbraAdmin" />
			</t:request>
			<t:response>
				<t:select path="//admin:PingResponse" />
			</t:response>
		</t:test>

	</t:test_case>


	<t:test_case testcaseid="admin_auth" type="always">
		<t:objective>login as the admin</t:objective>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

	</t:test_case>

	<t:test_case testcaseid="PrimaryEmailAddressChange_01"
		type="bhr" bugids="ZCS-5359">
		<t:objective>
			ChangePrimaryEmail Address of an account by name.
			<t:steps>
				1. Create a new account.
				2. Fire ChangePrimaryEmailRequest to change it's email address.
				3. GetAccount request to verify both old and new account exists.
				4. Send mail to old email address. Verify new one also receives it.
			</t:steps>
		</t:objective>

		<t:test id="createAccountRequest01">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account1.name}</name>
					<password>${test_account1.password}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account1.id" />
			</t:response>
		</t:test>

		<t:test id="changePrimaryEmailAddress01">
			<t:request>
				<ChangePrimaryEmailRequest xmlns="urn:zimbraAdmin">
					<account by="name">${test_account1.name}</account>
					<newName>${test_account1.newname}</newName>
				</ChangePrimaryEmailRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ChangePrimaryEmailResponse" />
				<t:select
					path="//admin:ChangePrimaryEmailResponse//admin:a[@n='zimbraMailAlias']"
					match="${test_account1.name}" />
				<t:select
					path="//admin:ChangePrimaryEmailResponse//admin:a[@n='zimbraPrimaryEmailChangeHistory']"
					contains="${test_account1.name}" />
				<t:select
					path="//admin:ChangePrimaryEmailResponse//admin:a[@n='zimbraOldMailAddress']"
					emptyset="1" />
			</t:response>
		</t:test>

		<!-- Get account for old email address. It should pass-->
		<t:test>
			<t:request>
				<GetAccountRequest xmlns="urn:zimbraAdmin">
					<account by="name">${test_account1.name}</account>
				</GetAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:GetAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<!-- Get account for new email address. It should pass -->
		<t:test>
			<t:request>
				<GetAccountRequest xmlns="urn:zimbraAdmin">
					<account by="name">${test_account1.newname}</account>
				</GetAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:GetAccountResponse/admin:account" />
			</t:response>
		</t:test>
		
		<!-- Send mail to old email address from admin. It should be received by new email address too -->
		
		<t:test id="send_message">
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a='${test_account1.name}' />
						<su>${message.subject}</su>
						<mp ct="text/plain">
							<content>${message.content}</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
			    <t:select path="//mail:SendMsgResponse/mail:m" attr="id"
			     set="Sent_message1.id" />
		   </t:response>
		</t:test>
		
		<t:delay msec="3000" />
		
		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${test_account1.newname}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
		
		<t:test id="search_message">
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>subject:${message.subject}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse//mail:su" match="${message.subject}" />
			</t:response>
		</t:test>

	</t:test_case>

	<t:test_case testcaseid="PrimaryEmailAddressChange_02"
		type="bhr" bugids="ZCS-5359">
		<t:objective>Change primary email address for user. Delete alias and
			verify addresses.
		</t:objective>
		<t:steps>
			1. Create a new account.
			2. Fire ChangePrimaryEmailRequest to
			change it's email address.
			3. RemoveAccountAlias to delete the alias
			with old email
			3. GetAccount request to verify new account exits and
			old deleted.
		</t:steps>
		
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test id="createAccountRequest02">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account2.name}</name>
					<password>${test_account2.password}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account2.id" />
			</t:response>
		</t:test>

		<t:test id="changePrimaryEmailAddress02">
			<t:request>
				<ChangePrimaryEmailRequest xmlns="urn:zimbraAdmin">
					<account by="name">${test_account2.name}</account>
					<newName>${test_account2.newname}</newName>
				</ChangePrimaryEmailRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ChangePrimaryEmailResponse" />
				<t:select path="//admin:ChangePrimaryEmailResponse/admin:account"
					attr="id" set="test_account2.renamedAdress.id" />
				<t:select
					path="//admin:ChangePrimaryEmailResponse//admin:a[@n='zimbraMailAlias']"
					match="${test_account2.name}" />
				<t:select
					path="//admin:ChangePrimaryEmailResponse//admin:a[@n='zimbraPrimaryEmailChangeHistory']"
					contains="${test_account2.name}" />
			</t:response>
		</t:test>

		<!-- Remove the old email address from zimbraMailAlias -->
		<t:test depends="removeaccountaliasrequest">
			<t:request>
				<RemoveAccountAliasRequest xmlns="urn:zimbraAdmin">
					<id>${test_account2.renamedAdress.id}</id>
					<alias>${test_account2.name}</alias>
				</RemoveAccountAliasRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:RemoveAccountAliasResponse" />
			</t:response>
		</t:test>

		<!-- Get account for old email address. It should fail as alias is removed -->
		<t:test>
			<t:request>
				<GetAccountRequest xmlns="urn:zimbraAdmin">
					<account by="name">${test_account2.name}</account>
				</GetAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//zimbra:Code" match="^account.NO_SUCH_ACCOUNT$" />
			</t:response>
		</t:test>

		<!-- Get account for new email address. It should pass -->
		<t:test>
			<t:request>
				<GetAccountRequest xmlns="urn:zimbraAdmin">
					<account by="name">${test_account2.newname}</account>
				</GetAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:GetAccountResponse/admin:account" />
			</t:response>
		</t:test>

	</t:test_case>

	<t:test_case testcaseid="PrimaryEmailAddressChange_03"
		type="bhr" bugids="ZCS-5359">
		<t:objective>Change primary email address for user using it's alias.
		</t:objective>
		<t:steps>
			1. Create a new account. Add an alias to this account
			2. Fire
			ChangePrimaryEmailRequest to change it's email address using alias.
			3. GetAccount request to verify both old and new account remains.
		</t:steps>

		<t:test id="createAccountRequest03">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account3.name}</name>
					<password>${test_account3.password}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account3.id" />
			</t:response>
		</t:test>

		<t:test id="addAccountAlias">
			<t:request>
				<AddAccountAliasRequest xmlns="urn:zimbraAdmin">
					<id>${test_account3.id}</id>
					<alias>${test_account3.alias}</alias>
				</AddAccountAliasRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AddAccountAliasResponse" />
			</t:response>
		</t:test>

		<t:test id="changePrimaryEmailAddress03">
			<t:request>
				<ChangePrimaryEmailRequest xmlns="urn:zimbraAdmin">
					<account by="name">${test_account3.alias}</account>
					<newName>${test_account3.newname}</newName>
				</ChangePrimaryEmailRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ChangePrimaryEmailResponse/admin:account"
					attr="id" set="test_account2.renamedAdress.id" />
				<t:select
					path="//admin:ChangePrimaryEmailResponse//admin:a[@n='zimbraMailAlias']"
					match="${test_account3.name}" />
				<t:select
					path="//admin:ChangePrimaryEmailResponse//admin:a[@n='zimbraPrimaryEmailChangeHistory']"
					contains="${test_account3.name}" />
			</t:response>
		</t:test>

		<!-- Get account for old email address. It should pass -->
		<t:test>
			<t:request>
				<GetAccountRequest xmlns="urn:zimbraAdmin">
					<account by="name">${test_account3.name}</account>
				</GetAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:GetAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<!-- Get account for new email address. It should pass -->
		<t:test>
			<t:request>
				<GetAccountRequest xmlns="urn:zimbraAdmin">
					<account by="name">${test_account3.newname}</account>
				</GetAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:GetAccountResponse/admin:account" />
			</t:response>
		</t:test>

	</t:test_case>

	<t:test_case testcaseid="PrimaryEmailAddressChange_04"
		type="bhr" bugids="ZCS-5359">
		<t:objective>Change primary email address for user using it's ID.
		</t:objective>
		<t:steps>
			1. Create a new account.
			2. Fire ChangePrimaryEmailRequest to
			change it's email address using id.
			3. GetAccount request to verify
			both old and new account remains.
		</t:steps>

		<t:test id="createAccountRequest04">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account4.name}</name>
					<password>${test_account4.password}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account4.id" />
			</t:response>
		</t:test>

		<t:test id="changePrimaryEmailAddress04">
			<t:request>
				<ChangePrimaryEmailRequest xmlns="urn:zimbraAdmin">
					<account by="id">${test_account4.id}</account>
					<newName>${test_account4.newname}</newName>
				</ChangePrimaryEmailRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ChangePrimaryEmailResponse" />
				<t:select
					path="//admin:ChangePrimaryEmailResponse//admin:a[@n='zimbraPrimaryEmailChangeHistory']"
					contains="${test_account4.name}" />
			</t:response>
		</t:test>

		<!-- Get account for old email address. It should pass -->
		<t:test>
			<t:request>
				<GetAccountRequest xmlns="urn:zimbraAdmin">
					<account by="name">${test_account4.name}</account>
				</GetAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:GetAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<!-- Get account for new email address. It should pass -->
		<t:test>
			<t:request>
				<GetAccountRequest xmlns="urn:zimbraAdmin">
					<account by="name">${test_account4.newname}</account>
				</GetAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:GetAccountResponse/admin:account" />
			</t:response>
		</t:test>

	</t:test_case>

	<t:test_case testcaseid="PrimaryEmailAddressChange_05"
		type="bhr" bugids="ZCS-5359">
		<t:objective>Change primary email address to a name already present in
			server.
		</t:objective>
		<t:steps>
			1. Create a new account.
			2. Fire ChangePrimaryEmailRequest to
			change it's email address to a name already present in mailbox.
			3.
			Should receive an error as account exists.
		</t:steps>

		<t:test id="createAccountRequest05">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account5.name}</name>
					<password>${test_account5.password}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account5.id" />
			</t:response>
		</t:test>

		<t:test id="changePrimaryEmailAddress05">
			<t:request>
				<ChangePrimaryEmailRequest xmlns="urn:zimbraAdmin">
					<account by="name">${test_account5.name}</account>
					<newName>${admin.user}</newName>
				</ChangePrimaryEmailRequest>
			</t:request>
			<t:response>
				<t:select path="//zimbra:Code" match="^account.ACCOUNT_EXISTS" />
			</t:response>
		</t:test>

	</t:test_case>

	<t:test_case testcaseid="PrimaryEmailAddressChange_06"
		type="bhr" bugids="ZCS-5359">
		<t:objective>Change primary email address to a domain not present in
			server.
		</t:objective>
		<t:steps>
			1. Create a new account.
			2. Fire ChangePrimaryEmailRequest
			with newName as an invalid domain.
			3. Verify error received as No Such
			Domain.
		</t:steps>

		<t:test id="createAccountRequest06">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account6.name}</name>
					<password>${test_account6.password}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account6.id" />
			</t:response>
		</t:test>

		<t:test id="changePrimaryEmailAddress06">
			<t:request>
				<ChangePrimaryEmailRequest xmlns="urn:zimbraAdmin">
					<account by="name">${test_account6.name}</account>
					<newName>user@${invalidDomain_name}</newName>
				</ChangePrimaryEmailRequest>
			</t:request>
			<t:response>
				<t:select path="//zimbra:Code" match="^account.NO_SUCH_DOMAIN" />
			</t:response>
		</t:test>

	</t:test_case>

	<t:test_case testcaseid="PrimaryEmailAddressChange_07"
		type="bhr" bugids="ZCS-5359">
		<t:objective>Change primary email address to a new name without
			domain.
		</t:objective>
		<t:steps>
			1. Create a new account.
			2. Fire ChangePrimaryEmailRequest
			with newName without domain.
			3. Verify error received as Invalid
			Request.
		</t:steps>

		<t:test id="createAccountRequest07">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account7.name}</name>
					<password>${test_account7.password}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account7.id" />
			</t:response>
		</t:test>

		<t:test id="changePrimaryEmailAddress07">
			<t:request>
				<ChangePrimaryEmailRequest xmlns="urn:zimbraAdmin">
					<account by="name">${test_account7.name}</account>
					<newName>user</newName>
				</ChangePrimaryEmailRequest>
			</t:request>
			<t:response>
				<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
			</t:response>
		</t:test>

	</t:test_case>

	<t:test_case testcaseid="PrimaryEmailAddressChange_08"
		type="bhr" bugids="ZCS-5359">
		<t:objective>Change primary email address with old address not
			present on server
		</t:objective>
		<t:steps>
			1. Fire ChangePrimaryEmailRequest with account by name for
			invalid user.
			2. Verify error received as No Such Account.
		</t:steps>

		<t:test id="changePrimaryEmailAddress08">
			<t:request>
				<ChangePrimaryEmailRequest xmlns="urn:zimbraAdmin">
					<account by="name">${invalid_user}</account>
					<newName>${test_account8.name}</newName>
				</ChangePrimaryEmailRequest>
			</t:request>
			<t:response>
				<t:select path="//zimbra:Code" match="^account.NO_SUCH_ACCOUNT" />
			</t:response>
		</t:test>

	</t:test_case>

	<t:test_case testcaseid="PrimaryEmailAddressChange_09"
		type="bhr" bugids="ZCS-5359">
		<t:objective>Change primary email address for a resource.
		</t:objective>
		<t:steps>
			1. Create a new resource equipment.
			2. Fire
			ChangePrimaryEmailRequest with newName as a new resource name.
			3.
			GetAccountRequest to verify both name remains.
		</t:steps>

		<t:property name="Resource.name1"
			value="testresource1.${TIME}${COUNTER}@${defaultdomain.name}" />
		<t:property name="Resource.equipment" value="Equipment" />
		<t:property name="active" value="active" />
		<t:property name="displayName1" value="DP1" />
		<t:property name="Resource.newname"
			value="newresource.${TIME}${COUNTER}@${defaultdomain.name}" />

		<t:test>
			<t:request>
				<CreateCalendarResourceRequest xmlns="urn:zimbraAdmin">
					<name>${Resource.name1}</name>
					<a n="zimbraCalResType">${Resource.equipment}</a>
					<a n="zimbraAccountStatus">${active}</a>
					<a n="displayName">${displayName1}</a>
					<a n="zimbraCalResAutoAcceptDecline">${globals.true}</a>
					<a n="zimbraCalResAutoDeclineIfBusy">${globals.false}</a>
				</CreateCalendarResourceRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateCalendarResourceResponse/admin:calresource"
					attr="id" set="resource1.id" />
			</t:response>
		</t:test>

		<t:test id="changePrimaryEmailAddress09">
			<t:request>
				<ChangePrimaryEmailRequest xmlns="urn:zimbraAdmin">
					<account by="id">${resource1.id}</account>
					<newName>${Resource.newname}</newName>
				</ChangePrimaryEmailRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ChangePrimaryEmailResponse/admin:account"
					attr="id" set="resource.renamedAdress.id" />
				<t:select
					path="//admin:ChangePrimaryEmailResponse//admin:a[@n='zimbraMailAlias']"
					match="${Resource.name1}" />
				<t:select
					path="//admin:ChangePrimaryEmailResponse//admin:a[@n='zimbraPrimaryEmailChangeHistory']"
					contains="${Resource.name1}" />
			</t:response>
		</t:test>

		<!-- Get account for old email address. It should pass -->
		<t:test>
			<t:request>
				<GetAccountRequest xmlns="urn:zimbraAdmin">
					<account by="name">${Resource.name1}</account>
				</GetAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:GetAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<!-- Get account for new email address. It should pass -->
		<t:test>
			<t:request>
				<GetAccountRequest xmlns="urn:zimbraAdmin">
					<account by="name">${Resource.newname}</account>
				</GetAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:GetAccountResponse/admin:account" />
			</t:response>
		</t:test>

	</t:test_case>
	
	<t:test_case testcaseid="PrimaryEmailAddressChange_10"
		type="bhr" bugids="ZCS-5359">
		<t:objective>Change primary email address for user using it's foreign principal.
		</t:objective>
		<t:steps>
			1. Create a new account.
			2. Fire ChangePrimaryEmailRequest to
			change it's email address using foreign principal.
			3. GetAccount request to verify
			both old and new account remains.
		</t:steps>
		
		<t:property name="account.foreignPrincipal" value="testZCS-5359:${TIME}.${COUNTER}"/>

		<t:test id="createAccountRequest10">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account10.name}</name>
					<password>${test_account10.password}</password>
					<a n="zimbraForeignPrincipal">${account.foreignPrincipal}</a>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account10.id" />
			</t:response>
		</t:test>

		<t:test id="changePrimaryEmailAddress10">
			<t:request>
				<ChangePrimaryEmailRequest xmlns="urn:zimbraAdmin">
					<account by="foreignPrincipal">${account.foreignPrincipal}</account>
					<newName>${test_account10.newname}</newName>
				</ChangePrimaryEmailRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ChangePrimaryEmailResponse" />
			</t:response>
		</t:test>

		<!-- Get account for old email address. It should pass -->
		<t:test>
			<t:request>
				<GetAccountRequest xmlns="urn:zimbraAdmin">
					<account by="name">${test_account10.name}</account>
				</GetAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:GetAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<!-- Get account for new email address. It should pass -->
		<t:test>
			<t:request>
				<GetAccountRequest xmlns="urn:zimbraAdmin">
					<account by="name">${test_account10.newname}</account>
				</GetAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:GetAccountResponse/admin:account" />
			</t:response>
		</t:test>

	</t:test_case>
	

</t:tests>