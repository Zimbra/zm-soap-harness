<t:tests xmlns:t="urn:zimbraTestHarness">

<!--

Check tests, test_case, and test functionality
Check testcaseid, type, areas, bugids

-->

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:test_case testcaseid="PASS-CheckTestCase_01" type="sanity" areas="selfcheck" >
    <t:objective>SOAP Harness -- CheckTestCase - Verify the required t:test_case attributes</t:objective>
    
    <t:test >
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="PASS-CheckTestCase_02" type="sanity" areas="selfcheck" bugids="1">
    <t:objective>SOAP Harness -- CheckTestCase - Verify the required and optional t:test_case attributes</t:objective>
    <t:steps>
    1. Send a PingRequest
    </t:steps>
    
    <t:test >
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="PASS-CheckTestCase_03" type="sanity" areas="selfcheck">
    <t:objective>SOAP Harness -- CheckTestCase - Verify the t:test attributes: id, depends, required</t:objective>
    
    <t:test required="true" id="CheckTestCase_03_A">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

    <t:test required="true" id="CheckTestCase_03_B" depends="CheckTestCase_03_A">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

    <t:test required="true" depends="CheckTestCase_03_B">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="FAIL-CheckTestCase_04" type="sanity" areas="selfcheck">
    <t:objective>SOAP Harness -- CheckTestCase - Verify if a required test fails, the test case should fail</t:objective>
    
    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse" emptyset="1"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="EXCEPTION-CheckTestCase_05" type="sanity" areas="selfcheck">
    <t:objective>SOAP Harness -- CheckTestCase - Verify if a dependency has not executed, the test should throw an exception</t:objective>
    
    <t:test id="CheckTestCase_05_A">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

    <t:test depends="CheckTestCase_05_B">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="EXCEPTION-CheckTestCase_06" type="sanity" areas="selfcheck">
    <t:objective>SOAP Harness -- CheckTestCase - Verify if a dependency has failed, the test should throw an exception</t:objective>
    
    <t:test id="CheckTestCase_06_A">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse" emptyset="1"/>
        </t:response>
    </t:test>

    <t:test depends="CheckTestCase_06_A">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


</t:tests>
