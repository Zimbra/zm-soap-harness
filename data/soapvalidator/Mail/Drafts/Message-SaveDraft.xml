<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_account1.name" value="testDraft${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account1.password" value="${defaultpassword.value}"/>


<t:property name="message.subject1" value="Subject${TIME}.${COUNTER}"/>
<t:property name="message.content1" value="content of the message${TIME}.${COUNTER}"/>
<t:property name="message.subject2" value="Subject2${TIME}.${COUNTER}"/>
<t:property name="message.content2" value="content of the second message${TIME}.${COUNTER}"/>
<t:property name="message.subject3" value="Subject3${TIME}.${COUNTER}"/>
<t:property name="message.content3" value="content of the third message${TIME}.${COUNTER}"/>

<t:property name="draft_to1.name" value="to1@${defaultdomain.name}"/>
<t:property name="draft_to2.name" value="to2@${defaultdomain.name}"/>
<t:property name="draft_to3.name" value="to3@${defaultdomain.name}"/>
<t:property name="draft_cc1.name" value="cc1@${defaultdomain.name}"/>
<t:property name="draft_cc2.name" value="cc2@${defaultdomain.name}"/>
<t:property name="draft_cc3.name" value="cc3@${defaultdomain.name}"/>
<t:property name="draft_bcc1.name" value="bcc1@${defaultdomain.name}"/>
<t:property name="draft_bcc2.name" value="bcc2@${defaultdomain.name}"/>
<t:property name="draft_bcc3.name" value="bcc3@${defaultdomain.name}"/>
<t:property name="message9.subject" value="Subject9${TIME}.${COUNTER}"/>
<t:property name="message9.content" value="Content9${TIME}.${COUNTER}"/>

<t:property name="message10.subject" value="Subject10${TIME}.${COUNTER}"/>
<t:property name="message10.content" value="Content10${TIME}.${COUNTER}"/>
<t:property name="message10.htmlcontent" value="Content10${TIME}.${COUNTER}"/>

<t:property name="message11.subject" value="Subject10${TIME}.${COUNTER}"/>
<t:property name="message11.content" value="Content10${TIME}.${COUNTER}"/>
<t:property name="message13.subject" value="Subject10${TIME}.${COUNTER}"/>
<t:property name="message13.content" value="Content10${TIME}.${COUNTER}"/>
<t:property name="message14.subject" value="Subject10${TIME}.${COUNTER}"/>
<t:property name="message14.content" value="Content10${TIME}.${COUNTER}"/>
<t:property name="message15.subject" value="Subject10${TIME}.${COUNTER}"/>
<t:property name="message15.content" value="Content10${TIME}.${COUNTER}"/>

<t:property name="message11.file" value="${soapxml.root}/Mail/Drafts/SaveDraftMime/attachment1.jpg"/>
<t:property name="message12.file" value="${soapxml.root}/Mail/Drafts/SaveDraftMime/draft.txt"/>
<t:property name="message13a.file" value="${soapxml.root}/Mail/Drafts/SaveDraftMime/attachment1.jpg"/>
<t:property name="message13b.file" value="${soapxml.root}/Mail/Drafts/SaveDraftMime/attachment2.txt"/>
<t:property name="message13c.file" value="${soapxml.root}/Mail/Drafts/SaveDraftMime/attachment3.doc"/>
<t:property name="message13d.file" value="${soapxml.root}/Mail/Drafts/SaveDraftMime/attachment4.xls"/>
<t:property name="message14.file" value="${soapxml.root}/Mail/Drafts/SaveDraftMime/draft.txt"/>
<t:property name="test_acct.server" value="NOT_DEFINED"/>

<t:property name="tag.colorvalid" value="4" />

<t:property name="Identity1.name" value="identity1${TIME}.${COUNTER}"/>
<t:property name="Identity2.name" value="identity2${TIME}.${COUNTER}"/>
<t:property name="DisplayFrom1.name" value="newdisplayname1${TIME}.${COUNTER}"/>
<t:property name="DisplayFrom2.name" value="newdisplayname1${TIME}.${COUNTER}"/>
<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="compose.subject" value="Subject of the message is testing"/>
<t:property name="compose.content" value="Content in the message is contents..."/>
<t:property name="upload.filename" value="${testMailRaw.root}/wiki01/basic.html"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct1_setup" type="always">
    <t:objective>Create test account</t:objective>
    <steps>
        1. Login to admin account
        2. Create user accounts
    </steps>

    <t:test id="admin_login" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id="create_test_account1" required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account1.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server"/>
        </t:response>
    </t:test>

</t:test_case>


<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

<t:test_case testcaseid="acct1_login" type="smoke">
    <t:objective>Login as the test account and get the folder list</t:objective>
    <t:steps>
        1. Login to test account
        2. Get the list of default folders
    </t:steps>

    <t:test id="auth" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test id="getFolderRequest">
        <t:request>
            <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="folder.inbox"/>
            <t:select path="//mail:folder[@name='${globals.trash}']" attr="id" set="folder.trash"/>
            <t:select path="//mail:folder[@name='${globals.sent}']" attr="id" set="folder.sent"/>
            <t:select path="//mail:folder[@name='${globals.spam}']" attr="id" set="folder.spam"/>
            <t:select path="//mail:folder[@name='${globals.drafts}']" attr="id" set="folder.draft"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SaveDraftRequest1" type="smoke">
    <t:objective>To save a mail as draft and verify whether it is saved.</t:objective>
    <t:steps>
        1. Save a mail as draft
        2. To verify it is saved or not
    </t:steps>

    <t:test id="saveDraftRequest1a">
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${test_account1.name}'/>
                    <su> ${message.subject1} </su>
                    <mp ct="text/plain">
                        <content> ${message.content1}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft1.id"/>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="l" match="${folder.draft}"/>
        </t:response>
    </t:test>

    <t:test depends="saveDraftRequest1a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${globals.drafts} </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="id" match="${draft1.id}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="l" match="${folder.draft}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SaveDraftRequest2" type="sanity">
    <t:objective>To update the mail that was saved as draft.</t:objective>

    <t:test id="saveDraftRequest2a" depends="saveDraftRequest1a">
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m id="${draft1.id}">
                    <e t="t" a='${test_account1.name}'/>
                    <su> More Subject ${message.subject1} </su>
                    <mp ct="text/plain">
                        <content> More content ${message.content1}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" match="${draft1.id}"/>
        </t:response>
    </t:test>

    <t:test depends="saveDraftRequest2a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${globals.drafts} </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="id" match="${draft1.id}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="l" match="${folder.draft}"/>
            <t:select path="//mail:SearchResponse/mail:m[2]" emptyset="1"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SaveDraftRequest3" type="sanity">
    <t:objective>To save a reply. i.e. rt="r" in 'm' </t:objective>
    <t:steps>
        1. Send a mail
        2. Save the reply as draft.
    </t:steps>

    <t:test id="saveDraftRequest3a">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${test_account1.name}'/>
                    <su> ${message.subject2} </su>
                    <mp ct="text/plain">
                        <content> ${message.content2}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message1.id"/>
        </t:response>
    </t:test>

    <t:test depends="saveDraftRequest3a">
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m origid="${message1.id}" rt="r">
                    <e t="t" a='${test_account1.name}'/>
                    <su> Re: ${message.subject2} </su>
                    <mp ct="text/plain">
                        <content> Replied content ${message.content2}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft2.id"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SaveDraftRequest4" type="sanity">
    <t:objective>To save a forwarded mail. i.e. rt="w" in 'm'</t:objective>
    <t:steps>
        1. Send a mail
        2. Save the forwarded message as draft.
    </t:steps>

    <t:test id="saveDraftRequest4a">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${test_account1.name}'/>
                    <su> ${message.subject3} </su>
                    <mp ct="text/plain">
                        <content> ${message.content3}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message2.id"/>
        </t:response>
    </t:test>

    <t:test depends="saveDraftRequest4a">
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m origid="${message2.id}" rt="w">
                    <e t="t" a='${test_account1.name}'/>
                    <su> Re: ${message.subject3} </su>
                    <mp ct="text/plain">
                        <content> Forwarded content ${message.content3}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft3.id"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SaveDraftRequest5" type="functional">
    <t:objective>To delete a saved draft mail. </t:objective>
    <t:steps>
        1. Save a mail as draft
        2. Delete a draft mail
        3. Verify it.
    </t:steps>

    <t:test id="saveDraftRequest5a">
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${test_account1.name}'/>
                    <su> Messgae to be deleted </su>
                    <mp ct="text/plain">
                        <content> To be deleted content ${message.content2}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft5.id"/>
        </t:response>
    </t:test>

    <t:test id = "saveDraftRequest5b" depends="saveDraftRequest5a">
        <t:request>
            <MsgActionRequest xmlns = "urn:zimbraMail">
                <action id = "${draft5.id}" op = "delete"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "id" match = "${draft5.id}"/>
        </t:response>
    </t:test>

    <t:test depends="saveDraftRequest5b">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${globals.drafts} </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m[@id='${draft5.id}']" emptyset="1"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SaveDraftRequest6" type="functional">
    <t:objective>To resave the deleted draft i.e. SaveDraftRequest  with id of deleted draft</t:objective>

    <t:test depends="saveDraftRequest5b">
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m id="${draft5.id}">
                    <e t="t" a='${test_account1.name}'/>
                    <su> More Subject ${message.subject1} </su>
                    <mp ct="text/plain">
                        <content> More content ${message.content1}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^mail.NO_SUCH_MSG$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SaveDraftRequest7" type="sanity">
    <t:objective>To Send a draft mail</t:objective>
    <t:steps>
        1. Save a message as Draft
        2. Send it to someone.
    </t:steps>

    <t:test id="saveDraftRequest7a">
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${test_account1.name}'/>
                    <su> Check sending of draft </su>
                    <mp ct="text/plain">
                        <content> Send the draft mail ${message.content1}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft7.id"/>
        </t:response>
    </t:test>

    <t:test depends="saveDraftRequest7a">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m origid="${draft7.id}">
                    <e t="t" a='${test_account1.name}'/>
                    <su> Check sending of draft </su>
                    <mp ct="text/plain">
                        <content> Send the draft mail ${message.content1} </content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SaveDraftRequest8" type="sanity">
    <t:objective>To verify GetMsgRequest for Draft mail</t:objective>
    <t:steps>
        1. Save a message as Draft
        2. Verify GetMesgRequest
    </t:steps>

    <t:test id="saveDraftRequest8a">
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${test_account1.name}'/>
                    <su> Check sending of draft </su>
                    <mp ct="text/plain">
                        <content> Send the draft mail ${message.content1}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft8.id"/>
        </t:response>
    </t:test>

    <t:test depends="saveDraftRequest8a">
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${draft8.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${draft8.id}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SaveDraftRequest9" type="sanity">
    <t:objective>To verify individual attributes are saved correctly for Draft mail - plain text</t:objective>
    <t:steps>
        1. Save a message as Draft
        2. Verify GetMesgRequest, to, from, cc, bcc, subject, content, etc.
    </t:steps>

    <t:test id="saveDraftRequest9a">
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${draft_to1.name}'/>
                    <e t="t" a='${draft_to2.name}'/>
                    <e t="t" a='${draft_to3.name}'/>
                    <e t="c" a='${draft_cc1.name}'/>
                    <e t="c" a='${draft_cc2.name}'/>
                    <e t="c" a='${draft_cc3.name}'/>
                    <e t="b" a='${draft_bcc1.name}'/>
                    <e t="b" a='${draft_bcc2.name}'/>
                    <e t="b" a='${draft_bcc3.name}'/>
                    <su>${message9.subject}</su>
                    <mp ct="text/plain">
                        <content>${message9.content}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft9.id"/>
        </t:response>
    </t:test>

    <t:test depends="saveDraftRequest9a">
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${draft9.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='t']" attr="a" match="${draft_to1.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='t']" attr="a" match="${draft_to2.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='t']" attr="a" match="${draft_to3.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='c']" attr="a" match="${draft_cc1.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='c']" attr="a" match="${draft_cc2.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='c']" attr="a" match="${draft_cc3.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='b']" attr="a" match="${draft_bcc1.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='b']" attr="a" match="${draft_bcc2.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='b']" attr="a" match="${draft_bcc3.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="su" match="${message9.subject}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp[@ct='text/plain']" attr="content" match="${message9.content}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SaveDraftRequest10" type="sanity">
    <t:objective>To verify individual attributes are saved correctly for Draft mail - html</t:objective>
    <t:steps>
        1. Save a message as Draft
        2. Verify GetMsgRequest (html="1")
        3. Verify GetMsgRequest (html="0")
    </t:steps>

    <t:test id="saveDraftRequest10a">
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${draft_to1.name}'/>
                    <e t="t" a='${draft_to2.name}'/>
                    <e t="t" a='${draft_to3.name}'/>
                    <e t="c" a='${draft_cc1.name}'/>
                    <e t="c" a='${draft_cc2.name}'/>
                    <e t="c" a='${draft_cc3.name}'/>
                    <e t="b" a='${draft_bcc1.name}'/>
                    <e t="b" a='${draft_bcc2.name}'/>
                    <e t="b" a='${draft_bcc3.name}'/>
                    <su>${message10.subject}</su>
                    <mp ct="multipart/alternative">
                        <mp ct="text/plain">
                            <content>${message10.content}</content>
                        </mp>
                        <mp ct="text/html">
                            <content>${message10.htmlcontent}</content>
                        </mp>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft10.id"/>
        </t:response>
    </t:test>

    <t:test depends="saveDraftRequest10a">
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${draft10.id}" html="0"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='t']" attr="a" match="${draft_to1.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='t']" attr="a" match="${draft_to2.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='t']" attr="a" match="${draft_to3.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='c']" attr="a" match="${draft_cc1.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='c']" attr="a" match="${draft_cc2.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='c']" attr="a" match="${draft_cc3.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='b']" attr="a" match="${draft_bcc1.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='b']" attr="a" match="${draft_bcc2.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='b']" attr="a" match="${draft_bcc3.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="su" match="${message10.subject}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp/mail:mp[@ct='text/plain']" attr="content" match="${message10.content}"/>
        </t:response>
    </t:test>

    <t:test depends="saveDraftRequest10a">
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${draft10.id}" html="1"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='t']" attr="a" match="${draft_to1.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='t']" attr="a" match="${draft_to2.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='t']" attr="a" match="${draft_to3.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='c']" attr="a" match="${draft_cc1.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='c']" attr="a" match="${draft_cc2.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='c']" attr="a" match="${draft_cc3.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='b']" attr="a" match="${draft_bcc1.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='b']" attr="a" match="${draft_bcc2.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='b']" attr="a" match="${draft_bcc3.name}"/>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="su" match="${message10.subject}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp/mail:mp[@ct='text/html']" attr="content" match="${message10.htmlcontent}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SaveDraftRequest11" type="sanity">
    <t:objective>To save a mail with attachment as draft and verify whether it is saved.</t:objective>
    <t:steps>
        1. Upload attachment file and get its aid
        2. Save a mail as draft with this attachment
        3. Verify it is saved in Draft folder
        4. Verify that it has attachment
    </t:steps>

<t:property name="uploadServletServer" value="${test_acct.server}"/>

    <t:uploadservlettest id="SaveDraftRequest11a">
        <t:uploadServletRequest>
            <filename>${message11.file}</filename>
        </t:uploadServletRequest>
        <t:uploadServletResponse>
            <t:select attr="id" set="message11.aid"/>
        </t:uploadServletResponse>
    </t:uploadservlettest>

    <t:test id="saveDraftRequest11b" depends="SaveDraftRequest11a">
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${test_account1.name}'/>
                    <su> ${message11.subject} </su>
                    <mp ct="text/plain">
                        <content> ${message11.content}</content>
                    </mp>
                    <attach aid="${message11.aid}"/>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft11.id"/>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="l" match="${folder.draft}"/>
        </t:response>
    </t:test>

    <t:test depends="saveDraftRequest11b">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${globals.drafts} </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="id" match="${draft11.id}"/>
        </t:response>
    </t:test>

    <t:test depends="saveDraftRequest11b">
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${draft11.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${draft11.id}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp/mail:mp" attr="cd" match="attachment"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp/mail:mp" attr="filename" match="attachment1.jpg"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SaveDraftRequest12" type="sanity">
    <t:objective>To save draft message using MIME i.e. using aid in m element</t:objective>
    <t:steps>
        1. Upload MIME file and get its aid
        2. Save a mail as draft with this MIME
        3. Verify it is saved in Draft folder
    </t:steps>

    <t:uploadservlettest id="SaveDraftRequest12a">
        <t:uploadServletRequest>
            <filename>${message12.file}</filename>
        </t:uploadServletRequest>
        <t:uploadServletResponse>
            <t:select attr="id" set="message12.aid"/>
        </t:uploadServletResponse>
    </t:uploadservlettest>

    <t:test id="saveDraftRequest12b" depends="SaveDraftRequest12a">
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m aid="${message12.aid}"/>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft12.id"/>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="l" match="${folder.draft}"/>
        </t:response>
    </t:test>

    <t:test depends="saveDraftRequest12b">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${globals.drafts} </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="id" match="${draft12.id}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SaveDraftRequest13" type="sanity">
    <t:objective>To save a mail with multiple attachments as draft and verify whether it is saved.</t:objective>
    <t:steps>
        1. Upload attachment files and get their id's
        2. Save a mail as draft with these attachments
        3. Verify it is saved in Draft folder
        4. Verify that it has the attachments
    </t:steps>

    <t:uploadservlettest id="SaveDraftRequest13a">
        <t:uploadServletRequest>
            <filename>${message13a.file}</filename>
        </t:uploadServletRequest>
        <t:uploadServletResponse>
            <t:select attr="id" set="message13a.aid"/>
        </t:uploadServletResponse>
    </t:uploadservlettest>

    <t:uploadservlettest id="SaveDraftRequest13b">
        <t:uploadServletRequest>
            <filename>${message13b.file}</filename>
        </t:uploadServletRequest>
        <t:uploadServletResponse>
            <t:select attr="id" set="message13b.aid"/>
        </t:uploadServletResponse>
    </t:uploadservlettest>

    <t:uploadservlettest id="SaveDraftRequest13c">
        <t:uploadServletRequest>
            <filename>${message13c.file}</filename>
        </t:uploadServletRequest>
        <t:uploadServletResponse>
            <t:select attr="id" set="message13c.aid"/>
        </t:uploadServletResponse>
    </t:uploadservlettest>

    <t:uploadservlettest id="SaveDraftRequest13d">
        <t:uploadServletRequest>
            <filename>${message13d.file}</filename>
        </t:uploadServletRequest>
        <t:uploadServletResponse>
            <t:select attr="id" set="message13d.aid"/>
        </t:uploadServletResponse>
    </t:uploadservlettest>

    <t:test id="SaveDraftRequest13e" depends="SaveDraftRequest13a,SaveDraftRequest13b,SaveDraftRequest13c,SaveDraftRequest13d">
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${test_account1.name}'/>
                    <su> ${message13.subject} </su>
                    <mp ct="text/plain">
                        <content> ${message13.content}</content>
                    </mp>
                    <attach aid="${message13a.aid},${message13b.aid},${message13c.aid},${message13d.aid}"/>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft13.id"/>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="l" match="${folder.draft}"/>
        </t:response>
    </t:test>

    <t:test id="SaveDraftRequest13f" depends="SaveDraftRequest13e">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${globals.drafts} </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="id" match="${draft13.id}"/>
        </t:response>
    </t:test>

    <t:test id="SaveDraftRequest13g" depends="SaveDraftRequest13e">
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${draft13.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${draft13.id}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp/mail:mp" attr="cd" match="attachment"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp/mail:mp[@cd='attachment']" attr="filename" match="attachment1.jpg"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp/mail:mp[@cd='attachment']" attr="filename" match="attachment2.txt"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp/mail:mp[@cd='attachment']" attr="filename" match="attachment3.doc"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp/mail:mp[@cd='attachment']" attr="filename" match="attachment4.xls"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SaveDraftRequest14" type="sanity">
    <t:objective>To save a mail as draft with MIME as attachment</t:objective>
    <t:steps>
        1. Upload MIME file and get its aid
        2. Save a mail as draft with this attachment
        3. Verify it is saved in Draft folder
        4. Verify that it has the MIME attachment
    </t:steps>

    <t:uploadservlettest id="SaveDraftRequest14a">
        <t:uploadServletRequest>
            <filename>${message14.file}</filename>
        </t:uploadServletRequest>
        <t:uploadServletResponse>
            <t:select attr="id" set="message14.aid"/>
        </t:uploadServletResponse>
    </t:uploadservlettest>

    <t:test id="SaveDraftRequest14b" depends="SaveDraftRequest14a">
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${test_account1.name}'/>
                    <su> ${message14.subject} </su>
                    <mp ct="text/plain">
                        <content> ${message14.content}</content>
                    </mp>
                    <attach aid="${message14.aid}"/>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft14.id"/>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="l" match="${folder.draft}"/>
        </t:response>
    </t:test>

    <t:test depends="SaveDraftRequest14b">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${globals.drafts} </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="id" match="${draft14.id}"/>
        </t:response>
    </t:test>

    <t:test depends="SaveDraftRequest14b">
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${draft14.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${draft14.id}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp/mail:mp" attr="cd" match="attachment"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp/mail:mp" attr="filename" match="draft.txt"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="SaveDraftRequest15" type="bhr" bugids="2548">
    <t:objective>To save a mail with a folder ID</t:objective>
    <t:steps>
        1. Create a folder
        2. Save a mail as draft with the folder
        3. Get the draft, verify the folder data is present
    </t:steps>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="folder.parent.id"/>
			</t:select>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="folder${TIME}${COUNTER}" l="${folder.parent.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder.id"/>
        </t:response>
	</t:test>

    <t:test >
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m l="${folder.id}">
                    <mp ct="text/plain">
                        <content>message ${TIME} ${COUNTER}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${draft.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${draft.id}']" attr="l" match="${folder.id}"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="SaveDraftRequest16" type="bhr" bugids="2548">
    <t:objective>To save a mail with a tag ID</t:objective>
    <t:steps>
        1. Create a tag
        2. Save a mail as draft with the tag
        3. Get the draft, verify the tag is present
        4. remove the tags (t="")
        5. Get the draft, verify the tags are removed
    </t:steps>

    <t:test>
        <t:request>
            <CreateTagRequest xmlns="urn:zimbraMail">
                <tag name="tag${TIME}${COUNTER}" color="${tag.colorvalid}" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTagResponse/mail:tag" attr="id" set="tag.id" />
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m t="${tag.id}">
                    <mp ct="text/plain">
                        <content>message ${TIME} ${COUNTER}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${draft.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${draft.id}']" attr="t" match="${tag.id}"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m id="${draft.id}" t="">
                    <mp ct="text/plain">
                        <content>message ${TIME} ${COUNTER}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${draft.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${draft.id}']" attr="t" match="${tag.id}" emptyset="1"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SaveDraftRequest17" type="bhr" bugids="2548">
    <t:objective>To save a mail with multiple tag IDs</t:objective>
    <t:steps>
        1. Create two tags
        2. Save a mail as draft with the tags
        3. Get the draft, verify the tags are present
        4. remove the tags (t="")
        5. Get the draft, verify the tags are removed
    </t:steps>

    <t:test>
        <t:request>
            <CreateTagRequest xmlns="urn:zimbraMail">
                <tag name="tag${TIME}${COUNTER}" color="${tag.colorvalid}" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTagResponse/mail:tag" attr="id" set="tag1.id" />
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateTagRequest xmlns="urn:zimbraMail">
                <tag name="tag${TIME}${COUNTER}" color="${tag.colorvalid}" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTagResponse/mail:tag" attr="id" set="tag2.id" />
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m t="${tag1.id},${tag2.id}">
                    <mp ct="text/plain">
                        <content>message ${TIME} ${COUNTER}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${draft.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${draft.id}']" attr="t" match="${tag1.id},${tag2.id}|${tag2.id},${tag1.id}"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m id="${draft.id}" t="">
                    <mp ct="text/plain">
                        <content>message ${TIME} ${COUNTER}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${draft.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${draft.id}']" attr="t" match="${tag1.id}" emptyset="1"/>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${draft.id}']" attr="t" match="${tag2.id}" emptyset="1"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="SaveDraftRequest18" type="bhr" bugids="2548">
    <t:objective>To save a mail that is flagged</t:objective>
    <t:steps>
        1. Save a mail as draft that is flagged
        2. Get the draft, verify the flagged status is present
        4. remove the flags (f="")
        5. Get the draft, verify the flags are removed
    </t:steps>

    <t:test >
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m f="f">
                    <mp ct="text/plain">
                        <content>message ${TIME} ${COUNTER}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${draft.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${draft.id}']" attr="f" match=".*f.*"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m id="${draft.id}" f="">
                    <mp ct="text/plain">
                        <content>message ${TIME} ${COUNTER}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${draft.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${draft.id}']" attr="f" match=".*f.*" emptyset="1"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SaveDraftRequest19" type="sanity">
    <t:objective> SaveDraftRequest with "idnt" (identity) attribute   </t:objective>
    <t:steps>
        1. Creat one identity 
        2. Save a draft message with specifying that identity
		3. Fire GetMsgRequest to verify saved message belong to same identity.
    </t:steps>

    <t:test id="SaveDraftRequest19a" required="true">
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity1.name}">
					<a name="zimbraPrefIdentityName">${Identity1.name}</a>
					<a name="zimbraPrefFromDisplay">${DisplayFrom1.name}</a>
					<a name="zimbraPrefFromAddress">${account1.name}</a>
					<a name="zimbraPrefReplyToEnabled">${globals.false}</a>
					<a name="zimbraPrefWhenSentToEnabled">${globals.false}</a>
					<a name="zimbraPrefWhenInFoldersEnabled">${globals.false}</a>
					<a name="zimbraPrefForwardReplyFormat">html</a>
					<a name="zimbraPrefForwardReplyPrefixChar">></a>
					<a name="zimbraPrefForwardIncludeOriginalText">includeBodyWithPrefix</a>
					<a name="zimbraPrefReplyIncludeOriginalText">includeBodyWithPrefix</a>
					<a name="zimbraPrefMailSignatureStyle">internet</a>
					<a name="zimbraPrefMailSignatureEnabled">${globals.false}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse/acct:identity" attr="name" match="${Identity1.name}"/>
			<t:select path="//acct:CreateIdentityResponse/acct:identity/acct:a[@ name='zimbraPrefFromAddress']" match="${account1.name}"/>
			<t:select path="//acct:CreateIdentityResponse/acct:identity" attr="id" set="identity1.id"/>
        </t:response>
    </t:test>

	
	<t:test id="SaveDraftRequest19b">
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m idnt="${identity1.id}" rt="r">
				<e t="t" a="admin@${defaultdomain.name}" />
				<su> some subject </su>
                    <mp ct="text/plain">
                        <content>message ${TIME} ${COUNTER}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft.id"/>
        </t:response>
    </t:test>

    <t:test id="SaveDraftRequest19c">
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${draft.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="idnt" match="${identity1.id}"/>
		</t:response>
    </t:test>

 </t:test_case>


<t:test_case testcaseid="SaveDraftRequest20" type="functional">
    <t:objective> Save a draft message with non-existent identity </t:objective>
   	
	<t:test>
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m idnt="1234">
				<e t="t" a="admin@${defaultdomain.name}" />
				<su> some subject </su>
                    <mp ct="text/plain">
                        <content>message ${TIME} ${COUNTER}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m"/>
        </t:response>
    </t:test>

   
</t:test_case>


<t:test_case testcaseid="SaveDraftRequest21" type="deprecated" bugids="16111">
    <t:objective> Delete an Identity and check that a draft message that belonged to that identinty now belongs to default identity  </t:objective>
    <t:steps>
        1. Create an identity 
		2. Get ID of the default identity
        3. Save a draft message with that identity
		4. Fire GetMsgRequest to verify saved message belong to same identity.
		5. Delete that identity
		6. Fire GetMsgRequest to check it doesn't belongs to deleted identity

    </t:steps>

    <t:test id="SaveDraftRequest21a" required="true">
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity2.name}">
					<a name="zimbraPrefIdentityName">${Identity2.name}</a>
					<a name="zimbraPrefFromDisplay">${DisplayFrom2.name}</a>
					<a name="zimbraPrefFromAddress">${account1.name}</a>
					<a name="zimbraPrefReplyToEnabled">${globals.false}</a>
					<a name="zimbraPrefWhenSentToEnabled">${globals.false}</a>
					<a name="zimbraPrefWhenInFoldersEnabled">${globals.false}</a>
					<a name="zimbraPrefForwardReplyFormat">html</a>
					<a name="zimbraPrefForwardReplyPrefixChar">></a>
					<a name="zimbraPrefForwardIncludeOriginalText">includeBodyWithPrefix</a>
					<a name="zimbraPrefReplyIncludeOriginalText">includeBodyWithPrefix</a>
					<a name="zimbraPrefMailSignatureStyle">internet</a>
					<a name="zimbraPrefMailSignatureEnabled">${globals.false}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse/acct:identity" attr="name" match="${Identity2.name}"/>
			<t:select path="//acct:CreateIdentityResponse/acct:identity/acct:a[@ name='zimbraPrefFromAddress']" match="${account1.name}"/>
			<t:select path="//acct:CreateIdentityResponse/acct:identity" attr="id" set="identity1.id"/>
        </t:response>
   
		</t:test >
			
		<t:test id="SaveDraftRequest21b">
			<t:request>
				<GetIdentitiesRequest xmlns="urn:zimbraAccount"/>
			</t:request>
			<t:response>
				<t:select path="//acct:GetIdentitiesResponse/acct:identity" attr="name" match="DEFAULT"/>
				<t:select path="//acct:GetIdentitiesResponse/acct:identity" attr="id" set="identity.default"/>
			</t:response>
		</t:test>
		
		<t:test id="SaveDraftRequest21c">
			<t:request>
				<SaveDraftRequest xmlns="urn:zimbraMail">
					<m idnt="${identity1.id}" rt="r">
					<e t="t" a="admin@${defaultdomain.name}" />
						<su> some subject </su>
					<mp ct="text/plain">
						<content>message ${TIME} ${COUNTER}</content>
					</mp>
					</m>
				</SaveDraftRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="draft.id"/>
			</t:response>
		</t:test>

		<t:test id="SaveDraftRequest21d">
			<t:request>
				<GetMsgRequest xmlns="urn:zimbraMail">
					<m id="${draft.id}"/>
				</GetMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetMsgResponse/mail:m" attr="idnt" match="${identity1.id}"/>
			</t:response>
		</t:test>

		<t:test id="SaveDraftRequest21e" >
			<t:request>
				<DeleteIdentityRequest xmlns="urn:zimbraAccount">
					<identity name="${Identity1.name}"/>
				</DeleteIdentityRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:DeleteIdentityResponse"/>
			</t:response>
		</t:test>

		<t:test id="SaveDraftRequest21f">
			<t:request>
				<GetMsgRequest xmlns="urn:zimbraMail">
					<m id="${draft.id}"/>
				</GetMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetMsgResponse/mail:m" attr="idnt" match="${identity1.id}" emptyset="1"/>
				<t:select path="//mail:GetMsgResponse/mail:m" attr="idnt" match="${identity.default}"/>
			</t:response>
		</t:test>

</t:test_case>


<t:test_case testcaseid="SaveDraftRequest22" type="sanity">
    <t:objective> Save a draft message with orgid attribute </t:objective>
	<t:steps> 1. Send a messsge to urself and get the meesage id
			  2. Save a 
	</t:steps>
   
		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
					<e t="t" a='${test_account1.name}'/>
						<su> ${compose.subject} </su>
					<mp ct="text/plain">
						<content> ${compose.content} </content>
					</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SaveDraftRequest xmlns="urn:zimbraMail">
					<m origid="${msg1.id}">
						<su> some subject </su>
					<mp ct="text/plain">
						<content>message ${TIME} ${COUNTER}</content>
					</mp>
					</m>
				</SaveDraftRequest>
			</t:request>
			<t:response>
			<!--TO DO: Not Sure whether orgid should be returned in the SaveDraftResponse --> 
				<t:select path="//mail:SaveDraftResponse/mail:m"/>
			</t:response>
		</t:test>
   
</t:test_case>


<t:test_case testcaseid="SaveDraftRequest23" type="sanity" bugids="38035, 38503">
    <t:objective> Verify SaveDraftRequest supports relative path </t:objective>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="notbook.folder.id"/>
		</t:response>
	</t:test>

	<t:property name="uploadServletServer" value="${test_acct.server}"/>

	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${upload.filename}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document1.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

    <t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${notbook.folder.id}">
			    <upload id="${document1.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SaveDraftRequest xmlns="urn:zimbraMail">
				<m>
					<su> test doc path </su>
				<mp ct="text/plain">
					<content>message ${TIME} ${COUNTER}</content>
				</mp>
				 <attach >
					  <doc path="Briefcase/basic.html"/>
				</attach>
				</m>
			</SaveDraftRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SaveDraftResponse/mail:m"/>
		</t:response>
	</t:test>

<!-- check if optional="1" and file doesn't exists it should not give "NO_SUCH_DOC" -->

	<t:test>
		<t:request>
			<SaveDraftRequest xmlns="urn:zimbraMail">
				<m>
					<su> test doc path </su>
				<mp ct="text/plain">
					<content>message ${TIME} ${COUNTER}</content>
				</mp>
				 <attach >
					  <doc path="Briefcase/basic1.html" optional="1"/>
				</attach>
				</m>
			</SaveDraftRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SaveDraftResponse/mail:m"/>
		</t:response>
	</t:test>

</t:test_case>


</t:tests>


