<t:tests xmlns:t = "urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name = "test_account1.name" value = "test1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name = "test_account1.password" value = "${defaultpassword.value}"/>

<t:property name = "test_account2.name" value = "test2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name = "test_account2.password" value = "${defaultpassword.value}"/>

<t:property name = "test_account3.name" value = "test3.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name = "test_account3.password" value = "${defaultpassword.value}"/>

<t:property name = "test_account4.name" value = "test4.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name = "test_account4.password" value = "${defaultpassword.value}"/>

<t:property name = "op.delete" value = "delete"/>
<t:property name = "op.recover" value = "recover"/>
<t:property name = "op.trash" value = "trash"/>
<t:property name = "op.move" value = "move"/>

<t:property name="folder1.name" value="testfolder${TIME}${COUNTER}"/>
<t:property name="folder.pname" value="1"/> <!-- Folder's parent ID -->

<t:property name = "message.subject1" value = "Subject${TIME}.${COUNTER}"/>

<t:property name = "message.subject2" value = "Subject2${TIME}.${COUNTER}"/>
<t:property name = "message.subject3" value = "Subject3${TIME}.${COUNTER}"/>

<t:property name = "message.content1" value = "content of the message${TIME}.${COUNTER}"/>

<t:test_case testcaseid = "Ping" type="bhr">
    <t:objective>basic system check</t:objective>
    
    <t:test id = "ping">
        <t:request>
            <PingRequest xmlns = "urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path = "//admin:PingResponse"/>
        </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid = "acct1_setup" type="always">
    <t:objective>create test account</t:objective>
    
    <t:test id = "admin_login" required = "true" depends = "ping">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:AuthResponse/admin:authToken" set = "authToken"/>
        </t:response>
    </t:test>
    
    <t:test id = "create_test_account1" required = "false" depends = "admin_login">
        <t:request>
            <CreateAccountRequest xmlns = "urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account1.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:CreateAccountResponse/admin:account" attr = "id" set = "test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server"/>
        </t:response>
    </t:test>
    
     <t:test id = "create_test_account2" required = "false" depends = "admin_login">
        <t:request>
            <CreateAccountRequest xmlns = "urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${test_account2.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:CreateAccountResponse/admin:account" attr = "id" set = "test_account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>
    
    <t:test id = "create_test_account3" required = "false" depends = "admin_login">
        <t:request>
            <CreateAccountRequest xmlns = "urn:zimbraAdmin">
                <name>${test_account3.name}</name>
                <password>${test_account3.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:CreateAccountResponse/admin:account" attr = "id" set = "test_account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
        </t:response>
    </t:test>
    
    <t:test id = "create_test_account3" required = "false" depends = "admin_login">
        <t:request>
            <CreateAccountRequest xmlns = "urn:zimbraAdmin">
                <name>${test_account4.name}</name>
                <password>${test_account4.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:CreateAccountResponse/admin:account" attr = "id" set = "test_account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct4.server"/>
        </t:response>
    </t:test>
</t:test_case>
    
	
<t:test_case testcaseid = "message_HardDelete_01" type="always">
    <t:objective>Hard delete a message</t:objective>
    <t:steps>1. Login as Account1
             2. zimbraDumpsterEnabled=False 
             3. Send message1 to Account3
             3. Hard delete a message
             4. Verify message has been hard deleted 
    </t:steps>
    
    <t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test id = "auth" required = "true">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by = "name">${test_account1.name}</account>
                <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//acct:AuthResponse/acct:authToken" set = "authToken"/>

        </t:response>
    </t:test>
    
    <t:test id = "Send_mail">
        <t:request>
            <SendMsgRequest xmlns = "urn:zimbraMail">
                <m>
                    <e t = "t" a = "${test_account3.name}"/>
                    <su>${message.subject1}</su>
                    <mp ct = "text/plain">
                        <content>${message.content1}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:SendMsgResponse/mail:m" attr = "id" set = "message.id1"/>
        </t:response>
    </t:test>
    
    <t:property name="server.zimbraAccount" value="${test_acct3.server}"/>

    <t:test id = "auth" required = "true">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by = "name">${test_account3.name}</account>
                <password>${test_account3.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//acct:AuthResponse/acct:authToken" set = "authToken"/>

        </t:response>
    </t:test>
    
    <t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   		<query>${message.subject1}</query>
		 		 <types>message</types>
		 	</SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr = "id" set = "message.id1"/>
		 </t:response>
	</t:test>
    
    <t:test id = "ItemActionRequest01">
        <t:request>
            <ItemActionRequest  xmlns = "urn:zimbraMail">
                <action id = "${message.id1}" op = "${op.delete}"/>
            </ItemActionRequest >
        </t:request>
        <t:response>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "op" match = "${op.delete}"/>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "id" match = "${message.id1}"/>
        </t:response>
     </t:test>
        
        <t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>${message.subject1}</query>
		   <types>message</types>
		  
		   </SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" emptyset="1"/>
		 </t:response>
	</t:test>
        
</t:test_case>

<t:test_case testcaseid = "message_HardDelete_02" type="always">
    <t:objective>Verify the deleted message is viewable by Account3 after recovery</t:objective>
    <t:steps>1. Login as Account1
             2. zimbraDumpsterEnabled=True 
             3. Send message1 to Account3
             3. Hard delete a message from account3
             4. Recover deleted message 
             5. Verify the deleted message is viewable by Account3 after recovery
    </t:steps>
    
    <t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    
    <t:test id = "admin_login" required = "true" depends = "ping">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:AuthResponse/admin:authToken" set = "authToken"/>
        </t:response>
    </t:test>
    
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account3.id}</id>
                <a n = "zimbraDumpsterEnabled">TRUE</a>
                
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
    
    <t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test id = "auth" required = "true">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by = "name">${test_account1.name}</account>
                <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//acct:AuthResponse/acct:authToken" set = "authToken"/>

        </t:response>
    </t:test>
    
    <t:test id = "Send_mail">
        <t:request>
            <SendMsgRequest xmlns = "urn:zimbraMail">
                <m>
                    <e t = "t" a = "${test_account3.name}"/>
                    <su>${message.subject1}</su>
                    <mp ct = "text/plain">
                        <content>${message.content1}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:SendMsgResponse/mail:m" attr = "id" set = "message.id1"/>
        </t:response>
    </t:test>
    
    <t:property name="server.zimbraAccount" value="${test_acct3.server}"/>

    <t:test id = "auth" required = "true">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by = "name">${test_account3.name}</account>
                <password>${test_account3.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//acct:AuthResponse/acct:authToken" set = "authToken"/>

        </t:response>
    </t:test>
    
     <t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		  		 <query>${message.subject1}</query>
		   		 <types>message</types>
		   </SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message.id1"/>
		 </t:response>
	</t:test>
	
    <t:test id = "ItemActionRequest02">
        <t:request>
            <ItemActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message.id1}" op = "${op.delete}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "op" match = "${op.delete}"/>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "id" match = "${message.id1}"/>
        </t:response>
    </t:test>
    
    <t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>in:"inbox" ${message.subject1}</query>
		   <types>message</types>
		  
		   </SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" emptyset="1"/>
		 </t:response>
	</t:test>
   
   <t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		  		 <query>${message.subject1}</query>
		   		 <types>message</types>
		 		 <inDumpster>1</inDumpster>
		   </SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message.id1"/>
		 </t:response>
	</t:test>
	
	<!-- find out which folder ID is the inbox -->
    <t:test id="getFolderRequest">
        <t:request>
               <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>              
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="inboxFolder.id"/>
        </t:response>
    </t:test>
   
    
    <t:test id = "ItemActionRequest03">
        <t:request>
            <ItemActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message.id1}" op = "${op.recover}" l="${inboxFolder.id}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "op" match = "${op.recover}"/>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "id" match = "${message.id1}"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail">
				<query>in:inbox</query>
			</SearchRequest>
		</t:request>
		<t:response>
		
			<t:select path="//mail:SearchResponse/mail:c" attr="su" match="${message.subject1}"/>
		</t:response>
	</t:test>	
</t:test_case>

<t:test_case testcaseid = "message_HardDelete_03" type="always">
    <t:objective>Verify that multiple messages can recover after hard deletion of messages.</t:objective>
    <t:steps>1. Login as Account1
             2. zimbraDumpsterEnabled=True 
             3. Send multiple messages to Account2
             3. Hard delete a messages from Account2
             4. Recover deleted messages
             5. Verify the deleted message is viewable by Account3 after recovery
    </t:steps>
    
    <t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    
    <t:test id = "admin_login" required = "true" depends = "ping">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:AuthResponse/admin:authToken" set = "authToken"/>
        </t:response>
    </t:test>
    
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account2.id}</id>
                <a n = "zimbraDumpsterEnabled">TRUE</a>
                
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
    
    <t:property name="server.zimbraAccount" value="${test_acct2.server}"/>

    <t:test id = "auth" required = "true">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by = "name">${test_account1.name}</account>
                <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//acct:AuthResponse/acct:authToken" set = "authToken"/>

        </t:response>
    </t:test>
    
    <t:test id = "Send_mail">
        <t:request>
            <SendMsgRequest xmlns = "urn:zimbraMail">
                <m>
                    <e t = "t" a = "${test_account2.name}"/>
                    <su>${message.subject2}</su>
                    <mp ct = "text/plain">
                        <content>${message.content1}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:SendMsgResponse/mail:m" attr = "id" set = "message1.id"/>
        </t:response>
    </t:test>
    
    <t:test id = "Send_mail">
        <t:request>
            <SendMsgRequest xmlns = "urn:zimbraMail">
                <m>
                    <e t = "t" a = "${test_account2.name}"/>
                    <su>${message.subject3}</su>
                    <mp ct = "text/plain">
                        <content>${message.content1}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:SendMsgResponse/mail:m" attr = "id" set = "message2.id"/>
        </t:response>
    </t:test>
    
    <t:property name="server.zimbraAccount" value="${test_acct2.server}"/>

    <t:test id = "auth" required = "true">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by = "name">${test_account2.name}</account>
                <password>${test_account2.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//acct:AuthResponse/acct:authToken" set = "authToken"/>

        </t:response>
    </t:test>
    
     <t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		  		 <query>${message.subject2}</query>
		   		 <types>message</types>
		   </SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message2.id"/>
		 </t:response>
	</t:test>
	
	<t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		  		 <query>${message.subject3}</query>
		   		 <types>message</types>
		   </SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message3.id"/>
		 </t:response>
	</t:test>
    
    <t:test id = "ItemActionRequest02">
        <t:request>
            <ItemActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message2.id},${message3.id}" op = "${op.delete}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "op" match = "${op.delete}"/>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "id" match = "${message2.id},${message3.id}"/>
        </t:response>
    </t:test>
     
     <t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>in:"inbox" ${message.subject2}</query>
		   <types>message</types>
		  
		   </SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" emptyset="1"/>
		 </t:response>
	</t:test>
	
	<t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>in:"inbox" ${message.subject3}</query>
		   <types>message</types>
		  
		   </SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" emptyset="1"/>
		 </t:response>
	</t:test>
	
    <t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>${message.subject2}</query>
		   <types>message</types>
		   <inDumpster>1</inDumpster>
		   </SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message2.id"/>
		 </t:response>
	</t:test>
    
	
	<t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>${message.subject3}</query>
		   <types>message</types>
		   <inDumpster>1</inDumpster>
		   </SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message3.id"/>
		 </t:response>
	</t:test>
    
    <!-- find out which folder ID is the inbox -->
    <t:test id="getFolderRequest">
        <t:request>
               <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>              
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="inboxFolder.id"/>
        </t:response>
    </t:test>
    
    
     <t:test id = "ItemActionRequest03">
        <t:request>
            <ItemActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message2.id},${message3.id}" op = "${op.recover}" l="${inboxFolder.id}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "op" match = "${op.recover}"/>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "id" match = "${message2.id},${message3.id}"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail">
				<query>in:inbox</query>
			</SearchRequest>
		</t:request>
		<t:response>	
			<t:select path="//mail:SearchResponse/mail:c" attr="su" match="${message.subject2}"/>
		</t:response>
	</t:test>	
	
	<t:test >
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail">
				<query>in:inbox</query>
			</SearchRequest>
		</t:request>
		<t:response>	
			<t:select path="//mail:SearchResponse/mail:c" attr="su" match="${message.subject3}"/>
		</t:response>
	</t:test>	
</t:test_case>

<t:test_case testcaseid = "message_HardDelete_04" type="always">
    <t:objective>Hard delete a message</t:objective>
    <t:steps>1. Login as Account3
             2. zimbraDumpsterEnabled=False 
             3. Send message1 to Account1
             3. Delete a message from Account1
             4. Verify message moved to Trash
             5. Undo delete
             6. Verify message is in the Inbox 
              
    </t:steps>
    
    <t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test id = "auth" required = "true">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by = "name">${test_account3.name}</account>
                <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//acct:AuthResponse/acct:authToken" set = "authToken"/>

        </t:response>
    </t:test>
    
    <t:test id = "Send_mail">
        <t:request>
            <SendMsgRequest xmlns = "urn:zimbraMail">
                <m>
                    <e t = "t" a = "${test_account1.name}"/>
                    <su>${message.subject1}</su>
                    <mp ct = "text/plain">
                        <content>${message.content1}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:SendMsgResponse/mail:m" attr = "id" set = "message.id1"/>
        </t:response>
    </t:test>
    
    <t:property name="server.zimbraAccount" value="${test_acct.server}"/>

    <t:test id = "auth" required = "true">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by = "name">${test_account1.name}</account>
                <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//acct:AuthResponse/acct:authToken" set = "authToken"/>

        </t:response>
    </t:test>
    
    <t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   		<query>${message.subject1}</query>
		 		 <types>message</types>
		 	</SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr = "id" set = "message.id1"/>
		 </t:response>
	</t:test>
    
    <t:test id = "ItemActionRequest01">
        <t:request>
            <ItemActionRequest  xmlns = "urn:zimbraMail">
                <action id = "${message.id1}" op = "${op.trash}"/>
            </ItemActionRequest >
        </t:request>
        <t:response>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "op" match = "${op.trash}"/>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "id" match = "${message.id1}"/>
        </t:response>
     </t:test>
        
        <t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>in:"inbox" ${message.subject1}</query>
		   <types>message</types>
		  
		   </SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" emptyset="1"/>
		 </t:response>
	</t:test>
	
	<t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>in:"trash" ${message.subject1}</query>
		   <types>message</types>
		  
		   </SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr = "id" set = "message.id1"/>
		 </t:response>
	</t:test>
	
	 <!-- find out which folder ID is the inbox -->
    <t:test id="getFolderRequest">
        <t:request>
               <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>              
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="inboxFolder.id"/>
        </t:response>
    </t:test>
    
    
	<t:test id = "ItemActionRequest01">
        <t:request>
            <ItemActionRequest  xmlns = "urn:zimbraMail">
                <action id = "${message.id1}" op = "${op.move}" l="${inboxFolder.id}"/>
            </ItemActionRequest >
        </t:request>
        <t:response>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "op" match = "${op.move}"/>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "id" match = "${message.id1}"/>
        </t:response>
     </t:test> 
     
     <t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>in:"inbox" ${message.subject1}</query>
		   <types>message</types>
		  
		   </SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr = "id" match = "${message.id1}"/>
		 </t:response>
	</t:test>
     
</t:test_case>

<t:test_case testcaseid = "message_HardDelete_05" type="always">
    <t:objective>Verify that multiple messages can recover after hard deletion of messages.</t:objective>
    <t:steps>1. Login as Account1
             2. zimbraDumpsterEnabled=True 
             3. Send messages to Account4 from account1
             4. Login as Account4 > create folder "test" 
             5. Hard delete a messages from Account4
             4. Recover deleted message to "test" folder
             5. Verify the deleted message is viewable in folder "test" by Account2 after recovery
    </t:steps>
    
    <t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    
    <t:test id = "admin_login" required = "true" depends = "ping">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:AuthResponse/admin:authToken" set = "authToken"/>
        </t:response>
    </t:test>
    
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account4.id}</id>
                <a n = "zimbraDumpsterEnabled">TRUE</a>
                
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
    
    <t:property name="server.zimbraAccount" value="${test_acct2.server}"/>

    <t:test id = "auth" required = "true">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by = "name">${test_account1.name}</account>
                <password>${test_account4.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//acct:AuthResponse/acct:authToken" set = "authToken"/>

        </t:response>
    </t:test>
    
    <t:test id = "Send_mail">
        <t:request>
            <SendMsgRequest xmlns = "urn:zimbraMail">
                <m>
                    <e t = "t" a = "${test_account4.name}"/>
                    <su>${message.subject2}</su>
                    <mp ct = "text/plain">
                        <content>${message.content1}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:SendMsgResponse/mail:m" attr = "id" set = "message1.id"/>
        </t:response>
    </t:test>
    
    <t:property name="server.zimbraAccount" value="${test_acct4.server}"/>

    <t:test id = "auth" required = "true">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by = "name">${test_account4.name}</account>
                <password>${test_account4.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//acct:AuthResponse/acct:authToken" set = "authToken"/>

        </t:response>
    </t:test>
    
     <t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		  		 <query>${message.subject2}</query>
		   		 <types>message</types>
		   </SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message2.id"/>
		 </t:response>
	</t:test>
	
    <t:test id = "ItemActionRequest02">
        <t:request>
            <ItemActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message2.id}" op = "${op.delete}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "op" match = "${op.delete}"/>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "id" match = "${message2.id}"/>
        </t:response>
    </t:test>
     
     <t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>in:"inbox" ${message.subject2}</query>
		   <types>message</types>	  
		   </SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" emptyset="1"/>
		 </t:response>
	</t:test>
	
    <t:test>
		 <t:request>
		   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>${message.subject2}</query>
		   <types>message</types>
		   <inDumpster>1</inDumpster>
		   </SearchRequest>
		 </t:request>
		  <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message2.id"/>
		 </t:response>
	</t:test>
    
    <!-- Create a folder.-->
    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder1.name}" l="${folder.pname}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder1.id"/>
        </t:response>
    </t:test>
	
     <t:test id = "ItemActionRequest03">
        <t:request>
            <ItemActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message2.id}" op = "${op.recover}" l="${folder1.id}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "op" match = "${op.recover}"/>
            <t:select path = "//mail:ItemActionResponse/mail:action" attr = "id" match = "${message2.id}"/>      
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail">
				<query>in:"${folder1.name}"</query>
			</SearchRequest>
		</t:request>
		<t:response>	
			<t:select path="//mail:SearchResponse/mail:c" attr="su" match="${message.subject2}"/>
			<t:select path="//mail:SearchResponse/mail:c/mail:m" attr="id" set="msg2.id"/>
		</t:response>
	</t:test>	
	
	
	<!--   Search the mail in newly created folder. -->
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message" sortBy="dateDesc" offset="0" limit="25">
                <query>in:"${folder1.name}"</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m[@id='${msg2.id}']" />
        </t:response>
    </t:test>
</t:test_case>

</t:tests>