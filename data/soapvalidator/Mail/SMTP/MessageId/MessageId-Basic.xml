<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="account${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="account${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="account${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="message.folder" value="${testMailRaw.root}/email43/"/>

<t:property name="message1.file" value="${message.folder}/email43A.txt"/>
<t:property name="message1.subject" value="email43A"/>

<t:property name="message2.file" value="${message.folder}/email43B.txt"/>
<t:property name="message2.subject" value="email43B"/>


<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="acct1_setup" type="always">
    <t:objective>create test account</t:objective>
    
    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test required="true" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>
    
     <t:test>
			<t:request>
				<GetServerRequest xmlns="urn:zimbraAdmin">
					<server by="name">${zimbraServer.name}</server>
				</GetServerRequest>
			</t:request>
			<t:response>
		            <t:select path='//admin:GetServerResponse/admin:server/admin:a[@n="zimbraSmtpHostname"]' set="mta.server"/>
			</t:response>
   	</t:test>
		
    
</t:test_case>


<t:test_case testcaseid="SMTP_MessageID_01" type="bhr">
    <t:objective>Verify a message ID is added to a message received by SMTP</t:objective>
    
    <t:smtpinjecttest>
        <t:smtpInjectRequest>
            <address>${mta.server}</address>
            <filename>${message1.file}</filename>
            <recipient>${account1.name}</recipient>
        </t:smtpInjectRequest>
    </t:smtpinjecttest>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test required="true" >
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
	   			<query>subject:(${message1.subject})</query>
   			</SearchRequest>
	 	</t:request>
  		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message1.id"/>
	 	</t:response>
	</t:test>

	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<id>${message1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
			<t:select attr="Message-Id" match=".*"/>
		</t:restServletResponse>
	</t:resttest>

</t:test_case>

<t:test_case testcaseid="SMTP_MessageID_02" type="bhr">
    <t:objective>Verify the same message ID is not added twice</t:objective>
    
    <t:smtpinjecttest>
        <t:smtpInjectRequest>
            <address>${mta.server}</address>
            <filename>${message2.file}</filename>
            <recipient>${account1.name}</recipient>
        </t:smtpInjectRequest>
    </t:smtpinjecttest>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test required="true" >
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
	   			<query>subject:(${message2.subject})</query>
   			</SearchRequest>
	 	</t:request>
  		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message2.id"/>
	 	</t:response>
	</t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${message2.id}" op="delete"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse"/>
        </t:response>
    </t:test>

    <t:smtpinjecttest>
        <t:smtpInjectRequest>
            <address>${mta.server}</address>
            <filename>${message2.file}</filename>
            <recipient>${account1.name}</recipient>
        </t:smtpInjectRequest>
    </t:smtpinjecttest>
    
	<t:test required="true" >
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
	   			<query>subject:(${message2.subject})</query>
   			</SearchRequest>
	 	</t:request>
  		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" emptyset="1"/>
	 	</t:response>
	</t:test>


</t:test_case>



</t:tests>
