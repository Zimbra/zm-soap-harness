<t:tests xmlns:t="urn:zimbraTestHarness">
	<t:property name="test_account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account3.name" value="test3.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="msg01.subject" value="test mail" />
	<t:property name="message.content1" value="content of the message${TIME}.${COUNTER}" />
	<t:property name="persona.default.name" value="DEFAULT" />
	<t:property name="msg02.subject" value="test mail from persona" />
	<t:property name="message.content2" value="content of the message${TIME}.${COUNTER}" />
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}" />

	<t:test_case testcaseid="Ping" type="always">
		<t:objective>basic system check</t:objective>
		<t:test id="ping" required="true">
			<t:request>
				<PingRequest xmlns="urn:zimbraAdmin" />
			</t:request>
			<t:response>
				<t:select path="//admin:PingResponse" />
			</t:response>
		</t:test>
	</t:test_case>

	<t:test_case testcaseid="acct1_setup" type="always">
		<t:objective>Create test accounts</t:objective>

		<!-- Login as the admin to get an auth token -->
		<t:test id="admin_login" required="true" depends="ping">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<!-- Create test accounts -->
		<t:test id="create_acct1" required="true" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account1.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account1.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="test_acct1.server" />
			</t:response>
		</t:test>

		<t:test id="create_acct2" required="true" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account2.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account2.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="test_acct2.server" />
			</t:response>
		</t:test>

		<t:test id="create_acct3" required="true" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account3.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account3.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="test_acct3.server" />
			</t:response>
		</t:test>

		<!-- Grant test_account1.name sendAs permission on test_account2.name -->
		<t:test required="true">
			<t:request>
				<GrantRightRequest xmlns="urn:zimbraAdmin">
					<target xmlns="" by="name" type="account">${test_account2.name}</target>
					<grantee xmlns="" by="name" type="usr">${test_account1.name}</grantee>
					<right xmlns="">sendAs</right>
				</GrantRightRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:GrantRightResponse" />
			</t:response>
		</t:test>	
		
	</t:test_case>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}" />

	<t:test_case testcaseid="sendMailAsPrimaryAccount" type="bhr">
		<t:objective>Verify user is able to send an email with sendAs right
		</t:objective>
		<t:steps>
			1. Login into Admin.
			2. Grant Permission "sendAs" to Account1 on Account2
			3. Login into Account1.
			4. Send DiscoverRightsRequest to discover grants granted.
			5. Send email with From: Primary Account to Account3 and Verify message details using GetMsgRequest
			6. Verify message details using GetMsgRequest
		</t:steps>

		<!-- Login as gratee test_account1.name -->
		<t:property name="server.zimbraAccount" value="${test_acct1.server}" />
		<t:test id="auth_acct1" required="true" depends="acct1_setup">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${test_account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<!-- Verify right using DiscoverRightsRequest -->
		<t:test>
			<t:request>
				<DiscoverRightsRequest xmlns="urn:zimbraAccount">
					<right>sendAs</right>
				</DiscoverRightsRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:DiscoverRightsResponse/acct:targets"
					attr="right" match="sendAs" />
				<t:select
					path="//acct:DiscoverRightsResponse/acct:targets/acct:target/acct:email[@addr='${test_account2.name}']" />
			</t:response>
		</t:test>

		<!-- Send email with From: Primary Account -->
		<t:test id="sendmail1" required="true">
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="f" a="${test_account2.name}" />
						<e t="t" a="${test_account3.name}" />
						<su> ${msg01.subject}</su>
						<mp ct="text/plain">
							<content> ${message.content1}</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//zimbra:Code" match="service.PERM_DENIED"
					emptyset="1" />
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="message.id1" />
			</t:response>
		</t:test>

		<!-- Verify message details using GetMsgRequest -->
		<t:test id="GetMsgRequest">
			<t:request>
				<GetMsgRequest xmlns="urn:zimbraMail">
					<m id="${message.id1}" />
				</GetMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetMsgResponse/mail:m[@id='${message.id1}']">
					<t:select path="//mail:e[@t='f']" attr="a"
						match="${test_account2.name}" />
					<t:select path="//mail:e[@t='t']" attr="a"
						match="${test_account3.name}" />
					<t:select path="//mail:su" match="${msg01.subject}" />
				</t:select>
			</t:response>
		</t:test>

		<!-- Login as recipient test_account3.name -->
		<t:property name="server.zimbraAccount" value="${test_acct3.server}" />
		<t:test id="auth_acct3" required="true" depends="acct1_setup">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${test_account3.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>from:(${test_account2.name})</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m/mail:su"
					match="${msg01.subject}" />
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg01.id" />
			</t:response>
		</t:test>

		<!-- Verify message details using GetMsgRequest -->
		<t:test id="GetMsgRequest">
			<t:request>
				<GetMsgRequest xmlns="urn:zimbraMail">
					<m id="${msg01.id}" />
				</GetMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetMsgResponse/mail:m[@id='${msg01.id}']">
					<t:select path="//mail:e[@t='f']" attr="a"
						match="${test_account2.name}" />
					<t:select path="//mail:e[@t='t']" attr="a"
						match="${test_account3.name}" />
					<t:select path="//mail:su" match="${msg01.subject}" />
				</t:select>
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg01.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="Return-Path" match=".?${test_account1.name}.?" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

	<t:test_case testcaseid="sendMailAsPrimaryAccountPersona" type="bhr">
		<t:objective>Verify user is able to send an email with sendAs right
		</t:objective>
		<t:steps>
			1. Login into Admin.
			2. Grant Permission "sendAs" to Account1 on Account2
			3. Login into Account1.
			4. Send DiscoverRightsRequest to discover grants granted.
			5. Create Persona and Send email with From: Primary Account to Account3 and Verify message details using GetMsgRequest
			6. Verify message details using GetMsgRequest
		</t:steps>
		<!-- Login as gratee test_account1.name -->
		<t:property name="server.zimbraAccount" value="${test_acct1.server}" />
		<t:test id="auth_acct1" required="true" depends="acct1_setup">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${test_account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<!-- verify right using DiscoverRightsRequest -->
		<t:test>
			<t:request>
				<DiscoverRightsRequest xmlns="urn:zimbraAccount">
					<right>sendAs</right>
				</DiscoverRightsRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:DiscoverRightsResponse/acct:targets"
					attr="right" match="sendAs" />
				<t:select
					path="//acct:DiscoverRightsResponse/acct:targets/acct:target/acct:email[@addr='${test_account2.name}']" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<GetIdentitiesRequest xmlns="urn:zimbraAccount" />
			</t:request>
			<t:response>
				<t:select path="//acct:GetIdentitiesResponse">
					<t:select path="//acct:identity[@name='DEFAULT']" attr="id"
						set="account1.identity.default.id" />
				</t:select>
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<ModifyIdentityRequest xmlns="urn:zimbraAccount">
					<identity name="DEFAULT">
						<a name="zimbraPrefFromAddress">${test_account2.name}</a>
					</identity>
				</ModifyIdentityRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:ModifyIdentityResponse" />
			</t:response>
		</t:test>

		<!-- Send email with From: Primary Account -->
		<t:test id="sendmail1" required="true">
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="f" a="${test_account2.name}" p="${persona.default.name}" />
						<e t="t" a="${test_account3.name}" />
						<su> ${msg02.subject}</su>
						<mp ct="text/plain">
							<content> ${message.content1}</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//zimbra:Code" match="service.PERM_DENIED"
					emptyset="1" />
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="message.id2" />
			</t:response>
		</t:test>

		<!-- Verify message details using GetMsgRequest -->
		<t:test id="GetMsgRequest">
			<t:request>
				<GetMsgRequest xmlns="urn:zimbraMail">
					<m id="${message.id2}" />
				</GetMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetMsgResponse/mail:m[@id='${message.id2}']">
					<t:select path="//mail:e[@t='f']" attr="a"
						match="${test_account2.name}" />
					<t:select path="//mail:e[@t='t']" attr="a"
						match="${test_account3.name}" />
					<t:select path="//mail:e[@t='f']" attr="p"
						match="${persona.default.name}" />
					<t:select path="//mail:su" match="${msg02.subject}" />
				</t:select>
			</t:response>
		</t:test>

		<!-- Login as recipient test_account3.name -->
		<t:property name="server.zimbraAccount" value="${test_acct3.server}" />
		<t:test id="auth_acct3" required="true" depends="acct1_setup">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${test_account3.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>from:(${test_account2.name})</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m/mail:su"
					match="${msg02.subject}" />
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg02.id" />
			</t:response>
		</t:test>

		<!-- Verify message details using GetMsgRequest -->
		<t:test id="GetMsgRequest">
			<t:request>
				<GetMsgRequest xmlns="urn:zimbraMail">
					<m id="${msg02.id}" />
				</GetMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetMsgResponse/mail:m[@id='${msg02.id}']">
					<t:select path="//mail:e[@t='f']" attr="a"
						match="${test_account2.name}" />
					<t:select path="//mail:e[@t='t']" attr="a"
						match="${test_account3.name}" />
					<t:select path="//mail:e[@t='f']" attr="p"
						match="${persona.default.name}" />
					<t:select path="//mail:su" match="${msg02.subject}" />
				</t:select>
			</t:response>
		</t:test>
	</t:test_case>

</t:tests>