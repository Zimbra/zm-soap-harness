<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:property name="test_account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account1.password" value="test123"/>

<t:property name="conv.spchar" value="//\\'^%"/>
<t:property name="conv.space" value="           "/>
<t:property name="conv.blank" value=""/>
<t:property name="conv.sometext" value="some text"/>
<t:property name="number.negative" value="-50"/>
<t:property name="number.invalid" value="0099"/>
<t:property name="number.decimal" value="10.10"/>

<t:property name="op.read" value="read"/>

<t:property name="message.subject1" value="Subject${TIME}.${COUNTER}"/>
<t:property name="message.content1" value="content of the message${TIME}.${COUNTER}"/>
<t:property name="test_acct1.server" value="NOT_DEFINED"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acctSetup_conv_tcon" type="always" >
    <t:objective>Create test account</t:objective>
    <t:steps> 1. Login to admin account
            2. Create a test_account1
    </t:steps>

    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id="create_test_account1" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account1.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>

</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

<t:test_case testcaseid="CreateConversation1" type="always" >
    <t:objective>Create a conversation</t:objective>
    <t:steps>
        1. Login as Test account
        2. Send message to own address
        3. Forward the previous message
        4. Search for the conversation in sent folder
        5. Get msg id of a message in sent folder
    </t:steps>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test id="sendmail1" required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${test_account1.name}'/>
                    <su> ${message.subject1}</su>
                    <mp ct="text/plain">
                        <content> ${message.content1}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message.id1"/>
        </t:response>
    </t:test>

    <t:test id="sendmail2" required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m origid="${message.id1}" rt="w">
                    <e t="t" a='${test_account1.name}'/>
                    <su> Fwd: ${message.subject1}</su>
                    <mp ct="text/plain">
                        <content> Forwarded content : ${message.content1}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message.id2"/>
        </t:response>
    </t:test>

    <t:test id="searchConv">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="dateDesc" offset="0" limit="25">
                <query>in:${globals.sent}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:c" attr="id" set="conv.id1"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="ConvActionRequest1" type="functional">
    <t:objective>ConvActionRequest invalid values of tcon </t:objective>

    <!--ConvActionRequest with valid tcon with leading spaces-->
    <t:test>
        <t:request>
            <ConvActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.read}" tcon="     s"/>
            </ConvActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

    <!--ConvActionRequest with valid tcon with trailing spaces-->
    <t:test>
        <t:request>
            <ConvActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.read}" tcon="s      "/>
            </ConvActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

    <!--ConvActionRequest with valid tcon with both leading and trailing spaces-->
    <t:test>
        <t:request>
            <ConvActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.read}" tcon="         s      "/>
            </ConvActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>
 
    <!--ConvActionRequest with spaces in place of tcon-->
    <t:test>
        <t:request>
            <ConvActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.read}" tcon="${conv.space}"/>
            </ConvActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test> 

    <!--ConvActionRequest with blank in place of tcon-->
   <!-- <t:test>
        <t:request>
            <ConvActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.read}" tcon="${conv.blank}"/>
            </ConvActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>
-->
    <!--ConvActionRequest with special characters in place of tcon-->
    <t:test>
        <t:request>
            <ConvActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.read}" tcon="${conv.spchar}"/>
            </ConvActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>
 
    <!--ConvActionRequest with some text in place of tcon-->
    <t:test>
        <t:request>
            <ConvActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.read}" tcon="${conv.sometext}"/>
            </ConvActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

    <!--ConvActionRequest with some other alphabet(other than t, s, j and o) in place of tcon-->
    <t:test>
        <t:request>
            <ConvActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.read}" tcon="z"/>
            </ConvActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

    <!--ConvActionRequest with an invalid number in place of tcon-->
    <t:test>
        <t:request>
            <ConvActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.read}" tcon="${number.invalid}"/>
            </ConvActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

    <!--ConvActionRequest with a negative number in place of tcon-->
    <t:test>
        <t:request>
            <ConvActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.read}" tcon="${number.negative}"/>
            </ConvActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

    <!--ConvActionRequest with a decimal number in place of tcon-->
    <t:test>
        <t:request>
            <ConvActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.read}" tcon="${number.decimal}"/>
            </ConvActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>


</t:test_case>


<t:test_case testcaseid="ConvActionRequest2" type="bhr">
    <t:objective>ConvActionRequest with combination of constraints of tcon</t:objective>

    <t:test id="ConvActionRequest12">
        <t:request>
            <ConvActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.read}" tcon="tj"/>
            </ConvActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ConvActionResponse/mail:action" attr="op" match="${op.read}"/>
            <t:select path="//mail:ConvActionResponse/mail:action" attr="id" match="${conv.id1}"/>
        </t:response>
    </t:test>

</t:test_case>

</t:tests>
