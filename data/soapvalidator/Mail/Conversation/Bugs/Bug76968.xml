<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="conv.sometext" value="some text"/>
<t:property name="message.subject1" value="Subject${TIME}.${COUNTER}"/>
<t:property name="message.content1" value="content of the message${TIME}.${COUNTER}"/>
<t:property name="text" value="abcd"/>
<t:property name="test_acct1.server" value="NOT_DEFINED"/>

<t:test_case testcaseid="Ping" type="always" >
	<t:objective>basic system check</t:objective>
    
	<t:test id="ping">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="acct_setup" type="always" >
	<t:objective>Create a test account</t:objective>
	<steps> 1. Login to admin account, 2. Create a test_account1 </steps>

	<t:test id="admin_login" required="true" depends="ping">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
        	<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_accountid1.id"/>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="account1.server"/>
        </t:response>
    </t:test>    

</t:test_case>

<t:property name="server.zimbraAccount" value="${account1.server}"/>

<t:test_case testcaseid="bug76968" type="bhr" bugids="76968" >
	<t:objective>login as the test account</t:objective>
	<t:steps> 
        1. Login to account1 
        2. Send a mail to account1        
	</t:steps>
    
	<t:test id="auth1" required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test id="getFolderRequest">
        <t:request>
               <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>              
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="account1.inboxFolder.id"/>
            <t:select path="//mail:folder[@name='${globals.trash}']" attr="id" set="account1.trashFolder.id"/>
            <t:select path="//mail:folder[@name='${globals.sent}']" attr="id" set="account1.sentFolder.id"/>
            <t:select path="//mail:folder[@name='${globals.spam}']" attr="id" set="account1.spamFolder.id"/> 
            <t:select path="//mail:folder[@name='${globals.drafts}']" attr="id" set="account1.draftsFolder.id"/>
        </t:response>
    </t:test>

	<t:test id="sendmail1" required="true">
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="t" a="${account1.name}"/>
					<su> ${message.subject1}</su>
					<mp ct="text/plain">
					<content> ${message.content1}</content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message.id1"/>
		</t:response>
	</t:test>
		
	<t:test id="sendmail2" required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m origid="${message.id1}" rt="w">
                    <e t="t" a="${account1.name}"/>
                    <su> Fwd: ${message.subject1}</su>
                    <mp ct="text/plain">
                        <content> $ Forwarded content : {message.content1}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message.id2"/>
        </t:response>
    </t:test>

	<t:test id="searchConv">
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="dateDesc" offset="0" limit="25">
				<query>in:sent</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:c" attr="id" set="conv.id"/>
			<t:select path="//mail:SearchResponse/mail:c/mail:m[1]" attr="l" set="location.id1"/>
			<t:select path="//mail:SearchResponse/mail:c/mail:m[2]" attr="l" set="location.id2"/>
			<t:select path="//mail:SearchResponse/mail:c/mail:m[1]" attr="id" set="id1"/>
			<t:select path="//mail:SearchResponse/mail:c/mail:m[2]" attr="id" set="id2"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetConvRequest xmlns="urn:zimbraMail">
				<c id="${conv.id}"/>
			</GetConvRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GetConvResponse/mail:c/mail:m" attr="l" match="${location.id1}"/>
			<t:select path="//mail:GetConvResponse/mail:c/mail:m" attr="l" match="${location.id2}"/>
			<t:select path="//mail:GetConvResponse/mail:c/mail:m" attr="id" match="${id1}"/>
			<t:select path="//mail:GetConvResponse/mail:c/mail:m" attr="id" match="${id2}"/>
		</t:response>
	</t:test>

</t:test_case>

</t:tests>