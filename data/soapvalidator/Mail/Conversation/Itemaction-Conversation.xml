<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="test_account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account1.password" value="test123"/>

<t:property name="item.spchar" value="//\\'^%"/>
<t:property name="item.space" value="           "/>
<t:property name="item.blank" value=""/>
<t:property name="item.sometext" value="some text"/>

<t:property name="folder.inbox" value="2"/>
<t:property name="op.read" value="read"/>
<t:property name="op.unread" value="!read"/>
<t:property name="op.flag" value="flag"/>
<t:property name="op.unflag" value="!flag"/>
<t:property name="op.tag" value="tag"/>
<t:property name="op.untag" value="!tag"/>
<t:property name="op.move" value="move"/>
<t:property name="op.delete" value="delete"/>

<t:property name="message.subject1" value="Subject${TIME}.${COUNTER}"/>
<t:property name="message.content1" value="content of the message${TIME}.${COUNTER}"/>
<t:property name="test_acct.server" value="NOT_DEFINED"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct_setup1" type="always" >
    <t:objective>Create two test account</t:objective>
    <steps> 1. Login to admin account
            2. Create a test_account1 
    </steps>

    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id="create_test_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account1.password}</password>               
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server"/>
        </t:response>
    </t:test>
</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

<t:test_case testcaseid="acct_setup2" type="always" >
    <t:objective>login as the test account</t:objective>
    <t:steps>1. Login to test_account1 
        2. Send a mail to test_account1
        3. Get the Conversation id        
    </t:steps>
    
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test id="sendmsgrequest1">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${test_account1.name}'/>
                    <su> ${message.subject1}</su>
                    <mp ct="text/plain">
                        <content> ${message.content1}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message.id1"/>
        </t:response>
    </t:test>

	<t:test id="sendmail2" required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m origid="${message.id1}" rt="w">
                    <e t="t" a='${test_account1.name}'/>
                    <su> Fwd: ${message.subject1}</su>
                    <mp ct="text/plain">
                        <content> $ Forwarded content : {message.content1}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message.id1"/>
        </t:response>
    </t:test>

    <t:test id="searchrequest" depends="sendmsgrequest1">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="dateDesc" offset="0" limit="25">
                <query>in:sent</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:c" attr="id" set="conv.id1"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest1" type="smoke">
    <t:objective>Mark an item (conversation) as read </t:objective>
    
    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="read"/>
            </ItemActionRequest>
        </t:request>
         <t:response>
              <t:select path="//mail:ItemActionResponse/mail:action" attr="op" match="${op.read}"/>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="id" match="${conv.id1}"/>
         </t:response>
    </t:test>

    <!-- To mark already read item as read -->
    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="read"/>
            </ItemActionRequest>
        </t:request>
         <t:response>
              <t:select path="//mail:ItemActionResponse/mail:action" attr="op" match="${op.read}"/>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="id" match="${conv.id1}"/>
         </t:response>
    </t:test>


</t:test_case>


<t:test_case testcaseid="ItemActionRequest2" type="smoke">
    <t:objective>Mark an item (conversation) as unread </t:objective>
    
    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.unread}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="op" match="${op.unread}"/>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="id" match="${conv.id1}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest3" type="bhr">
    <t:objective>Mark an item (conversation) as flagged</t:objective>
    
    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.flag}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="op" match="${op.flag}"/>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="id" match="${conv.id1}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest4" type="bhr">
    <t:objective>Mark an item (conversation) as unflagged</t:objective>
    
    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.unflag}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="op" match="${op.unflag}"/>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="id" match="${conv.id1}"/>
         </t:response>
</t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest5" type="bhr">
 <t:objective>Tag an item (conversation) </t:objective>
    <t:steps>1. Create a Tag
        2. Tag the item 
    </t:steps>

    <t:test id="itemActionRequest5a">
        <t:request>
            <CreateTagRequest xmlns="urn:zimbraMail">
                <tag name="tag${TIME}${COUNTER}" color="0"/>
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTagResponse/mail:tag" attr="id" set="tag.id1"/>
        </t:response>
    </t:test>

    <t:test id="itemActionRequest5b" depends="itemActionRequest5a">
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.tag}" tag="${tag.id1}"/>
            </ItemActionRequest>        
        </t:request>
        <t:response>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="op" match="${op.tag}"/>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="id" match="${conv.id1}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest6" type="bhr">
    <t:objective>Untag an item (conversation)</t:objective>

    <t:test id="itemActionRequest6" depends="itemActionRequest5a">
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.untag}" tag="${tag.id1}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="op" match="${op.untag}"/>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="id" match="${conv.id1}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest7" type="functional">
    <t:objective>Tag an item(conversation) with deleted tag-id. </t:objective>
    <t:steps>1. Delete the previously created tag
        2. Tag the item.
    </t:steps>

    <t:test id="itemActionRequest7a" depends="itemActionRequest5a">
        <t:request>
            <TagActionRequest xmlns="urn:zimbraMail">
                <action op="delete" id="${tag.id1}"/>
            </TagActionRequest>   
        </t:request>
        <t:response>
            <t:select path="//mail:TagActionResponse/mail:action" attr="id" match="${tag.id1}"/>
        </t:response>
    </t:test>

    <t:test depends="itemActionRequest7a">
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.tag}" tag="${tag.id1}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^mail.NO_SUCH_TAG$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest8" type="functional">
    <t:objective>Untag an item(conversation) with deleted tag-id</t:objective>

    <t:test id="itemActionRequest8" depends="itemActionRequest7a">
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.untag}" tag="${tag.id1}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^mail.NO_SUCH_TAG$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest9" type="bhr" bugids="2379">
    <t:objective>Move an item(conversation) to a valid folder.</t:objective>
    <t:steps>1. Create a folder
        2. Move the item in the created folder
    </t:steps>
    
    <t:test id="itemActionRequest9a">
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="folder${TIME}${COUNTER}" l="1"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder.id1"/>
        </t:response>
    </t:test>

    <t:test id="itemActionRequest9b" depends="itemActionRequest9a">
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.move}" l="${folder.id1}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="op" match="${op.move}"/>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="id" match="${conv.id1}"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="ItemActionRequest10" type="functional">
    <t:objective>Move an item(conversation) to a nonexisting folder.</t:objective>
    <t:steps>1. Move item to inbox
        2. Delete the folder.
        3. Move the item to the deleted folder.
    </t:steps>

    <t:test id="itemActionRequest10a">
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.move}" l="${folder.inbox}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="op" match="${op.move}"/>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="id" match="${conv.id1}"/>
        </t:response>
    </t:test>
    
    <t:test id="itemActionRequest10b" depends="itemActionRequest9a">
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="delete" id="${folder.id1}"/>
            </FolderActionRequest>   
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action" attr="id" match="${folder.id1}"/>
         </t:response>
    </t:test>
    
    <t:test id="itemActionRequest10c" depends="itemActionRequest10b">
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.move}" l="${folder.id1}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^mail.NO_SUCH_FOLDER$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest11" type="functional">
    <t:objective>ItemActionRequest without Action tag </t:objective>
    
    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest12" type="functional">
    <t:objective>ItemActionRequest without conversation-id in Action tag </t:objective>
    
    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action op="${op.read}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest13" type="functional">
    <t:objective>ItemActionRequest with valid conversation-id without op attribute in action tag</t:objective>
    
    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest14" type="functional">
    <t:objective>ItemActionRequest with valid conversation-id with leading/trailing/only spaces </t:objective>

    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="         ${conv.id1}" op="${op.read}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}         " op="${op.read}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${item.space}         " op="${op.read}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest15" type="functional">
    <t:objective>ItemActionRequest with invalid conversation-id i.e. id=blank/sometext</t:objective>
    
    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${item.blank}" op="${op.read}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${item.sometext}" op="${op.read}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest16" type="functional">
    <t:objective>ItemActionRequest with valid conversation-id and invalid op attribute i.e. op = blank/space/sometext/special character</t:objective>
    
    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${item.blank}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
        <ItemActionRequest xmlns="urn:zimbraMail">
            <action id="${conv.id1}" op="${item.space}"/>
        </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${item.sometext}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${item.spchar}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>
</t:test_case>



<t:test_case testcaseid="ItemActionRequest17" type="functional">
    <t:objective>ItemActionRequest with valid conversation-id and valid op with leading/trailing spaces.</t:objective>
    
    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="       ${op.read}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.read}    "/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>
    
    <t:test>
            <t:request>
                <ItemActionRequest xmlns="urn:zimbraMail">
                    <action id="${conv.id1}" op="${item.space}"/>
                </ItemActionRequest>
            </t:request>
            <t:response>
                <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
            </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest18" type="bhr" bugids="2379">
    <t:objective>Delete an item(conversation)</t:objective>

    <t:test id="itemActionRequest18a">
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.delete}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="op" match="${op.delete}"/>
            <t:select path="//mail:ItemActionResponse/mail:action" attr="id" match="${conv.id1}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest19" type="functional"  bugids="11018">
    <t:objective>Delete a non existing conversation</t:objective>

    <t:test depends="itemActionRequest18a">
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${conv.id1}" op="${op.delete}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
             <t:select path="//mail:ItemActionResponse/mail:action" />
        </t:response>
    </t:test>

</t:test_case>


</t:tests>


