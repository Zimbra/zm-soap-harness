<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="accountA1.name" value="multihost.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="accountB1.name" value="multihost.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="root"	value="${soapxml.root}/MailClient/Mail/lmtp/MimeBasic/"/>

<t:property name="msg01.file" value="${root}/lmtp_basic01.txt"/>
<t:property name="msg01.subject" value="MultiHost testing subject line"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acctSetup1_MsgLmptInjectMultinode" hostCount="2" type="always" >
    <t:objective>Create accounts on multihostA.FQDN and multihostB.FQDN.</t:objective>
	<t:steps>1. Login to admin.
			 2. Create account on multihostA.FQDN.
			 3. Create account on multihostB.FQDN.
	</t:steps>

    <t:test id="admin_login" required="true" >
		<t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${accountA1.name}</name>
                <password>${defaultpassword.value}</password>
                <a n="zimbraMailHost">${multihostA.FQDN}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" />
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acctA.server"/>
        </t:response>
    </t:test>  

	<t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${accountB1.name}</name>
                <password>${defaultpassword.value}</password>
                <a n="zimbraMailHost">${multihostB.FQDN}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" />
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acctB.server"/>
        </t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid="MsgLmptInjectMultinode01" hostCount="2" type="bhr">
	<t:objective>Run lmtpinject to Host A for Account A1, verify that A1 receives the message successfully. </t:objective>
    <t:steps>1. login as A1.
             2. Run lmtpinject to inject a Message into account A1. 
			 3. Verfiy message is injected properly.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${test_acctA.server}"/>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${accountA1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
			<to>${accountA1.name}</to>
			<from>${nonZimbraUser.name}</from>
			<server>${test_acctA.server}</server>
            <modify>
                <header a="To">${accountA1.name}</header>
                <header a="From">${nonZimbraUser.name}</header>
                <header a="Subject">${msg01.subject}</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>  

	<t:property name="server.zimbraAccount" value="${test_acctA.server}"/>

	<t:test >
	        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by="name">${accountA1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${msg01.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg01.id"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="MsgLmptInjectMultinode02" hostCount="2" type="bhr">
	<t:objective>Run lmtpinject to Host B for Account B1, verify that B1 receives the message successfully. </t:objective>
    <t:steps>1. login as B1.
             2. Run lmtpinject to inject a Message into account B1. 
			 3. Verfiy message is injected properly.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${test_acctB.server}"/>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${accountB1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
	            <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:mailinjecttest >
		<t:lmtpInjectRequest>
			<filename>${msg01.file}</filename>
			<to>${accountB1.name}</to>
			<from>${nonZimbraUser.name}</from>
			<server>${test_acctB.server}</server>
            <modify>
                <header a="To">${accountB1.name}</header>
                <header a="From">${nonZimbraUser.name}</header>
                <header a="Subject">${msg01.subject}</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>  

	<t:property name="server.zimbraAccount" value="${test_acctB.server}"/>

	<t:test >
	        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by="name">${accountB1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test >
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${msg01.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg01.id"/>
		</t:response>
	</t:test>

</t:test_case>


</t:tests>