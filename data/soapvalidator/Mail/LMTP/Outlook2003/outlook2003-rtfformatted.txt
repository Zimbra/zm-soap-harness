Received: from localhost (localhost.localdomain [127.0.0.1])
	by liquidsys.persistent.co.in (Postfix) with ESMTP id 701FB348862
	for <vc02@liquidsys.persistent.co.in>; Fri, 21 Oct 2005 10:47:56 +0530 (IST)
Received: from liquidsys.persistent.co.in ([127.0.0.1])
 by localhost (liquidsys.persistent.co.in [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id 20658-08 for <vc02@liquidsys.persistent.co.in>;
 Fri, 21 Oct 2005 10:47:55 +0530 (IST)
Received: from ng011 (ng011.persistent.co.in [172.16.3.164])
	by liquidsys.persistent.co.in (Postfix) with ESMTP id 11C1A34885F
	for <vc02@liquidsys.persistent.co.in>; Fri, 21 Oct 2005 10:47:55 +0530 (IST)
From: "vc01" <vc01@liquidsys.persistent.co.in>
To: <vc02@liquidsys.persistent.co.in>
Subject: Mail in rtf format
Date: Fri, 21 Oct 2005 10:43:16 +0530
Message-ID: <000d01c5d5fe$25104580$a40310ac@persistent.co.in>
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary="----=_NextPart_000_000E_01C5D62C.3EC88180"
X-Mailer: Microsoft Office Outlook 11
Thread-Index: AcXV/iTQVJINc3lWTgW53AYf2XQoJg==
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.2180
X-Virus-Scanned: amavisd-new at 
X-Spam-Status: No, hits=-5.473 tagged_above=-10 required=6.6 autolearn=ham
 tests=[ALL_TRUSTED=-3.3, AWL=0.403, BAYES_00=-2.599, HTML_90_100=0.022,
 HTML_MESSAGE=0.001]
X-Spam-Level: 

This is a multi-part message in MIME format.

------=_NextPart_000_000E_01C5D62C.3EC88180
Content-Type: multipart/alternative;
	boundary="----=_NextPart_001_000F_01C5D62C.3EC88180"


------=_NextPart_001_000F_01C5D62C.3EC88180
Content-Type: text/plain;
	charset="US-ASCII"
Content-Transfer-Encoding: 7bit

Mail with attachment in RTP format..s
Dsdsds


 

------=_NextPart_001_000F_01C5D62C.3EC88180
Content-Type: text/html;
	charset="US-ASCII"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV=3D"Content-Type" CONTENT=3D"text/html; =
charset=3Dus-ascii">
<META NAME=3D"Generator" CONTENT=3D"MS Exchange Server version =
6.5.7036.0">
<TITLE>Mail in rtf format</TITLE>
</HEAD>
<BODY>
<!-- Converted from text/rtf format -->

<P ALIGN=3DLEFT><SPAN LANG=3D"en-us"><FONT SIZE=3D2 FACE=3D"Arial">Mail =
with attachment in RTP format..s</FONT></SPAN></P>

<P ALIGN=3DLEFT><SPAN LANG=3D"en-us"><FONT SIZE=3D2 =
FACE=3D"Arial">Dsdsds</FONT></SPAN></P>
<BR>

<P ALIGN=3DLEFT><SPAN LANG=3D"en-us"><FONT FACE=3D"Arial" SIZE=3D2 =
COLOR=3D"#000000"> &lt;&lt;...&gt;&gt; </FONT></SPAN><SPAN =
LANG=3D"en-us"></SPAN><SPAN LANG=3D"en-us"></SPAN><SPAN =
LANG=3D"en-us"></SPAN><SPAN LANG=3D"en-us"></SPAN><SPAN =
LANG=3D"en-us"></SPAN></P>

</BODY>
</HTML>
------=_NextPart_001_000F_01C5D62C.3EC88180--

------=_NextPart_000_000E_01C5D62C.3EC88180
Content-Type: text/xml;
	name="tags_create.xml"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="tags_create.xml"

<t:tests xmlns:t=3D"urn:zimbraTestHarness">

<t:property name=3D"tag.name" value=3D"tag${TIME}${COUNTER}" />
<t:property name=3D"tag1.name" value=3D"tag${TIME}${COUNTER}" />
<t:property name=3D"tag2.name" value=3D"tag${TIME}${COUNTER}" />
<t:property name=3D"tag3.name" value=3D"tag${TIME}${COUNTER}" />
<t:property name=3D"tag4.name" value=3D"tag${TIME}${COUNTER}" />
<t:property name=3D"tag5.name" value=3D"tag${TIME}${COUNTER}" />
<t:property name=3D"tag.blankname" value=3D"" />
   =20
<t:property name=3D"tag.name2" value=3D"tag${TIME}${COUNTER}" />
<t:property name=3D"tag.newname" value=3D"newtag${TIME}${COUNTER}" />
<t:property name=3D"tag.name_spchar1" value=3D"~!@#%" />
<t:property name=3D"tag.name_spchar2" value=3D"^*()_" />
<t:property name=3D"tag.name_spchar3" value=3D",./;'[" />
<!--<t:property name=3D"tag.name_spchar4" value=3D"?:{}|+"/>-->
<t:property name=3D"tag_allspace.name" value=3D"       " />
<t:property name=3D"tag_allspace.color" value=3D"       " />
<t:property name=3D"tag_LeadingSpace.color" value=3D"   4" />
<t:property name=3D"tag_TrailingSpace.color" value=3D"4  " />
<t:property name=3D"tag_TrailingLeadingSpace.color" value=3D"  4   " />

<t:property name=3D"tag.colorvalid" value=3D"4" />
<t:property name=3D"tag.colorinvalid" value=3D":''/" />

<t:property name=3D"test_account1.name" =
value=3D"test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name=3D"test_account1.password" value=3D"${defaultpassword.value}" />

<t:property name=3D"uri" value=3D"${admin.uri}" />

<t:test_case testcaseid=3D"Ping" type=3D"always">
    <t:objective>Basic system check</t:objective>
   =20
    <t:test required=3D"true">
        <t:request>
            <PingRequest xmlns=3D"urn:zimbraAdmin" />
        </t:request>
        <t:response>
            <t:select path=3D"//admin:PingResponse" />
        </t:response>
    </t:test>
   =20
</t:test_case>


<t:test_case testcaseid=3D"acct1Setup_tags_create" type=3D"always">
    <t:objective>Create test account</t:objective>
   =20
    <t:test required=3D"true">
        <t:request>
            <AuthRequest xmlns=3D"urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path=3D"//admin:AuthResponse/admin:authToken" =
set=3D"authToken" />
        </t:response>
    </t:test>
   =20
    <t:test required=3D"true">
        <t:request>
            <CreateAccountRequest xmlns=3D"urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account1.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select =
path=3D"//admin:CreateAccountResponse/admin:account" attr=3D"id" =
set=3D"test_account1.id" />
        </t:response>
    </t:test>

</t:test_case>

<t:property name=3D"uri" value=3D"${mailclient.uri}" />


<t:test_case testcaseid=3D"acct1_login" type=3D"always">
    <t:objective>Login as the test account</t:objective>
   =20
    <t:test required=3D"true">
        <t:request>
            <AuthRequest xmlns=3D"urn:zimbraAccount">
                <account by=3D"name">${test_account1.name}</account>
                <password>${test_account1.password}</password>
                <!--<prefs/>-->
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path=3D"//acct:AuthResponse/acct:lifetime" =
match=3D"^\d+$" />
            <t:select path=3D"//acct:AuthResponse/acct:authToken" =
set=3D"authToken" />
            <t:select path=3D"//acct:AuthResponse/acct:sessionId" =
set=3D"sessionId" />
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid=3D"CreateTagRequest1" type=3D"smoke">
    <t:objective>Create a new Tag </t:objective>
   =20
    <t:test>
        <t:request>
            <CreateTagRequest xmlns=3D"urn:zimbraMail">
                <tag name=3D"${tag.name}" color=3D"${}" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path=3D"//mail:CreateTagResponse/mail:tag">
                <t:select attr=3D"id" set=3D"tag.id" />
                <t:select attr=3D"color" match=3D"${tag.name}" />
                <t:select attr=3D"color" match=3D"${}" />
            </t:select>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid=3D"CreateTagRequest2" type=3D"functional">
    <t:objective>Create a new Tag with blank name  </t:objective>
   =20
    <t:test>
        <t:request>
            <CreateTagRequest xmlns=3D"urn:zimbraMail">
                <tag name=3D"${tag.blankname}" =
color=3D"${tag.colorvalid}" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path=3D"//zimbra:Code" =
match=3D"^service.INVALID_REQUEST" />
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid=3D"CreateTagRequest3" type=3D"functional">
    <t:objective>Create a new Tag with all spaces in name  =
</t:objective>
   =20
    <t:test>
        <t:request>
            <CreateTagRequest xmlns=3D"urn:zimbraMail">
                <tag name=3D"${tag_allspace.name}" =
color=3D"${tag.colorvalid}" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path=3D"//zimbra:Code" =
match=3D"^mail.INVALID_NAME" />
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid=3D"CreateTagRequest5" type=3D"functional">
    <t:objective>Create a Tag with Duplicate name  </t:objective>
   =20
    <t:test>
        <t:request>
            <CreateTagRequest xmlns=3D"urn:zimbraMail">
                <tag name=3D"${tag.name}" color=3D"${tag.colorvalid}" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path=3D"//zimbra:Code" =
match=3D"^mail.ALREADY_EXISTS" />
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid=3D"CreateTagRequest6" type=3D"functional">
    <t:objective>Create a Tag with Special Characters in name  =
</t:objective>
   =20
    <t:test>
        <t:request>
            <CreateTagRequest xmlns=3D"urn:zimbraMail">
                <tag name=3D";''.//\\" color=3D"${tag.colorvalid}" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path=3D"//zimbra:Code" =
match=3D"^mail.INVALID_NAME" />
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid=3D"CreateTagRequest7" type=3D"negative">
    <t:objective>Create a Tag with Unique name and with color value > 8  =
</t:objective>
   =20
    <t:test>
        <t:request>
            <CreateTagRequest xmlns=3D"urn:zimbraMail">
                <tag name=3D"tag10${TIME}${COUNTER}" color=3D"10" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <!-- The decision for now is that the onus is on the client =
to check for invalid values
        <t:select path=3D"//zimbra:Code" =
match=3D"^account.INVALID_ATTR_VALUE"/> -->
            <t:select path=3D"//mail:CreateTagResponse/mail:tag" />
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid=3D"CreateTagRequest8" type=3D"negative">
    <t:objective>Create a Tag with Unique name and with color value =
negative  </t:objective>
   =20
    <t:test>
        <t:request>
            <CreateTagRequest xmlns=3D"urn:zimbraMail">
                <tag name=3D"tagneg${TIME}${COUNTER}" color=3D"-1" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <!-- The decision for now is that the onus is on the client =
to check for invalid values
        <t:select path=3D"//zimbra:Code" =
match=3D"^account.INVALID_ATTR_VALUE"/>  -->
            <t:select path=3D"//mail:CreateTagResponse/mail:tag" />
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid=3D"CreateTagRequest9" type=3D"negative" =
bugids=3D"1744">
    <t:objective>Create a new Tag with all spaces in the color  =
</t:objective>
   =20
    <t:test>
        <t:request>
            <CreateTagRequest xmlns=3D"urn:zimbraMail">
                <tag name=3D"tagSpaces" color=3D"${tag_allspace.color}" =
/>
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path=3D"//zimbra:Code" =
match=3D"^service.INVALID_REQUEST$" />
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid=3D"CreateTagRequest10" type=3D"negative" =
bugids=3D"1744">
    <t:objective>Create a new Tag with special chars in the color =
</t:objective>
   =20
    <t:test>
        <t:request>
            <CreateTagRequest xmlns=3D"urn:zimbraMail">
                <tag name=3D"tagSpecialChars" =
color=3D"${tag.colorinvalid}" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path=3D"//zimbra:Code" =
match=3D"^service.INVALID_REQUEST$" />
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid=3D"CreateTagRequest11" type=3D"negative" =
bugids=3D"1744">
    <t:objective>Create a new Tag with blank in the color  =
</t:objective>
   =20
    <t:test>
        <t:request>
            <CreateTagRequest xmlns=3D"urn:zimbraMail">
                <tag name=3D"tagBlankColor" color=3D"" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path=3D"//zimbra:Code" =
match=3D"^service.INVALID_REQUEST$" />
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid=3D"CreateTagRequest12" type=3D"negative">
    <t:objective>Create a new Tag with invalid attributes  =
</t:objective>
       =20
    <!--Create a tag without giving any attribute -->
    <t:test>
        <t:request>
            <CreateTagRequest =
xmlns=3D"urn:zimbraMail"></CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path=3D"//zimbra:Code" =
match=3D"^service.INVALID_REQUEST$" />
        </t:response>
    </t:test>
       =20
    <!-- Create a tag by giving the attribute twice -->
    <t:test>
        <t:request>
            <CreateTagRequest xmlns=3D"urn:zimbraMail">
                <tag name=3D"${tag1.name}" color=3D"${tag.colorvalid}" =
/>
                <tag name=3D"${tag2.name}" color=3D"${tag.colorvalid}" =
/>
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path=3D"//mail:CreateTagResponse/mail:tag">
                <t:select attr=3D"name" match=3D"tag1.name" />
                <t:select attr=3D"color" match=3D"${tag.colorvalid}" />  =
             =20
            </t:select>
        </t:response>
    </t:test>

    <!--create a new Tag without color attribute -->
    <t:test>
        <t:request>
            <CreateTagRequest xmlns=3D"urn:zimbraMail">
                <tag name=3D"Tag${TIME}${COUNTER}"/>
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path=3D"//zimbra:Code" =
match=3D"^service.INVALID_REQUEST$" />
        </t:response>
    </t:test>

    <!--create a new Tag without name attribute -->
    <t:test>
        <t:request>
            <CreateTagRequest xmlns=3D"urn:zimbraMail">
                <tag color=3D"1"/>
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path=3D"//zimbra:Code" =
match=3D"^service.INVALID_REQUEST$" />
        </t:response>
    </t:test>   =20
          =20
</t:test_case>


<t:test_case testcaseid=3D"CreateTagRequest13" type=3D"negative">
    <t:objective>Create a new Tag with valid name and Spaces in color  =
</t:objective>
       =20
        <!--create a new Tag with Leading spaces in color -->
        <t:test>
            <t:request>
                <CreateTagRequest xmlns=3D"urn:zimbraMail">
                    <tag name=3D"${tag3.name}" =
color=3D"${tag_LeadingSpace.color}" />
                </CreateTagRequest>
            </t:request>
            <t:response>
                <t:select path=3D"//zimbra:Code" =
match=3D"^service.INVALID_REQUEST$" />
            </t:response>
        </t:test>
       =20
        <!--create a new Tag with Trailing spaces in color -->
        <t:test>
            <t:request>
                <CreateTagRequest xmlns=3D"urn:zimbraMail">
                    <tag name=3D"${tag4.name}" =
color=3D"${tag_TrailingSpace.color}" />
                </CreateTagRequest>
            </t:request>
            <t:response>
                <t:select path=3D"//zimbra:Code" =
match=3D"^service.INVALID_REQUEST$" />
            </t:response>
        </t:test>
       =20
        <!--create a new Tag with Leading and Trailing spaces in color =
-->
        <t:test>
            <t:request>
                <CreateTagRequest xmlns=3D"urn:zimbraMail">
                    <tag name=3D"${tag5.name}" =
color=3D"${tag_TrailingLeadingSpace.color}" />
                </CreateTagRequest>
            </t:request>
            <t:response>
                <t:select path=3D"//zimbra:Code" =
match=3D"^service.INVALID_REQUEST$" />
            </t:response>
        </t:test>
       =20
</t:test_case>


</t:tests>
------=_NextPart_000_000E_01C5D62C.3EC88180--
