<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="test3.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.name" value="test4.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="rights.workflow"		value="x"/>
<t:property name="rights.none"			value=""/>
<t:property name="rights.read"			value="r"/>
<t:property name="rights.write"			value="w"/>
<t:property name="rights.insert"		value="i"/>
<t:property name="rights.delete"		value="d"/>
<t:property name="rights.administer"	value="a"/>
<t:property name="rights.manager"		value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}"/>
<t:property name="rights.admin"		value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}${rights.administer}"/>
<t:property name="grant.usr"			value="usr"/>

<t:property name="op.grant"			value="grant"/>
<t:property name="op.read"			value="read"/>
<t:property name="op.unread"		value="!read"/>
<t:property name="op.flag"			value="flag"/>
<t:property name="op.unflag"		value="!flag"/>
<t:property name="op.tag"			value="tag"/>
<t:property name="op.untag"			value="!tag"/>
<t:property name="op.move"			value="move"/>
<t:property name="op.delete"		value="delete"/>

<t:property name="compose.subject" value="Subject of the message is testing bug."/>
<t:property name="compose.content" value="Content in the message is testing bug."/>

<t:test_case testcaseid="Account Setup" type="always" >
    <t:objective>basic system check</t:objective>
    	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
	    <t:response>
	        <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test >
	    <t:request>
	        <CreateAccountRequest xmlns="urn:zimbraAdmin">
	            <name>${account1.name}</name>
	            <password>${defaultpassword.value}</password>
	        </CreateAccountRequest>
	    </t:request>
	    <t:response>
		    <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id"/>	
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
	    </t:response>
	</t:test>

	<t:test >
	    <t:request>
	        <CreateAccountRequest xmlns="urn:zimbraAdmin">
	            <name>${account2.name}</name>
	            <password>${defaultpassword.value}</password>
	        </CreateAccountRequest>
	    </t:request>
	    <t:response>
		    <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account2.id"/>	
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
	    </t:response>
	</t:test>
	
	<t:test id="GrantRightRequest" required="true" >
		<t:request>
			<GrantRightRequest xmlns="urn:zimbraAdmin">
		      <target by="name" type="account">${account2.name}</target>
		      <grantee by="name" type="usr">${account1.name}</grantee>
		      <right>sendOnBehalfOf</right>
		    </GrantRightRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GrantRightResponse"/>
		</t:response>
	</t:test>
	
		
</t:test_case>

<t:test_case testcaseid="Bug76013_1" type="bhr" bugids="76013">
    <t:objective>Replies from persona are displayed double in the "persona's send mail" box</t:objective>
    <t:steps>
	1. Create user1 and user2
	2. Login as user1, share his Inbox and Sent folder with user1@domain.com with
	Manager/Administrator rights to user2
	3. User2 accepts shares from user1
	4. Allow User2 to send mail from user1
	5. Login as user2
	6. Create persona to send from user1
	7. Create filter: "From" "Contains" user1 then "File into folder" "user1's shared Sent mail folder" 
	8. Log in to user2
	9. Send mail to user1
	10.Mail will appear in user1's inbox > Reply as the persona
	11. Observe the reply displayed only once in the personas send item box: user2@domain.com's Sent 
    </t:steps>
	    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test id="getFolderRequest">
        <t:request>
               <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="root.id"/>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="folder.inbox"/>
            <t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="folder.calendar"/>
            <t:select path="//mail:folder[@name='${globals.sent}']" attr="id" set="folder.sent"/>
        </t:response>
    </t:test>
    
       <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${folder.inbox}">
					<grant gt="${grant.usr}" d="${account2.name}" perm="${rights.manager}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
       <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${folder.sent}">
					<grant gt="${grant.usr}" d="${account2.name}" perm="${rights.manager}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
    <t:property name="server.zimbraAccount" value="${account2.server}"/>
    
     <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
     <t:test id="getFolderRequest">
        <t:request>
            <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="account2.folder.inbox.id"/>
        </t:response>
    </t:test>
    
 
	<t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account2.folder.inbox.id}" name="folder1${TIME}${COUNTER}" zid="${account1.id}" rid="${folder.inbox}" view="message"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account2.folder.shared.id"/>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="name" set="folder.name"/>
        </t:response>
    </t:test>
    
     <t:test id="getFolderRequest">
        <t:request>
            <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.sent}']" attr="id" set="account2.folder.sent.id"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account2.folder.sent.id}" name="folder2${TIME}${COUNTER}" zid="${account1.id}" rid="${folder.sent}" view="message"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account2.folder2.shared.id"/>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="name" set="folder2.name"/>
        </t:response>
    </t:test>
    
    <t:property name="account2.zimbraPrefFromDisplay" value="First${TIME} Last${COUNTER}"/>
	<t:property name="message1.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="Identity1.name" value="Identity${TIME}${COUNTER}"/>
	
	 <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity1.name}">
					<a name="zimbraPrefIdentityName">${Identity1.name}</a>
					<a name="zimbraPrefFromDisplay">${account2.zimbraPrefFromDisplay}</a>
					<a name="zimbraPrefFromAddress">${account1.name}</a>
					<a name="zimbraPrefFromAddressType">sendAs</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse/acct:identity" attr="name" set="Identity1.name"/>
			<t:select path="//acct:CreateIdentityResponse/acct:identity" attr="id" set="Identity1.id"/>
			<t:select path="//acct:CreateIdentityResponse/acct:identity/acct:a[@ name='zimbraPrefFromAddress']" match="${account1.name}"/>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
            <ModifyFilterRulesRequest xmlns="urn:zimbraMail">
                <filterRules>
					<filterRule name="Filter${TIME}${COUNTER}" active="1">
                         <filterTests condition="anyof">
                        	<headerTest  header= "subject" stringComparison="is"  value="${message1.subject}" />          
                        </filterTests>
                        <filterActions> 
                        	<actionFileInto folderPath="/${globals.sent}/${folder2.name}" />
                        </filterActions>
                    </filterRule>
                 </filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>
    
      <t:test >
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="t" a='${account1.name}'/>
					<su> ${compose.subject} </su>
					<mp ct="text/plain">
						<content> ${compose.content} </content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message1.id"/>
		</t:response>
	</t:test>
	
	<t:test required="true">
	 	<t:request>
	   		<SearchRequest xmlns="urn:zimbraMail" types="message">
	   			<query>in:"inbox/${folder.name}" ${compose.subject}</query>
	   		</SearchRequest>
	 	</t:request>
	  	<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message.id"/>
	 	</t:response>
	</t:test>
	
	    <t:test >
        <t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m origid="${message.id}" rt="r" idnt="${Identity1.id}">
					<e t="t" a='${account1.name}'/>
					<e t="f" a='${account2.name}' p='${Identity1.name}'/>
					<su>Re: ${compose.subject}</su>
					<mp ct="multipart/mixed">
						<content>----- Original Message ----- ${compose.content}</content>
					</mp>
				</m>
			</SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="mail01.forward.id"/>
        </t:response>
    </t:test>
    
    <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="conversation" >
			<query>in:sent ${compose.subject}</query>
			</SearchRequest>
		</t:request>
		<t:response>
				<t:select path="//mail:SearchResponse/mail:c[1]" attr="id" set="message1.id"/>
				<t:select path="//mail:SearchResponse/mail:c[2]" emptyset="1"/>
		</t:response>
	</t:test>
    
	
</t:test_case>

</t:tests>

