<t:tests xmlns:t="urn:zimbraTestHarness">
	<t:property name="account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}" />
	<t:property name="server.index.dir" value="/opt/zimbra/index/0"/>
	<t:test_case testcaseid="Ping" type="always">
		<t:objective>basic system check</t:objective>
		<t:test id="ping" required="true">
			<t:request>
				<PingRequest xmlns="urn:zimbraAdmin" />
			</t:request>
			<t:response>
				<t:select path="//admin:PingResponse" />
			</t:response>
		</t:test>
	</t:test_case>

	<t:test_case testcaseid="acctSetup" type="always">
		<t:objective>Create test accounts</t:objective>
		<t:steps>	1. Login to admin account
					2. Create accounts        
	    </t:steps>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account1.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id" />
				<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'	set="account1.server" />
			</t:response>
		</t:test>
		<t:test>
	        <t:request>
	            <GetMailboxRequest xmlns="urn:zimbraAdmin">
	                <mbox id="${account1.id}"/>
	            </GetMailboxRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:GetMailboxResponse">
		            <t:select path="//admin:mbox" attr="mbxid" set="account1.mailbox.id"/>
	            </t:select>
	        </t:response>
	    </t:test>
		
	</t:test_case>

	<t:property name="server.zimbraAccount" value="${account1.server}" />
	<t:property name="authToken" value="" />

	<t:test_case testcaseid="bug57503" type="bhr" bugids="57503">
		<t:objective>Mime parse appointment invitation from iphone block reindexing</t:objective>
		<t:steps>
				1. Inject iphone invitation mime to account1.
				2. reindex account1 
				3. Verify reindexing completes (Bug:57503 reindexing keeps on running and never completes) 
				4. Login to account1 and send search request. (If step #3 fails the searchrequest stuck and never come out so depend on step #3 )
				5. delete index file
				6. reindex mailbox
				7. Login to account1 and send search request.
				8. verify mailbox running
		</t:steps>

		<t:property name="msg01.file" value="${testMailRaw.root}/bug57503/57503.txt" />
		<t:property name="msg01.subject" value="SMB GTM Team meeting" />
		<t:property name="server.zimbraAccount" value="${account1.server}"/>
		
		
		<t:mailinjecttest>
        	<t:lmtpInjectRequest>
            	<filename>${msg01.file}</filename>
            	<to>${account1.name}</to>
            	<from>foo@foo.com</from>
            	<server>${account1.server}</server>
        	</t:lmtpInjectRequest>
    	</t:mailinjecttest>
		
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <ReIndexRequest xmlns="urn:zimbraAdmin" action="start">
               <mbox id="${account1.id}"/>   
            </ReIndexRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ReIndexResponse" attr="status" match="started"/>
        </t:response>
    </t:test>

    <t:for start="1" end="5" break="response">
		<t:delay msec="5000"/> 
		<t:test>
	        <t:request>
	            <ReIndexRequest xmlns="urn:zimbraAdmin" action="status">
	               <mbox id="${account1.id}"/>   
	            </ReIndexRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ReIndexResponse[@status='idle']" query="response"/>
	        </t:response>
	    </t:test>
	</t:for>
    <!-- Test Case should terminate if reindex request stuck in running it will eventually block the automation run at searchrequest below so required=true-->
	<t:test required="true">
        <t:request>
            <ReIndexRequest xmlns="urn:zimbraAdmin" action="status">
               <mbox id="${account1.id}"/>   
            </ReIndexRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ReIndexResponse" attr="status" match="idle"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

   	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${msg01.subject})</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m"/>
		</t:response>
	</t:test> 

	<t:staftask >
		<t:request>
			<server>${account1.server}</server>
			<service>FS</service>
			<params>DELETE ENTRY ${server.index.dir}/${account1.mailbox.id} CHILDREN NAME * RECURSE CONFIRM</params>
		</t:request>
	</t:staftask>

    <t:test  id="admin_login" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
            <ReIndexRequest xmlns="urn:zimbraAdmin" action="start">
               <mbox id="${account1.id}"/>   
            </ReIndexRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ReIndexResponse" attr="status" match="started"/>
        </t:response>
    </t:test>
 
    <t:for start="1" end="5" break="response1">
		<t:delay msec="2000"/>
		<t:test>
	        <t:request>
	            <ReIndexRequest xmlns="urn:zimbraAdmin" action="status">
	               <mbox id="${account1.id}"/>   
	            </ReIndexRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ReIndexResponse[@status='idle']" query="response1"/>
	        </t:response>
	    </t:test>
	</t:for>
	 
	 <!-- Test Case should terminate if reindex request stuck in running it will eventually block the automation run at searctrequest below so required=true-->
	
	<t:test required="true">
        <t:request>
            <ReIndexRequest xmlns="urn:zimbraAdmin" action="status">
               <mbox id="${account1.id}"/>   
            </ReIndexRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ReIndexResponse" attr="status" match="idle"/>
        </t:response>
    </t:test>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

   	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${msg01.subject})</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
            <t:select path="//admin:AuthResponse/admin:authToken" set="admin.authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetServiceStatusRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:GetServiceStatusResponse/admin:status[@service='mailbox']" match="1"/>
        </t:response>
    </t:test>  
    
 	</t:test_case>
</t:tests>
