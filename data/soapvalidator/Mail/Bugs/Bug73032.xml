<t:tests xmlns:t="urn:zimbraTestHarness">
	<t:property name="account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}" />

<t:test_case testcaseid="Ping" type="always">
		<t:objective>basic system check</t:objective>
		<t:test id="ping" required="true">
			<t:request>
				<PingRequest xmlns="urn:zimbraAdmin" />
			</t:request>
			<t:response>
				<t:select path="//admin:PingResponse" />
			</t:response>
		</t:test>
	</t:test_case>

<t:test_case testcaseid="acctSetup" type="always">
		<t:objective>Create test accounts</t:objective>
		<t:steps>	1. Login to admin account
					2. Create account        
	    </t:steps>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account1.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id" />
				<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'	set="account1.server" />
			</t:response>
		</t:test>
	</t:test_case>

	

<t:test_case testcaseid="bug73032" type="bhr" bugids="73032">
	<t:objective>HTTP Error 500 due to native formatter failure, java.lang.ArrayIndexOutOfBoundsException when downloading attachment </t:objective>
	<t:steps>
	1. Injected mime message
	2. Use the rest servlet to verify for response code 200.
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}" />
	<t:property name="msg01.file" value="${testMailRaw.root}/Bugs/73032/bug_73032.txt" />
		
		
    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
			<to>${account1.name}</to>
			<from>${account1.name}</from>
			<server>${account1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>  
		 
		<t:property name="server.zimbraAccount" value="${account1.server}"/>
		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>"Dear Marinsek"</query>
				</SearchRequest>
			</t:request>
	        <t:response>
				<t:select path="//mail:SearchResponse/mail:m/mail:su"  />
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message1.id"  />
			</t:response>
		</t:test> 
		
	<t:property name="attachment.filename" value="Takarada - Confidencialidade e não concorrência.docx" />

    
      <t:test>
    	<t:request>
    	 	<GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message1.id}"/>
            </GetMsgRequest>
    	</t:request>
    	<t:response>    		
    		<t:select path="//mail:GetMsgResponse/mail:m[@id='${message1.id}']">    		
    			<t:select path="//mail:mp/mail:mp[@part='2']" >    				
            		<t:select attr="ct" match="application/vnd.openxmlformats-officedocument.wordprocessingml.document"/>	
            		<t:select attr="filename" match="${attachment.filename}"/>    				    			
    			</t:select>
    		</t:select>
    	</t:response>    
    </t:test>
    
    <t:property name="server.restServlet" value="${account1.server}"/>
    <t:property name="part2.id" value="2"/>
    
	<t:resttest>
		<t:restServletRequest>
			<id>${message1.id}</id>
			<part>${part2.id}</part>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>
	
 </t:test_case>
 	
</t:tests>
