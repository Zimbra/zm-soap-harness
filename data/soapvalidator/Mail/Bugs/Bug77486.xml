<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>

<t:property name="subject1" value="sub1${TIME}${COUNTER}"/>
<t:property name="subject2" value="sub2${TIME}${COUNTER}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Create test accounts</t:objective>
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_account1"  depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>


    <t:test id="create_account2"  depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>
    
     <t:test id="create_account3"  depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>
    

    <t:test >
        <t:request>
            <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                <id>${account1.id}</id>
                <a n="zimbraAllowAnyFromAddress">TRUE</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                <id>${account2.id}</id>
                <a n="zimbraAllowAnyFromAddress">FALSE</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="bug77486_1" type="bhr" bugids="77486">
<t:objective>Server error when performing a Redirect operation</t:objective>
	<t:steps>1. Create a new account say user1
             2. zmprov ma user1 zimbraAllowAnyFromAddress TRUE
             3. Send BounceMsgRequest and verify response
	</t:steps>
  <t:property name="server.zimbraAccount" value="${account1.server}"/>
   <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
       
    <t:test >
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${account1.name}'/>
                    <su>${subject1}</su>
                    <mp ct="text/plain">
                        <content>Hello</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="account1.message1.id"/>
        </t:response>
    </t:test>
    
 	<t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${subject1})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="id" set="account1.message1.id"/>
        </t:response>
    </t:test>
       
    <t:test >
        <t:request>
            <BounceMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.message1.id}">
                 <e t="t" a='${account2.name}'/>
                </m>
                </BounceMsgRequest>
    	</t:request>
     	<t:response>
         	<t:select path="//mail:BounceMsgResponse" />   
       	</t:response>
     </t:test>
    
   <t:property name="server.zimbraAccount" value="${account2.server}"/>
   <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" type="messages">
                <query>subject:(${subject1})</query>
            </SearchRequest>
        </t:request>
        <t:response>
          <t:select path="//mail:SearchResponse/mail:c/mail:m" attr="id" set="account3.message1.id"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="bug77486_2" type="bhr" bugids="77486">
<t:objective>Server error when performing a Redirect operation</t:objective>
		<t:steps>1. Create a new account say user1
                 2. zmprov ma user1 zimbraAllowAnyFromAddress FALSE
                 3. Send BounceMsgRequest and verify response
		</t:steps>
  <t:property name="server.zimbraAccount" value="${account2.server}"/>
   <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
       
    <t:test >
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${account2.name}'/>
                    <su>${subject2}</su>
                    <mp ct="text/plain">
                        <content>Hello</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="account2.message1.id"/>
        </t:response>
    </t:test>
    
 	<t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${subject2})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="id" set="account2.message1.id"/>
        </t:response>
    </t:test>
       
    <t:test >
        <t:request>
            <BounceMsgRequest xmlns="urn:zimbraMail">
                <m id="${account2.message1.id}">
                 <e t="t" a='${account3.name}'/>
                </m>
                </BounceMsgRequest>
    	</t:request>
     	<t:response>
         	<t:select path="//mail:BounceMsgResponse" />   
       	</t:response>
     </t:test>
    
   <t:property name="server.zimbraAccount" value="${account3.server}"/>
   <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" type="messages">
                <query>subject:(${subject2})</query>
            </SearchRequest>
        </t:request>
        <t:response>
          <t:select path="//mail:SearchResponse/mail:c/mail:m" attr="id" set="account3.message1.id"/>
        </t:response>
    </t:test>

</t:test_case>

</t:tests>