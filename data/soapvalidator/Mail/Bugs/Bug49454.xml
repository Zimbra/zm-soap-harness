<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="ping" type="always" >
	<t:objective>basic system check</t:objective>
	
	<t:test id="ping" required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="AccountSetup" type="always" >
	<t:objective>create test account</t:objective>

	<t:test id="admin_login" required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${defaultpassword.value}</password>
				<a n="zimbraPrefMailSendReadReceipts">always</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
				<password>${defaultpassword.value}</password>
				<a n="zimbraPrefMailSendReadReceipts">always</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account3.name}</name>
				<password>${defaultpassword.value}</password>
				<a n="zimbraPrefMailSendReadReceipts">always</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
		</t:response>
	</t:test>
	
</t:test_case>


<t:test_case testcaseid="bug49454" type="bhr" bugids="49454">
	<t:objective>No confirmation for read receipts across shares</t:objective>
	<t:steps>

	1) User3 shares their Inbox with user2

	2) Be sure to access user2's account via ZWC, and user3's inbox is visable from user2's account. 

	3) User1 composes a new msg to user3 - select "Request Read Receipt"

	4) user2 selects the msg from user1 to user3 

	5) No confirmation.

	</t:steps>

	<t:property name="server.zimbraAccount" value="${account3.server}"/>
	
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>
	
	<t:test>
        <t:request>
             <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="account3.folder.inbox.id"/>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="account3.folder.root.id"/>
        </t:response>
    </t:test>
    
   <t:property name="rights.manager" value="rwidxa"/>
    
    <t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${account3.folder.inbox.id}" op="grant">
                    <grant d="${account2.name}" gt="usr" perm="${rights.manager}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
    <t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
             <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="account2.folder.inbox.id"/>
        </t:response>
    </t:test>
    
      <t:test>
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link rid="${account3.folder.inbox.id}" zid="${account3.id}" l="${account2.folder.inbox.id}" name="folder${TIME}${COUNTER}" view="message"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse">
            	<t:select path="//mail:link" attr="id" set="account2.mount1.id"/>
            	<t:select path="//mail:link" attr="name" set="account2.mount1.foldername"/>
            </t:select>
        </t:response>
    </t:test>
	
	 <t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test >
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="t" a="${account3.name}"/>
					<e t="n" a="${account1.name}"/>
					<su>subject${TIME}${COUNTER}</su>
					<mp ct="text/plain">
						<content>content${TIME}${COUNTER}</content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse">
				<t:select path="//mail:m" attr="id" set="message.id"/>
			</t:select>
		</t:response>
	</t:test>
	
	 <t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    
    <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>in:"inbox/${account2.mount1.foldername}"</query>
				</SearchRequest>
			</t:request>
	        <t:response>
	            <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg01.id"/>
	        </t:response>
	</t:test> 
		
	<t:test>
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${msg01.id}" read="1" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse"/>          
            <t:select path="//mail:e[@t='n']" emptyset="1"/>
        </t:response>
    </t:test>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
       <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>in:"inbox"</query>
				</SearchRequest>
			</t:request>
	        <t:response>
	            <t:select path="//mail:SearchResponse/mail:m" emptyset="1"/>
	        </t:response>
	</t:test> 
	
</t:test_case>

</t:tests>








