<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>

    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
</t:test_case>
<t:test_case testcaseid="AccountSetup" type="always">
    <t:objective>Create test account</t:objective>
    <steps> 1. Login to admin account, 2. Create a mail account </steps>

    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test required="true" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test required="true" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="bug49669_1" type="bhr" bugids="49669">
    <t:objective>Emails which should have been part of one conversation are divided into two coversations.</t:objective>
    <t:steps>
    1. Login to ZWC
	2. Create one conversation.
	3. Reply/reply to all to that conversation, change subject and send mail
	4. Login as receiver > verify that all messages are in single conversation.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="message1.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="contact1.name.last" value="Last${TIME}${COUNTER}"/>

    <t:test >
        <t:request>
	        <AuthRequest xmlns="urn:zimbraAccount">
	            <account by="name">${account1.name}</account>
	            <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
	<t:property name="msg01.file" value="${testMailRaw.root}/bugs/49669/bug49669a.txt"/>

    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
            <to>${account2.name}</to>
            <from>${account1.name}</from>
            <server>${account1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest> 

    <t:delay msec="1000" />
    <t:property name="msg02.file" value="${testMailRaw.root}/bugs/49669/bug49669b.txt"/>
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${msg02.file}</filename>
            <to>${account2.name}</to>
            <from>${account1.name}</from>
            <server>${account1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

    <t:delay msec="1000" />
    <t:property name="msg03.file" value="${testMailRaw.root}/bugs/49669/bug49669c.txt"/>
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${msg03.file}</filename>
            <to>${account2.name}</to>
            <from>${account1.name}</from>
            <server>${account1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

    <t:delay msec="1000" />
    <t:property name="server.zimbraAccount" value="${account2.server}"/>
    <t:test >
        <t:request>
	        <AuthRequest xmlns="urn:zimbraAccount">
	            <account by="name">${account2.name}</account>
	            <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

  	<t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="dateDesc" offset="0" limit="25">
                <query>in:${globals.inbox}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:c" attr="id" set="account2.conv.id1"/>
             <t:select path="//mail:SearchResponse/mail:c/mail:su" match="Re: accountpassword"/>
             
        </t:response>
    </t:test>
    
     <t:test >
	 <t:request>
	   <GetConvRequest xmlns="urn:zimbraMail">
	     <c id="${account2.conv.id1}"/>
	   </GetConvRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:GetConvResponse/mail:c" attr="n" match="3"/>
	 </t:response>
	</t:test>

</t:test_case>

</t:tests>


