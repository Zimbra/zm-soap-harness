<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.password" value="${defaultpassword.value}"/>

<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.password" value="${defaultpassword.value}"/>

<t:property name="message1.content" value="content${TIME}.${COUNTER}"/>
<t:property name="message1.subject" value="subject${TIME}.${COUNTER}"/>


<t:property name="root"				value="${soapxml.root}/MailClient/Mail/lmtp/MimeBasic/"/>
<t:property name="message2.file"	value="${root}/lmtp_basic01.txt"/>
<t:property name="message2.subject"	value="subject${TIME}.${COUNTER}"/>



<t:test_case testcaseid="RestServlet_AuthCookieBasic_Setup" type="always" >
	<t:objective>setup accounts</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${account1.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
	</t:test>

</t:test_case>




<t:test_case testcaseid="RestServlet_AuthCookie_XmlFormatter_01" type="functional" bugids="35917">
	<t:objective>Verify 403 return code when using fmt=xml and query="query" without auth cookie (without user part)</t:objective>
	<t:steps>
	1. Auth as user 1
	2. Add a message in the inbox
	3. Use REST - user=~, auth=co, fmt=xml, query=content - 200
	4. Clear the auth token
	5. Use REST - user=~, auth=co, fmt=xml, query=content - 403		
	</t:steps>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account1.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test id="getFolderRequest">
        <t:request>
               <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>              
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="inboxFolder.id"/>
        </t:response>
    </t:test>

	<t:property name="message1.content" value="content${TIME}${COUNTER}"/>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${inboxFolder.id}">
                    <content>From: foo@foo.com 
To: foo@foo.com 
Subject: email01A
MIME-Version: 1.0 
Content-Type: text/plain; charset=utf-8 
Content-Transfer-Encoding: 7bit

simple text string in the body
${message1.content}

					
					</content>
                </m>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="message1.id"/>
        </t:response>
    </t:test>


	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<auth>co</auth>
			<fmt>xml</fmt>
			<query>${message1.content}</query>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

	<t:property name="authToken" value=""/>

	<t:resttest>
		<t:restServletRequest>
			<auth>co</auth>
			<fmt>xml</fmt>
			<query>${message1.content}</query>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="404"/>
		</t:restServletResponse>
	</t:resttest>

</t:test_case>

<t:test_case testcaseid="RestServlet_AuthCookie_XmlFormatter_02" type="functional" bugids="35917">
	<t:objective>Verify 200 return code when using fmt=xml and query="query" without auth cookie (with user part)</t:objective>
	<t:steps>
	1. Auth as user 1
	2. Add a message in the inbox
	3. Use REST - user=account, auth=co, fmt=xml, query=content - 200
	4. Clear the auth token
	5. Use REST - user=account, auth=co, fmt=xml, query=content - 200		
	</t:steps>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account1.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test id="getFolderRequest">
        <t:request>
               <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>              
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="inboxFolder.id"/>
        </t:response>
    </t:test>

	<t:property name="message1.content" value="content${TIME}${COUNTER}"/>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${inboxFolder.id}">
                    <content>From: foo@foo.com 
To: foo@foo.com 
Subject: email01A
MIME-Version: 1.0 
Content-Type: text/plain; charset=utf-8 
Content-Transfer-Encoding: 7bit

simple text string in the body
${message1.content}

					
					</content>
                </m>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="message1.id"/>
        </t:response>
    </t:test>


	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<user>${account1.name}</user>
			<auth>co</auth>
			<fmt>xml</fmt>
			<query>${message1.content}</query>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

	<t:property name="authToken" value=""/>

	<t:resttest>
		<t:restServletRequest>
			<user>${account1.name}</user>
			<auth>co</auth>
			<fmt>xml</fmt>
			<query>${message1.content}</query>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="500"/>
			<!-- TODO: Check that the results are only "<items/>", i.e. public view -->
		</t:restServletResponse>
	</t:resttest>

</t:test_case>

<t:test_case testcaseid="RestServlet_AuthCookie_XmlFormatter_03" type="functional" bugids="35917">
	<t:objective>Verify 403 return code when using fmt=xml and query="query" (with user part and invalid auth token)</t:objective>
	<t:steps>
	1. Auth as user 1
	2. Add a message in the inbox
	3. Use REST - auth=co, fmt=xml, query=content - 200
	4. Clear the auth token
	5. Use REST - auth=co, fmt=xml, query=content - 401		
	</t:steps>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account1.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test id="getFolderRequest">
        <t:request>
               <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>              
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="inboxFolder.id"/>
        </t:response>
    </t:test>

	<t:property name="message1.content" value="content${TIME}${COUNTER}"/>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${inboxFolder.id}">
                    <content>From: foo@foo.com 
To: foo@foo.com 
Subject: email01A
MIME-Version: 1.0 
Content-Type: text/plain; charset=utf-8 
Content-Transfer-Encoding: 7bit

simple text string in the body
${message1.content}

					
					</content>
                </m>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="message1.id"/>
        </t:response>
    </t:test>


	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<user>${account1.name}</user>
			<auth>co</auth>
			<fmt>xml</fmt>
			<query>${message1.content}</query>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

	<t:property name="authToken" value="123456780"/>

	<t:resttest>
		<t:restServletRequest>
			<user>${account1.name}</user>
			<auth>co</auth>
			<fmt>xml</fmt>
			<query>${message1.content}</query>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="401"/>
		</t:restServletResponse>
	</t:resttest>

</t:test_case>



</t:tests>
