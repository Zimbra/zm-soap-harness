<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.password" value="${defaultpassword.value}"/>

<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.password" value="${defaultpassword.value}"/>

<t:property name="message1.content" value="content${TIME}.${COUNTER}"/>
<t:property name="message1.subject" value="subject${TIME}.${COUNTER}"/>


<t:property name="root"				value="${soapxml.root}/MailClient/Mail/lmtp/MimeBasic/"/>
<t:property name="message2.file"	value="${root}/lmtp_basic01.txt"/>
<t:property name="message2.subject"	value="subject${TIME}.${COUNTER}"/>



<t:test_case testcaseid="RestServlet_AuthBasicAuth_Setup" type="always" >
	<t:objective>setup accounts</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${account1.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
				<password>${account2.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
		</t:response>
	</t:test>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>


	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account1.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:property name="account1.authToken" value="${authToken}"/>

	<t:test required="true">
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="t" a='${account2.name}'/>
					<su>${message1.subject}</su>
					<mp ct="text/plain">
						<content>${message1.content}</content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message1.id"/>
		</t:response>
	</t:test>

</t:test_case>




<t:test_case testcaseid="RestServlet_zAuthToken_01" type="smoke" >
	<t:objective>Use zAuthToken in the URL to view a file using REST</t:objective>
	<t:steps>
	1. Use zauthtoken='authtoken' when accessing a message from REST
	</t:steps>


	<!-- Clear the auth token -->
	<t:property name="authToken" value=""/>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<zauthtoken>${account1.authToken}</zauthtoken>
			<id>${message1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

</t:test_case>

<t:test_case testcaseid="RestServlet_zAuthToken_02" type="smoke" >
	<t:objective>Verify nginx routes the REST request based on the zauthtoken value</t:objective>
	<t:steps>
	1. Set server to the generic server name
	2. Use zauthtoken='authtoken' when accessing a message from REST (this should randomly hit the wrong server every so often)
	3. verify 200 response
	</t:steps>


	<!-- Clear the auth token -->
	<t:property name="authToken" value=""/>

	<t:property name="server.zimbraAccount" value="${zimbraServer.name}"/>
	<t:property name="server.restServlet" value="${zimbraServer.name}"/>

	<t:resttest>
		<t:restServletRequest>
			<zauthtoken>${account1.authToken}</zauthtoken>
			<id>${message1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

</t:test_case>


</t:tests>
