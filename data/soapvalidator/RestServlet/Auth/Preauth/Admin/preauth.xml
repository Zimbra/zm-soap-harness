<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain1.name" value="preauth.${TIME}.${COUNTER}.com"/>
<t:property name="domain1.preauthkey" value="7c9d4c4372457f2e9df0a681e31559e691199762171b832ec042861bc9b610ba"/>

<t:property name="account1.name" value="preauth${TIME}${COUNTER}@${domain1.name}"/>
<t:property name="account2.name" value="preauth${TIME}${COUNTER}@${domain1.name}"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>

	<t:test required="true">
	 <t:request>
	   <PingRequest xmlns="urn:zimbraAdmin"/>
	 </t:request>
	  <t:response>
		<t:select path="//admin:PingResponse"/>
	 </t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="acct1_setup" type="always" >
 <t:objective>create test account</t:objective>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test id="CreateDomainRequest0a">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain1.name}</name>
                <a n="zimbraPreAuthKey">${domain1.preauthkey}</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse">
	            <t:select path="//admin:domain" attr="id" set="domain1.id"/>
	            <t:select path="//admin:a[@n='zimbraPreAuthKey']" match="${domain1.preauthkey}"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
                <a n="zimbraIsAdminAccount">${globals.true}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
                <a n="zimbraIsDelegatedAdminAccount">${globals.true}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  


</t:test_case>


<t:test_case testcaseid="REST_Admin_PreauthRequest_basic_01" type="smoke" >
	<t:objective>Preauth request - basic test for global admin preauth</t:objective>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="server.zimbraAdmin" value="${account1.server}"/>

	<t:property name="authToken" value=""/>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" />
		</t:response>
	</t:test>

	<t:property name="authToken" value=""/>
	
	<t:property name="account1.timestamp" value="${TIME}"/>
	<t:property name="account1.expires" value="0"/>
	
	<t:preauth
		account="${account1.name}"
		admin="1"
		by="name"
		timestamp="${account1.timestamp}"
		expires="${account1.expires}"
		key="${domain1.preauthkey}"
		set="account1.preauthkey"/>
	
	<t:property name="server.restServlet" value="${account1.server}"/>
	<t:property name="soapservice.mode" value="${admin.mode}"/>
	<t:property name="soapservice.port" value="${admin.port}"/>

	<t:resttest>
		<t:restServletRequest>
			<basepath>/service/preauth</basepath>
			<preauth account="${account1.name}" admin="1" by="name" timestamp="${account1.timestamp}" expires="${account1.expires}">${account1.preauthkey}</preauth>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

</t:test_case>


<t:test_case testcaseid="REST_Admin_PreauthRequest_basic_01" type="smoke" >
	<t:objective>Preauth request - basic test for domain admin preauth</t:objective>


	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	<t:property name="server.zimbraAdmin" value="${account2.server}"/>

	<t:property name="authToken" value=""/>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" />
		</t:response>
	</t:test>

	<t:property name="authToken" value=""/>
	
	<t:property name="account2.timestamp" value="${TIME}"/>
	<t:property name="account2.expires" value="0"/>
	
	<t:preauth
		account="${account2.name}"
		admin="1"
		by="name"
		timestamp="${account2.timestamp}"
		expires="${account2.expires}"
		key="${domain1.preauthkey}"
		set="account2.preauthkey"/>
	
	<t:property name="server.restServlet" value="${account2.server}"/>
	<t:property name="soapservice.mode" value="${admin.mode}"/>
	<t:property name="soapservice.port" value="${admin.port}"/>

	<t:resttest>
		<t:restServletRequest>
			<basepath>/service/preauth</basepath>
			<preauth account="${account2.name}" admin="1" by="name" timestamp="${account2.timestamp}" expires="${account2.expires}">${account2.preauthkey}</preauth>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

</t:test_case>


</t:tests>
