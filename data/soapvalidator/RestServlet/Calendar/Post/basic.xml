<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.password" value="${defaultpassword.value}"/>

<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.password" value="${defaultpassword.value}"/>

<t:property name="root"				value="${soapxml.root}/RestServlet/Calendar/Post/"/>
<t:property name="ical1.ics"		value="${root}/basic.ics"/>
<t:property name="ical1.name"		value="iCalBasic"/>
<t:property name="ical1.description"	value="iCalBasic.Description"/>
<t:property name="ical1.location"		value="iCalBasic.Location"/>
<t:property name="ical1.duration"		value="3600000"/>
<t:property name="ical1.start"		value="1137666600000"/> <!-- 20060119T103000Z -->
<t:property name="ical1.end"		value="1137670200000"/> <!-- 20060119T113000Z -->

<t:property name="ical2.ics"	value="${root}/bug9682.ics"/>
<t:property name="ical2.start"	value="1151712000000"/>
<t:property name="ical2.end"	value="1154304000000"/>



<t:test_case testcaseid="RestServlet_CalendarPost_Account_Setup" type="always" >
	<t:objective>setup accounts</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
		</t:response>
	</t:test>


</t:test_case>



<t:test_case testcaseid="RestServlet_CalendarPost_01" type="smoke">
	<t:objective>Post a basic calendar ICS to the REST servlet</t:objective>
	<t:steps>
	1. Use the rest servlet to upload a calendar ICS
	2. Verify that the calendar ICS meetings appear in the calendar
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>


	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest>
		<t:restServletRequest method="POST">
			<filename>${ical1.ics}</filename>
			<folder>calendar</folder>
			<fmt>ics</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

    <t:test >
        <t:request>
            <GetApptSummariesRequest xmlns="urn:zimbraMail" s="${TIME(-7d)[${ical1.start}]}" e="${TIME(+7d)[${ical1.end}]}"/>
        </t:request>
        <t:response>
            <t:select path="//mail:GetApptSummariesResponse/mail:appt[@name='${ical1.name}']" attr="loc" match="${ical1.location}"/>
            <t:select path="//mail:GetApptSummariesResponse/mail:appt[@name='${ical1.name}']" attr="d" match="${ical1.duration}"/>
            <t:select path="//mail:GetApptSummariesResponse/mail:appt[@name='${ical1.name}']/mail:inst" attr="s" match="${ical1.start}"/>
            <t:select path="//mail:GetApptSummariesResponse/mail:appt[@name='${ical1.name}']/mail:fr" match="${ical1.description}"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="RestServlet_CalendarPost_02" type="functional" bugids="9682">
	<t:objective>Post a calendar ICS to the REST servlet</t:objective>
	<t:steps>
	1. Use the rest servlet to upload a calendar ICS
	2. Verify that the calendar ICS meetings appear in the calendar
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:property name="server.restServlet" value="${account2.server}"/>

	<t:resttest>
		<t:restServletRequest method="POST">
			<filename>${ical2.ics}</filename>
			<folder>calendar</folder>
			<fmt>ics</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

    <t:test >
        <t:request>
            <GetApptSummariesRequest xmlns="urn:zimbraMail" s="${ical2.start}" e="${ical2.end}"/>
        </t:request>
        <t:response>
            <t:select path="//mail:GetApptSummariesResponse/mail:appt[@name='Pearl Jam']"/>
            <t:select path="//mail:GetApptSummariesResponse/mail:appt[@name='Posted Rental Ad on Craigslist']"/>
        </t:response>
    </t:test>


</t:test_case>


</t:tests>
