<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.password" value="${defaultpassword.value}"/>

<t:property name="uploadFile.name" value="${testMailRaw.root}/email01/msg01.txt"/>

<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.password" value="${defaultpassword.value}"/>

<t:property name="compose.content" value="content${TIME}.${COUNTER}"/>
<t:property name="compose.subject" value="subject${TIME}.${COUNTER}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="RestServlet_Account_Setup" type="always" >
	<t:objective>setup accounts</t:objective>

	<t:test required="true" >
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${account1.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
                     <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
				<password>${account2.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
                     <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="RestServlet_BlockedAttachments1" type="smoke" bugids="4505">
	<t:objective>
		Verify that attachments can be viewed
	</t:objective>

	<t:property name="uploadServletServer" value="${test_acct1.server}"/>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <ModifyConfigRequest  xmlns="urn:zimbraAdmin">
                <a n="zimbraAttachmentsBlocked">FALSE</a>
            </ModifyConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyConfigResponse"/>
        </t:response>
    </t:test> 
    
	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account1.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="message2.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

	<t:test >
	  <t:request>
	    <SendMsgRequest xmlns="urn:zimbraMail">
	      <m>
			<e t="t" a="${account2.name}"/>
			<su> ${compose.subject} </su>
			<mp ct="text/plain">
			    <content> ${compose.content} </content>
			</mp>
		    <attach aid="${message2.aid}"/>
	     </m>
	    </SendMsgRequest>
	  </t:request>
	  <t:response>
	         <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message2.id"/>
	   </t:response>
	</t:test>

	<!-- Login as account2 to read the mail -->
	<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
	<t:property name="uploadServletServer" value="${test_acct2.server}"/>
	<t:property name="server.restServlet" value="${test_acct2.server}"/>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${account2.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
			<query>subject:${compose.subject}</query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message1.id"/>
	 </t:response>
	</t:test>

    <t:test id="MsgGetRequest2">
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message1.id}" read="1" html="1"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${message1.id}']/mail:mp">
            	<t:select path="mail:mp[@cd='attachment']" attr="part" set="part1.id"/>
            </t:select>
        </t:response>
    </t:test>

	<t:property name="server.restServlet" value="${test_acct2.server}"/>
	<t:resttest>
		<t:restServletRequest>
			<id>${message1.id}</id>
			<part>${part1.id}</part>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select match=".*text string in the.*"/>
		</t:restServletResponse>
	</t:resttest>

</t:test_case>


<t:test_case testcaseid="RestServlet_BlockedAttachments2" type="smoke">
	<t:objective>
		Verify that attachments cannot be viewed - if zimbraAttachmentsBlocked=TRUE
	</t:objective>


	<!-- Loging as the admin, switch off attachment downloading -->
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <ModifyConfigRequest  xmlns="urn:zimbraAdmin">
                <a n="zimbraAttachmentsBlocked">TRUE</a>
            </ModifyConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyConfigResponse"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
<t:property name="uploadServletServer" value="${test_acct1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account1.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="message2.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

	<t:test >
	  <t:request>
	    <SendMsgRequest xmlns="urn:zimbraMail">
	      <m>
			<e t="t" a="${account2.name}"/>
			<su> ${compose.subject} </su>
			<mp ct="text/plain">
			    <content> ${compose.content} </content>
			</mp>
		    <attach aid="${message2.aid}"/>
	     </m>
	    </SendMsgRequest>
	  </t:request>
	  <t:response>
	         <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message2.id"/>
	   </t:response>
	</t:test>

	<!-- Login as account2 to read the mail -->
	<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
	<t:property name="uploadServletServer" value="${test_acct2.server}"/>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${account2.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
	   <query>subject:${compose.subject}</query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message1.id"/>
	 </t:response>
	</t:test>

    <t:test id="MsgGetRequest2">
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message1.id}" read="1" html="1"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${message1.id}']/mail:mp">
            	<t:select path="mail:mp[@cd='attachment']" attr="part" set="part1.id"/>
            </t:select>
        </t:response>
    </t:test>

	<t:property name="server.restServlet" value="${test_acct2.server}"/>
	<t:resttest>
		<t:restServletRequest>
			<id>${message1.id}</id>
			<part>${part1.id}</part>
		</t:restServletRequest>
		<t:restServletResponse>
			<!-- Since CRAY, the response code is 200, with an HTML document error displayed to the end user -->
			<t:select attr="StatusCode" match="200"/>
			<t:select match=".*text string in the.*"/>
		</t:restServletResponse>
	</t:resttest>

	<!-- Undo the zimbraAttachmentsBlocked setting -->
	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <ModifyConfigRequest  xmlns="urn:zimbraAdmin">
                <a n="zimbraAttachmentsBlocked">FALSE</a>
            </ModifyConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyConfigResponse"/>
        </t:response>
    </t:test> 
	
</t:test_case>



</t:tests>
