<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.password" value="test123"/>
<t:property name="account1.server" value="NOT_DEFINED"/>

<t:property name="contact01.FirstName" value="FirstName"/>
<t:property name="contact01.LastName" value="LastName"/>
<t:property name="contact01.MiddleInitial" value="s"/>
<t:property name="contact01.emailAddress" value="email@domain.com"/>



<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="RestServlet_contact_vcf_account_setup" type="always" >
    <t:objective>create test account</t:objective>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${account1.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${account1.server}"/>
<t:property name="server.restServlet" value="${account1.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${account1.password}</password>
                <!--<prefs/>-->
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>


</t:test_case>

<t:test_case testcaseid="RestServlet_contact_vcf_01" type="smoke" >
    <t:objective>Using the REST servlet, get a contact using vcf format</t:objective>
	<t:steps>
	1. Create a contact
	2. Get the contact using the REST servlet, using vcf format
	3. Compare the result to the 'golden' file
	</t:steps>


    <t:test >
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
                <cn>
                    <a n="firstName">${contact01.FirstName}</a>
                    <a n="lastName">${contact01.LastName}</a>
                    <a n="email">${contact01.emailAddress}</a>
                </cn>     
            </CreateContactRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateContactResponse/mail:cn">
				<t:select attr="id" set="contact.id"/>
            </t:select>	
        </t:response>
    </t:test>

	<t:resttest>
		<t:restServletRequest>
			<id>${contact.id}</id>
			<fmt>vcf</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
			<t:select attr="BEGIN" match="VCARD"/>
			<t:select attr="VERSION" match="3.0"/>
			<!-- FN format is "FN:Last\, First" -->
			<t:select attr="FN" match="${contact01.LastName}.*${contact01.FirstName}"/>
			<t:select attr="N" match="${contact01.LastName};${contact01.FirstName};;;"/>
			<t:select attr="EMAIL" match="TYPE=internet:${contact01.emailAddress}"/>
			<t:select attr="END" match="VCARD"/>
		</t:restServletResponse>
	</t:resttest>


</t:test_case>

<t:test_case testcaseid="RestServlet_contact_vcf_02" type="functional" >
    <t:objective>Using the REST servlet, get a contact (with all fields) using vcf format</t:objective>
	<t:steps>
	1. Create a contact
	2. Get the contact using the REST servlet, using vcf format
	3. Compare the result to the 'golden' file
	</t:steps>

    <t:test >
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
                <cn>
                    <a n="firstName">${contact01.FirstName}</a>
                    <a n="lastName">${contact01.LastName}</a>
                    <a n="email">${contact01.emailAddress}</a>
                    <a n="company">pspl</a>
                    <a n="workFax">6666</a>
                    <a n="workPhone2">6666</a>
                    <a n="callbackPhone">6666</a>
                    <a n="carPhone">6666</a>
                    <a n="homePhone2">6666</a>
                    <a n="homeFax">6666</a>
                    <a n="otherPhone">6666</a>
                    <a n="otherFax">6666</a>
                    <a n="email2">user1@persistent.co.in</a>
                    <a n="middleName">s</a>
                    <a n="jobTitle">QA</a>
                    <a n="workPhone">66666</a>
                    <a n="homePhone">66666</a>
                    <a n="mobilePhone">6666</a>
                    <a n="pager">666</a>
                    <a n="email3">user1@persistent.co.in</a>
                    <a n="workStreet">ttt</a>
                    <a n="workCity">tt</a>
                    <a n="workState">tt</a>
                    <a n="workPostalCode">tt</a>
                    <a n="workCountry">tt</a>
                    <a n="workURL">tt</a>
                    <a n="notes">hihohioohhghghgjhjhj</a>
                </cn>     
            </CreateContactRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateContactResponse/mail:cn">
            <t:select attr="id" set="contact.id"/> 	  
            </t:select>	
        </t:response>
    </t:test>
	
	<t:resttest>
		<t:restServletRequest>
			<id>${contact.id}</id>
			<fmt>vcf</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
			<!-- FN format is "FN:Last\, First" -->
			<t:select attr="FN" match="${contact01.LastName}.*${contact01.FirstName}"/>
			<t:select attr="N" match="${contact01.LastName};${contact01.FirstName};${contact01.MiddleInitial};;"/>
			<t:select attr="EMAIL" match="TYPE=internet:${contact01.emailAddress}"/>
		</t:restServletResponse>
	</t:resttest>

</t:test_case>



<t:test_case testcaseid="RestServlet_contact_vcf_03" type="functional" >
    <t:objective>Using the REST servlet, get a deleted contact - receive 404 response</t:objective>
	<t:steps>
	1. Create a contact
	2. Delete the contact
	2. Get the contact using the REST servlet, using vcf format
	3. Receive 404 response
	</t:steps>

    <t:test >
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
                <cn>
                    <a n="firstName">First.${TIME}.${COUNTER}</a>
                    <a n="lastName">Last.${TIME}.${COUNTER}</a>
                    <a n="email">email.${TIME}.${COUNTER}@domain.com</a>
                </cn>     
            </CreateContactRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateContactResponse/mail:cn">
				<t:select attr="id" set="contact.id"/>
            </t:select>	
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <ContactActionRequest xmlns="urn:zimbraMail">
                <action id="${contact.id}" op="delete"/>
            </ContactActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ContactActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:resttest>
		<t:restServletRequest>
			<id>${contact.id}</id>
			<fmt>vcf</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="404"/>
		</t:restServletResponse>
	</t:resttest>


</t:test_case>



<t:test_case testcaseid="RestServlet_contact_vcf_04" type="functional">
    <t:objective>Using the REST servlet, get a contact that was imported as vcf</t:objective>

    <t:test >
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
                <cn>
<vcard>
BEGIN:VCARD
VERSION:2.1
N:${contact01.LastName};${contact01.FirstName};M.;Mr.;Esq.
TEL;WORK;VOICE;MSG:+1 (919) 555-1234
TEL;WORK;FAX:+1 (919) 555-9876
ADR;WORK;PARCEL;POSTAL;DOM:Suite 101;1 Central St.;Any Town;NC;27654
END:VCARD
</vcard>
                </cn>     
            </CreateContactRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="contact.id"/>
        </t:response>
    </t:test>
    
	<t:resttest>
		<t:restServletRequest>
			<id>${contact.id}</id>
			<fmt>vcf</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
			<!-- FN format is "FN:Last\, First" -->
			<t:select attr="FN" match="${contact01.LastName}.*${contact01.FirstName}"/>
			<t:select attr="N" match="${contact01.LastName};${contact01.FirstName}.*"/>
		</t:restServletResponse>
	</t:resttest>


</t:test_case>


<t:test_case testcaseid="RestServlet_contact_vcf_05" type="functional">
    <t:objective>Using the REST servlet, get a contact that was imported as vcf (exported from Outlook)</t:objective>

    <t:test >
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
                <cn>
<vcard>
BEGIN:VCARD
VERSION:2.1
N:${contact01.LastName};${contact01.FirstName};_MIDDLE_;_TITLE_;_SUFFIX_
FN:_FIRST_ _MIDDLE_ _LAST_ _SUFFIX_
NICKNAME:_NICKNAME_
ORG:_COMPANY_;_DEPARTMENT_
TITLE:_JOB_TITLE_
NOTE;ENCODING=QUOTED-PRINTABLE:_NOTES_=0D=0A
TEL;WORK;VOICE:_BUSINESS_PHONE_
TEL;WORK;VOICE:_BUSINESS2_PHONE_
TEL;HOME;VOICE:_HOME_PHONE_
TEL;CELL;VOICE:_MOBILE_PHONE_
TEL;CAR;VOICE:_CAR_PHONE_
TEL;VOICE:_OTHER_PHONE_NUMBER_
TEL;PAGER;VOICE:_PAGER_NUMBER_
TEL;WORK;FAX:_BUSINESS_FAX_
TEL;HOME;FAX:_HOME_FAX_
TEL;HOME:_HOME_2_PHONE_
TEL;ISDN:_ISDN_NUMBER_
TEL;PREF:_PRIMARY_NUMBER_
ADR;WORK:_BUSINESSADDR_POBOX_;_OFFICE_;_BUSINESSADDR_STREET_;_BUSINESSADDR_CITY_;_BUSINESSADDR_STATE_;_BUSINESSADDR_ZIP_;_BUSINESSADDR_COUNTRY_
LABEL;WORK;ENCODING=QUOTED-PRINTABLE:_OFFICE_=0D=0A_BUSINESSADDR_POBOX_=0D=0A_BUSINESSADDR_STREET_=0D=0A_BUSINESS=
ADDR_CITY_, _BUSINESSADDR_STATE_ _BUSINESSADDR_ZIP_=0D=0A_BUSINESSADDR_COUNT=
RY_
ADR;HOME:_HOMEADDR_POBOX_;;_HOMEADDR_STREET_;_HOMEADDR_CITY_;_HOMEADDR_STATE_;_HOMEADDR_ZIP_;_HOMEADDR_COUNTRY_
LABEL;HOME;ENCODING=QUOTED-PRINTABLE:_HOMEADDR_POBOX_=0D=0A_HOMEADDR_STREET_=0D=0A_HOMEADDR_CITY_, _HOMEADDR_STAT=
E_ _HOMEADDR_ZIP_=0D=0A_HOMEADDR_COUNTRY_
ADR;POSTAL:_OTHERADDR_POBOX_;;_OTHERADDR_STREET_;_OTHERADDR_CITY_;_OTHERADDR_STATE_;_OTHERADDR_ZIP_;_OTHERADDR_COUNTRY_
LABEL;POSTAL;ENCODING=QUOTED-PRINTABLE:_OTHERADDR_POBOX_=0D=0A_OTHERADDR_STREET_=0D=0A_OTHERADDR_CITY_, _OTHERADDR_=
STATE_ _OTHERADDR_ZIP_=0D=0A_OTHERADDR_COUNTRY_
X-WAB-GENDER:2
URL;HOME:http://_PERSONAL_HOMEPAGE_
URL;WORK:http://_WEBPAGEADDRESS_
ROLE:_PROFESSION_
BDAY:20060401
EMAIL;PREF;INTERNET:${contact01.emailAddress}
EMAIL;TLX:_TELEX_NUMBER_
FBURL:?????????????????
REV:20060321T084730Z
END:VCARD
</vcard>
                </cn>     
            </CreateContactRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="contact.id"/>
        </t:response>
    </t:test>


	<t:resttest>
		<t:restServletRequest>
			<id>${contact.id}</id>
			<fmt>vcf</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
			<!-- FN format is "FN:Last\, First" -->
			<t:select attr="N" match="${contact01.LastName};${contact01.FirstName}.*"/>
			<t:select attr="EMAIL" match="TYPE=internet:${contact01.emailAddress}"/>
		</t:restServletResponse>
	</t:resttest>


</t:test_case>

</t:tests>
