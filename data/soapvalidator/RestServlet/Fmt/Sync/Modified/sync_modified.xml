<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.password" value="${defaultpassword.value}"/>

<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.password" value="${defaultpassword.value}"/>

<t:property name="message1.content" value="content${TIME}.${COUNTER}"/>
<t:property name="message1.subject" value="subject${TIME}.${COUNTER}"/>

<t:property name="op.flag" value="flag"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:test_case testcaseid="RestServlet_modified_Account_Setup" type="always" >
	<t:objective>setup accounts</t:objective>

	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${account1.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
                     <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
				<password>${account2.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
                     <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
		</t:response>
	</t:test>





</t:test_case>



<!-- TODO: need a mechanism to determine that the modified _value_ is the correct timestamp -->


<t:test_case testcaseid="RestServlet_modifie_ID_02" type="smoke" >
	<t:objective>Verify X-Zimbra-Modified is set correctly for new messages, ie. received = modified</t:objective>

<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account1.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>


	<t:test required="true">
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="t" a='${account2.name}'/>
					<su>${message1.subject}</su>
					<mp ct="text/plain">
						<content> ${message1.content} </content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse/mail:m" />
		</t:response>
	</t:test>


<t:property name="server.zimbraAccount" value="${account2.server}"/>
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${account2.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" sortBy="dateDesc" offset="0" limit="25" types="message">
		   <query>in:inbox subject:(${message1.subject})</query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
	       <t:select path="//mail:SearchResponse/mail:m" attr="id" set="message1.id"/>
	 </t:response>
	</t:test>
	
	
	<t:property name="server.restServlet" value="${account2.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<id>${message1.id}</id>
			<fmt>sync</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="X-Zimbra-Received" set="message1.received"/>
		</t:restServletResponse>
	</t:resttest>

	<!-- TODO: the harness should be able to set and match in the same <t:test>, but it can't right now -->
	<t:resttest>
		<t:restServletRequest>
			<id>${message1.id}</id>
			<fmt>sync</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="X-Zimbra-Modified" match="${message1.received}"/>
		</t:restServletResponse>
	</t:resttest>

	<t:test delay="5000">
	 <t:request>
	   <MsgActionRequest  xmlns="urn:zimbraMail">
	     <action id="${message1.id}" op="${op.flag}"/>
	   </MsgActionRequest >
	 </t:request>
     <t:response>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "op" match = "${op.flag}"/>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "id" match = "${message1.id}"/>
	 </t:response>
	</t:test>

	<!-- TODO: the harness should be able to determine received+5 seconds, but it can't right now -->
	<t:resttest>
		<t:restServletRequest>
			<id>${message1.id}</id>
			<fmt>sync</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="X-Zimbra-Modified" match="${message1.received}" emptyset="1"/>
		</t:restServletResponse>
	</t:resttest>

</t:test_case>

</t:tests>
