<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="rest05.folder" value="${testMailRaw.root}/rest05"/>
<t:property name="rest05A.subject" value="rest05A"/>
<t:property name="rest05B.subject" value="rest05B"/>
<t:property name="rest05C.subject" value="rest05C"/>



<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.password" value="${defaultpassword.value}"/>




<t:test_case testcaseid="RestServlet_Message_Account_Setup" type="always" >
	<t:objective>setup accounts</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${account1.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
	</t:test>

    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <foldername>${rest05.folder}</foldername>
            <to>${account1.name}</to>
            <from>${nonZimbraUser.name}</from>
            <server>${account1.server}</server>
         </t:lmtpInjectRequest>
    </t:mailinjecttest>    
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account1.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${rest05A.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="rest05A.id"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${rest05B.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="rest05B.id"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${rest05C.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="rest05C.id"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="RestServlet_bodyTextHTML_01" type="functional" bugids="10760">
	<t:objective>Rest Servlet - verify body=html returns the message content as the html part</t:objective>
	<t:steps>
			1. Inject a mime message with text and html
			2. Use the rest servlet to download with body=html
	</t:steps>


	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<id>${rest05B.id}</id>
			<body>html</body>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="To" match=".*" emptyset="1"/>		<!-- Verify that the entire mime is not returned -->
			<t:select match="^MessageContent" emptyset="1"/>	<!-- Verify that the text part is not returned -->
			<t:select match=".*MessageContent.*" />				<!-- Verify that the html part is returned -->
		</t:restServletResponse>
	</t:resttest>

</t:test_case>

<t:test_case testcaseid="RestServlet_bodyTextHTML_02" type="functional" bugids="10760">
	<t:objective>Rest Servlet - verify body=text returns the message content as the text part</t:objective>
	<t:steps>
			1. Inject a mime message with text and html
			2. Use the rest servlet to download with body=text
	</t:steps>


	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<id>${rest05B.id}</id>
			<body>text</body>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="To" match=".*" emptyset="1"/>	<!-- Verify that the entire mime is not returned -->
			<t:select match="^MessageContent" />			<!-- Verify that the text part is returned -->
			<t:select match=".*html.*" emptyset="1"/>		<!-- Verify that the html part is not returned -->
		</t:restServletResponse>
	</t:resttest>

</t:test_case>


<t:test_case testcaseid="RestServlet_bodyTextHTML_03" type="functional" >
	<t:objective>Rest Servlet - verify body=html returns the text part if no html part exists</t:objective>
	<t:steps>
			1. Inject a mime message with a text part
			2. Use the rest servlet to download with fmt=html
			3. Verify that the text part is returned
	</t:steps>


	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<id>${rest05A.id}</id>
			<body>html</body>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="To" match=".*" emptyset="1"/>	<!-- Verify that the entire mime is not returned -->
			<t:select match="^MessageContent" />			<!-- Verify that the text part is returned -->
			<t:select match=".*html.*" emptyset="1"/>		<!-- Verify that the html part is not returned -->
		</t:restServletResponse>
	</t:resttest>

</t:test_case>

<t:test_case testcaseid="RestServlet_bodyTextHTML_04" type="functional" >
	<t:objective>Rest Servlet - verify body=text returns the message content as the text part</t:objective>
	<t:steps>
			1. Inject a mime message with a text part
			2. Use the rest servlet to download with fmt=text
			3. Verify that the text part is returned
	</t:steps>


	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<id>${rest05A.id}</id>
			<body>text</body>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="To" match=".*" emptyset="1"/>	<!-- Verify that the entire mime is not returned -->
			<t:select match="^MessageContent" />			<!-- Verify that the text part is returned -->
			<t:select match=".*html.*" emptyset="1"/>		<!-- Verify that the html part is not returned -->
		</t:restServletResponse>
	</t:resttest>

</t:test_case>

<t:test_case testcaseid="RestServlet_bodyTextHTML_05" type="functional" >
	<t:objective>Rest Servlet - verify body=html returns the html part if only the html part exists</t:objective>
	<t:steps>
			1. Inject a mime message with only an html part
			2. Use the rest servlet to download with fmt=html
			3. Verify that the html part is returned
	</t:steps>


	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<id>${rest05C.id}</id>
			<body>html</body>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="To" match=".*" emptyset="1"/>		<!-- Verify that the entire mime is not returned -->
			<t:select match="^MessageContent" emptyset="1"/>	<!-- Verify that the text part is not returned -->
			<t:select match=".*MessageContent.*" />				<!-- Verify that the html part is returned -->
		</t:restServletResponse>
	</t:resttest>

</t:test_case>

<t:test_case testcaseid="RestServlet_bodyTextHTML_06" type="functional">
	<t:objective>Rest Servlet - verify body=text returns the html part if only the html part exists</t:objective>
	<t:steps>
			1. Inject a mime message with only an html part
			2. Use the rest servlet to download with fmt=text
			3. Verify that the html part is returned
	</t:steps>


	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<id>${rest05C.id}</id>
			<body>text</body>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="To" match=".*" emptyset="1"/>		<!-- Verify that the entire mime is not returned -->
			<t:select match="^MessageContent" emptyset="1"/>	<!-- Verify that the text part is not returned -->
			<t:select match=".*MessageContent.*" />				<!-- Verify that the html part is returned -->
		</t:restServletResponse>
	</t:resttest>

</t:test_case>




</t:tests>