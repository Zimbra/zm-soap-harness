<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name"			value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name"			value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="tgz.file"					value="${testMailRaw.root}/tgz01/5_0_9.tgz"/>
<t:property name="message1.subject"			value="subject12472596949804"/>		<!-- basic message in the inbox -->


<t:test_case testcaseid="RestServlet_FormatXML_AccountSetup" type="always" >
	<t:objective>setup accounts</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="RestServlet_Fmt_tgz_resolve_modify_01" type="smoke" >
	<t:objective>Verify import with resolve duplicates (resolve=modify)</t:objective>
	<t:steps>
	1. Login as account1
	2. Import tgz
	3. Import same tgz with resolve=modify
	4. Verify no duplicates
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>


	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest required="true">
		<t:restServletRequest method="POST">
			<filename>${tgz.file}</filename>
			<fmt>tgz</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

	<t:resttest required="true">
		<t:restServletRequest method="POST">
			<filename>${tgz.file}</filename>
			<fmt>tgz</fmt>
			<resolve>modify</resolve>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

	<t:delay sec="30"/>
	
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${message1.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message1.id"/>
		</t:response>
	</t:test>


</t:test_case>



<t:test_case testcaseid="RestServlet_Fmt_tgz_resolve_replace_02" type="smoke" >
	<t:objective>Verify import with resolve duplicates (resolve=replace)</t:objective>
	<t:steps>
	1. Login as account1
	2. Import tgz
	3. Import same tgz with resolve=replace
	4. Verify no duplicates
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>


	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest required="true">
		<t:restServletRequest method="POST">
			<filename>${tgz.file}</filename>
			<fmt>tgz</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

	<t:resttest required="true">
		<t:restServletRequest method="POST">
			<filename>${tgz.file}</filename>
			<fmt>tgz</fmt>
			<resolve>replace</resolve>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

	<t:delay sec="30"/>
	
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${message1.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message1.id"/>
		</t:response>
	</t:test>


</t:test_case>


<t:test_case testcaseid="RestServlet_Fmt_tgz_resolve_reset_03" type="smoke" >
	<t:objective>Verify import with resolve duplicates (resolve=reset)</t:objective>
	<t:steps>
	1. Login as account1
	2. Import tgz
	3. Import same tgz with resolve=reset
	4. Verify no duplicates
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>


	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest required="true">
		<t:restServletRequest method="POST">
			<filename>${tgz.file}</filename>
			<fmt>tgz</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

	<t:resttest required="true">
		<t:restServletRequest method="POST">
			<filename>${tgz.file}</filename>
			<fmt>tgz</fmt>
			<resolve>reset</resolve>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

	<t:delay sec="30"/>
	
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${message1.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message1.id"/>
		</t:response>
	</t:test>


</t:test_case>



<t:test_case testcaseid="RestServlet_Fmt_tgz_resolve_skip_04" type="smoke" >
	<t:objective>Verify import with resolve duplicates (resolve=skip)</t:objective>
	<t:steps>
	1. Login as account1
	2. Import tgz
	3. Import same tgz with resolve=skip
	4. Verify no duplicates
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>


	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest required="true">
		<t:restServletRequest method="POST">
			<filename>${tgz.file}</filename>
			<fmt>tgz</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

	<t:resttest required="true">
		<t:restServletRequest method="POST">
			<filename>${tgz.file}</filename>
			<fmt>tgz</fmt>
			<resolve>skip</resolve>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

	<t:delay sec="30"/>
	
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${message1.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message1.id"/>
		</t:response>
	</t:test>


</t:test_case>


</t:tests>
