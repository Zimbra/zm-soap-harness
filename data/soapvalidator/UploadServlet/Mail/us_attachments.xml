<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.password" value="${defaultpassword.value}"/>

<t:property name="uploadFile.name" value="${testMailRaw.root}/email01/msg01.txt"/>
<t:property name="frenchFile.name" value="${testMailRaw.root}/email01/BD_ModÃ¨le.sql"/>

<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.password" value="${defaultpassword.value}"/>
<t:property name="account3.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.password" value="${defaultpassword.value}"/>
<t:property name="account4.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.password" value="${defaultpassword.value}"/>

<t:property name="compose.content" value="content${TIME}.${COUNTER}"/>
<t:property name="compose.subject" value="subject${TIME}.${COUNTER}"/>




<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="CS_Account_Setup" type="always" >
	<t:objective>setup accounts</t:objective>

	<t:test required="true" >
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${account1.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
                     <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
				<password>${account2.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
                     <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account3.name}</name>
				<password>${account3.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
                     <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account4.name}</name>
				<password>${account4.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
                     <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct4.server"/>
		</t:response>
	</t:test>




	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>


	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account1.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>


</t:test_case>




<t:property name="uploadServletServer" value="${test_acct1.server}"/>
<t:property name="server.restServlet" value="${test_acct1.server}"/>



<t:test_case testcaseid="UploadServletAttachments1" type="smoke" bugids="8911">
	<t:objective>
		Send a message that includes an attachment that was uploaded using the upload servlet
	</t:objective>

	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="message2.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

	<t:test >
	  <t:request>
	    <SendMsgRequest xmlns="urn:zimbraMail">
	      <m>
			<e t="t" a="${account2.name}"/>
			<su> ${compose.subject} </su>
			<mp ct="text/plain">
			    <content> ${compose.content} </content>
			</mp>
		    <attach aid="${message2.aid}"/>
	     </m>
	    </SendMsgRequest>
	  </t:request>
	  <t:response>
	         <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message2.id"/>
	   </t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message2.id}" read="1" html="1"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${message2.id}"/>
        </t:response>
    </t:test>

	<t:resttest>
		<t:restServletRequest>
			<id>${message2.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
<t:property name="uploadServletServer" value="${test_acct2.server}"/>

<t:test_case testcaseid="UploadServletAttachments2" type="negative">
	<t:objective>
		Send a message that includes an attachment that was uploaded for diffrent account
	</t:objective>
       <t:steps>1. Login to account2
               2. Send a message using aid uploaded for first account
       </t:steps>
      
    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${account2.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
	     <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${account1.name}'/>
                    <mp ct="text/plain">
                        <content> ${compose.content} </content>
                    </mp>
                    <attach aid="${message2.aid}"/>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="mail.NO_SUCH_UPLOAD"/>
        </t:response>
    </t:test>

</t:test_case>

<!-- The french file name crashes the mac client.  For now, deprecate this test -->
<t:test_case testcaseid="UploadServletAttachments3" type="deprecated" bugids="7361">
	<t:objective>
		Send a message that includes an attachment (with foreign characters in the filename) that was uploaded using the upload servlet
	</t:objective>

	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${frenchFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="message2.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

	<t:test >
	  <t:request>
	    <SendMsgRequest xmlns="urn:zimbraMail">
	      <m>
			<e t="t" a="${account2.name}"/>
			<su> ${compose.subject} </su>
			<mp ct="text/plain">
			    <content> ${compose.content} </content>
			</mp>
		    <attach aid="${message2.aid}"/>
	     </m>
	    </SendMsgRequest>
	  </t:request>
	  <t:response>
	         <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message2.id"/>
	   </t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message2.id}" read="1" html="1"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <!-- Right now, the filename is set as BD_Mod?le.sql, but that is the bug.  Not sure what the correct value is. -->
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp/mail:mp[@ct='application/octet-stream']" attr="filename" match="TODO"/>
        </t:response>
    </t:test>

</t:test_case>



</t:tests>
