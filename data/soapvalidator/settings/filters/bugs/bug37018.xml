<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="nocont1.name" value="blabla@test.com"/>

<t:property name="filter1.name" value="contacts"/>
<t:property name="msg01.file"		value="${testMailRaw.root}/37018/lmtp_basic01.txt"/>
<t:property name="msg02.file"		value="${testMailRaw.root}/37018/lmtp_basic02.txt"/>

<t:property name="firstName" value="ContFirst.${TIME}.${COUNTER}"/>
<t:property name="lastName" value="ContLast.${TIME}.${COUNTER}"/>
<t:property name="folder.name" value="folder.${TIME}.${COUNTER}"/>
<t:property name="folder.pname" value="1"/>
	

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
         <t:response>
             <t:select path="//admin:PingResponse"/>
         </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="AccountSetup" type="always" >
    <t:objective>create test account</t:objective>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
	    <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
	    </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>

	<t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>

	
	<t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>
	

</t:test_case>

<t:property name="server.zimbraAccount" value="${account1.server}"/>

<t:test_case testcaseid="Filter_AddressIn_bug37018" type="bhr">
    <t:objective> Verify filter works if To field of the mail matches the contacts saved </t:objective>
	    <t:steps> 
			  1. Create a contact
			  2. Save a Rule as Addressbook -> (To) (cc) (bcc) -> :in -> contacts			  
			  3. Inject a Mail with To field is one of the contact that is being saved.
			  4. Inject a mail with To field that is there in the contacts
			  5. Inject a mail with cc field that is there in the contacts
			  6. Inject a mail with bcc field that is there in the contacts
			  7. Search mail get filtered and only one email should be available.
        </t:steps>
  
  	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
	
	<!-- Creating Contact as account2 
	<t:test >
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
                <cn>
                    <a n="firstName">${firstName}</a>
                    <a n="lastName">${lastName}</a>
                    <a n="email">${account2.name}</a>
                </cn>     
            </CreateContactRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateContactResponse/mail:cn"/>
        </t:response>
    </t:test> -->
		<!-- Create a Folder in Mail -->
		
	<t:test required="true">
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>        
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="account1.folder.inbox.id"/>
        </t:response>
    </t:test>

    <t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder.name}" l="${account1.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder.id"/>
        </t:response>
	</t:test>
	
	<t:test >
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
                <cn>
                	<a n="firstName">foo</a>
                    <a n="lastName">foo</a>
                	<a n="email">foo@foo.com</a>
                </cn>     
            </CreateContactRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateContactResponse/mail:cn"/>
        </t:response>
    </t:test>
	
	<!-- Saving the rules request an  setting up the filter -->
	<t:test id="filters_basic01a">
        <t:request>
            <ModifyFilterRulesRequest xmlns="urn:zimbraMail">
                <filterRules>
					<filterRule name="${filter1.name}" active="1">
                         <filterTests condition="anyof">
                         	<addressBookTest header="to" stringComparison="contacts"/>
                         	<addressBookTest header="cc" stringComparison="contacts"/>
                         	<addressBookTest header="bcc" stringComparison="contacts"/>                     	     
                        </filterTests>
                        <filterActions> 
                        	<actionFileInto folderPath="/${globals.inbox}/${folder.name}" />       
                        	<actionStop />       
                        </filterActions>
                    </filterRule>
                 </filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>
    
	<!-- Get the rules to check if it has got created -->
	<t:test>
        <t:request>
            <GetFilterRulesRequest xmlns="urn:zimbraMail"/>
	 </t:request>
	 <t:response>
            <t:select path="//mail:GetFilterRulesResponse"/>
        </t:response>
    </t:test>

	<!-- Login to account4 -->
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>	
	
	
	<!--Lmtp Inject emails to:account2 and cc:account1 from:account4-->
	<!-- Account2 is in contact in the Addressbook -->
	<!-- LMTP Inject the message which should get into the new folder created--> 
	<t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
            <to>${account1.name}</to>			
			<from>${account4.name}</from>
			<server>${account1.server}</server>           
        </t:lmtpInjectRequest>
    </t:mailinjecttest>   
	
	<!-- LMTP Inject the message which should get into inbox -->
	<t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg02.file}</filename>
            <to>${account1.name}</to>			
			<from>${account4.name}</from>
			<server>${account1.server}</server>           
        </t:lmtpInjectRequest>
    </t:mailinjecttest>   
	
	<!--  <t:smtpinjecttest>
        <t:smtpInjectRequest>
            <address>${account1.server}</address>
            <filename>${msg01.file}</filename>            
            <recipient>${account1.name}</recipient>           
            <sender>${account4.name}</sender>            
        </t:smtpInjectRequest>
    </t:smtpinjecttest> -->    


	<!-- SMTP Inject the message which should get into inbox        
 	<t:smtpinjecttest>
        <t:smtpInjectRequest>
            <address>${account1.server}</address>
            <filename>${msg02.file}</filename>            
            <recipient>${account1.name}</recipient>
            <sender>${account4.name}</sender>            
        </t:smtpInjectRequest>
    </t:smtpinjecttest>  -->
 
    <!-- 
     <t:smtpinjecttest>
        <t:smtpInjectRequest>
            <address>${account1.server}</address>
            <filename>${msg01.file}</filename>
            <recipient>${account1.name}</recipient>
            <sender>${admin.user}</sender>
            <modify>
                <header a="To">${account2.name}</header>
                <header a="From">foo.foo@foo.com</header>
                <header a="Subject">ABCD</header>		        
            </modify>
        </t:smtpInjectRequest>
    </t:smtpinjecttest>
        
    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
			<to>${account1.name}</to>
			<from>${nonZimbraUser.name}</from>
			<server>${account1.server}</server>  
			<modify>
                <header a="To">${account3.name}</header>                
            </modify>          
        </t:lmtpInjectRequest>
    </t:mailinjecttest> 

   <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
			<to>${account1.name}</to>
			<from>${nonZimbraUser.name}</from>
			<server>${account1.server}</server>  
			<modify>
                <header a="cc">${account3.name}</header>                
            </modify>          
        </t:lmtpInjectRequest>
    </t:mailinjecttest> 
    
       <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
			<to>${account1.name}</to>
			<from>${nonZimbraUser.name}</from>
			<server>${account1.server}</server>  
			<modify>
                <header a="bcc">${account3.name}</header>                
            </modify>          
        </t:lmtpInjectRequest>
    </t:mailinjecttest>  --> 
    
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
		
	 	
    <t:test id="searchRequest1">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(email0*)</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="l" match="${folder.id}" />
            <t:select path="//mail:SearchResponse/mail:m" attr="l" match="${account1.folder.inbox.id}" />            
        </t:response>
    </t:test>

</t:test_case>

</t:tests>

