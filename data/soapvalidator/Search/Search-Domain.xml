<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_acct.server" value="NOT_DEFINED"/>

<t:property name="test_account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account1.password" value="test123"/>

<t:property name="domainname.existing" value="@${defaultdomain.name}"/>
<t:property name="domainname.nonexisting" value="@zyxwv.aaa"/>


<t:property name="domainname.specialsymbols" value="@#%^"/>
<t:property name="domainname.digits" value="@123"/>
<t:property name="domainname.spaces" value="@ "/>



<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>

<t:test id="ping" required="true">
 <t:request>
   <PingRequest xmlns="urn:zimbraAdmin"/>
 </t:request>
  <t:response>
	<t:select path="//admin:PingResponse"/>
 </t:response>
</t:test>

</t:test_case>




<t:test_case testcaseid="acct1_setup" type="always" >
 <t:objective>create test account</t:objective>

<t:test id="admin_login" required="true" >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAdmin">
    <name>${admin.user}</name>
    <password>${admin.password}</password>
  </AuthRequest>
 </t:request>
 <t:response>
    <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
 </t:response>
</t:test>

<t:test required="true" >
 <t:request>
  <CreateAccountRequest xmlns="urn:zimbraAdmin">
    <name>${test_account1.name}</name>
    <password>${test_account1.password}</password>
    <!-- 
    <a n="zimbraMailDeliveryAddress">${test_account1.name}</a>
    <a n="zimbraMailStatus">enabled</a>
    <a n="zimbraMailDeliveryAddress">${test_account1.name}</a> 
    <a n="zimbraPasswordMinAge">7</a>
     Commenting out the optional attributes and sending the request with minimal requirement
    -->
  </CreateAccountRequest>
 </t:request>
 <t:response>
	<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
       <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server"/>
 </t:response>
</t:test>

</t:test_case>


<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

<t:test_case testcaseid="acct1_login" type="always" >
 <t:objective>login as the test account</t:objective>

<t:test required="true">
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${test_account1.name}</account>
    <password>${test_account1.password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
	<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

 </t:response>
</t:test>

</t:test_case>


<t:test_case testcaseid="SearchRequest1" type="bhr" >
 <t:objective>Search with existing domain name for the received mails </t:objective>


<t:test>
  <t:request>
	<SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="subjAsc" offset="0" limit="25">
	       <query>from:${domainname.existing}</query>
	</SearchRequest>
  </t:request>
  <t:response>
	<t:select path="//mail:SearchResponse"/>
  </t:response>
</t:test>


</t:test_case>


<t:test_case testcaseid="SearchRequest2" type="bhr" >
 <t:objective>Search with non-existing domain name for the received mails  </t:objective>

<t:test>
  <t:request>
	<SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="subjAsc" offset="0" limit="25">
	       <query>from:${domainname.nonexisting}</query>
	</SearchRequest>
  </t:request>
  <t:response>
	<t:select path="//mail:SearchResponse"/>

  </t:response>
</t:test>

</t:test_case>


<t:test_case testcaseid="SearchRequest3" type="bhr" >
 <t:objective>Search with existing domain name for the sent mails  </t:objective>

<t:test>
  <t:request>
	 <SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="subjAsc" offset="0" limit="25">
	        <query>to:${domainname.existing}OR cc:${domainname.existing}</query>
	</SearchRequest>
  </t:request>
  <t:response>
	<t:select path="//mail:SearchResponse"/>
  </t:response>
</t:test>

</t:test_case>


<t:test_case testcaseid="SearchRequest4" type="bhr" >
 <t:objective>Search with non-existing domain name for the sent mails  </t:objective>

<t:test>
  <t:request>
	<SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="subjAsc" offset="0" limit="25">
	       <query>(to:(${domainname.nonexisting}) OR cc:(${domainname.nonexisting}))</query>
	</SearchRequest>
  </t:request>
  <t:response>
	<t:select path="//mail:SearchResponse"/>
  </t:response>
</t:test>


</t:test_case>


<t:test_case testcaseid="SearchRequest5" type="functional" >
 <t:objective>Search with only digits in the domain name for the received mails </t:objective>

<t:test>
  <t:request>
	<SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="subjAsc" offset="0" limit="25">
	       <query>from:${domainname.digits}</query>
	</SearchRequest>
  </t:request>
  <t:response>
	<t:select path="//mail:SearchResponse"/>
  </t:response>
</t:test>


</t:test_case>


<t:test_case testcaseid="SearchRequest6" type="functional" >
 <t:objective>Search with only special symbols in the domain name for the received mails. </t:objective>

<t:test>
  <t:request>
	<SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="subjAsc" offset="0" limit="25">
	       <query>from:${domainname.specialsymbols}</query>
	</SearchRequest>
  </t:request>
  <t:response>
	<t:select path="//mail:SearchResponse"/>
  </t:response>
</t:test>

</t:test_case>


<t:test_case testcaseid="SearchRequest7" type="functional" >
 <t:objective>Search with space in the domain name for the received mails. </t:objective>

<t:test>
  <t:request>
	<SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="subjAsc" offset="0" limit="25">
	       <query>from:${domainname.spaces}</query>
	</SearchRequest>
  </t:request>
  <t:response>
	<t:select path="//mail:SearchResponse"/>
  </t:response>
</t:test>

</t:test_case>


<t:test_case testcaseid="SearchRequest8" type="functional" >
 <t:objective>Search with blank in the domain name for the received mails. </t:objective>

<t:test>
  <t:request>
	<SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="subjAsc" offset="0" limit="25">
	       <query>from: </query>
	</SearchRequest>
  </t:request>
  <t:response>
	<t:select path= "//zimbra:Code" match="^mail.QUERY_PARSE_ERROR"/>
  </t:response>
</t:test>


</t:test_case>


<t:test_case testcaseid="SearchRequest9" type="functional" >
 <t:objective>Search with only digits in the domain name for the sent mails. </t:objective>

<t:test>
  <t:request>
	<SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="subjAsc" offset="0" limit="25">
	       <query>to:${domainname.digits}OR cc:${domainname.digits}</query>
	</SearchRequest>
  </t:request>
  <t:response>
	<t:select path="//mail:SearchResponse"/>
  </t:response>
</t:test>


</t:test_case>


<t:test_case testcaseid="SearchRequest10" type="functional" >
 <t:objective>Search with only special symbols in the domain name for the sent mails. </t:objective>

<t:test>
  <t:request>
	<SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="subjAsc" offset="0" limit="25">
	       <query>to:${domainname.specialsymbols}OR cc:${domainname.specialsymbols}</query>
	</SearchRequest>
  </t:request>
  <t:response>
	<t:select path="//mail:SearchResponse"/>
  </t:response>
</t:test>

</t:test_case>


<t:test_case testcaseid="SearchRequest11" type="functional" >
 <t:objective>Search with space in the domain name for the sent mails. </t:objective>

<t:test>
  <t:request>
	<SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="subjAsc" offset="0" limit="25">
	       <query>to:${domainname.spaces}OR cc:${domainname.spaces}</query>
	</SearchRequest>
  </t:request>
  <t:response>
	<t:select path="//mail:SearchResponse"/>
  </t:response>
</t:test>


</t:test_case>


<t:test_case testcaseid="SearchRequest12" type="functional" >
 <t:objective>Search with blank in the domain name for the sent mails. </t:objective>

<t:test>
  <t:request>
	<SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="subjAsc" offset="0" limit="25">
	       <query>to: OR cc: </query>
	</SearchRequest>
  </t:request>
  <t:response>
	<t:select path= "//zimbra:Code" match="^mail.QUERY_PARSE_ERROR"/>
  </t:response>
</t:test>

</t:test_case>


<t:test_case testcaseid="SearchRequest13" type="sanity" >
 <t:objective>Search with same domain name for sent and received mails. </t:objective>

<t:test>
  <t:request>
	<SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="subjAsc" offset="0" limit="25">
	       <query>from:${domainname.existing} OR to:${domainname.existing} OR cc:${domainname.existing}</query>
	</SearchRequest>
  </t:request>
  <t:response>
	<t:select path="//mail:SearchResponse"/>
  </t:response>
</t:test>

</t:test_case>

</t:tests>
