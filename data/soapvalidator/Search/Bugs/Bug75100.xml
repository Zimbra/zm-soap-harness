<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account0.name" value="account0.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.name" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="Sharing_GranteeUser_AccountSetup" type="always">
    <t:objective>create test account</t:objective>
    <t:steps>
            1. Login to admin.
            2. Create two accounts.
            3. Get those accounts.
            4. Get auth token of the 2 accounts created.
    </t:steps>
   
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
     
    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account0.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account0.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account0.server"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>
    
    
</t:test_case>  

 

<t:test_case testcaseid="bug75100" type="bhr">
    <t:objective>Search query </t:objective>
    <t:steps>
		1. user1 shares two folders folderA and folderB  with user2
		2. user2 accepts the shares 
		3. user2 searches under share folderA and folderB using the following query: 

		assume zid of user1:0175f363-b576-466b-a168-f3a7cde6aada
		rid of folderA: 271
		rid of folderB: 560

		query: test AND (underid:"0175f363-b576-466b-a168-f3a7cde6aada:271" OR underid:"0175f363-b576-466b-a168-f3a7cde6aada:560")
</t:steps>

	<t:property name="server.zimbraAccount" value="${account0.server}"/>

		<t:property name="server.zimbraAccount" value="${account0.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account0.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
 
    <t:test >
        <t:request>
             <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="account0.folder.root.id"/> 
        </t:response>
    </t:test>

	<t:property name="folder1.name" value="folder1${TIME}.${COUNTER}" />
    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account0.folder.root.id}" name="${folder1.name}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account0.folder1.id"/>
        </t:response>
	</t:test>
	
		<t:property name="folder2.name" value="folder1${TIME}.${COUNTER}" />
    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account0.folder.root.id}" name="${folder2.name}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account0.folder2.id"/>
        </t:response>
    </t:test>

    <t:property name="subject1.name" value="subject1${TIME}.${COUNTER}" />
    <t:property name="subject2.name" value="subject1${TIME}.${COUNTER}" />
    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account0.folder1.id}">
                    <content>Date: Wed, 28 Nov 2007 05:15:48 -0800 (PST)
From: foo@example.com
To: bar@example.com
Subject: ${subject1.name}
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit

hi This is message1

                    </content>
                </m>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account0.message1.id"/>
        </t:response>
    </t:test>
	
	    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account0.folder2.id}">
                    <content>Date: Wed, 28 Nov 2007 05:15:48 -0800 (PST)
From: foo@example.com
To: bar@example.com
Subject: ${subject2.name}
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit

hi This is message2

                    </content>
                </m>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account0.message2.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${account0.folder1.id}" op="grant" >
                    <grant gt="usr" d="${account1.name}" perm="rw" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	
	 <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${account0.folder2.id}" op="grant" >
                    <grant gt="usr" d="${account1.name}" perm="rw" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	
			<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	   <t:test id="getFolderRequest">
        <t:request>
            <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
                       <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="account1.folder.root.id"/> 
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account1.folder.root.id}" name="folder1${TIME}${COUNTER}" zid="${account0.id}" rid="${account0.folder1.id}" view="message"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account1.folder1.shared.id"/>
        </t:response>
    </t:test>
	
	    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account1.folder.root.id}" name="folder2${TIME}${COUNTER}" zid="${account0.id}" rid="${account0.folder2.id}" view="message"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account1.folder2.shared.id"/>
        </t:response>
    </t:test>

 	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>message1 AND (underid:"${account0.id}:${account0.folder1.id}" or underid:"${account0.id}:${account0.folder2.id}")</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" match="${account0.id}:${account0.message1.id}"/>
			<t:select path="//mail:SearchResponse/mail:m[@id='${account0.id}:${account0.message2.id}']" emptyset="1"/>
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>message2 AND (underid:"${account0.id}:${account0.folder1.id}" or underid:"${account0.id}:${account0.folder2.id}")</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" match="${account0.id}:${account0.message2.id}"/>
			<t:select path="//mail:SearchResponse/mail:m[@id='${account0.id}:${account0.message1.id}']" emptyset="1"/>
		</t:response>
	</t:test>
	
	</t:test_case>	



</t:tests>	