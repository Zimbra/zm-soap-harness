<t:tests xmlns:t = "urn:zimbraTestHarness">

<t:property name="test_acct1.server" value="NOT_DEFINED"/>
<t:property name="test_acct2.server" value="NOT_DEFINED"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="msg01.file" value="Html.txt"/>
<t:property name="msg01.subject" value="messagehtml"/>
<t:property name="msg02.file" value="Plain.txt"/>
<t:property name="msg02.subject" value="messageplain"/>

<t:property name="html_spaces" value="  "/>
<t:property name="html_spchar" value="*^!"/>
<t:property name="html_alpha" value="1abc2"/>
<t:property name="html_number" value="123"/>
<t:property name="html_negative" value="-123"/>
<t:property name="html_text" value="abcdefghij"/>
<t:property name="html_decimal" value="5.0"/>

<t:test_case testcaseid = "Ping" type="always">
    <t:objective>basic system check</t:objective>
    
    <t:test id = "ping">
        <t:request>
            <PingRequest xmlns = "urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path = "//admin:PingResponse"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid = "acctSetup1_search_html" type="always">
    <t:objective>create test accounts</t:objective>
    
    <t:test id = "admin_login" required = "true" depends = "ping">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:AuthResponse/admin:authToken" set = "authToken"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>   
    
</t:test_case>


<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
<t:test_case testcaseid = "acctSetup2_search_html" type="always">
    <t:objective> Inject messages to test accounts </t:objective>
    
    <t:mailinjecttest required="true">
        <t:lmtpInjectRequest>
            <filename>${soapxml.root}/Search/${msg02.file}</filename>
			<to>${account1.name}</to>
			<from>${account2.name}</from>
			<server>${test_acct1.server}</server>
            <modify>
                <header a="To">${account1.name}</header>
                <header a="From">${account2.name}</header>
                <header a="Subject">${msg02.subject}</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    <t:delay msec="1000" />
     <t:mailinjecttest required="true">
        <t:lmtpInjectRequest>
            <filename>${soapxml.root}/Search/${msg01.file}</filename>
			<to>${account1.name}</to>
			<from>${account2.name}</from>
			<server>${test_acct1.server}</server>
            <modify>
                <header a="To">${account1.name}</header>
                <header a="From">${account2.name}</header>
                <header a="Subject">${msg01.subject}</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test required="true">
	    <t:request>
	        <SearchRequest xmlns="urn:zimbraMail" types="message" fetch="1">
	            <query>subject:(${msg01.subject})</query>
	        </SearchRequest>
	    </t:request>
	    <t:response>
	        <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg01.id"/>
	        <t:select path="//mail:SearchResponse/mail:m/mail:mp/mail:mp/mail:content" set="msg1_content"/>
	    </t:response>
    </t:test>

    <t:test required="true">
	    <t:request>
	        <SearchRequest xmlns="urn:zimbraMail" types="message" fetch="1">
	            <query>subject:(${msg02.subject})</query>
	        </SearchRequest>
	    </t:request>
	    <t:response>
	        <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg02.id"/>
	    </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="search_html01" type="smoke">
    <t:objective>Verify html attribute of search for html="1".</t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment" fetch="1" html="1">
                  <query>message</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m[1]" attr="id" match="${msg01.id}"/>    
            <t:select path="//mail:SearchResponse/mail:m[1]/mail:e[@t='f']" attr="a" match="${account2.name}"/>
            <t:select path="//mail:SearchResponse/mail:m[1]/mail:e[@t='t']" attr="a" match="${account1.name}"/>
            <t:select path="//mail:SearchResponse/mail:m[1]" attr="su" match="${msg01.subject}"/>            
            <t:select path="//mail:SearchResponse/mail:m[1]/mail:mp/mail:mp" attr="ct" match="text/html"/>            
            <t:select path="//mail:SearchResponse/mail:m[1]/mail:mp/mail:mp" attr="body" match="1"/>
            <t:select path="//mail:SearchResponse/mail:m[1]/mail:mp/mail:mp/mail:content" emptyset="0"/>            
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="search_html02" type="bhr">
    <t:objective>Verify html attribute of search for html="0".</t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment" fetch="1" html="0">
                  <query>message</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="id" match="${msg01.id}"/>    
            <t:select path="//mail:SearchResponse/mail:m/mail:e[@t='f']" attr="a" match="${account2.name}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e[@t='t']" attr="a" match="${account1.name}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${msg01.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m[1]/mail:mp/mail:mp" attr="ct" match="text/plain"/>                        
            <t:select path="//mail:mp[@ct='text/plain']/mail:content" match="${msg1_content}"/>
            <t:select path="//mail:SearchResponse/mail:m[1]/mail:mp/mail:mp" attr="body" match="1"/>           
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="search_html03" type="functional">
    <t:objective>Verify html attribute of search by putting invalid values(blank, spaces, spchar, number, negative, text, alphanumeric, decimal).</t:objective>
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment" fetch="1" html="">
                  <query>message</query>                  
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>            
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment" fetch="1" html="${html_spaces}">
                  <query>message</query>                  
            </SearchRequest>
        </t:request>            
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>                                        
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment" fetch="1" html="${html_spchar}">
                  <query>message</query>                  
            </SearchRequest>
        </t:request>            
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>                                                                       
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment" fetch="1" html="${html_number}">
                  <query>message</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>                                    
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment" fetch="1" html="${html_negative}">
                  <query>message</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>                                                
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment" fetch="1" html="${html_text}">
                  <query>message</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>                                                
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment" fetch="1" html="${html_alpha}">
                  <query>message</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>                                                            
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment" fetch="1" html="${html_decimal}">
                  <query>message</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>                                                            
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="search_html04" type="functional">
    <t:objective> Verify the response of query with fetch=0 and html=1 </t:objective>
 
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment" fetch="0" html="1">
                  <query>message</query>                  
            </SearchRequest>
        </t:request>
        <t:response>            
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${msg01.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m[1]/mail:content" emptyset="1"/>            
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${msg02.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m[1]/mail:mp/mail:mp" emptyset="1"/>                                               
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="search_html05" type="functional">
    <t:objective>Verify html attribute of search by putting leading and trailing spaces.</t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment" fetch="1" html="    1">
                  <query>message</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>                                                               
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment" fetch="1" html="1     ">
                  <query>message</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>                                                               
        </t:response>
    </t:test>
    
</t:test_case>


</t:tests>
