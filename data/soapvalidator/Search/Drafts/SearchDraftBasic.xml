<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="testDraft${TIME}.${COUNTER}@${defaultdomain.name}"/>



<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct1_setup" type="always">
    <t:objective>Create test account</t:objective>
    <steps>
        1. Login to admin account
        2. Create user accounts
    </steps>

    <t:test id="admin_login" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id="create_account1" required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>


    <t:test id="auth" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id="getFolderRequest">
        <t:request>
            <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="folder.inbox"/>
            <t:select path="//mail:folder[@name='${globals.trash}']" attr="id" set="folder.trash"/>
            <t:select path="//mail:folder[@name='${globals.sent}']" attr="id" set="folder.sent"/>
            <t:select path="//mail:folder[@name='${globals.spam}']" attr="id" set="folder.spam"/>
            <t:select path="//mail:folder[@name='${globals.drafts}']" attr="id" set="folder.draft"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="Search_SearchDraftBasic_01" type="smoke">
    <t:objective>Search a draft by subject.</t:objective>

	<t:property name="message1.subject" value="Subject${TIME}${COUNTER}"/>
	<t:property name="message1.content" value="content${TIME}${COUNTER}"/>
	
    <t:test id="saveDraftRequest1a">
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a="foo@example.com"/>
                    <su> ${message1.subject} </su>
                    <mp ct="text/plain">
                        <content> ${message1.content}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="message1.id"/>
        </t:response>
    </t:test>

    <t:test depends="saveDraftRequest1a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:${message1.subject} </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse">
				<t:select path="//mail:m" attr="id" match="${message1.id}"/>
			</t:select>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="Search_SearchDraftBasic_02" type="smoke">
    <t:objective>Search a draft by content</t:objective>

	<t:property name="message1.subject" value="Subject${TIME}${COUNTER}"/>
	<t:property name="message1.content" value="content${TIME}${COUNTER}"/>
	
   <t:test id="saveDraftRequest1a">
        <t:request>
            <SaveDraftRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a="foo@example.com"/>
                    <su> ${message1.subject} </su>
                    <mp ct="text/plain">
                        <content> ${message1.content}</content>
                    </mp>
                </m>
            </SaveDraftRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDraftResponse/mail:m" attr="id" set="message1.id"/>
        </t:response>
    </t:test>

    <t:test depends="saveDraftRequest1a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> content:${message1.content} </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse">
				<t:select path="//mail:m" attr="id" match="${message1.id}"/>
			</t:select>
        </t:response>
    </t:test>

</t:test_case>

</t:tests>


