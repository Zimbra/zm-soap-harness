<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_acct.server" value="NOT_DEFINED"/>

<!-- READ ME : 
    There are 6 folders in this account. Folder heirarchy is as follows:
    folder1's parent: USER_ROOT; folder2's parent: Inbox; folder3's parent: Trash; folder4's parent: Sent; folder5's parent: folder1; folder6's parent: Root

    There are 8 mails in this account. The folders they will be residing are as follows: 
    mail1 : Inbox; mail2 : Inbox/folder2; mail3: Trash/folder3; mail4: Sent/folder5; mail5: folder1/folder5; mail6: Trash; 
    mail7: Spam; mail8:folder6 ; mail9:Sent; mail10:folder1; mail11: Inbox; mail12:12
-->


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="mail1.subject" value="email10A"/>
<t:property name="mail2.subject" value="email10B"/>
<t:property name="mail3.subject" value="email10C"/>
<t:property name="mail4.subject" value="email10D"/>
<t:property name="mail5.subject" value="email10E"/>
<t:property name="mail6.subject" value="email10F"/>
<t:property name="mail7.subject" value="email10G"/>
<t:property name="mail8.subject" value="email10H"/>
<t:property name="mail9.subject" value="email10I"/>
<t:property name="mail10.subject" value="email10J"/>
<t:property name="mail11.subject" value="email10K"/>
<t:property name="mail12.subject" value="email10L"/>

<t:property name="folder1.name" value="foldertext10.01"/>
<t:property name="folder2.name" value="foldertext10.02"/>
<t:property name="folder3.name" value="foldertext10.03"/>
<t:property name="folder4.name" value="foldertext10.04"/>
<t:property name="folder5.name" value="foldertext10.05"/>
<t:property name="folder6.name" value="foldertext10.06"/>

<t:property name="folder.root" value="1"/>
<t:property name="op.move" value="move"/>

<t:property name="account10.user" value="account10.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account10.password" value="${defaultpassword.value}"/>
<t:property name="account10.dir" value="${testMailRaw.root}/email10"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>account setup</t:objective>
    <t:steps> 
                1.Admin login
                2.Create test account
                3.Use lmtp inject to inject the message
    </t:steps> 

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
    
    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account10.user}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="name"  match="${account10.user}"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server"/>
        </t:response>
    </t:test>  
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
		    <foldername>${account10.dir}</foldername>
		    <to>${account10.user}</to>
		    <from>${nonZimbraUser.name}</from>
		    <server>${test_acct.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

<t:test_case testcaseid="SearchAuthRequest" type="sanity" bugids="2395">
    <t:objective> Create setup for the Search Request </t:objective>
    <t:steps>1. Login to the account.
             2. Modify the Prefs to include Trash and Spam in search result.
             3. Search mails to get the message-ids
             4. Create required folders
             5. Get the ids of various folders 
             6. Move some folder within other
             7. Move the mails to different folders.
    </t:steps>

    <t:test id="login" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account10.user}</account>
                <password>${account10.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
     <t:test id="modifyPrefsRequest">
        <t:request>
            <ModifyPrefsRequest xmlns="urn:zimbraAccount">
                <pref name="zimbraPrefIncludeSpamInSearch">${globals.true}</pref>
                <pref name="zimbraPrefIncludeTrashInSearch">${globals.true}</pref>
            </ModifyPrefsRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:ModifyPrefsResponse"/>
        </t:response>
    </t:test>

    <t:test id="searchRequest1">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail1.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail1.subject}$"/>
            <t:select attr="id" set="message.id1"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test id="searchRequest2">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail2.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail2.subject}$"/>
            <t:select attr="id" set="message.id2"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test id="searchRequest3">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail3.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail3.subject}$"/>
            <t:select attr="id" set="message.id3"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test id="searchRequest4">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail4.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail4.subject}$"/>
            <t:select attr="id" set="message.id4"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test id="searchRequest5">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail5.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail5.subject}$"/>
            <t:select attr="id" set="message.id5"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test id="searchRequest6">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail6.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail6.subject}$"/>
            <t:select attr="id" set="message.id6"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test id="searchRequest7">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail7.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail7.subject}$"/>
            <t:select attr="id" set="message.id7"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test id="searchRequest8">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail8.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail8.subject}$"/>
            <t:select attr="id" set="message.id8"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test id="searchRequest9">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail9.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail9.subject}$"/>
            <t:select attr="id" set="message.id9"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test id="searchRequest10">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail10.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail10.subject}$"/>
            <t:select attr="id" set="message.id10"/>
            </t:select>
        </t:response>
    </t:test>
    
    <t:test id="searchRequest11">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail11.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail11.subject}$"/>
            <t:select attr="id" set="message.id11"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test id="searchRequest12">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail12.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail12.subject}$"/>
            <t:select attr="id" set="message.id12"/>
            </t:select>
        </t:response>
    </t:test>

     <t:test id="getFolderRequest">
        <t:request>
               <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="root.id"/>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="folder.inbox"/>
            <t:select path="//mail:folder[@name='${globals.trash}']" attr="id" set="folder.trash"/>
            <t:select path="//mail:folder[@name='${globals.sent}']" attr="id" set="folder.sent"/>
            <t:select path="//mail:folder[@name='${globals.spam}']" attr="id" set="folder.spam"/>
        </t:response>
    </t:test>
    
    <t:test id="createFolderRequest1" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder1.name}" l="${root.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder1.id"/>
        </t:response>
    </t:test>
    
    <t:test id="createFolderRequest2" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder2.name}" l="${folder.inbox}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder2.id"/>
        </t:response>
    </t:test>

    <t:test id="createFolderRequest3" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder3.name}" l="${folder.trash}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder3.id"/>            
        </t:response>
    </t:test>
    
    <t:test id="createFolderRequest4" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder4.name}" l="${folder.sent}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder4.id"/>            
        </t:response>
    </t:test>
    
    <t:test id="createFolderRequest5" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder5.name}" l="${folder1.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder5.id"/>            
        </t:response>
    </t:test>
    
    <t:test id="createFolderRequest6" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder6.name}" l="${root.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder6.id"/>            
        </t:response>
    </t:test>

    <t:test id="msgActionRequest1" depends="searchRequest1,getFolderRequest">
        <t:request>
            <MsgActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message.id1}" op="${op.move}" l="${folder.inbox}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "op" match = "${op.move}"/>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "id" match = "${message.id1}"/>
        </t:response>
    </t:test> 
    
    <t:test id="msgActionRequest2" depends="searchRequest2,getFolderRequest">
        <t:request>
            <MsgActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message.id2}" op="${op.move}" l="${folder2.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "op" match = "${op.move}"/>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "id" match = "${message.id2}"/>
        </t:response>
    </t:test>

     <t:test id="msgActionRequest3" depends="searchRequest3,getFolderRequest">
        <t:request>
            <MsgActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message.id3}" op="${op.move}" l="${folder3.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "op" match = "${op.move}"/>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "id" match = "${message.id3}"/>
        </t:response>
    </t:test>  

    <t:test id="msgActionRequest4" depends="searchRequest4,getFolderRequest">
        <t:request>
            <MsgActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message.id4}" op="${op.move}" l="${folder4.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "op" match = "${op.move}"/>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "id" match = "${message.id4}"/>
        </t:response>
    </t:test>  

    <t:test id="msgActionRequest5" depends="searchRequest5,getFolderRequest">
        <t:request>
            <MsgActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message.id5}" op="${op.move}" l="${folder5.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "op" match = "${op.move}"/>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "id" match = "${message.id5}"/>
        </t:response>
    </t:test>  

    <t:test id="msgActionRequest6" depends="searchRequest6,getFolderRequest">
        <t:request>
            <MsgActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message.id6}" op="${op.move}" l="${folder.trash}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "op" match = "${op.move}"/>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "id" match = "${message.id6}"/>
        </t:response>
    </t:test>  

    <t:test id="msgActionRequest7" depends="searchRequest7,getFolderRequest">
        <t:request>
            <MsgActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message.id7}" op="${op.move}" l="${folder.spam}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "op" match = "${op.move}"/>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "id" match = "${message.id7}"/>
        </t:response>
    </t:test> 

    <t:test id="msgActionRequest8" depends="searchRequest8,getFolderRequest">
        <t:request>
            <MsgActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message.id8}" op="${op.move}" l="${folder6.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "op" match = "${op.move}"/>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "id" match = "${message.id8}"/>
        </t:response>
    </t:test> 

    <t:test id="msgActionRequest9" depends="searchRequest9,getFolderRequest">
        <t:request>
            <MsgActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message.id9}" op="${op.move}" l="${folder.sent}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "op" match = "${op.move}"/>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "id" match = "${message.id9}"/>
        </t:response>
    </t:test> 
 
    <t:test id="msgActionRequest10" depends="searchRequest10,getFolderRequest">
        <t:request>
            <MsgActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message.id10}" op="${op.move}" l="${folder1.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "op" match = "${op.move}"/>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "id" match = "${message.id10}"/>
        </t:response>
    </t:test> 

    <t:test id="msgActionRequest11" depends="searchRequest11,getFolderRequest">
        <t:request>
            <MsgActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message.id11}" op="${op.move}" l="${folder.inbox}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "op" match = "${op.move}"/>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "id" match = "${message.id11}"/>
        </t:response>
    </t:test> 

    <t:test id="msgActionRequest12" depends="searchRequest12,getFolderRequest">
        <t:request>
            <MsgActionRequest xmlns = "urn:zimbraMail">
                <action id = "${message.id12}" op="${op.move}" l="${folder.trash}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "op" match = "${op.move}"/>
            <t:select path = "//mail:MsgActionResponse/mail:action" attr = "id" match = "${message.id12}"/>
        </t:response>
    </t:test>  

</t:test_case> 


<t:test_case testcaseid="folder_SearchRequest1" type="sanity">
    <t:objective> Verify that a search for query in:DEFAULT_FOLDER is successful </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${globals.inbox} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id1}']"/>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id11}']"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${globals.sent} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id9}']"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${globals.trash} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id6}']"/>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id12}']"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${globals.spam} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id7}']"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="folder_SearchRequest2" type="sanity">
    <t:objective> Verify that a search for query in:CUSTOM_FOLDER is successful </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${folder1.name} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id10}']"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${folder6.name} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id8}']"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="folder_SearchRequest3" type="sanity">
    <t:objective> Verify that a search for query in:DEFAULT_FOLDER/CUSTOM_FOLDER is successful </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${globals.inbox}/${folder2.name} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id2}']"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${globals.trash}/${folder3.name} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id3}']"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${globals.sent}/${folder4.name} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id4}']"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="folder_SearchRequest4" type="sanity">
    <t:objective> Verify that a search for query in:CUSTOM_FOLDER/CUSTOM_FOLDER is successful </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${folder1.name}/${folder5.name} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id5}']"/>
        </t:response>
    </t:test>  

</t:test_case> 


<t:test_case testcaseid="folder_SearchRequest5" type="sanity">
    <t:objective> Verify that a search for query in:(DEFAULT_FOLDER/CUSTOM_FOLDER OR DEFAULT_FOLDER)is successful </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:(${globals.inbox}/${folder2.name} OR ${globals.inbox})</query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id1}']"/>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id2}']"/>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id11}']"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:(${globals.trash}/${folder3.name} OR ${globals.trash})</query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id3}']"/>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id6}']"/>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id12}']"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:(${globals.sent}/${folder4.name} OR ${globals.sent})</query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id4}']"/>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id9}']"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:(${globals.sent}/${folder4.name} OR ${globals.inbox})</query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id1}']"/>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id4}']"/>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id11}']"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:(${globals.inbox}/${folder2.name} OR ${globals.trash})</query>
            </SearchRequest>
        </t:request>
        <t:response>                   
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id2}']"/>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id6}']"/>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id12}']"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="folder_SearchRequest6" type="sanity">
    <t:objective> Verify that a search for query in:(CUSTOM_FOLDER/CUSTOM_FOLDER OR CUSTOM_FOLDER)is successful </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:(${folder1.name}/${folder5.name} OR ${folder1.name})</query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id5}']"/>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id10}']"/>
        </t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid="folder_SearchRequest7" type="sanity">
    <t:objective> Verify that a search for query in:(DEFAULT_FOLDER OR CUSTOM_FOLDER) is successful </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:(${globals.inbox} OR ${folder1.name})</query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id1}']"/>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id10}']"/>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id11}']"/>
        </t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid="folder_SearchRequest8" type="sanity">
    <t:objective> Verify that a search for query in:(FOLDER/CUSTOM_FOLDER OR FOLDER/CUSTOM_FOLDER) where FOLDER can be DEFAULT or CUSTOM is successful </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:(${globals.inbox}/${folder2.name} OR ${globals.trash}/${folder3.name})</query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id2}']"/>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id3}']"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:(${globals.sent}/${folder4.name} OR ${folder1.name}/${folder5.name})</query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id4}']"/>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id5}']"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="folder_SearchRequest9" type="sanity">
    <t:objective> Verify that a search for conversation for query in:DEFAULT_FOLDER is successful </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:${globals.inbox} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id1}']"/>
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id11}']"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:${globals.sent} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id9}']"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:${globals.trash} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id6}']"/>
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id12}']"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:${globals.spam} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id7}']"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="folder_SearchRequest10" type="sanity">
    <t:objective> Verify that a search for conversation for query in:CUSTOM_FOLDER is successful </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:${folder1.name} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id10}']"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:${folder6.name} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id8}']"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="folder_SearchRequest11" type="sanity">
    <t:objective> Verify that a search for conversation for query in:DEFAULT_FOLDER/CUSTOM_FOLDER is successful </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:${globals.inbox}/${folder2.name} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id2}']"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:${globals.trash}/${folder3.name} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id3}']"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:${globals.sent}/${folder4.name} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id4}']"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="folder_SearchRequest12" type="sanity">
    <t:objective> Verify that a search for conversation for query in:CUSTOM_FOLDER/CUSTOM_FOLDER is successful </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:${folder1.name}/${folder5.name} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id5}']"/>
        </t:response>
    </t:test>  

</t:test_case> 


<t:test_case testcaseid="folder_SearchRequest13" type="sanity">
    <t:objective> Verify that a search for conversation for query in:(DEFAULT_FOLDER/CUSTOM_FOLDER OR DEFAULT_FOLDER)is successful </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:(${globals.inbox}/${folder2.name} OR ${globals.inbox})</query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id1}']"/>
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id2}']"/>
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id11}']"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:(${globals.trash}/${folder3.name} OR ${globals.trash})</query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id3}']"/>
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id6}']"/>
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id12}']"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:(${globals.sent}/${folder4.name} OR ${globals.sent})</query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id4}']"/>
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id9}']"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:(${globals.sent}/${folder4.name} OR ${globals.inbox})</query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id1}']"/>
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id4}']"/>
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id11}']"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:(${globals.inbox}/${folder2.name} OR ${globals.trash})</query>
            </SearchRequest>
        </t:request>
        <t:response>                   
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id2}']"/>
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id6}']"/>
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id12}']"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="folder_SearchRequest14" type="sanity">
    <t:objective> Verify that a search for conversation for query in:(CUSTOM_FOLDER/CUSTOM_FOLDER OR CUSTOM_FOLDER)is successful </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:(${folder1.name}/${folder5.name} OR ${folder1.name})</query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id5}']"/>
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id10}']"/>
        </t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid="folder_SearchRequest15" type="sanity">
    <t:objective> Verify that a search for conversation for query in:(DEFAULT_FOLDER OR CUSTOM_FOLDER) is successful </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:(${globals.inbox} OR ${folder1.name})</query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id1}']"/>
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id10}']"/>
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id11}']"/>
        </t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid="folder_SearchRequest16" type="sanity">
    <t:objective> Verify that a search for conversation for query in:(FOLDER/CUSTOM_FOLDER OR FOLDER/CUSTOM_FOLDER) where FOLDER can be DEFAULT or CUSTOM is successful </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:(${globals.inbox}/${folder2.name} OR ${globals.trash}/${folder3.name})</query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id2}']"/>
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id3}']"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:(${globals.sent}/${folder4.name} OR ${folder1.name}/${folder5.name})</query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id4}']"/>
            <t:select path="//mail:SearchResponse/mail:c/mail:m[@id='${message.id5}']"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="folder_SearchRequest17" type="sanity">
    <t:objective> Verify that the messages in trash folder is not included in search results if zimbraPrefIncludeTrashInSearch = FALSE </t:objective>
    <t:steps>1. Set zimbraPrefIncludeTrashInSearch = False.
                2. Check the SearchRequest.
    </t:steps>

    <t:test id="folder_SearchRequest17a">
        <t:request>
            <ModifyPrefsRequest xmlns="urn:zimbraAccount">
                <pref name="zimbraPrefIncludeTrashInSearch">${globals.false}</pref>
            </ModifyPrefsRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:ModifyPrefsResponse"/>
        </t:response>
    </t:test>

     <t:test depends="folder_SearchRequest17a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail3.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" emptyset="1"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="folder_SearchRequest18" type="sanity">
    <t:objective> Verify that the conversation in trash folder is not included in search results if zimbraPrefIncludeTrashInSearch = FALSE </t:objective>
    
    <t:test depends="folder_SearchRequest17a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> subject:(${mail3.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:c/mail:m" emptyset="1"/>
        </t:response>
    </t:test>
 
</t:test_case>


<t:test_case testcaseid="folder_SearchRequest19" type="sanity">
    <t:objective> Verify that the messages in spam folder is not included in search results if zimbraPrefIncludeSpamInSearch = FALSE </t:objective>
    <t:steps>1. Set zimbraPrefIncludeSpamInSearch = False.
                2. Check the SearchRequest.
    </t:steps>

    <t:test id="folder_SearchRequest19a">
        <t:request>
            <ModifyPrefsRequest xmlns="urn:zimbraAccount">
                <pref name="zimbraPrefIncludeSpamInSearch">${globals.false}</pref>
            </ModifyPrefsRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:ModifyPrefsResponse"/>
        </t:response>
    </t:test>

     <t:test depends="folder_SearchRequest19a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail7.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" emptyset="1"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="folder_SearchRequest20" type="sanity">
    <t:objective> Verify that the conversation in spam folder is not included in search results if zimbraPrefIncludeSpamInSearch = FALSE </t:objective>
    
    <t:test depends="folder_SearchRequest19a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> subject:(${mail7.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:c/mail:m" emptyset="1"/>
        </t:response>
    </t:test>
 
</t:test_case>

<t:test_case testcaseid="folder_SearchRequest21" type="sanity" bugids="12689">
    <t:objective> Verify that a search for query in:DEFAULT_FOLDER   /CUSTOM_FOLDER i.e. with spaces is successful. Spaces after default folder should get stripped. </t:objective>
	<!-- Spaces between the folder and subfolder is not trimmed-->	

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> in:${globals.inbox}   /${folder2.name} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse"/>
        </t:response>
    </t:test>

	 <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation">
                <query> in:${globals.inbox}    /${folder2.name} </query>
            </SearchRequest>
        </t:request>
        <t:response>       
            <t:select path="//mail:SearchResponse"/>
        </t:response>
    </t:test>
</t:test_case>

</t:tests>

