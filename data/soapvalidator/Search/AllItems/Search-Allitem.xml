<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account2.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>    
<t:property name="test_account1.password" value="test123"/>
<t:property name="test_account2.password" value="test123"/>
 <t:property name="search.string" value="Subject of the message is testing"/>
<t:property name="compose.content" value="Content in the message is contents..."/>
    
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="acctSetup1_search_allitem" type="always" >
    <t:objective>Login as the admin and create a test account</t:objective>
    <t:steps>1. Login to admin
             2. Create some test account
    </t:steps>
    
    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
             </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account1.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${test_account2.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>

</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
<t:test_case testcaseid="acctSetup2_search_allitem" type="always" >
    <t:objective>Prepare the account for test</t:objective>
    <t:steps>1. Login to account2
             2. Send a mail to account1
             3. Login to account1
             4. Create a contact            
    </t:steps>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account2.name}</account>
                <password>${test_account2.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${test_account1.name}'/>
                    <su> ${search.string} </su>
                    <mp ct="text/plain">
                        <content> ${compose.content} </content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m origid="${msg1.id}" rt="r">
                    <e t="t" a='${test_account1.name}'/>
                    <su> Re: ${search.string} </su>
                    <mp ct="text/plain">
                        <content> ${compose.content} </content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse" set="msg2.id"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
                <cn>
                    <a n="firstName">${search.string}</a>
                    <a n="lastName">${search.string}</a>
                    <a n="email">${search.string}@yahoo.com</a>
                </cn>
            </CreateContactRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateContactResponse/mail:cn">
                <t:select attr="id" set="contact1.id"/>
            </t:select>
        </t:response>
    </t:test>

    <!-- Try searching the messages with types = message/conv only -->
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail"  types="message">
                <query>${search.string}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="id"/>            
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail"  types="conversation">
                <query>${search.string}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:c/mail:m" attr="id"/>
        </t:response>
    </t:test>
    
</t:test_case>

    
<t:test_case testcaseid="search_allitem1" type="sanity">
    <t:objective>Searching the account with types = message,contact,appointment </t:objective>
        
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail"  types="message,contact,appointment,task,document">
                <query>"${search.string}"</query>
            </SearchRequest>        
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:cn[@id='${contact1.id}']"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="id"/>
        </t:response>
    </t:test>

</t:test_case>

    
<t:test_case testcaseid="search_allitem2" type="sanity">
    <t:objective>Searching the account with types = conversation,contact,appointment</t:objective>
        
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail"  types="conversation,contact,appointment">
                <query>"${search.string}"</query>
            </SearchRequest>        
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:cn[@id='${contact1.id}']"/>
            <t:select path="//mail:SearchResponse/mail:c/mail:m" attr="id"/>
        </t:response>
    </t:test>

</t:test_case>    

</t:tests>
