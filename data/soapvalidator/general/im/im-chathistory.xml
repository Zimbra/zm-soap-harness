<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_account1" value="test1.${TIME}.${COUNTER}"/>
<t:property name="test_account1.name" value="${test_account1}@${defaultdomain.name}"/>
<t:property name="test_account2" value="test2.${TIME}.${COUNTER}"/>
<t:property name="test_account2.name" value="${test_account2}@${defaultdomain.name}"/>
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="uri" value="${admin.uri}"/>

<t:test_case testcaseid="Ping" type="deprecated" >
	<t:objective>basic system check</t:objective>
	<t:test id="ping" required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>
</t:test_case>

<t:test_case testcaseid="im_acct_setup01" type="deprecated" >
    <t:objective>Set up test accounts</t:objective>
    <t:steps>
    1. create test accounts
    2. Add test accounts to each others' buddy list
    </t:steps>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_accountid1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_accountid2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

	 <t:test required = "true">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by = "name">${test_account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//acct:AuthResponse/acct:authToken" set = "authToken"/>

        </t:response>
    </t:test>
	
	<t:property name="authToken_acct1" value="${authToken}"/>

	<!-- Establish a session for this account -->
	<t:test required="true">
        <t:requestContext>
            <authToken>${authToken}</authToken>
            <session/>
        </t:requestContext>
        <t:request>
            <NoOpRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:NoOpResponse"/>
        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<IMGatewayListRequest xmlns="urn:zimbraIM"/>
		</t:request>
		<t:response>
            <t:select path="//im:IMGatewayListResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
    <t:test required = "true">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by = "name">${test_account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//acct:AuthResponse/acct:authToken" set = "authToken"/>

        </t:response>
    </t:test>
    
	<t:property name="authToken_acct2" value="${authToken}"/>

	<!-- Establish a session for this account -->
	<t:test required="true">
        <t:requestContext>
            <authToken>${authToken}</authToken>
            <session/>
        </t:requestContext>
        <t:request>
            <NoOpRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:NoOpResponse"/>
        </t:response>
    </t:test>
    
	
	<t:test>
		<t:request>
			<IMGatewayListRequest xmlns="urn:zimbraIM"/>
		</t:request>
		<t:response>
            <t:select path="//im:IMGatewayListResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
	<t:property name="authToken" value="${authToken_acct1}"/>

	<t:test>
		<t:request>
			<IMSubscribeRequest xmlns="urn:zimbraIM" addr="${test_account2.name}" name="account2" op="add"/>
		</t:request>
		<t:response>
            <t:select path="//im:IMSubscribeResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
	<t:property name="authToken" value="${authToken_acct2}"/>

	<t:for start="1" end="60" break="response">
	
		<t:delay msec="1000"/>
	
		<t:test >
			<t:request>
				<NoOpRequest xmlns="urn:zimbraMail" />
			</t:request>
			<t:response>
				<t:header path="//zimbra:notify">
					<t:header path="//zimbra:n[@type='subscribe']" attr="from" match="${test_account1.name}" query="response"/>
				</t:header>
			</t:response>
		</t:test>

	</t:for>

	<t:test>
		<t:request>
			<IMAuthorizeSubscribeRequest xmlns="urn:zimbraIM" addr="${test_account1.name}" authorized="true" add="true" name="account1"/>
		</t:request>
		<t:response>
			<t:request path="//im:IMAuthorizeSubscribeResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
	<t:property name="authToken" value="${authToken_acct1}"/>

	<t:for start="1" end="60" break="response">
	
		<t:delay msec="1000"/>
	
		<t:test >
			<t:request>
				<NoOpRequest xmlns="urn:zimbraMail" />
			</t:request>
			<t:response>
				<t:header path="//zimbra:notify">
					<t:header path="//zimbra:n[@type='subscribed']" attr="to" match="${test_account2.name}" query="response"/>
				</t:header>
			</t:response>
		</t:test>

	</t:for>


	<t:test>
		<t:request>
			<IMAuthorizeSubscribeRequest xmlns="urn:zimbraIM" addr="${test_account2.name}" authorized="true"/>
		</t:request>
		<t:response>
			<t:select path="//im:IMAuthorizeSubscribeResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
	<t:property name="authToken" value="${authToken_acct2}"/>

	<t:for start="1" end="60" break="response">
	
		<t:delay msec="1000"/>
	
		<t:test >
			<t:request>
				<NoOpRequest xmlns="urn:zimbraMail" />
			</t:request>
			<t:response>
				<t:header path="//zimbra:notify">
					<t:header path="//zimbra:n[@type='subscribed']" attr="to" match="${test_account1.name}" query="response"/>
				</t:header>
			</t:response>
		</t:test>

	</t:for>
</t:test_case>

<t:test_case testcaseid="im_acct_setup02" type="deprecated" >
    <t:objective>Set up test accounts</t:objective>
    <t:steps>
    1. As account1 send message to account2
    2. As account2 receive the sent message and then send a reply message to account1
	3. As account1 close the chat window so that the history get saved to Chats folder
	4. As account2 close the chat window so that the history get saved to Chats folder
    </t:steps>

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
	<t:property name="authToken" value="${authToken_acct1}"/>


	<t:property name="message.body1" value="TestBody${TIME}${COUNTER}"/>
	<t:test>
		<t:request>
			<IMSendMessageRequest xmlns="urn:zimbraIM">
				<message addr="${test_account2.name}">
					<body>${message.body1}</body>
				</message>
			</IMSendMessageRequest>
		</t:request>
		<t:response>
			<t:select path="//im:IMSendMessageResponse"/>
		</t:response>
	</t:test>
	
	<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
	<t:property name="authToken" value="${authToken_acct2}"/>


	<t:for start="1" end="60" break="response">
	
		<t:delay msec="1000"/>
	
		<t:test >
			<t:request>
				<NoOpRequest xmlns="urn:zimbraMail" />
			</t:request>
			<t:response>
				<t:header path="//zimbra:notify">
					<t:header path="//zimbra:n[@type='message']" attr="thread" set="account2.chat.id" query="response">
						<t:header path="//zimbra:body" match="${message.body1}"/>
					</t:header>
				</t:header>
			</t:response>
		</t:test>

	</t:for>
	
	<t:test>
		<t:request>
			<IMGetChatRequest xmlns="urn:zimbraIM" thread="${account2.chat.id}" />
		</t:request>
		<t:response>
			<t:select path="//im:IMGetChatResponse">
				<t:select path="//im:body" match="${message.body1}"/>
			</t:select>
		</t:response>
	</t:test>

	<t:property name="message.body2" value="TestBody${TIME}${COUNTER}"/>
	<t:test>
		<t:request>
			<IMSendMessageRequest xmlns="urn:zimbraIM">
				<message thread="${account2.chat.id}" addr="${test_account1.name}">
					<body>${message.body2}</body>
				</message>
			</IMSendMessageRequest>
		</t:request>
		<t:response>
			<t:select path="//im:IMSendMessageResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
	<t:property name="authToken" value="${authToken_acct1}"/>


	<t:for start="1" end="60" break="response">
	
		<t:delay msec="1000"/>
	
		<t:test >
			<t:request>
				<NoOpRequest xmlns="urn:zimbraMail" />
			</t:request>
			<t:response>
				<t:header path="//zimbra:notify">
					<t:header path="//zimbra:n[@type='message']" attr="thread" set="account1.chat.id" query="response">
						<t:header path="//zimbra:body" match="${message.body2}"/>
					</t:header>
				</t:header>
			</t:response>
		</t:test>
	</t:for>

	<t:test>
		<t:request>
			<IMGetChatRequest xmlns="urn:zimbraIM" thread="${account1.chat.id}" />
		</t:request>
		<t:response>
			<t:select path="//im:IMGetChatResponse">
				<t:select path="//im:body" match="${message.body2}"/>
			</t:select>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<IMModifyChatRequest xmlns="urn:zimbraIM" thread="${account1.chat.id}" op="close"/>
		</t:request>
		<t:response>
			<t:select path="//im:IMModifyChatResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
	<t:property name="authToken" value="${authToken_acct2}"/>


	<t:test>
		<t:request>
			<IMModifyChatRequest xmlns="urn:zimbraIM" thread="${account2.chat.id}" op="close"/>
		</t:request>
		<t:response>
			<t:select path="//im:IMModifyChatResponse"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="im_chatHistory01" type="deprecated">
    <t:objective> Verify conversation is saved in Chats folder of user1 </t:objective>
	<t:steps>
	1. Login with account1 
	2. Verify that the conversation is saved in the Chats folder
	</t:steps>
	
	<!-- Wait for 3 seconds to make sure the first message is received -->
	<t:delay msec="3000"/>

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
	<t:property name="authToken" value="${authToken_acct1}"/>


	<t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail"  types="message">
                <query> ${message.body1} </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:chat/mail:e" attr="a" match="${test_account1.name}.*"/>
			<t:select path="//mail:SearchResponse/mail:chat/mail:e" attr="a" match=".*${test_account2}.*"/>
			<t:select path="//mail:SearchResponse/mail:chat/mail:su" match="${message.body1}.*"/>
		</t:response>
    </t:test>
</t:test_case>

<t:test_case testcaseid="im_chatHistory02" type="deprecated">
    <t:objective> Verify conversation is saved in Chats folder of user2 </t:objective>
	<t:steps>
	1. Login with account2 
	2. Verify that the conversation is saved in the Chats folder
	</t:steps>

	<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
	<t:property name="authToken" value="${authToken_acct2}"/>

	
	<t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail"  types="message">
                <query> ${message.body2} </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:chat/mail:e" attr="a" match="${test_account1.name}.*"/>
			<t:select path="//mail:SearchResponse/mail:chat/mail:e" attr="a" match=".*${test_account2}.*"/>
			<t:select path="//mail:SearchResponse/mail:chat/mail:su" match="${message.body1}.*"/>
		</t:response>
    </t:test>

</t:test_case>
</t:tests>
