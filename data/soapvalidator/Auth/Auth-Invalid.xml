<t:tests xmlns:t="urn:zimbraTestHarness">


<!--
invalid_domain1 -> domain name 'invalid_domain.com' is not registered (user1 is)
invalid_domain2 -> note the comma instead of a period

invalid_user1 -> user name 'invalid_user' is not registered (zimbra.com is)
invalid_user2 -> leading space
invalid_user3 -> trailing space
invalid_user4 -> trailing space after the user part
invalid_user5 -> space within the user name
invalid_user6 -> leading space before the domain part
invalid_user7 -> space within the domain name
invalid_user8 -> no '@' character
invalid_user9 -> user part contains dots

invalid_password1 -> password does not match valid entry
invalid_password2 -> password text matches, but contains a leading space
invalid_password3 -> password text matches, but contains a trailing space
-->





<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>

	<t:test required="true">
	 <t:request>
	   <PingRequest xmlns="urn:zimbraAdmin"/>
	 </t:request>
	  <t:response>
		<t:select path="//admin:PingResponse"/>
	 </t:response>
	</t:test>

</t:test_case>




<t:test_case testcaseid="Setup_accounts_auth_invalid" type="always" >
    <t:objective>Create test account</t:objective>
    <steps> 1. Login to admin account
            2. Create a mail account 
    </steps>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <GetConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraDefaultDomainName"/>
            </GetConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetConfigResponse/admin:a[@n='zimbraDefaultDomainName']" set="domain.default"/>
        </t:response>
    </t:test>
    
	<t:property name="acct1" value="user${COUNTER}${TIME}"/>
	<t:property name="invalid_domain1" value="${acct1}@invalid_domain.com"/>
	<t:property name="invalid_domain2" value="${acct1}@invalid_domain,com"/>
	
	<t:property name="invalid_user1" value="invalid_user@${domain.default}"/>
	<t:property name="invalid_user2" value=" ${acct1}@invalid_domain.com"/>
	<t:property name="invalid_user3" value="${acct1}@invalid_domain.com "/>
	<t:property name="invalid_user4" value="${acct1} @invalid_domain.com"/>
	<t:property name="invalid_user5" value="use r1@invalid_domain.com"/>
	<t:property name="invalid_user6" value="${acct1}@ invalid_domain.com"/>
	<t:property name="invalid_user7" value="${acct1}@invali d_domain.com"/>
	<t:property name="invalid_user8" value="${acct1}"/>
	<t:property name="invalid_user9a" value="${acct1}@"/>
	<t:property name="invalid_user9b" value="${acct1}@@"/>
	<t:property name="invalid_user9c" value="${acct1}@@@"/>
	<t:property name="invalid_user9d" value="${acct1}@@invalid_domain.com"/>
	<t:property name="invalid_user9e" value="${acct1}@@${domain.default}"/>
	<t:property name="invalid_user10" value="first1.middle.last1@${domain.default}"/>
	
	<t:property name="invalid_password1" value="invalid_password"/>
	<t:property name="invalid_password2" value=" test123"/>
	<t:property name="invalid_password3" value="test123 "/>
	<t:property name="invalid_password4" value="TEST123 "/>

	<t:property name="valid_user" value="${acct1}@${domain.default}"/>
	<t:property name="valid_password" value="test123"/>


    <t:test id="create_test_account1"  required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${acct1}@${domain.default}</name>
	        <password>${valid_password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server"/>
        </t:response>
    </t:test>


</t:test_case>








<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

<t:test_case testcaseid="AuthInvalid001" type="always" >
 <t:objective>Sanity test: make sure valid login works</t:objective>

<!-- Positive Sanity Test: Make sure the positive test case passes before emarking on negative tests -->
<t:test required="true">
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${valid_user}</account>
    <password>${valid_password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
	<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

 </t:response>
</t:test>

</t:test_case>

<!--
	What is the appropriate response for invalid user with valid password?
	To do: Modify the response to match the expected behavior
-->

<t:test_case testcaseid="AuthInvalid002" type="sanity" >
 <t:objective>login as domain that doesn't exist</t:objective>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${invalid_domain1}</account>
    <password>${valid_password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
	 </t:response>
</t:test>

</t:test_case>




<t:test_case testcaseid="AuthInvalid003" type="sanity" bugids="1725">
 <t:objective>login with a domain that has a comma</t:objective>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${invalid_domain2}</account>
    <password>${valid_password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
<!--
	FYI ... The 'comma' in the domain causes the lookup to fail, which leads t
	a service.FAILURE response, instead of authorization failed response.

	Bug 1725
-->
	<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
 </t:response>
</t:test>

</t:test_case>




<t:test_case testcaseid="AuthInvalid004" type="sanity" >
 <t:objective>login as an invalid email account</t:objective>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${invalid_user1}</account>
    <password>${valid_password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
 </t:response>
</t:test>

</t:test_case>




<t:test_case testcaseid="AuthInvalid005" type="sanity" >
 <t:objective>login as a user with leading spaces</t:objective>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${invalid_user2}</account>
    <password>${valid_password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
 </t:response>
</t:test>

</t:test_case>




<t:test_case testcaseid="AuthInvalid006" type="sanity" >
 <t:objective>login as trailing spaces</t:objective>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${invalid_user3}</account>
    <password>${valid_password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
 </t:response>
</t:test>

</t:test_case>




<t:test_case testcaseid="AuthInvalid007" type="sanity" >
 <t:objective>login as space before the at symbol</t:objective>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${invalid_user4}</account>
    <password>${valid_password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
 </t:response>
</t:test>

</t:test_case>




<t:test_case testcaseid="AuthInvalid008" type="sanity" >
 <t:objective>login as space within the email</t:objective>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${invalid_user5}</account>
    <password>${valid_password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
 </t:response>
</t:test>

</t:test_case>




<t:test_case testcaseid="AuthInvalid009" type="sanity" >
 <t:objective>login as space after the at symbol</t:objective>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${invalid_user6}</account>
    <password>${valid_password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
 </t:response>
</t:test>

</t:test_case>




<t:test_case testcaseid="AuthInvalid010" type="sanity" >
 <t:objective>login as space within the domain</t:objective>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${invalid_user7}</account>
    <password>${valid_password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
 </t:response>
</t:test>

</t:test_case>




<t:test_case testcaseid="AuthInvalid011" type="bhr">
 <t:objective>
1. login with no domain
2. auth should succeed, if account is assigned to the default domain
</t:objective>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${invalid_user8}</account>
    <password>${valid_password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
	<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

<!--
	<t:select path="//zimbra:Code"  match="^service.INVALID_REQUEST$"/>
-->
 </t:response>
</t:test>

</t:test_case>




<t:test_case testcaseid="AuthInvalid012" type="sanity" bugids="2010">
 <t:objective>login with no domain, but with an at symbol</t:objective>
 <t:steps>
 	1. Login with:
 	 A. user1@
 	 B. user1@@
 	 C. user1@@@
 	 D. user1@@invalid_domain
 	 E. user1@@valid_domain
 </t:steps>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${invalid_user9a}</account>
    <password>${valid_password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^service.INVALID_REQUEST$"/>
 </t:response>
</t:test>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${invalid_user9b}</account>
    <password>${valid_password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^service.INVALID_REQUEST$"/>
 </t:response>
</t:test>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${invalid_user9c}</account>
    <password>${valid_password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^service.INVALID_REQUEST$"/>
 </t:response>
</t:test>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${invalid_user9d}</account>
    <password>${valid_password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^service.INVALID_REQUEST$"/>
 </t:response>
</t:test>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${invalid_user9e}</account>
    <password>${valid_password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^service.INVALID_REQUEST$"/>
 </t:response>
</t:test>


</t:test_case>




<t:test_case testcaseid="AuthInvalid013" type="sanity" >
 <t:objective>login with periods in the address</t:objective>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${invalid_user10}</account>
    <password>${valid_password}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
 </t:response>
</t:test>

</t:test_case>




<t:test_case testcaseid="AuthInvalid014" type="bhr">
 <t:objective>login with an invalid password</t:objective>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${valid_user}</account>
    <password>${invalid_password1}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
 </t:response>
</t:test>

</t:test_case>




<t:test_case testcaseid="AuthInvalid015" type="sanity" >
 <t:objective>login with password with a leading space</t:objective>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${valid_user}</account>
    <password>${invalid_password2}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
 </t:response>
</t:test>

</t:test_case>




<t:test_case testcaseid="AuthInvalid016" type="sanity" >
 <t:objective>login with password with trailing spaces</t:objective>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${valid_user}</account>
    <password>${invalid_password3}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
 </t:response>
</t:test>

</t:test_case>




<t:test_case testcaseid="AuthInvalid017" type="sanity" >
 <t:objective>login with password in capital letters</t:objective>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${valid_user}</account>
    <password>${invalid_password4}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
 </t:response>
</t:test>

</t:test_case>




<t:test_case testcaseid="AuthInvalid018" type="bhr">
 <t:objective>login with invalid user name and invalid password</t:objective>

<t:test >
 <t:request>
  <AuthRequest xmlns="urn:zimbraAccount">
    <account by="name">${invalid_user1}</account>
    <password>${invalid_password1}</password>
    <!--<prefs/>-->
  </AuthRequest>
 </t:request>
 <t:response>
	<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
 </t:response>
</t:test>

</t:test_case>




</t:tests>
