<t:tests xmlns:t="urn:zimbraTestHarness">

	<t:property name="account1.name" value="test1${TIME}@${defaultdomain.name}" />
	<t:property name="account1.password" value="${defaultpassword.value}" />


	<t:test_case testcaseid="Ping" type="always">
		<t:objective>Basic system check</t:objective>
		
			
    
	</t:test_case>

	<t:test_case testcaseid="Account_Setup" type="always">
		<t:objective>Create user account</t:objective>
		<t:steps>1. Login to admin.
			2. Create test accounts
		</t:steps>

		<t:test id="admin_login" required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test id="create_testAccount1" required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account1.name}</name>
					<password>${account1.password}</password>
					<a n="zimbraFeatureResetPasswordStatus">enabled</a>
					<a n="zimbraResetPasswordRecoveryCodeExpiry">30m</a>
					<a n="zimbraPasswordMinLength">6</a>
					<a n="zimbraPasswordLocked">FALSE</a>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account1.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account1.server" />
			</t:response>
		</t:test>
		
	</t:test_case>

	<t:test_case testcaseid="Reset_Password_Valid" type="smoke"
		bugids="ZCS-4802">
		<t:objective>Reset password for a valid auth token</t:objective>

		<t:steps>
			1. Auth request for
			user 1.
			2. Generate new password.
			3. Fire
			ResetPasswordRequest with new password. Response should be success.
			4. Validate the new password with AuthRequest.
			5. Validate the old
			password. Should fail.
		</t:steps>

		<t:test id="auth_testAccount1" required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:property name="account1.newPassword" value="t_est@1234" />

		<!-- Reset the password for account 1 user -->
		<t:test id="auth_testAccount1_ResetPassword" required="true">
			<t:request>
				<ResetPasswordRequest xmlns="urn:zimbraAccount">
					<password>${account1.newPassword}</password>
				</ResetPasswordRequest>
			</t:request>
			<t:response>
				<t:select path="//ResetPasswordResponse" emptyset="0" />
			</t:response>
		</t:test>

		<!-- Login to account using new password. Should pass -->
		<t:test id="auth_testAccount1_newPassword" required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${account1.newPassword}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<!-- Login to account using old password. Should fail -->
		<t:test id="auth_testAccount1" required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password></password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//zimbra:Code" match="^account.AUTH_FAILED" />
			</t:response>
		</t:test>

	</t:test_case>

	<t:test_case testcaseid="Reset_Password_Invalid" type="smoke"
		bugids="ZCS-4802">
		<t:objective>Reset password based on auth token for empty password
		</t:objective>

		<t:steps>
			1. Auth request for user 1 based on recovery code.
			2. Fire
			ResetPasswordRequest with empty password. Response should be failure.
		</t:steps>

		<t:test id="auth_testAccount1" required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount" tokenType="JWT">
					<account by="name">${account1.name}</account>
					<password>${account1.newPassword}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
		
		<t:property name="account1.emptyPassword" value="   " />

		<!-- Reset the password for account 1 user with empty password. Should 
			fail -->
		<t:test id="auth_testAccount1_resetPassword" required="true">
			<t:request>
				<ResetPasswordRequest xmlns="urn:zimbraAccount">
					<password>${account1.emptyPassword}</password>
				</ResetPasswordRequest>
			</t:request>
			<t:response>
				<t:select path="//zimbra:Code" match="service.INVALID_REQUEST" />
				<t:select path="//soap:Text"
					match=".*invalid request: Invalid or missing password*" />
			</t:response>
		</t:test>

	</t:test_case>
	
	<t:test_case testcaseid="Reset_Password_MinimumLength" type="smoke"
		bugids="ZCS-4802">
		<t:objective>Reset password based on auth token for password less than min length
		</t:objective>

		<t:steps>
			1. Auth request for user 1 based on recovery code.
			2. Fire
			ResetPasswordRequest with new password of less than 6 chars. Response should be failure.
		</t:steps>

		<t:test id="auth_testAccount1" required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${account1.newPassword}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:property name="account1.minPassword" value="test" />

		<!-- Reset the password for account 1 user with empty password. Should 
			fail -->
		<t:test id="auth_testAccount1_resetPassword" required="true">
			<t:request>
				<ResetPasswordRequest xmlns="urn:zimbraAccount">
					<password>${account1.minPassword}</password>
				</ResetPasswordRequest>
			</t:request>
			<t:response>
				<t:select path="//zimbra:Code" match="account.INVALID_PASSWORD" />
				<t:select path="//soap:Text"
					match=".*invalid password: too short*" />
			</t:response>
		</t:test>

	</t:test_case>

	<!-- Deprecated for now. Will run it once JWt based authentication is in 
		place -->
	<t:test_case testcaseid="Reset_Password_Valid_JWT" type="deprecated"
		bugids="ZCS-4802">
		<t:objective>Reset password for a valid JWT based auth token
		</t:objective>

		<t:steps>
			1. Auth request with JWT token for user 1.
			2. Generate new password.
			3. Fire
			ResetPasswordRequest with new password. Response should be success.
			4. Validate the new password with AuthRequest.
			5. Validate the old
			password. Should fail.
		</t:steps>

		<t:test id="auth_testAccount1" required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${account1.newPassword}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:property name="account1.newPassword" value="t_est@##123" />

		<!-- Reset the password for account 1 user -->
		<t:test id="auth_testAccount1_ResetPassword" required="true">
			<t:request>
				<ResetPasswordRequest xmlns="urn:zimbraAccount">
					<password>${account1.newPassword}</password>
				</ResetPasswordRequest>
			</t:request>
			<t:response>
				<t:select path="//ResetPasswordResponse" emptyset="0" />
			</t:response>
		</t:test>

		<!-- Login to account using new password. Should pass -->
		<t:test id="auth_testAccount1_newPassword" required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount" tokenType="JWT">
					<account by="name">${account1.name}</account>
					<password>${account1.newPassword}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<!-- Login to account using old password. Should fail -->
		<t:test id="auth_testAccount1" required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount" tokenType="JWT">
					<account by="name">${account1.name}</account>
					<password></password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//zimbra:Code" match="^account.AUTH_FAILED" />
			</t:response>
		</t:test>

	</t:test_case>

</t:tests>