<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="account1.${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.alias" value="account1.alias1.${TIME}${COUNTER}@${defaultdomain.name}"/>

<t:property name="account2.name.user" value="account2.${TIME}${COUNTER}"/>
<t:property name="account2.name" value="${account2.name.user}@${defaultdomain.name}"/>
<t:property name="account2.alias.user" value="alias2.${TIME}${COUNTER}"/>
<t:property name="account2.alias" value="${account2.alias.user}@${defaultdomain.name}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>

	<t:test required="true">
	 <t:request>
	   <PingRequest xmlns="urn:zimbraAdmin"/>
	 </t:request>
	  <t:response>
		<t:select path="//admin:PingResponse"/>
	 </t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="acct1_setup" type="always" >
 <t:objective>create test account</t:objective>

	<t:test required="true" >
	 <t:request>
	  <AuthRequest xmlns="urn:zimbraAdmin">
	    <name>${admin.user}</name>
	    <password>${admin.password}</password>
	  </AuthRequest>
	 </t:request>
	 <t:response>
	    <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
	 </t:response>
	</t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${account1.id}</id>
                <alias>${account1.alias}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test>  

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${account2.id}</id>
                <alias>${account2.alias}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid="AuthRequest_Alias_01" type="smoke">
	<t:objective>AuthRequest - log in with alias</t:objective>


	<t:property name="authToken" value=""/>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.alias}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="AuthRequest_Alias_02" type="bhr" bugids="25641">
	<t:objective>AuthRequest - verify failed login with alias name does not show real account name</t:objective>


	<t:property name="authToken" value=""/>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.alias.user}</account>
				<password>wrong password</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^account.AUTH_FAILED$"/>
			<t:select path="//zimbra:Trace" match="(?s).*${account2.name.user}.*" emptyset="1"/>
			<t:select path="//soap:Text" match="(?s).*${account2.name.user}.*" emptyset="1"/>
		</t:response>
	</t:test>

</t:test_case>
<t:test_case testcaseid="AuthRequest_Alias_Blocked" type="bhr" bugids="ZCS-7680">
	<t:objective>
	  Verify below points when "alias_login_enabled" local config value is set to false -
		1. Alias login will blocked
		2. Login with email address would work.
	</t:objective>
	<t:staftask>
			<t:request>
				<server>${zimbraServer.name}</server>
				<service>PROCESS</service>
				<params>START SHELL COMMAND "su - zimbra -c \'zmlocalconfig -e alias_login_enabled=false'" RETURNSTDOUT RETURNSTDERR WAIT
					${staf.process.timeout.default}</params>
			</t:request>
	</t:staftask>
	<t:staftask>
			<t:request>
				<server>${zimbraServer.name}</server>
				<service>PROCESS</service>
				<params>START SHELL COMMAND "su - zimbra -c \'zmmailboxdctl restart'" RETURNSTDOUT RETURNSTDERR WAIT
					${staf.process.timeout.default}</params>
			</t:request>
	</t:staftask>
	<t:property name="authToken" value=""/>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.alias}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>
	<t:test >
	<t:request>
	  <AuthRequest xmlns="urn:zimbraAccount">
		<account by="name">${account1.name}</account>
		<password>${defaultpassword.value}</password>
	  </AuthRequest>
	</t:request>
	<t:response>
		<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
		<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
	</t:response>
	</t:test>
</t:test_case>
<t:finally type="always">
	<t:objective>reset localconfig</t:objective>
	<t:staftask>
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "su - zimbra -c \'zmlocalconfig -e alias_login_enabled=true'" RETURNSTDOUT RETURNSTDERR WAIT
				${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>
	<t:staftask>
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "su - zimbra -c \'zmmailboxdctl restart'" RETURNSTDOUT RETURNSTDERR WAIT
				${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>
</t:finally>
</t:tests>
