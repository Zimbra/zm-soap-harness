<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain1.name" value="preauth.${TIME}.${COUNTER}.com"/>
<t:property name="domain1.preauthkey" value="7c9d4c4372457f2e9df0a681e31559e691199762171b832ec042861bc9b610ba"/>
<!--t:property name="domain1.preauthkey" value="527f7fa4cbaaa9be9ef7abf4818ac68658ad8e75a3a6f2b2432f8a97531099da"/-->

<t:property name="account1.name" value="preauth${TIME}${COUNTER}@${domain1.name}"/>
<t:property name="account2.name" value="preauth${TIME}${COUNTER}@${domain1.name}"/>
<t:property name="account2.foreignPrincipal" value="test:${TIME}.${COUNTER}"/>
<t:property name="account3.name" value="preauth${TIME}${COUNTER}@${domain1.name}"/>


<t:property name="domain2.name" value="preauth.${TIME}.${COUNTER}.com"/>
<t:property name="account4.name" value="preauth${TIME}${COUNTER}@${domain2.name}"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>

	<t:test required="true">
	 <t:request>
	   <PingRequest xmlns="urn:zimbraAdmin"/>
	 </t:request>
	  <t:response>
		<t:select path="//admin:PingResponse"/>
	 </t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="acct1_setup" type="always" >
 <t:objective>create test account</t:objective>

	<t:test required="true" >
	 <t:request>
	  <AuthRequest xmlns="urn:zimbraAdmin">
	    <name>${admin.user}</name>
	    <password>${admin.password}</password>
	  </AuthRequest>
	 </t:request>
	 <t:response>
	    <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
	 </t:response>
	</t:test>

    <t:test id="CreateDomainRequest0a">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain1.name}</name>
                <a n="zimbraPreAuthKey">${domain1.preauthkey}</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse">
	            <t:select path="//admin:domain" attr="id" set="domain1.id"/>
	            <t:select path="//admin:a[@n='zimbraPreAuthKey']" match="${domain1.preauthkey}"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraForeignPrincipal">${account2.foreignPrincipal}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>  

    <t:test id="CreateDomainRequest0a">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain2.name}</name>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse">
	            <t:select path="//admin:domain" attr="id" set="domain2.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>  


</t:test_case>


<t:test_case testcaseid="PreauthRequest_basic_01" type="bhr">
	<t:objective>Preauth request - basic test.  by="name"</t:objective>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:property name="authToken" value=""/>

	
	<t:property name="account1.timestamp" value="${TIME}"/>
	<t:property name="account1.expires" value="0"/>
	
	<t:preauth
		account="${account1.name}"
		by="name"
		timestamp="${account1.timestamp}"
		expires="${account1.expires}"
		key="${domain1.preauthkey}"
		set="account1.preauthkey"/>
	
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<preauth timestamp="${account1.timestamp}" expires="${account1.expires}">${account1.preauthkey}</preauth>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="PreauthRequest_basic_02" type="bhr">
	<t:objective>Preauth request - basic test.  by="id"</t:objective>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:property name="authToken" value=""/>

	
	<t:property name="account1.timestamp" value="${TIME}"/>
	<t:property name="account1.expires" value="0"/>
	
	<t:preauth
		account="${account1.id}"
		by="id"
		timestamp="${account1.timestamp}"
		expires="${account1.expires}"
		key="${domain1.preauthkey}"
		set="account1.preauthkey"/>
	
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="id">${account1.id}</account>
				<preauth timestamp="${account1.timestamp}" expires="${account1.expires}">${account1.preauthkey}</preauth>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="PreauthRequest_basic_03" type="bhr">
	<t:objective>Preauth request - basic test.  by="foreignPrincipal"</t:objective>


	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:property name="authToken" value=""/>

	
	<t:property name="account2.timestamp" value="${TIME}"/>
	<t:property name="account2.expires" value="0"/>
	
	<t:preauth
		account="${account2.foreignPrincipal}"
		by="foreignPrincipal"
		timestamp="${account2.timestamp}"
		expires="${account2.expires}"
		key="${domain1.preauthkey}"
		set="account2.preauthkey"/>
	
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="foreignPrincipal">${account2.foreignPrincipal}</account>
				<preauth timestamp="${account2.timestamp}" expires="${account2.expires}">${account2.preauthkey}</preauth>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

</t:test_case>



<t:test_case testcaseid="PreauthRequest_basic_04" type="bhr">
	<t:objective>Preauth request - basic test.  preauthkey is only valid for 5 minutes</t:objective>


	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:property name="authToken" value=""/>

	
	<t:property name="account3.timestamp" value="${TIME(-1d)}"/>
	<t:property name="account3.expires" value="600000"/> <!-- 10 minutes -->
	
	<t:preauth
		account="${account3.name}"
		by="name"
		timestamp="${account3.timestamp}"
		expires="${account3.expires}"
		key="${domain1.preauthkey}"
		set="account3.preauthkey"/>
	
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<preauth timestamp="${account3.timestamp}" expires="${account3.expires}">${account3.preauthkey}</preauth>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//zimbra:Code" match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="PreauthRequest_05" type="sanity" bugids="16208">
	<t:objective>Preauth request - authenticate after the token expires, but while the preauth is still valid</t:objective>


	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:property name="authToken" value=""/>

	
	<t:property name="account3.timestamp" value="${TIME}"/>
	<t:property name="account3.expires" value="60000"/> <!-- 1 minute -->
	
	<t:preauth
		account="${account3.name}"
		by="name"
		timestamp="${account3.timestamp}"
		expires="${account3.expires}"
		key="${domain1.preauthkey}"
		set="account3.preauthkey"/>
	
	<t:delay msec="60000"/>
	
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<preauth timestamp="${account3.timestamp}" expires="${account3.expires}">${account3.preauthkey}</preauth>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//zimbra:Code" match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="PreauthRequest_06" type="sanity" >
	<t:objective>Preauth request - authenticate after the token expires, and after the preauth expires (5 mins)</t:objective>


	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:property name="authToken" value=""/>

	
	<t:property name="account3.timestamp" value="${TIME(-10m)}"/>
	<t:property name="account3.expires" value="60000"/> <!-- 1 minutes -->
	
	<t:preauth
		account="${account3.name}"
		by="name"
		timestamp="${account3.timestamp}"
		expires="${account3.expires}"
		key="${domain1.preauthkey}"
		set="account3.preauthkey"/>
	
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<preauth timestamp="${account3.timestamp}" expires="${account3.expires}">${account3.preauthkey}</preauth>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//zimbra:Code" match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="PreauthRequest_07" type="sanity" >
	<t:objective>Preauth request - authenticate before the token expires, and before the preauth expires (5 mins)</t:objective>


	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:property name="authToken" value=""/>

	
	<t:property name="account3.timestamp" value="${TIME(+10m)}"/>
	<t:property name="account3.expires" value="60000"/> <!-- 1 minutes -->
	
	<t:preauth
		account="${account3.name}"
		by="name"
		timestamp="${account3.timestamp}"
		expires="${account3.expires}"
		key="${domain1.preauthkey}"
		set="account3.preauthkey"/>
	
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<preauth timestamp="${account3.timestamp}" expires="${account3.expires}">${account3.preauthkey}</preauth>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//zimbra:Code" match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="PreauthRequest_08" type="sanity" >
	<t:objective>Preauth request - use "name" when "id" is expected</t:objective>


	<t:property name="account3.timestamp" value="${TIME}"/>
	<t:property name="account3.expires" value="0"/>
	
	<t:preauth
		account="${account3.id}"
		by="id"
		timestamp="${account3.timestamp}"
		expires="${account3.expires}"
		key="${domain1.preauthkey}"
		set="account3.preauthkey"/>
	
	
	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:property name="authToken" value=""/>

	
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<preauth timestamp="${account3.timestamp}" expires="${account3.expires}">${account3.preauthkey}</preauth>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//zimbra:Code" match="^account.AUTH_FAILED$|^service.INVALID_REQUEST$"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="PreauthRequest_09" type="bhr">
	<t:objective>Preauth request - use preauth against a domain that does not have preauth configured</t:objective>


	<t:property name="account3.timestamp" value="${TIME}"/>
	<t:property name="account3.expires" value="0"/>
	
	<t:preauth
		account="${account3.id}"
		by="id"
		timestamp="${account3.timestamp}"
		expires="${account3.expires}"
		key="${domain1.preauthkey}"
		set="account3.preauthkey"/>
	
	
	<t:property name="server.zimbraAccount" value="${account4.server}"/>

	<t:property name="authToken" value=""/>

	
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<preauth timestamp="${account3.timestamp}" expires="${account3.expires}">${account3.preauthkey}</preauth>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//zimbra:Code" match="^account.AUTH_FAILED$|^service.INVALID_REQUEST$"/>
		</t:response>
	</t:test>

</t:test_case>



</t:tests>
