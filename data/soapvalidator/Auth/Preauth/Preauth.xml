<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain1.name" value="preauth.${TIME}.${COUNTER}.com"/>
<t:property name="domain1.preauthkey" value="7c9d4c4372457f2e9df0a681e31559e691199762171b832ec042861bc9b610ba"/>


<t:property name="account1.name" value="user${TIME}${COUNTER}@${domain1.name}"/>
<t:property name="account2.name" value="user2${TIME}${COUNTER}@${domain1.name}"/>
<t:property name="account3.name" value="user3${TIME}${COUNTER}@${domain1.name}"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>

	<t:test required="true">
	 <t:request>
	   <PingRequest xmlns="urn:zimbraAdmin"/>
	 </t:request>
	  <t:response>
		<t:select path="//admin:PingResponse"/>
	 </t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="acct1_setup" type="always" >
 <t:objective>create test account</t:objective>

	<t:test required="true" >
	 <t:request>
	  <AuthRequest xmlns="urn:zimbraAdmin">
	    <name>${admin.user}</name>
	    <password>${admin.password}</password>
	  </AuthRequest>
	 </t:request>
	 <t:response>
	    <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
	 </t:response>
	</t:test>

    <t:test id="CreateDomainRequest0a">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain1.name}</name>
                <a n="zimbraPreAuthKey">${domain1.preauthkey}</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse">
	            <t:select path="//admin:domain" attr="id" set="domain1.id"/>
	            <t:select path="//admin:a[@n='zimbraPreAuthKey']" match="${domain1.preauthkey}"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid="PreauthRequest_01" type="bhr" bugids="15556">
	<t:objective>Preauth request - random preauth key used</t:objective>


	<t:property name="account1.timestamp" value="${TIME}"/>
	<t:property name="account1.expires" value="0"/>
	
	<!-- A random key -->
	<t:property name="account1.preauthkey" value="640ce5f2779a14552c02b6822972a0584cf0d08b"/>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:property name="authToken" value=""/>

	
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<preauth timestamp="${account1.timestamp}" expires="${account1.expires}">${account1.preauthkey}</preauth>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//zimbra:Code" match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="PreauthRequest_02" type="bhr">
	<t:objective>Preauth request - account2 uses account1's preauthcode</t:objective>


	<t:property name="account1.timestamp" value="${TIME}"/>
	<t:property name="account1.expires" value="0"/>
	
	<t:preauth
		account="${account1.name}"
		by="name"
		timestamp="${account1.timestamp}"
		expires="${account1.expires}"
		key="${domain1.preauthkey}"
		set="account1.preauthkey"/>
	
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:property name="authToken" value=""/>

	
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<preauth timestamp="${account1.timestamp}" expires="${account1.expires}">${account1.preauthkey}</preauth>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//zimbra:Code" match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="PreauthRequest_03" type="sanity" >
	<t:objective>Preauth request - wrong timestamp used</t:objective>


	<t:property name="account3.timestamp" value="${TIME(-5s)}"/>
	<t:property name="account3.expires" value="0"/>
	
	<t:preauth
		account="${account3.name}"
		by="name"
		timestamp="${account3.timestamp}"
		expires="${account3.expires}"
		key="${domain1.preauthkey}"
		set="account3.preauthkey"/>
	
	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:property name="authToken" value=""/>

	
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<preauth timestamp="${TIME}" expires="${account1.expires}">${account3.preauthkey}</preauth>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//zimbra:Code" match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="PreauthRequest_04" type="sanity" >
	<t:objective>Preauth request - wrong expires used</t:objective>


	<t:property name="account3.timestamp" value="${TIME}"/>
	<t:property name="account3.expires" value="60000"/>
	
	<t:preauth
		account="${account3.name}"
		by="name"
		timestamp="${account3.timestamp}"
		expires="${account3.expires}"
		key="${domain1.preauthkey}"
		set="account3.preauthkey"/>
	
	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:property name="authToken" value=""/>

	
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<preauth timestamp="${account3.timestamp}" expires="0">${account3.preauthkey}</preauth>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//zimbra:Code" match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<preauth timestamp="${account3.timestamp}" expires="10000">${account3.preauthkey}</preauth>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//zimbra:Code" match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="PreauthRequest_05" type="sanity" >
	<t:objective>Preauth request - no preauth key ("") specified</t:objective>


	<t:property name="account3.timestamp" value="${TIME}"/>
	<t:property name="account3.expires" value="60000"/>
	
	
	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:property name="authToken" value=""/>

	
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<preauth timestamp="${account3.timestamp}" expires="0"></preauth>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//zimbra:Code" match="^account.AUTH_FAILED$|^service.INVALID_REQUEST$"/>
		</t:response>
	</t:test>

</t:test_case>



</t:tests>
