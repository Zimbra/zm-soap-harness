<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="test_account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="default.password" value="test123"/>

<t:property name="test_account2.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="test_acct1.server" value="NOT_DEFINED"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>Basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="bug65554_setup" type="always" >
    <t:objective>Create some text accounts </t:objective>
    <t:steps>1. Login to admin console
             2. create text accounts
    </t:steps>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken.admin"/>
        </t:response>
    </t:test>

    <t:test id = "create_test_account1" depends = "admin_login">
        <t:request>
            <CreateAccountRequest xmlns = "urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${default.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:CreateAccountResponse/admin:account" attr = "id" set = "test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>

    <t:test id = "create_test_account2" depends = "admin_login">
        <t:request>
            <CreateAccountRequest xmlns = "urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${default.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:CreateAccountResponse/admin:account" attr = "id" set = "test_account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>

    
	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
    <t:test>
        <t:requestContext>
             <session/>
        </t:requestContext>
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount" >
                <account by = "name">${test_account1.name}</account>
                <password>${default.password}</password>                
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//acct:AuthResponse/acct:authToken" set = "authToken1"/>
        </t:response>
    </t:test>	
    
</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

<t:test_case testcaseid="bug65554_test1" type="bhr">
    <t:objective> AuthRequest with authtoken contains verifyAccount="1" should match encoded account name in authtoken </t:objective>

    <t:test>
       
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
              <account by="name">${test_account1.name}</account>
              <authToken verifyAccount="1">${authToken1}</authToken>  
            </AuthRequest> 
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse" />
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="bug65554_test2" type="bhr">
    <t:objective> AuthRequest with authtoken contains verifyAccount="1" should return AUTH_REQUIRED if account name does not match encoded account name in authtoken </t:objective>

    <t:test>       
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
            	<account by="name">${test_account2.name}</account>
            	 <authToken verifyAccount="1">${authToken1}</authToken>  
            </AuthRequest> 
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code"  match="^service.AUTH_REQUIRED$"/>
        </t:response>
    </t:test>
    
</t:test_case>

</t:tests>