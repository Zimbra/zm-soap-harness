<t:tests xmlns:t = "urn:zimbraTestHarness">

<t:property name = "tag.colorvalid" value = "4"/>
<t:property name = "tag1.name" value = "tag${TIME}${COUNTER}"/>
<t:property name = "tag2.name" value = "tag${TIME}${COUNTER}"/>
<t:property name = "tag2.newname" value = "tag${TIME}${COUNTER}"/>
<t:property name = "tag3.name" value = "tag${TIME}${COUNTER}"/>
<t:property name = "tag4.name" value = "tag${TIME}${COUNTER}"/>
<t:property name = "tag5a.name" value = "tag${TIME}${COUNTER}"/>
<t:property name = "tag5b.name" value = "tag${TIME}${COUNTER}"/>
<t:property name = "tag6.name" value = "tag${TIME}${COUNTER}"/>


<t:property name="folder1.name" value="forder${TIME}${COUNTER}"/>
<t:property name="folder.pname" value="1"/>
<t:property name="folder.negative" value="-1"/>

<t:property name = "test_account1.name" value = "test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name = "test_account1.password" value = "${defaultpassword.value}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="test_acct.server" value="NOT_DEFINED"/>

<t:test_case testcaseid = "Ping" type="always">
    <t:objective>basic system check</t:objective>

    <t:test required = "true">
        <t:request>
            <PingRequest xmlns = "urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path = "//admin:PingResponse"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid = "acct1_setup" type="always">
    <t:objective>create test account</t:objective>
    <t:steps>1. Login to admin
             2. Create an account.    
    </t:steps>
    
    <t:test required = "true">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:AuthResponse/admin:authToken" set = "authToken"/>
        </t:response>
    </t:test>
    
    <t:test required = "true">
        <t:request>
            <CreateAccountRequest xmlns = "urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account1.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:CreateAccountResponse/admin:account" attr = "id" set = "test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server"/>
        </t:response>
    </t:test>
    
</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

<t:test_case testcaseid = "acct1_login" type="always">
    <t:objective>login as the test account</t:objective>

    <t:test required = "true">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by = "name">${test_account1.name}</account>
                <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//acct:AuthResponse/acct:lifetime" match = "^\d+$"/>
            <t:select path = "//acct:AuthResponse/acct:authToken" set = "authToken"/>

        </t:response>
    </t:test>
</t:test_case>

<t:test_case testcaseid = "ItemActionRequest1" type="bhr">
    <t:objective>Delete an Item (tag)</t:objective>
    <t:steps>1. Create a tag 
             2. Delete the item (tag)
    </t:steps>
    
    <t:test id = "itemActionRequest1a">
        <t:request>
            <CreateTagRequest xmlns = "urn:zimbraMail">
                <tag name = "${tag1.name}" color = "${tag.colorvalid}"/>
            </CreateTagRequest>
        </t:request>
        <t:response>
                <t:select path = "//mail:CreateTagResponse/mail:tag">
                <t:select attr = "id" set = "tag1.id"/>
                <t:select attr = "color" match = "${tag.colorvalid}"/>
                </t:select>
        </t:response>
    </t:test>
    
    <t:test id = "itemActionRequest1b" depends = "itemActionRequest1a">
        <t:request>
            <ItemActionRequest xmlns = "urn:zimbraMail">
                <action op = "delete" id = "${tag1.id}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
                <t:select path = "//mail:ItemActionResponse/mail:action">
                <t:select attr = "id" match = "${tag1.id}"/>
                <t:select attr = "op" match = "delete"/>
                </t:select>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid = "ItemActionRequest2" type="functional" bugids="11018">
    <t:objective>Delete an non-existing item (tag)</t:objective>    
    <t:steps>
        1. Create a tag
        2. Delete the tag
        3. Again delete the deleted tag
    </t:steps>
    
    <t:test id = "itemActionRequest2a">
        <t:request>
            <CreateTagRequest xmlns = "urn:zimbraMail">
                <tag name = "${tag1.name}" color = "${tag.colorvalid}"/>
            </CreateTagRequest>
        </t:request>
        <t:response>
                <t:select path = "//mail:CreateTagResponse/mail:tag">
                <t:select attr = "id" set = "tag1.id"/>
                <t:select attr = "color" match = "${tag.colorvalid}"/>
                </t:select>
        </t:response>
    </t:test>
    
    <t:test id = "itemActionRequest2b" depends = "itemActionRequest2a">
        <t:request>
            <ItemActionRequest xmlns = "urn:zimbraMail">
                <action op = "delete" id = "${tag1.id}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
                <t:select path = "//mail:ItemActionResponse/mail:action">
                <t:select attr = "id" match = "${tag1.id}"/>
                <t:select attr = "op" match = "delete"/>
                </t:select>
        </t:response>
    </t:test>
    
    <t:test depends = "itemActionRequest2b">
        <t:request>
            <ItemActionRequest xmlns = "urn:zimbraMail">
                <action op = "delete" id = "${tag1.id}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
                <t:select path = "//mail:ItemActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="ItemActionRequest3" type="functional" >
    <t:objective>Move an item (tag) in any folder </t:objective>
    <t:steps>1. Create a folder
             2. Create a tag
             3. Move the tag to the created folder
    </t:steps>
    
    <t:test  id="itemActionRequest3a">
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder1.name}" l="${folder.pname}"/>
            </CreateFolderRequest>    
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder1.id"/>
        </t:response>
    </t:test>

    <t:test id = "itemActionRequest3b">
        <t:request>
            <CreateTagRequest xmlns = "urn:zimbraMail">
                <tag name = "${tag3.name}" color = "${tag.colorvalid}"/>
            </CreateTagRequest>
        </t:request>
        <t:response>
                <t:select path = "//mail:CreateTagResponse/mail:tag">
                <t:select attr = "id" set = "tag3.id"/>
                <t:select attr = "color" match = "${tag.colorvalid}"/>
               </t:select>
        </t:response>
    </t:test>
    
    <t:test  depends="itemActionRequest3a,itemActionRequest3b">
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action op="move" id="${tag3.id}" l="${folder1.id}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^mail.IMMUTABLE_OBJECT"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest4" type="bhr">
    <t:objective>Mark an item (tag) as read </t:objective>
    <t:steps>1. Create a tag
             2. Mark as read
    </t:steps>

    <t:test id = "itemActionRequest4a">
        <t:request>
            <CreateTagRequest xmlns = "urn:zimbraMail">
                <tag name = "${tag4.name}" color = "${tag.colorvalid}"/>
            </CreateTagRequest>
        </t:request>
        <t:response>
                <t:select path = "//mail:CreateTagResponse/mail:tag">
                <t:select attr = "id" set = "tag4.id"/>
                <t:select attr = "color" match = "${tag.colorvalid}"/>
                </t:select>
        </t:response>
    </t:test>
    
    <t:test  depends="itemActionRequest4a">
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action op="read" id="${tag4.id}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
          	    <t:select path = "//mail:ItemActionResponse/mail:action">
                <t:select attr = "id" match = "${tag4.id}"/>
                <t:select attr = "op" match = "read"/>
                </t:select>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest5" type="functional" >
    <t:objective>Tag an item (tag) </t:objective>
    <t:steps>1. Create two tags
             2. Tag an Item (tag)
    </t:steps>

    <t:test id = "itemActionRequest5a">
        <t:request>
            <CreateTagRequest xmlns = "urn:zimbraMail">
                <tag name = "${tag5a.name}" color = "${tag.colorvalid}"/>
            </CreateTagRequest>
        </t:request>
        <t:response>
                <t:select path = "//mail:CreateTagResponse/mail:tag">
                <t:select attr = "id" set = "tag5a.id"/>
                <t:select attr = "color" match = "${tag.colorvalid}"/>
               </t:select>
        </t:response>
    </t:test>
    
	<t:test id = "itemActionRequest5b">
        <t:request>
            <CreateTagRequest xmlns = "urn:zimbraMail">
                <tag name = "${tag5b.name}" color = "${tag.colorvalid}"/>
            </CreateTagRequest>
        </t:request>
        <t:response>
                <t:select path = "//mail:CreateTagResponse/mail:tag">
                <t:select attr = "id" set = "tag5b.id"/>
                <t:select attr = "color" match = "${tag.colorvalid}"/>
                </t:select>
        </t:response>
    </t:test>
    
    <t:test  depends="itemActionRequest5a,itemActionRequest5b">
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action op="tag" tag="${tag5a.id}"  id="${tag5b.id}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
          	<t:select path="//zimbra:Code" match="^mail.CANNOT_TAG"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ItemActionRequest6" type="sanity" bugids="4996">
    <t:objective>Update an item (tag) with no action</t:objective>
    <t:steps>1. Create a tag
             2. Update it 
    </t:steps>

    <t:test id = "itemActionRequest6a">
        <t:request>
            <CreateTagRequest xmlns = "urn:zimbraMail">
                <tag name = "${tag6.name}" color = "${tag.colorvalid}"/>
            </CreateTagRequest>
        </t:request>
        <t:response>
                <t:select path = "//mail:CreateTagResponse/mail:tag">
                <t:select attr = "id" set = "tag6.id"/>
                <t:select attr = "color" match = "${tag.colorvalid}"/>
               </t:select>
        </t:response>
    </t:test>
    
    <t:test  depends="itemActionRequest6a">
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action op="update" id="${tag6.id}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
			<!--
				This used to return path = "//zimbra:Code" match = "^mail.IMMUTABLE_OBJECT$"
				But, I believe the server now responds with success if there is no action to take
			-->
          	    <t:select path = "//mail:ItemActionResponse/mail:action">
					<t:select attr = "id" match = "${tag6.id}"/>
					<t:select attr = "op" match = "update"/>
                </t:select>
        </t:response>
    </t:test>

</t:test_case>


</t:tests>
