<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="account2.${TIME}.${COUNTER}@${defaultdomain.name}"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Login to admin </t:objective>
    <steps> 1. Login to admin account 
            2. Create a test account
    </steps>

    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id="create_test_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>              
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>              
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>



</t:test_case> 

<t:test_case testcaseid="NoOpRequest_timeout_01" type="smoke" bugids="33803">
    <t:objective>Send NoOpRequest with timeout=45000, verify the response is returned within 45 seconds (+/- 1 second)</t:objective>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test required="true">
        <t:requestContext>
            <authToken>${authToken}</authToken>
            <session/>
        </t:requestContext>
        <t:request>
            <NoOpRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:NoOpResponse"/>
        </t:response>
    </t:test>

	<!-- Clear any pending updates -->
	<t:test >
        <t:request>
            <NoOpRequest xmlns="urn:zimbraMail" />
        </t:request>
        <t:response>
            <t:select path="//mail:NoOpResponse"/>
        </t:response>
    </t:test>
	
    <!--
		zimbra@qa60:~$ zmlocalconfig | grep _noop_
		zimbra_noop_default_timeout = 300
		zimbra_noop_max_timeout = 1200
		zimbra_noop_min_timeout = 30
    -->
    
    <t:test timeframeMax="46000" timeframeMin="44000">
        <t:request>
            <NoOpRequest xmlns="urn:zimbraMail" wait="1" timeout="45000"/>
        </t:request>
        <t:response>
            <t:select path="//mail:NoOpResponse"/>
        </t:response>
    </t:test>


</t:test_case>


</t:tests>


