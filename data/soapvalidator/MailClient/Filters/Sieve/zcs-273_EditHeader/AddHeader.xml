<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="account3.name" value="test3.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="account4.name" value="test4.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="account5.name" value="test5.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="account6.name" value="test6.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="account7.name" value="test7.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="outgoing.name" value="outgoing.${TIME}.${COUNTER}@${defaultdomain.name}" />

<t:property name="mail_subject" value="Sieve Mail" />

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping">
 <t:objective>basic system check</t:objective>

	<t:test required="true">
	 <t:request>
	   <PingRequest xmlns="urn:zimbraAdmin"/>
	 </t:request>
	  <t:response>
		<t:select path="//admin:PingResponse"/>
	 </t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="acct1_setup_AccountBy" type="always" bugids="62702">
 <t:objective>create test accounts</t:objective>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	    <t:test>
	        <t:request xmlns="urn:zimbraAdmin">
	            <GetCosRequest>
	                <cos by="name">default</cos>
	            </GetCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="name" match="default"/>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="id" set="cosid"/>
	        </t:response>
	    </t:test>
	    
	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveEditHeaderEnabled">TRUE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>
	    
	<!-- Remember these values for later -->
	<t:property name="authToken.admin" value="${authToken}"/>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account2.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account2.server"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account3.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account3.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account4.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account4.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account5.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account5.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account5.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account6.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account6.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account6.server"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account7.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account7.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account7.server"/>
        </t:response>
    </t:test>
        
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${outgoing.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="outgoing.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="outgoing.server"/>
        </t:response>
    </t:test>
                        
</t:test_case>

<t:test_case testcaseid="AddHeader_before1" type="smoke" bugids="zcs-273">
    <t:objective>Addheader rule for admin before script</t:objective>
    <t:steps>
    	1. Create before rule for admin for addheader with last=true
    	2. Send an email to user
    	3. Login to user and verify header is added with correct value
	</t:steps>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <ModifyFilterRulesRequest xmlns="urn:zimbraAdmin" type="before">
            <account by="name">${account1.name}</account>
                <filterRules>
					<filterRule name="filter${TIME}${COUNTER}" active="1">                         
                            <filterActions xmlns="urn:zimbraMail">
				            <actionAddheader last="true">
				              <headerName>X-Sieve-Header1</headerName>
				              <headerValue>Value1</headerValue>
				            </actionAddheader>
				          </filterActions>
                    </filterRule>
                 </filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyFilterRulesResponse"/>
	        </t:response>
    </t:test>
    
	  <t:test>
	   	<t:request>
	    	<GetFilterRulesRequest xmlns="urn:zimbraAdmin" type="before">
	    		<account by="name">${account1.name}</account>
	    	</GetFilterRulesRequest>
	   	</t:request>
	   	<t:response>
	    	<t:select path="//admin:GetFilterRulesResponse/admin:filterRules/admin:filterRule/mail:filterActions/mail:actionAddheader" attr="headerName" match="X-Sieve-Header1" />
	    	<t:select path="//admin:GetFilterRulesResponse/admin:filterRules/admin:filterRule/mail:filterActions/mail:actionAddheader" attr="headerValue" match="Value1" />
	    	<t:select path="//admin:GetFilterRulesResponse/admin:filterRules/admin:filterRule/mail:filterActions/mail:actionAddheader" attr="last" match="true" />
	   	</t:response>
	  </t:test>

	    <t:test >
	 		<t:request>
	    		<SendMsgRequest xmlns="urn:zimbraMail">
	      			<m>
						<e t="t" a='${account1.name}'/>
						<su>${mail_subject}</su>
						<mp ct="text/plain">
		    				<content>Good Morning</content>
						</mp>
	    			 </m>
	    		</SendMsgRequest>
	  		</t:request>
	  		<t:response>
	        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
	   		</t:response>
		</t:test>
		
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
	          	<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
			</t:request>
			<t:response>		   
				 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
		
	     <t:test>
				<t:request>
					<SearchRequest xmlns="urn:zimbraMail" types="message">					
						<query>subject:${mail_subject}</query>
					</SearchRequest>
				</t:request>
		        <t:response>			
					<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
					<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
				</t:response>
	    </t:test>
	
		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-Sieve-Header1" match="Value1"/>
			</t:restServletResponse>
		</t:resttest>				    
</t:test_case>

<t:test_case testcaseid="AddHeader_after1" type="smoke" bugids="zcs-273">
    <t:objective>Addheader rule for admin after script</t:objective>
    <t:steps>
    	1. Create after rule for admin after for addheader with last=false
    	2. Send an email to user
    	3. Login to user and verify header is added with correct value
	</t:steps>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <ModifyOutgoingFilterRulesRequest xmlns="urn:zimbraAdmin" type="after">
            <account by="name">${outgoing.name}</account>
                <filterRules>
					<filterRule name="filter${TIME}${COUNTER}" active="1">                         
                            <filterActions xmlns="urn:zimbraMail">
				            <actionAddheader last="false">
				              <headerName>X-Sieve-Header1</headerName>
				              <headerValue>Value1</headerValue>
				            </actionAddheader>
				          </filterActions>
                    </filterRule>
                 </filterRules>
            </ModifyOutgoingFilterRulesRequest>
        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyOutgoingFilterRulesResponse"/>
	        </t:response>
    </t:test>
    
	  <t:test>
	   	<t:request>
	    	<GetOutgoingFilterRulesRequest xmlns="urn:zimbraAdmin" type="after">
	    		<account by="name">${outgoing.name}</account>
	    	</GetOutgoingFilterRulesRequest>
	   	</t:request>
	   	<t:response>
	    	<t:select path="//admin:GetOutgoingFilterRulesResponse/admin:filterRules/admin:filterRule/mail:filterActions/mail:actionAddheader" attr="headerName" match="X-Sieve-Header1" />
	    	<t:select path="//admin:GetOutgoingFilterRulesResponse/admin:filterRules/admin:filterRule/mail:filterActions/mail:actionAddheader" attr="headerValue" match="Value1" />
	   	</t:response>
	  </t:test>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
	          	<account by="name">${outgoing.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
			</t:request>
			<t:response>		   
				 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
		
	    <t:test >
	 		<t:request>
	    		<SendMsgRequest xmlns="urn:zimbraMail">
	      			<m>
						<e t="t" a='${account2.name}'/>
						<su>${mail_subject}</su>
						<mp ct="text/plain">
		    				<content>Good Morning</content>
						</mp>
	    			 </m>
	    		</SendMsgRequest>
	  		</t:request>
	  		<t:response>
	        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
	   		</t:response>
		</t:test>
		
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
	          	<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
			</t:request>
			<t:response>		   
				 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
		
	     <t:test>
				<t:request>
					<SearchRequest xmlns="urn:zimbraMail" types="message">					
						<query>subject:${mail_subject}</query>
					</SearchRequest>
				</t:request>
		        <t:response>			
					<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
					<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
				</t:response>
	    </t:test>
	
		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-Sieve-Header1" match="Value1"/>
			</t:restServletResponse>
		</t:resttest>				    
</t:test_case>

<t:test_case testcaseid="AddHeader_multiple_before" type="smoke" bugids="zcs-273">
    <t:objective>Addheader rule for admin before script to add multiple headers</t:objective>
    <t:steps>
    	1. Create before rule for admin to add multiple headers
    	2. Send an email to user
    	3. Login to user and verify headers are added with correct value
	</t:steps>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <ModifyOutgoingFilterRulesRequest xmlns="urn:zimbraAdmin" type="before">
            <account by="name">${outgoing.name}</account>
                <filterRules>
					<filterRule name="filter${TIME}${COUNTER}" active="1">                         
                            <filterActions xmlns="urn:zimbraMail">
				            <actionAddheader last="false">
				              <headerName>X-Sieve-Header1</headerName>
				              <headerValue>Value1</headerValue>
				            </actionAddheader>
				            <actionAddheader last="true">
				              <headerName>X-Sieve-Header2</headerName>
				              <headerValue>Value2</headerValue>
				            </actionAddheader>
				            <actionAddheader>
				              <headerName>X-Sieve-Header3</headerName>
				              <headerValue>Value3</headerValue>
				            </actionAddheader>				            				            
				          </filterActions>
                    </filterRule>
                 </filterRules>
            </ModifyOutgoingFilterRulesRequest>
        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyOutgoingFilterRulesResponse"/>
	        </t:response>
    </t:test>
    
	  <t:test>
	   	<t:request>
	    	<GetOutgoingFilterRulesRequest xmlns="urn:zimbraAdmin" type="before">
	    		<account by="name">${outgoing.name}</account>
	    	</GetOutgoingFilterRulesRequest>
	   	</t:request>
	   	<t:response>
	    	<t:select path="//admin:GetOutgoingFilterRulesResponse/admin:filterRules/admin:filterRule/mail:filterActions/mail:actionAddheader" attr="headerName" match="X-Sieve-Header1" />
	    	<t:select path="//admin:GetOutgoingFilterRulesResponse/admin:filterRules/admin:filterRule/mail:filterActions/mail:actionAddheader" attr="headerValue" match="Value1" />
	    	<t:select path="//admin:GetOutgoingFilterRulesResponse/admin:filterRules/admin:filterRule/mail:filterActions/mail:actionAddheader" attr="headerName" match="X-Sieve-Header2" />
	    	<t:select path="//admin:GetOutgoingFilterRulesResponse/admin:filterRules/admin:filterRule/mail:filterActions/mail:actionAddheader" attr="headerValue" match="Value2" />
	    	<t:select path="//admin:GetOutgoingFilterRulesResponse/admin:filterRules/admin:filterRule/mail:filterActions/mail:actionAddheader" attr="headerName" match="X-Sieve-Header3" />
	    	<t:select path="//admin:GetOutgoingFilterRulesResponse/admin:filterRules/admin:filterRule/mail:filterActions/mail:actionAddheader" attr="headerValue" match="Value3" />
	    	<t:select path="//admin:GetOutgoingFilterRulesResponse/admin:filterRules/admin:filterRule/mail:filterActions/mail:actionAddheader" attr="last" match="true" />	    		    	
	   	</t:response>
	  </t:test>

		<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
	          	<account by="name">${outgoing.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
			</t:request>
			<t:response>		   
				 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
		
	    <t:test >
	 		<t:request>
	    		<SendMsgRequest xmlns="urn:zimbraMail">
	      			<m>
						<e t="t" a='${account3.name}'/>
						<su>${mail_subject}</su>
						<mp ct="text/plain">
		    				<content>Good Morning</content>
						</mp>
	    			 </m>
	    		</SendMsgRequest>
	  		</t:request>
	  		<t:response>
	        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
	   		</t:response>
		</t:test>
		
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
	          	<account by="name">${account3.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
			</t:request>
			<t:response>		   
				 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
		
	     <t:test>
				<t:request>
					<SearchRequest xmlns="urn:zimbraMail" types="message">					
						<query>subject:${mail_subject}</query>
					</SearchRequest>
				</t:request>
		        <t:response>			
					<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
					<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
				</t:response>
	    </t:test>
	
		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-Sieve-Header1" match="Value1"/>
				<t:select attr="X-Sieve-Header2" match="Value2"/>
				<t:select attr="X-Sieve-Header3" match="Value3"/>				
			</t:restServletResponse>
		</t:resttest>				    
</t:test_case>

<t:test_case testcaseid="AddHeader_after_last_invalid1" type="smoke" bugids="zcs-273">
    <t:objective>Addheader rule for admin after script with invalid value for last</t:objective>
    <t:steps>
    	1. Create after rule for admin for addheader with last=invalid
    	2. Send an email to user. Verify invalid value for last is ignored
    	3. Login to user and verify header is added
	</t:steps>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <ModifyFilterRulesRequest xmlns="urn:zimbraAdmin" type="after">
            <account by="name">${account4.name}</account>
                <filterRules>
					<filterRule name="filter${TIME}${COUNTER}" active="1">                         
                            <filterActions xmlns="urn:zimbraMail">
				            <actionAddheader last="invalid">
				              <headerName>X-Sieve-Header1</headerName>
				              <headerValue>Value1</headerValue>
				            </actionAddheader>
				          </filterActions>
                    </filterRule>
                 </filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyFilterRulesResponse"/>
	        </t:response>
    </t:test>
    
	  <t:test>
	   	<t:request>
	    	<GetFilterRulesRequest xmlns="urn:zimbraAdmin" type="after">
	    		<account by="name">${account4.name}</account>
	    	</GetFilterRulesRequest>
	   	</t:request>
	   	<t:response>
	    	<t:select path="//admin:GetFilterRulesResponse/admin:filterRules/admin:filterRule/mail:filterActions/mail:actionAddheader" attr="headerName" match="X-Sieve-Header1" />
	    	<t:select path="//admin:GetFilterRulesResponse/admin:filterRules/admin:filterRule/mail:filterActions/mail:actionAddheader" attr="headerValue" match="Value1" />
	   	</t:response>
	  </t:test>

	    <t:test >
	 		<t:request>
	    		<SendMsgRequest xmlns="urn:zimbraMail">
	      			<m>
						<e t="t" a='${account4.name}'/>
						<su>${mail_subject}</su>
						<mp ct="text/plain">
		    				<content>Good Morning</content>
						</mp>
	    			 </m>
	    		</SendMsgRequest>
	  		</t:request>
	  		<t:response>
	        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
	   		</t:response>
		</t:test>
		
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
	          	<account by="name">${account4.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
			</t:request>
			<t:response>		   
				 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
		
	     <t:test>
				<t:request>
					<SearchRequest xmlns="urn:zimbraMail" types="message">					
						<query>subject:${mail_subject}</query>
					</SearchRequest>
				</t:request>
		        <t:response>			
					<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
					<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
				</t:response>
	    </t:test>
	
		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-Sieve-Header1" match="Value1"/>
			</t:restServletResponse>
		</t:resttest>				    
</t:test_case>

<t:test_case testcaseid="AddHeader_before_missing_hname" type="smoke" bugids="zcs-273">
    <t:objective>Addheader rule for admin after script without HeaderName param</t:objective>
    <t:steps>
    	1. Create before rule for admin for addheader without HeaderName param
    	2. Send an email to user. Script should fail
    	3. Login to user and verify header is not added
	</t:steps>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <ModifyFilterRulesRequest xmlns="urn:zimbraAdmin" type="after">
            <account by="name">${account5.name}</account>
                <filterRules>
					<filterRule name="filter${TIME}${COUNTER}" active="1">                         
                            <filterActions xmlns="urn:zimbraMail">
				            <actionAddheader>
				              <headerValue>Value1</headerValue>
				            </actionAddheader>
				          </filterActions>
                    </filterRule>
                 </filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
	        <t:response>
	            <t:select path="//zimbra:Code" match="service.PARSE_ERROR"/>
	            <t:select path="//soap:Text" match="parse error: Invalid addheader action: Missing headerName or headerValue"/>
	        </t:response>
    </t:test>
    
	  <t:test>
	   	<t:request>
	    	<GetFilterRulesRequest xmlns="urn:zimbraAdmin" type="after">
	    		<account by="name">${account5.name}</account>
	    	</GetFilterRulesRequest>
	   	</t:request>
	   	<t:response>
	    	<t:select path="//admin:GetFilterRulesResponse/admin:filterRules/admin:filterRule/mail:filterActions/mail:actionAddheader" attr="headerName" emptyset="1" />
	   	</t:response>
	  </t:test>

	    <t:test >
	 		<t:request>
	    		<SendMsgRequest xmlns="urn:zimbraMail">
	      			<m>
						<e t="t" a='${account5.name}'/>
						<su>${mail_subject}</su>
						<mp ct="text/plain">
		    				<content>Good Morning</content>
						</mp>
	    			 </m>
	    		</SendMsgRequest>
	  		</t:request>
	  		<t:response>
	        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
	   		</t:response>
		</t:test>
		
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
	          	<account by="name">${account5.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
			</t:request>
			<t:response>		   
				 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
		
	     <t:test>
				<t:request>
					<SearchRequest xmlns="urn:zimbraMail" types="message">					
						<query>subject:${mail_subject}</query>
					</SearchRequest>
				</t:request>
		        <t:response>			
					<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
					<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
				</t:response>
	    </t:test>
	
		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-Sieve-Header1" emptyset="1"/>
			</t:restServletResponse>
		</t:resttest>				    
</t:test_case>

<t:test_case testcaseid="AddHeader_before_multiple_error" type="smoke" bugids="zcs-273">
    <t:objective>Addheader rule for admin before script without params missing in multiple rule</t:objective>
    <t:steps>
    	1. Create before rule for admin for addheader without params missing in multiple rule
    	2. Send an email to user. Script should fail
    	3. Login to user and verify header is not added
	</t:steps>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <ModifyFilterRulesRequest xmlns="urn:zimbraAdmin" type="before">
            <account by="name">${account6.name}</account>
                <filterRules>
					<filterRule name="filter${TIME}${COUNTER}" active="1">                         
                            <filterActions xmlns="urn:zimbraMail">
				            <actionAddheader last="false">
				              <headerValue>Value1</headerValue>
				            </actionAddheader>
				            <actionAddheader last="true">
				              <headerName>X-Sieve-Header2</headerName>
				            </actionAddheader>
				            <actionAddheader>
				              <headerName>X-Sieve-Header3</headerName>
				              <headerValue>Value1</headerValue>
				            </actionAddheader>
				            <actionAddheader last="invalid">
				              <headerName>X-Sieve-Header4</headerName>
				              <headerValue>Value1</headerValue>
				            </actionAddheader>				            
				          </filterActions>
                    </filterRule>
                 </filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
	        <t:response>
	            <t:select path="//zimbra:Code" match="service.PARSE_ERROR"/>
	            <t:select path="//soap:Text" match="parse error: Invalid addheader action: Missing headerName or headerValue"/>
	        </t:response>
    </t:test>
    
	  <t:test>
	   	<t:request>
	    	<GetFilterRulesRequest xmlns="urn:zimbraAdmin" type="after">
	    		<account by="name">${account6.name}</account>
	    	</GetFilterRulesRequest>
	   	</t:request>
	   	<t:response>
	    	<t:select path="//admin:GetFilterRulesResponse/admin:filterRules/admin:filterRule/mail:filterActions/mail:actionAddheader" attr="headerName" emptyset="1" />	    	
	    </t:response>	
	  </t:test>

	    <t:test >
	 		<t:request>
	    		<SendMsgRequest xmlns="urn:zimbraMail">
	      			<m>
						<e t="t" a='${account6.name}'/>
						<su>${mail_subject}</su>
						<mp ct="text/plain">
		    				<content>Good Morning</content>
						</mp>
	    			 </m>
	    		</SendMsgRequest>
	  		</t:request>
	  		<t:response>
	        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
	   		</t:response>
		</t:test>
		
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
	          	<account by="name">${account6.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
			</t:request>
			<t:response>		   
				 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
		
	     <t:test>
				<t:request>
					<SearchRequest xmlns="urn:zimbraMail" types="message">					
						<query>subject:${mail_subject}</query>
					</SearchRequest>
				</t:request>
		        <t:response>			
					<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
					<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
				</t:response>
	    </t:test>
	
		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-Sieve-Header1" emptyset="1"/>
				<t:select attr="X-Sieve-Header2" emptyset="1"/>
				<t:select attr="X-Sieve-Header3" emptyset="1"/>
				<t:select attr="X-Sieve-Header4" emptyset="1"/>
			</t:restServletResponse>
		</t:resttest>				    
</t:test_case>

<t:test_case testcaseid="AddHeader_before1_json" type="smoke" bugids="zcs-273">
    <t:objective>Addheader rule for admin before script</t:objective>
    <t:steps>
    	1. Create before rule for admin for addheader with last=true
    	2. Send an email to user
    	3. Login to user and verify header is added with correct value
	</t:steps>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test >
	    <t:requestContext>
	    	<authToken>${authToken}</authToken>
            <format type="js"/>
        </t:requestContext>
        <t:request>        
            <ModifyFilterRulesRequest xmlns="urn:zimbraAdmin" type="before">
            <account by="name">${account7.name}</account>
                <filterRules>
					<filterRule name="filter${TIME}${COUNTER}" active="1">                         
                            <filterActions xmlns="urn:zimbraMail">
				            <actionAddheader last="true">
				              <headerName>X-Sieve-Header1</headerName>
				              <headerValue>Value1</headerValue>
				            </actionAddheader>
				          </filterActions>
                    </filterRule>
                 </filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyFilterRulesResponse"/>
	        </t:response>
    </t:test>
    
	  <t:test>
	    <t:requestContext>
	    	<authToken>${authToken}</authToken>
            <format type="js"/>
        </t:requestContext>   	  
	   	<t:request>
	    	<GetFilterRulesRequest xmlns="urn:zimbraAdmin" type="before">
	    		<account by="name">${account7.name}</account>
	    	</GetFilterRulesRequest>
	   	</t:request>
	   	<t:response>
	    	<t:select path="//admin:GetFilterRulesResponse/admin:filterRules/admin:filterRule/admin:filterActions/admin:actionAddheader/admin:headerName" match="X-Sieve-Header1" />
	    	<t:select path="//admin:GetFilterRulesResponse/admin:filterRules/admin:filterRule/admin:filterActions/admin:actionAddheader/admin:headerValue" match="Value1" />
	    	<t:select path="//admin:GetFilterRulesResponse/admin:filterRules/admin:filterRule/admin:filterActions/admin:actionAddheader" attr="last" match="true" />
	   	</t:response>
	  </t:test>

	    <t:test >
	 		<t:request>
	    		<SendMsgRequest xmlns="urn:zimbraMail">
	      			<m>
						<e t="t" a='${account7.name}'/>
						<su>${mail_subject}</su>
						<mp ct="text/plain">
		    				<content>Good Morning</content>
						</mp>
	    			 </m>
	    		</SendMsgRequest>
	  		</t:request>
	  		<t:response>
	        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
	   		</t:response>
		</t:test>
		
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
	          	<account by="name">${account7.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
			</t:request>
			<t:response>		   
				 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
		
	     <t:test>
				<t:request>
					<SearchRequest xmlns="urn:zimbraMail" types="message">					
						<query>subject:${mail_subject}</query>
					</SearchRequest>
				</t:request>
		        <t:response>			
					<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
					<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
				</t:response>
	    </t:test>
	
		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-Sieve-Header1" match="Value1"/>
			</t:restServletResponse>
		</t:resttest>				    
</t:test_case>

    <t:finally type="always">
        <t:objective>reset cosconfig to default </t:objective>
        
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveEditHeaderEnabled">FALSE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>
		
    </t:finally>
</t:tests>