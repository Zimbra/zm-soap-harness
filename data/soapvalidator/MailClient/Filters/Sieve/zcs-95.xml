<t:tests xmlns:t="urn:zimbraTestHarness">
    <!-- Test accounts declaration -->
    <t:property name="account1.name" value="temp1.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="account2.name" value="temp2.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="account3.name" value="temp3.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="account4.name" value="temp4.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="msg.subject" value="test subject" />
    <t:property name="dollar" value="$" />
    <t:property name="v_var1" value="$\{_abc}" />
    <t:property name="v_var2" value="$\{_a_b_c_}" />
    <t:property name="v_var3" value="$\{_956}" />
    <t:property name="v_var4" value="$\{_9aBc}" />
    <t:property name="v_var5" value="$\{____}" />
    <t:property name="v_var6" value="$\{abc_1def}" />

    <t:property name="tag_match" value="1,2,3,4,5,6" />

    <t:property name="v_nvar1" value="$\{9abc}" />
    <t:property name="v_nvar2" value="$\{a.b}" />

    <t:property name="sieve_rule1"
        value='
require ["variables", "tag"];
set "_abc" "1"; set "_A_B_c_" "2";
set "_956" "3"; set "_9abc" "4";
set "____" "5"; set "abc_1def" "6";
if header :contains "To" "${defaultdomain.name}" {
    tag "${v_var1}";
    tag "${v_var2}";
    tag "${v_var3}";
    tag "${v_var4}";
    tag "${v_var5}";
    tag "${v_var6}";
}
    ' />

    <t:property name="sieve_rule2"
        value='
require ["variables", "tag"];
set "9abc" "1";
if header :contains "To" "${defaultdomain.name}" {
    tag "${v_nvar1}";
}
    ' />

    <t:property name="sieve_rule3"
        value='
require ["variables", "tag"];
set "a.b" "1";
if header :contains "To" "${defaultdomain.name}" {
    tag "${v_nvar2}";
}
    ' />

    <t:test_case testcaseid="Ping" type="always">
        <t:objective>basic system check</t:objective>
        <t:test required="true">
            <t:request>
                <PingRequest xmlns="urn:zimbraAdmin" />
            </t:request>
            <t:response>
                <t:select path="//admin:PingResponse" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="CreateAccounts" type="smoke">
        <t:objective>create accounts</t:objective>
        <t:steps>
            1. Auth with admin
            2. create accounts on new domain
        </t:steps>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${account1.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account"
                    attr="id" set="account1.id" />
                <t:select
                    path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
                    set="account1.server" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${account2.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account"
                    attr="id" set="account2.id" />
                <t:select
                    path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
                    set="account2.server" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${account3.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account"
                    attr="id" set="account3.id" />
                <t:select
                    path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
                    set="account3.server" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${account4.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account"
                    attr="id" set="account4.id" />
                <t:select
                    path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
                    set="account4.server" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="ZCS-95_rule1" type="smoke" bugids="ZCS-95">
        <t:objective>test various combinations of variable names</t:objective>
        <t:steps>
            1. Auth with admin
            2. set sieve rule in account1
            3. auth with account2
            4.send mail from account2 to account1
            5. auth with account1
            6. find mail and
            verify tag
        </t:steps>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>
        
        <t:test id="modifyaccountrequest1">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account1.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule1}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${account2.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />

            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a='${account1.name}' />
                        <su>${msg.subject}</su>
                        <mp ct="text/plain">
                            <content>Testing variable names</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${account1.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />

            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message" fetch="1">
                    <query>in:Inbox</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="${tag_match}" />
            </t:response>
        </t:test>

    </t:test_case>

    <t:test_case testcaseid="ZCS-95_rule2" type="smoke" bugids="ZCS-95">
        <t:objective>test invalid variable name 9abc</t:objective>
        <t:steps>
            1. Auth with admin
            2. set sieve rule in account3
            3. auth with account2
            4. send mail from account2 to account3
            5. find mail and verify tag is not present
        </t:steps>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>
        <t:test id="modifyaccountrequest1">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account3.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule2}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${account2.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a='${account3.name}' />
                        <su>${msg.subject}</su>
                        <mp ct="text/plain">
                            <content>Testing invalid variable name</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${account3.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message" fetch="1">
                    <query>in:Inbox</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" emptyset="1" />
            </t:response>
        </t:test>

    </t:test_case>

    <t:test_case testcaseid="ZCS-95_rule3" type="smoke" bugids="ZCS-95">
        <t:objective>test invalid variable name a.b</t:objective>
        <t:steps>
            1. Auth with admin
            2. set sieve rule in account4
            3. auth with account2
            4. send mail from account2 to account4
            5. find mail and verify tag is not present
        </t:steps>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>
        <t:test id="modifyaccountrequest1">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account4.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule3}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${account2.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a='${account4.name}' />
                        <su>${msg.subject}</su>
                        <mp ct="text/plain">
                            <content>Testing another invalid variable name</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${account4.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message" fetch="1">
                    <query>in:Inbox</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" emptyset="1" />
            </t:response>
        </t:test>

    </t:test_case>
      
</t:tests>