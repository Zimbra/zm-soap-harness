<t:tests xmlns:t="urn:zimbraTestHarness">
    <!-- Test accounts declaration -->
    <t:property name="test_account.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="notify_account1.name" value="notify1.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="notify_account2.name" value="notify2.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="notify_account3.name" value="notify3.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="notify_account4.name" value="notify4.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="notify_account5.name" value="notify5.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="notify_account6.name" value="notify6.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="notify_account7.name" value="notify7.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="notify_account8.name" value="notify8.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="notify_account9.name" value="notify9.${TIME}.${COUNTER}@${defaultdomain.name}" />

    <!-- Variables declaration -->
    <t:property name="mail_subject" value="mail_subject.${COUNTER}"></t:property>
    <t:property name="mail_content" value="Hi,\\rYou have got a mail!\\r."></t:property>
    <t:property name="dollar" value="$"></t:property>
    <t:property name="notifybody" value="Notification body"></t:property>

    <!-- Sieve rules declaration -->

    <t:property name="sieve_rule1" value='require ["enotify", "variables"];
     set :quotewildcard "var_one" "\\"user\\\\test\\"@domain.com";
     set :quotewildcard "var_two" "sample\\\\message";
     notify :from "${dollar}{var_one}" :message "${dollar}{var_two}" "mailto:${notify_account1.name}?body=${notifybody}";'>
    </t:property>

    <t:property name="sieve_rule2" value='require ["enotify", "variables"];
     set :quotewildcard "var_one" "\\"user\\\\te\\\\st\\"@domain.com";
     set :quotewildcard "var_two" "sample\\\\message";
     notify :from "${dollar}{var_one}" :message "${dollar}{var_two}" "mailto:${notify_account2.name}?body=${notifybody}";'>
    </t:property>

    <t:property name="sieve_rule3" value='require ["enotify", "variables"];
     set :quotewildcard "var_one" "\\"\\\\usertest\\"@domain.com";
     set :quotewildcard "var_two" "sample\\\\message";
     notify :from "${dollar}{var_one}" :message "${dollar}{var_two}" "mailto:${notify_account3.name}?body=${notifybody}";'>
    </t:property>

    <t:property name="sieve_rule4" value='require ["enotify", "variables"];
     set :quotewildcard "var_one" "\\"usertest\\\\\\"@domain.com";
     set :quotewildcard "var_two" "sample\\\\message";
     notify :from "${dollar}{var_one}" :message "${dollar}{var_two}" "mailto:${notify_account4.name}?body=${notifybody}";'>
    </t:property>

    <t:property name="sieve_rule5" value='require ["enotify", "variables"];
     set :quotewildcard "var_one" "\\"user\\\\\\"test\\"@domain.com";
     set :quotewildcard "var_two" "sample\\\\message";
     notify :from "${dollar}{var_one}" :message "${dollar}{var_two}" "mailto:${notify_account5.name}?body=${notifybody}";'>
    </t:property>

    <t:property name="sieve_rule6" value='require ["enotify", "variables"];
     set :quotewildcard "var_one" "\\"u\\\\s\\\\e\\\\r\\\\t\\\\e\\\\s\\\\t\\"@domain.com";
     set :quotewildcard "var_two" "sample\\\\message";
     notify :from "${dollar}{var_one}" :message "${dollar}{var_two}" "mailto:${notify_account6.name}?body=${notifybody}";'>
    </t:property>

    <t:property name="sieve_rule7" value='require ["enotify", "variables"];
     set "var_one" "\\"user\\\\test\\"@domain.com";
     set "var_two" "sample\\\\message";
     notify :from "${dollar}{var_one}" :message "${dollar}{var_two}" "mailto:${notify_account7.name}?body=${notifybody}";'>
    </t:property>

    <t:property name="sieve_rule8" value='require ["enotify", "variables"];
     set "var_one" "\\"user\\\\te\\\\st\\"@domain.com";
     set "var_two" "sample\\\\message";
     notify :from "${dollar}{var_one}" :message "${dollar}{var_two}" "mailto:${notify_account8.name}?body=${notifybody}";'>
    </t:property>

    <t:property name="sieve_rule9" value='require ["enotify", "variables"];
     set "var_one" "\\"user\\\\test\\"@domain.com";
     set :quotewildcard "var_two" "sample\\\\message";
     notify :from "${dollar}{var_one}" :message "${dollar}{var_two}" "mailto:${notify_account9.name}?body=${notifybody}";'>
    </t:property>

    <t:test_case testcaseid="zcs-870_Ping" type="always">
        <t:objective>basic system check</t:objective>
        <t:test required="true">
            <t:request>
                <PingRequest xmlns="urn:zimbraAdmin" />
            </t:request>
            <t:response>
                <t:select path="//admin:PingResponse" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="zcs-870_AcctSetup1_create_account" type="always">
        <t:objective>create test accounts</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

	    <t:test>
	        <t:request xmlns="urn:zimbraAdmin">
	            <GetCosRequest>
	                <cos by="name">default</cos>
	            </GetCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="name" match="default"/>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="id" set="cosid"/>
	        </t:response>
	    </t:test>
	
	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveNotifyActionRFCCompliant">TRUE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>
	    
        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraMailSieveScript">${sieve_rule1}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${notify_account1.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${notify_account2.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test> 

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${notify_account3.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test> 

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${notify_account4.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${notify_account5.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${notify_account6.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${notify_account7.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${notify_account8.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${notify_account9.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="zcs-870_tc1" type="smoke" bugids="zcs-870">
        <t:objective>Verify "user\\test"@domain.com in Return Path header of notification message
        Steps: 1. modify account to add sieve script
               2. send mail to the user from admin
               3. verify the Return Path in notification sent to the other user.
        </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account.name}" />
                        <su>${mail_subject}</su>
                        <mp ct="text/plain">
                            <content>${mail_content}</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="Sent_message1.id"></t:select>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${notify_account1.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:Inbox</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="fr" match="${notifybody}" />
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg1.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <t:select attr="From" match='&lt;"user\\\\test"@domain.com&gt;' />
                <t:select attr="Return-Path" match='"user\\\\test"@domain.com' />
            </t:restServletResponse>
        </t:resttest>

    </t:test_case>

    <t:test_case testcaseid="zcs-870_tc2" type="smoke" bugids="zcs-870">
        <t:objective>Verify "user\\te\\st"@domain.com in Return Path header of notification message
        Steps: 1. modify account to add sieve script
               2. send mail to the user from admin
               3. verify the Return Path in notification sent to the other user.
        </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test id="modifyaccountrequest">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account1.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule2}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" attr="name" match="${test_account.name}" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account.name}" />
                        <su>${mail_subject}</su>
                        <mp ct="text/plain">
                            <content>${mail_content}</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="Sent_message1.id"></t:select>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${notify_account2.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:Inbox</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="fr" match="${notifybody}" />
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg1.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <t:select attr="From" match='&lt;"user\\\\te\\\\st"@domain.com&gt;' />
                <t:select attr="Return-Path" match='"user\\\\te\\\\st"@domain.com' />
            </t:restServletResponse>
        </t:resttest>

    </t:test_case>

    <t:test_case testcaseid="zcs-870_tc3" type="smoke" bugids="zcs-870">
        <t:objective>Verify "\\usertest"@domain.com in Return Path header of notification message
        Steps: 1. modify account to add sieve script
               2. send mail to the user from admin
               3. verify the Return Path in notification sent to the other user.
        </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test id="modifyaccountrequest">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account1.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule3}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" attr="name" match="${test_account.name}" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account.name}" />
                        <su>${mail_subject}</su>
                        <mp ct="text/plain">
                            <content>${mail_content}</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="Sent_message1.id"></t:select>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${notify_account3.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:Inbox</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="fr" match="${notifybody}" />
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg1.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <t:select attr="From" match='&lt;"\\\\usertest"@domain.com&gt;' />
                <t:select attr="Return-Path" match='"\\\\usertest"@domain.com' />
            </t:restServletResponse>
        </t:resttest>

    </t:test_case>

    <t:test_case testcaseid="zcs-870_tc4" type="smoke" bugids="zcs-870">
        <t:objective>Verify "usertest\\"@domain.com is invalid, so no return path
        Steps: 1. modify account to add sieve script
               2. send mail to the user from admin
               3. verify the Return Path in notification sent to the other user.
        </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test id="modifyaccountrequest">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account1.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule4}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" attr="name" match="${test_account.name}" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account.name}" />
                        <su>${mail_subject}</su>
                        <mp ct="text/plain">
                            <content>${mail_content}</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="Sent_message1.id"></t:select>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${notify_account4.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:Inbox</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="fr" match="${notifybody}" />
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg1.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <t:select attr="Return-Path" match='usertest\\\\@domain.com' emptyset="1"/>
            </t:restServletResponse>
        </t:resttest>

    </t:test_case>

    <t:test_case testcaseid="zcs-870_tc5" type="smoke" bugids="zcs-870">
        <t:objective>Verify "user\\"test"@domain.com is invalid, so no return path
        Steps: 1. modify account to add sieve script
               2. send mail to the user from admin
               3. verify the Return Path in notification sent to the other user.
        </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test id="modifyaccountrequest">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account1.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule5}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" attr="name" match="${test_account.name}" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account.name}" />
                        <su>${mail_subject}</su>
                        <mp ct="text/plain">
                            <content>${mail_content}</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="Sent_message1.id"></t:select>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${notify_account5.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:Inbox</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="fr" match="${notifybody}" />
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg1.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <t:select attr="Return-Path" match='user\\\\"test@domain.com' emptyset="1"/>
            </t:restServletResponse>
        </t:resttest>

    </t:test_case>

    <t:test_case testcaseid="zcs-870_tc6" type="smoke" bugids="zcs-870">
        <t:objective>Verify "u\\s\\e\\r\\t\\e\\s\\t"@domain.com in Return Path header of notification message
        Steps: 1. modify account to add sieve script
               2. send mail to the user from admin
               3. verify the Return Path in notification sent to the other user.
        </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test id="modifyaccountrequest">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account1.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule6}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" attr="name" match="${test_account.name}" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account.name}" />
                        <su>${mail_subject}</su>
                        <mp ct="text/plain">
                            <content>${mail_content}</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="Sent_message1.id"></t:select>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${notify_account6.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:Inbox</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="fr" match="${notifybody}" />
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg1.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <t:select attr="From" match='&lt;"u\\\\s\\\\e\\\\r\\\\t\\\\e\\\\s\\\\t"@domain.com&gt;' />
                <t:select attr="Return-Path" match='"u\\\\s\\\\e\\\\r\\\\t\\\\e\\\\s\\\\t"@domain.com' />
            </t:restServletResponse>
        </t:resttest>

    </t:test_case>

    <t:test_case testcaseid="zcs-870_tc7" type="smoke" bugids="zcs-870">
        <t:objective>Verify return path when :quotewildcard is not used.
        Steps: 1. modify account to add sieve script
               2. send mail to the user from admin
               3. verify the Return Path in notification sent to the other user.
        </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test id="modifyaccountrequest">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account1.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule7}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" attr="name" match="${test_account.name}" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account.name}" />
                        <su>${mail_subject}</su>
                        <mp ct="text/plain">
                            <content>${mail_content}</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="Sent_message1.id"></t:select>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${notify_account7.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:Inbox</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="fr" match="${notifybody}" />
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg1.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <t:select attr="From" match='&lt;usertest@domain.com&gt;' />
                <t:select attr="Return-Path" match='usertest@domain.com' />
                <t:select attr="Subject" match='sample\\message' />
            </t:restServletResponse>
        </t:resttest>

    </t:test_case>

    <t:test_case testcaseid="zcs-870_tc8" type="smoke" bugids="zcs-870">
        <t:objective>Verify usertest@domain.com in Return Path header of notification message.
        Steps: 1. modify account to add sieve script
               2. send mail to the user from admin
               3. verify the Return Path in notification sent to the other user.
        </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test id="modifyaccountrequest">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account1.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule8}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" attr="name" match="${test_account.name}" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account.name}" />
                        <su>${mail_subject}</su>
                        <mp ct="text/plain">
                            <content>${mail_content}</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="Sent_message1.id"></t:select>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${notify_account8.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:Inbox</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="fr" match="${notifybody}" />
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg1.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <t:select attr="From" match='&lt;usertest@domain.com&gt;' />
                <t:select attr="Return-Path" match='usertest@domain.com' />
            </t:restServletResponse>
        </t:resttest>

    </t:test_case>

    <t:test_case testcaseid="zcs-870_tc9" type="smoke" bugids="zcs-870">
        <t:objective>Verify usertest@domain.com in Return Path and "sample\\message" in Subject header of notification message.
        Steps: 1. modify account to add sieve script
               2. send mail to the user from admin
               3. verify the Return Path in notification sent to the other user.
        </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test id="modifyaccountrequest">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account1.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule9}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" attr="name" match="${test_account.name}" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account.name}" />
                        <su>${mail_subject}</su>
                        <mp ct="text/plain">
                            <content>${mail_content}</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="Sent_message1.id"></t:select>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${notify_account9.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:Inbox</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="fr" match="${notifybody}" />
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg1.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <t:select attr="From" match='&lt;usertest@domain.com&gt;' />
                <t:select attr="Return-Path" match='usertest@domain.com' />
                <t:select attr="Subject" match='sample\\\\message' />
            </t:restServletResponse>
        </t:resttest>

    </t:test_case>

  <t:finally>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
        </t:response>
    </t:test>

	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveNotifyActionRFCCompliant">FALSE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>        

</t:finally>
</t:tests>