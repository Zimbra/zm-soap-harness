<t:tests xmlns:t="urn:zimbraTestHarness">
    <!-- Test accounts declaration -->
    <t:property name="account1.name" value="temp1@${defaultdomain.name}" />
    <t:property name="account2.name" value="temp2@${defaultdomain.name}" />
    <t:property name="account3.name" value="temp3@${defaultdomain.name}" />
    <t:property name="account4.name" value="temp4@${defaultdomain.name}" />
    <t:property name="msg.subject" value="test subject" />
    <t:property name="dollar.one" value="$\{1}" />
    <t:property name="dollar.two" value="$\{2}" />
    <t:property name="dollar.three" value="$\{3}" />

    <t:property name="sieve_rule1" value='
require ["variables"];
if header :matches "To" "tem?1@${defaultdomain.name}" {
    tag "${dollar.one}";
}
    ' />
    <t:property name="sieve_rule2" value='
require ["variables"];
if header :matches "To" "te??3@${defaultdomain.name}" {
    tag "${dollar.one}";
    tag "${dollar.two}";
}
    ' />
    <t:property name="sieve_rule3" value='
require ["variables"];
if header :matches "To" "?e??4@${defaultdomain.name}" {
    tag "${dollar.one}";
    tag "${dollar.two}";
    tag "${dollar.three}";
}
    ' />

    <t:test_case testcaseid="Ping" type="always">
        <t:objective>basic system check</t:objective>
        <t:test required="true">
            <t:request>
                <PingRequest xmlns="urn:zimbraAdmin" />
            </t:request>
            <t:response>
                <t:select path="//admin:PingResponse" />
            </t:response>
        </t:test>
    </t:test_case>

    
    <t:test_case testcaseid="AcctSetup1_create_account" type="always">
        <t:objective>create test accounts</t:objective>
        
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	                
        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${account1.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account"
                    attr="id" set="account1.id" />
                <t:select
                    path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
                    set="account1.server" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${account2.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account"
                    attr="id" set="account2.id" />
                <t:select
                    path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
                    set="account2.server" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${account3.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account"
                    attr="id" set="account3.id" />
                <t:select
                    path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
                    set="account3.server" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${account4.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account"
                    attr="id" set="account4.id" />
                <t:select
                    path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
                    set="account4.server" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="ZCS-841_rule1" type="smoke" bugids="ZCS-841">
        <t:objective>verify ? replaced in $\{n}</t:objective>
        <t:steps>
            1. Auth with admin
            2. set sieve rule in account1
            3. auth with account2
            4. send mail from account2 to account1
            5. auth with account1
            6. find and verify email
        </t:steps>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken"
                    set="authToken" />
            </t:response>
        </t:test>
        <t:test id="modifyaccountrequest1">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account1.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule1}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" />
            </t:response>
        </t:test>

  <t:test required="true">
   <t:request>
    <AuthRequest xmlns="urn:zimbraAccount">
     <account by="name">${account2.name}</account>
     <password>${defaultpassword.value}</password>
    </AuthRequest>
   </t:request>
   <t:response>
    <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
    <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />

   </t:response>
  </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a='${account1.name}' />
                        <su>${msg.subject}</su>
                        <mp ct="text/plain">
                            <content>Good Morning</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m"
                    attr="id" set="msg1.id" />
            </t:response>
        </t:test>
        <t:delay msec="5000"/>

  <t:test required="true">
   <t:request>
    <AuthRequest xmlns="urn:zimbraAccount">
     <account by="name">${account1.name}</account>
     <password>${defaultpassword.value}</password>
    </AuthRequest>
   </t:request>
   <t:response>
    <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
    <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />

   </t:response>
  </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail"
                    types="message" fetch="1">
                    <query>in:Inbox</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m"
                    attr="id" set="msg1.id" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn"
                    match="p" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <GetMsgRequest xmlns="urn:zimbraMail" types="message" fetch="1">
                    <m id="${msg1.id}">
                    </m>
                </GetMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:GetMsgResponse/mail:m" attr="id" equals="${msg1.id}" />
                <t:select path="//mail:GetMsgResponse/mail:m" attr="tn" equals="p" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="ZCS-841_rule2" type="smoke"
        bugids="ZCS-841">
        <t:objective>verify ? replaced in $\{n}</t:objective>
        <t:steps>
            1. Auth with admin
            2. set sieve rule in account3
            3. auth with account2
            4. send mail from account2 to account3
            5. auth with account3
            6. find and verify email
        </t:steps>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken"
                    set="authToken" />
            </t:response>
        </t:test>
        <t:test id="modifyaccountrequest2">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account3.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule2}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" />
            </t:response>
        </t:test>

  <t:test required="true">
   <t:request>
    <AuthRequest xmlns="urn:zimbraAccount">
     <account by="name">${account2.name}</account>
     <password>${defaultpassword.value}</password>
    </AuthRequest>
   </t:request>
   <t:response>
    <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
    <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />

   </t:response>
  </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a='${account3.name}' />
                        <su>${msg.subject}</su>
                        <mp ct="text/plain">
                            <content>Good Morning</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m"
                    attr="id" set="msg1.id" />
            </t:response>
        </t:test>
        <t:delay msec="5000"/>

  <t:test required="true">
   <t:request>
    <AuthRequest xmlns="urn:zimbraAccount">
     <account by="name">${account3.name}</account>
     <password>${defaultpassword.value}</password>
    </AuthRequest>
   </t:request>
   <t:response>
    <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
    <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />

   </t:response>
  </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail"
                    types="message" fetch="1">
                    <query>in:Inbox</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m"
                    attr="id" set="msg1.id" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn"
                    match="m,p" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <GetMsgRequest xmlns="urn:zimbraMail" types="message" fetch="1">
                    <m id="${msg1.id}">
                    </m>
                </GetMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:GetMsgResponse/mail:m" attr="id" equals="${msg1.id}" />
                <t:select path="//mail:GetMsgResponse/mail:m" attr="tn" equals="m,p" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="ZCS-841_rule3" type="smoke"
        bugids="ZCS-841">
        <t:objective>verify ? replaced in $\{n}</t:objective>
        <t:steps>
            1. Auth with admin
            2. set sieve rule in account4
            3. auth with account2
            4. send mail from account2 to account4
            5. auth with account4
            6. find and verify email
        </t:steps>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken"
                    set="authToken" />
            </t:response>
        </t:test>
        <t:test id="modifyaccountrequest2">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account4.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule3}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" />
            </t:response>
        </t:test>

  <t:test required="true">
   <t:request>
    <AuthRequest xmlns="urn:zimbraAccount">
     <account by="name">${account2.name}</account>
     <password>${defaultpassword.value}</password>
    </AuthRequest>
   </t:request>
   <t:response>
    <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
    <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />

   </t:response>
  </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a='${account4.name}' />
                        <su>${msg.subject}</su>
                        <mp ct="text/plain">
                            <content>Good Morning</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m"
                    attr="id" set="msg1.id" />
            </t:response>
        </t:test>
        <t:delay msec="5000"/>

  <t:test required="true">
   <t:request>
    <AuthRequest xmlns="urn:zimbraAccount">
     <account by="name">${account4.name}</account>
     <password>${defaultpassword.value}</password>
    </AuthRequest>
   </t:request>
   <t:response>
    <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
    <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />

   </t:response>
  </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail"
                    types="message" fetch="1">
                    <query>in:Inbox</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m"
                    attr="id" set="msg1.id" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn"
                    match="t,m,p" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <GetMsgRequest xmlns="urn:zimbraMail" types="message" fetch="1">
                    <m id="${msg1.id}">
                    </m>
                </GetMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:GetMsgResponse/mail:m" attr="id" equals="${msg1.id}" />
                <t:select path="//mail:GetMsgResponse/mail:m" attr="tn" equals="t,m,p" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:finally>
        <t:objective>delete accounts</t:objective>
        <t:steps>
            1. Auth with admin
            2. delete accounts
        </t:steps>

        <t:test id="admin_login" required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken"
                    set="authToken" />
            </t:response>
        </t:test>

        <t:test required="false">
            <t:request>
                <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account1.id}</id>
                </DeleteAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:DeleteAccountResponse" />
            </t:response>
        </t:test>

        <t:test required="false">
            <t:request>
                <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account2.id}</id>
                </DeleteAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:DeleteAccountResponse" />
            </t:response>
        </t:test>

        <t:test required="false">
            <t:request>
                <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account3.id}</id>
                </DeleteAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:DeleteAccountResponse" />
            </t:response>
        </t:test>

        <t:test required="false">
            <t:request>
                <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account4.id}</id>
                </DeleteAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:DeleteAccountResponse" />
            </t:response>
        </t:test>
              
    </t:finally>
</t:tests>