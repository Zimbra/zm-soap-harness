<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account3.name" value="test3.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account4.name" value="test4.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account5.name" value="test5.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account6.name" value="test6.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account7.name" value="test7.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account8.name" value="test8.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account9.name" value="test9.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account10.name" value="test10.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="dl1.member1.name" value="mem1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="dl1.member2.name" value="mem2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.dl1.name" value="dl1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="mail_subject" value="Spam mail" />
<t:property name="mail_subject2" value="Unsolicited ad mail" />
<t:property name="reject_mail_subject" value="Disposition notification" />
<t:property name="reject_mail_content" value="Message matched the reject conditions (policy)" />
<t:property name="ereject_mail_subject" value="Undelivered Mail Returned to Sender" />

<t:property name="server.name" value="testserver${TIME}${COUNTER}"/>
<t:property name="server.spaceinname" value="testserver    ${TIME}${COUNTER}"/>
<t:property name="server.notes" value="test of adding Server via SOAP"/>
<t:property name="server.desc" value="test server description"/>

<t:property name="sieve_rule1" value='require ["fileinto", "reject", "log"];
if header :contains ["Subject"] "Spam mail"
{
  log "black listed, reject.";
  reject "Message matched the reject conditions (policy) of the recipient.";
  stop;
}'/>

<t:property name="sieve_rule2" value='require ["fileinto", "ereject", "log"];
if header :contains ["Subject"] "Spam mail"
{
  log "black listed, reject.";
  ereject "Message matched the reject conditions (policy) of the recipient.";
  stop;
}'/>

<t:property name="sieve_rule3" value='require ["fileinto", "reject", "log"];
if anyof (
  header :contains ["Subject"] "Unsolicited ad mail",
  header :contains ["From"] "${test_account4.name}"
)
{
  log "black listed, reject.";
  reject "Message matched the reject conditions (policy) of the recipient.";
  stop;
}'/>

<t:property name="sieve_rule4" value='require ["fileinto", "ereject", "log"];
if anyof (
  header :contains ["Subject"] "Unsolicited ad mail",
  header :contains ["From"] "${test_account3.name}"
)
{
  log "black listed, reject.";
  ereject "Message matched the reject conditions (policy) of the recipient.";
  stop;
}'/>

<t:property name="test_acct.server" value="NOT_DEFINED"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}" />

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>
    
	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin" />
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse" />
		</t:response>
	</t:test>
    
</t:test_case>


<t:test_case testcaseid="acctSetup1" type="always">
    <t:objective>create test account</t:objective>
    
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>

	    <t:test>
	        <t:request xmlns="urn:zimbraAdmin">
	            <GetCosRequest>
	                <cos by="name">default</cos>
	            </GetCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="name" match="default"/>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="id" set="cosid"/>
	        </t:response>
	    </t:test>
	                        
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account1.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account2.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>   

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account2.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>  

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account2.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test> 

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account5.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account5.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct5.server"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account6.name}</name>
                <password>${defaultpassword.value}</password>
                <a n = "zimbraPrefLocale">ja</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account6.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct6.server"/>
        </t:response>
    </t:test>    

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account7.name}</name>
                <password>${defaultpassword.value}</password>
                <a n = "zimbraPrefLocale">ja</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account7.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct7.server"/>
        </t:response>
    </t:test> 

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account8.name}</name>
                <password>${defaultpassword.value}</password>                
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account8.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct8.server"/>
        </t:response>
    </t:test> 

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account9.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account9.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct9.server"/>
        </t:response>
    </t:test> 
            
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${dl1.member1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="dl_member1.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="dl_member1.server"/>
        </t:response>
    </t:test>     

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${dl1.member2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="dl_member2.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="dl_member2.server"/>
        </t:response>
    </t:test>
        
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account1.id}</id>
                <a n = "zimbraMailSieveScript">${sieve_rule1}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
              
</t:test_case>

    
<t:test_case testcaseid="bug28832_reject1" type="smoke" bugids="28832">
   <t:objective>Mail filter misses the 'reject' action</t:objective>
    <steps> 
        1. Add sieve rule for the user
		2. Send email to that user. Verify mail is rejected with expected subject and contents.
    </steps>	

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account2.name}</account>
			<password>test123</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account1.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
   		</t:response>
	</t:test>

     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${reject_mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${reject_mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m/mail:fr" contains="${reject_mail_content}"/>
			</t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${msg1.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path='//mail:GetMsgResponse/mail:m/mail:e[@t="t"]' attr="a" match="${test_account1.name}"/>
        </t:response>
    </t:test>     
</t:test_case>   

<t:test_case testcaseid="bug28832_ereject1" type="smoke" bugids="28832">
   <t:objective>Mail filter misses the 'reject' action</t:objective>
    <steps> 
        1. Add sieve rule for the user
		2. Send email to that user. Verify mail is rejected with expected subject and contents.
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account1.id}</id>
                <a n = "zimbraMailSieveScript">${sieve_rule2}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
	<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account2.name}</account>
			<password>test123</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account1.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>

     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${ereject_mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${ereject_mail_subject}"/>
			</t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="bug28832_reject2" type="smoke" bugids="28832">
   <t:objective>Mail filter misses the 'reject' action</t:objective>
    <steps> 
        1. Add sieve rule for the user
		2. Send email to that user. Verify mail is rejected with expected subject and contents.
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account1.id}</id>
                <a n = "zimbraMailSieveScript">${sieve_rule3}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
	<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account4.name}</account>
			<password>test123</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account1.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg2.id"/>
   		</t:response>
	</t:test>

     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${reject_mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${reject_mail_subject}"/>
			</t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${msg2.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path='//mail:GetMsgResponse/mail:m/mail:e[@t="t"]' attr="a" match="${test_account1.name}"/>
        </t:response>
    </t:test>     
</t:test_case>  

 
<t:test_case testcaseid="bug28832_ereject2" type="smoke" bugids="28832">
   <t:objective>Mail filter misses the 'reject' action</t:objective>
    <steps> 
        1. Add sieve rule for the user
		2. Send email to that user. Verify mail is rejected with expected subject and contents.
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account1.id}</id>
                <a n = "zimbraMailSieveScript">${sieve_rule4}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
	<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account3.name}</account>
			<password>test123</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account1.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>

     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${ereject_mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${ereject_mail_subject}"/>
			</t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="bug28832_reject3" type="smoke" bugids="28832">
   <t:objective>Mail filter misses the 'reject' action</t:objective>
    <steps> 
        1. Add sieve rule for the user
		2. Send email to that user. Verify mail is rejected with expected subject and contents.
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account1.id}</id>
                <a n = "zimbraMailSieveScript">${sieve_rule3}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
	<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account4.name}</account>
			<password>test123</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account1.name}'/>
					<su>${mail_subject2}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message1.id"/>
   		</t:response>
	</t:test>
  
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject2}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject2}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg3.id"/>
			</t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${msg3.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path='//mail:GetMsgResponse/mail:m/mail:e[@t="t"]' attr="a" match="${test_account1.name}"/>
        </t:response>
    </t:test>    
</t:test_case>

<t:test_case testcaseid="bug28832_ereject3" type="smoke" bugids="28832">
   <t:objective>Mail filter misses the 'reject' action</t:objective>
    <steps> 
        1. Add sieve rule for the user
		2. Send email to that user. Verify mail is rejected with expected subject and contents.
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account1.id}</id>
                <a n = "zimbraMailSieveScript">${sieve_rule4}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
	<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account4.name}</account>
			<password>test123</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account1.name}'/>
					<su>${mail_subject2}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>

     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${ereject_mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${ereject_mail_subject}"/>
			</t:response>
    </t:test> 
        
</t:test_case>

<t:test_case testcaseid="bug28832_dltest" type="smoke" bugids="28832">
   <t:objective>Mail filter misses the 'reject' action</t:objective>
    <steps> 
        1. Add sieve rule for the user
		2. Create dl. Add users. Enable sieve for one of the user.
		3. Send email to dl. Verify sieve enabled user dont get the email. Others get it.
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account1.id}</id>
                <a n = "zimbraMailSieveScript">${sieve_rule1}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 

    <t:test >
        <t:request >
            <CreateDistributionListRequest xmlns="urn:zimbraAccount" >
                 <name>${account1.dl1.name}</name>
          	</CreateDistributionListRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:CreateDistributionListResponse/acct:dl" attr="id" set="account1.dl1.id" />
        </t:response>
    </t:test> 

   
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl1.id}</dl>
                 <action op="addMembers">
                 	<dlm>${dl1.member1.name}</dlm>
                 	<dlm>${dl1.member2.name}</dlm>
                 	<dlm>${test_account1.name}</dlm>
                 </action>
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 
    	
	<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account3.name}</account>
			<password>test123</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account1.dl1.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>

     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${reject_mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${reject_mail_subject}"/>
			</t:response>
    </t:test> 

	<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${dl1.member1.name}</account>
			<password>test123</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
			</t:response>
    </t:test>	        
</t:test_case> 

<t:test_case testcaseid="bug28832_multiple_usertest" type="smoke" bugids="28832">
   <t:objective>Mail filter misses the 'reject' action</t:objective>
    <steps> 
        1. Add sieve rule for the user
		2. Send email to multiple users.
		3. Verify only email for user with sieve rule is rejected.
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account1.id}</id>
                <a n = "zimbraMailSieveScript">${sieve_rule1}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 

	<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account5.name}</account>
			<password>test123</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account1.name}'/>
					<e t="t" a='${test_account4.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>

     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${reject_mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${reject_mail_subject}"/>
			</t:response>
    </t:test> 

	<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account4.name}</account>
			<password>test123</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
			</t:response>
    </t:test>	        
</t:test_case> 

<t:test_case testcaseid="bug28832_japanese_local" type="smoke" bugids="28832">
   <t:objective>Mail filter misses the 'reject' action</t:objective>
    <steps> 
        1. Add sieve rule for the user and set locale to JP
		2. Send email to the user.
		3. Verify rejected email is according the local of sender and is received correctly.
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account6.id}</id>
                <a n = "zimbraMailSieveScript">${sieve_rule1}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 

	<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account7.name}</account>
			<password>test123</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account6.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>

     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${reject_mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${reject_mail_subject}"/>
			</t:response>
    </t:test> 
	        
</t:test_case>

<t:test_case testcaseid="bug28832_disable_sieve" type="smoke" bugids="28832">
   <t:objective>Mail filter misses the 'reject' action</t:objective>
    <steps> 
        1. Add sieve rule for the user
		2. Disabled sieve reject on cos level
		3. Verify emails are not rejected.
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account8.id}</id>
                <a n = "zimbraMailSieveScript">${sieve_rule1}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
    
	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveRejectMailEnabled">FALSE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>
	            
	<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account9.name}</account>
			<password>test123</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account8.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>

     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}" emptyset="0"/>
			</t:response>
    </t:test> 

	<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account8.name}</account>
			<password>test123</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>in:inbox subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m/mail:fr" match="Good Morning"/>
			</t:response>
    </t:test>		        
</t:test_case>

<t:finally>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveRejectMailEnabled">TRUE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>        
</t:finally>

</t:tests>