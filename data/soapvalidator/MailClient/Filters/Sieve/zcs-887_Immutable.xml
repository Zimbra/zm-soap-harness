<t:tests xmlns:t="urn:zimbraTestHarness">

	<t:property name="test_account1.name"
		value="test1.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account2.name"
		value="test2.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account3.name"
		value="test3.${TIME}.${COUNTER}@${defaultdomain.name}" />

<t:property name="cos1.name" value="mycos1${TIME}${COUNTER}" />        
	<t:property name="mail_subject" value="subject.${TIME}.${COUNTER}" />

<t:property name="account1.reply" value="reply content"/>

	<t:property name="sieve_rule1"
		value='require ["editheader","log"];
  deleteheader "Auto-Submitted";
  log "Sieve rule 1"; 
 ' />
 
 	<t:property name="sieve_rule2"
		value='require ["editheader","log"];
  deleteheader "Auto-Submitted";
  addheader "X-Test-Header" "Val1";
  log "Sieve rule 1"; 
 ' />

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}" />

	<t:test_case testcaseid="Ping" type="always">
		<t:objective>basic system check</t:objective>

		<t:test required="true">
			<t:request>
				<PingRequest xmlns="urn:zimbraAdmin" />
			</t:request>
			<t:response>
				<t:select path="//admin:PingResponse" />
			</t:response>
		</t:test>

	</t:test_case>

	<t:test_case testcaseid="acctSetup1" type="always">
		<t:objective>create test account</t:objective>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		
        <t:test id="CreateCosRequest1">
            <t:request>
                <CreateCosRequest xmlns="urn:zimbraAdmin">
                    <name xmlns="">${cos1.name}</name>
                    <a n="zimbraSieveEditHeaderEnabled">TRUE</a>
                </CreateCosRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateCosResponse/admin:cos" attr="name" match="${cos1.name}" />
                <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos1.id" />
            </t:response>
        </t:test>
	    
		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account1.name}</name>
					<password>${defaultpassword.value}</password>
					<a n="zimbraCOSId">${cos1.id}</a>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account1.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="test_acct1.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account2.name}</name>
					<password>${defaultpassword.value}</password>
					<a n="zimbraCOSId">${cos1.id}</a>
					<a n="zimbraAdminSieveScriptBefore">${sieve_rule1}</a>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account2.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="test_acct2.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${test_account3.name}</name>
					<password>${defaultpassword.value}</password>
					<a n="zimbraCOSId">${cos1.id}</a>
					<a n="zimbraAdminSieveScriptBefore">${sieve_rule2}</a>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="test_account3.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="test_acct3.server" />
			</t:response>
		</t:test>
		
<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <ModifyPrefsRequest xmlns="urn:zimbraAccount">
                <pref name="zimbraPrefOutOfOfficeReplyEnabled">TRUE</pref>
                <pref name="zimbraPrefOutOfOfficeReply">${account1.reply}</pref>
            </ModifyPrefsRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:ModifyPrefsResponse"/>
        </t:response>
    </t:test>	
    	
</t:test_case>

	<t:test_case testcaseid="zcs-887_SieveRule1" type="smoke" bugids="zcs-887">
		<t:objective>Add a sieve rule to delete Auto-Submitted header and verify the mime via rest servlet</t:objective>
	    <t:steps>
		1. Login to Account2.
		2. Send mail from Account2 to Account1.
		3. Verify that the OOO reply is received at Account2 and verify Auto-Submitted header is not deleted
	    </t:steps>			

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a='${test_account1.name}' />
						<su>${mail_subject}</su>
						<mp ct="text/plain">
							<content>Good Morning</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>
		
		   <t:delay sec="30" />

        <t:test>
         <t:request>
           <SearchRequest xmlns="urn:zimbraMail" types="message">
           		<query>subject:(${mail_subject})</query>
           </SearchRequest>
         </t:request>
          <t:response>
                <t:select path="//mail:SearchResponse/mail:m[@l='2']" attr="id" set="message1.inbox"/> 
         </t:response>
        </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message1.inbox}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:GetMsgResponse/mail:m/mail:mp" attr="content" match="(?s)${account1.reply}.*"/>
        </t:response>
    </t:test>
    		   
		<t:resttest>
			<t:restServletRequest>
				<id>${message1.inbox}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="Auto-Submitted" emptyset="0" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case> 

	<t:test_case testcaseid="zcs-887_SieveRule2" type="smoke" bugids="zcs-887">
		<t:objective>Add a sieve rule to delete immutable header and verify the mime via rest servlet</t:objective>
	    <t:steps>
		1. Modify cos and remove Auto-Submitted from immutable header list 
		2. Login to Account3.
		3. Send mail from Account3 to Account1.
		4. Verify that the OOO reply is received at Account3 and verify Auto-Submitted header is deleted and new header is added
	    </t:steps>
	    
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		
	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cos1.id}</id>
	                <a n="zimbraSieveImmutableHeaders">Received,DKIM-Signature,Authentication-Results,Received-SPF,Message-ID,Content-Type,Content-Disposition,Content-Transfer-Encoding,MIME-Version</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>
	    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a='${test_account1.name}' />
						<su>${mail_subject}</su>
						<mp ct="text/plain">
							<content>Good Morning</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>
		
		   <t:delay sec="30" />

        <t:test>
         <t:request>
           <SearchRequest xmlns="urn:zimbraMail" types="message">
           		<query>subject:(${mail_subject})</query>
           </SearchRequest>
         </t:request>
          <t:response>
                <t:select path="//mail:SearchResponse/mail:m[@l='2']" attr="id" set="message1.inbox"/> 
         </t:response>
        </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message1.inbox}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:GetMsgResponse/mail:m/mail:mp" attr="content" match="(?s)${account1.reply}.*"/>
        </t:response>
    </t:test>
    		   
		<t:resttest>
			<t:restServletRequest>
				<id>${message1.inbox}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="Auto-Submitted" emptyset="1" />
				<t:select attr="X-Test-Header" match="Val1" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>  
</t:tests>

