<t:tests xmlns:t="urn:zimbraTestHarness">

    <t:property name="domain1.name" value="mydomain1${TIME}${COUNTER}.com" />
    <t:property name="cos1.name" value="mycos1${TIME}${COUNTER}" />
    <t:property name="account1.name" value="test1@${domain1.name}" />
    <t:property name="domain2.name" value="mydomain2${TIME}${COUNTER}.com" />
    <t:property name="cos2.name" value="mycos2${TIME}${COUNTER}" />
    <t:property name="account2.name" value="test2@${domain2.name}" />
    <t:property name="sieve_rule1" value='require ["tag"];if anyof true { tag "t1"; }' />
    <t:property name="sieve_rule2" value='require ["tag"];if anyof true { tag "t2"; }' />
    <t:property name="sieve_rule3" value='require ["tag"];if anyof true { tag "t3"; }' />
    <t:property name="sieve_rule4" value='require ["tag"];if anyof true { tag "t4"; }' />
    <t:property name="sieve_rule5" value='require ["editheader"];addheader "X-New-Header" "test value";' />
    <t:property name="test.subject" value='subject1' />
    <t:property name="test.subject2" value='subject2' />

    <t:test_case testcaseid="SetupEnviroment" type="always" bugids="ZCS-1291">
        <t:objective>create test account</t:objective>
        <t:steps>
            1. admin auth
            2. create domain
            3. create cos
            4. create test account on new domain and cos
        </t:steps>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test id="CreateDomainRequest1" required="true">
            <t:request>
                <CreateDomainRequest xmlns="urn:zimbraAdmin">
                    <name>${domain1.name}</name>
                </CreateDomainRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateDomainResponse//admin:domain" attr="id" set="domain1.id" />
            </t:response>
        </t:test>

        <t:test id="CreateDomainRequest2" required="true">
            <t:request>
                <CreateDomainRequest xmlns="urn:zimbraAdmin">
                    <name>${domain2.name}</name>
                </CreateDomainRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateDomainResponse//admin:domain" attr="id" set="domain2.id" />
            </t:response>
        </t:test>

        <t:test id="CreateCosRequest1">
            <t:request>
                <CreateCosRequest xmlns="urn:zimbraAdmin">
                    <name xmlns="">${cos1.name}</name>
                </CreateCosRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateCosResponse/admin:cos" attr="name" match="${cos1.name}" />
                <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos1.id" />
            </t:response>
        </t:test>

        <t:test id="CreateCosRequest2">
            <t:request>
                <CreateCosRequest xmlns="urn:zimbraAdmin">
                    <name xmlns="">${cos2.name}</name>
                </CreateCosRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateCosResponse/admin:cos" attr="name" match="${cos2.name}" />
                <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos2.id" />
            </t:response>
        </t:test>

        <t:test id="CreateAccountRequest1" required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${account1.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraCOSId">${cos1.id}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id" />
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server" />
            </t:response>
        </t:test>
        
        <t:test id="CreateAccountRequest2" required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${account2.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraCOSId">${cos2.id}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account2.id" />
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server" />
            </t:response>
        </t:test>
        
    </t:test_case>

    <t:test_case testcaseid="ModifyDomainRequest" type="smoke" bugids="ZCS-1248">
	        <t:objective> Modify sieve attributes of a domain </t:objective>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>
        	
		<t:test>
			<t:request>
				<ModifyCosRequest xmlns="urn:zimbraAdmin">
					<id>${cos1.id}</id>
					<a n="zimbraSieveRejectMailEnabled"></a>
					<a n="zimbraSieveNotifyActionRFCCompliant"></a>
				</ModifyCosRequest>
			</t:request>
		</t:test>
        
        <t:test>
            <t:request>
                <ModifyDomainRequest xmlns="urn:zimbraAdmin">
                    <id>${domain1.id}</id>
                    <a n="zimbraSieveRejectMailEnabled">FALSE</a>
                    <a n="zimbraSieveNotifyActionRFCCompliant">TRUE</a>
                    <a n="zimbraAdminSieveScriptBefore">${sieve_rule1}</a>
                    <a n="zimbraAdminSieveScriptAfter">${sieve_rule2}</a>
                    <a n="zimbraAdminOutgoingSieveScriptBefore">${sieve_rule3}</a>
                    <a n="zimbraAdminOutgoingSieveScriptAfter">${sieve_rule4}</a>
                </ModifyDomainRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyDomainResponse/admin:domain" />
                <t:select path="//admin:ModifyDomainResponse/admin:domain" attr="id" />
                <t:select path="//admin:ModifyDomainResponse/admin:domain/admin:a[@n='zimbraSieveRejectMailEnabled']"
                    match="FALSE" />
                <t:select path="//admin:ModifyDomainResponse/admin:domain/admin:a[@n='zimbraSieveNotifyActionRFCCompliant']"
                    match="TRUE" />
                <t:select path="//admin:ModifyDomainResponse/admin:domain/admin:a[@n='zimbraAdminSieveScriptBefore']"
                    matches="${sieve_rule1}" />
                <t:select path="//admin:ModifyDomainResponse/admin:domain/admin:a[@n='zimbraAdminSieveScriptAfter']"
                    matches="${sieve_rule2}" />
                <t:select path="//admin:ModifyDomainResponse/admin:domain/admin:a[@n='zimbraAdminOutgoingSieveScriptBefore']"
                    matches="${sieve_rule3}" />
                <t:select path="//admin:ModifyDomainResponse/admin:domain/admin:a[@n='zimbraAdminOutgoingSieveScriptAfter']"
                    matches="${sieve_rule4}" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <GetAccountRequest applyCos="1" xmlns="urn:zimbraAdmin">
                    <account by="id">${account1.id}</account>
                </GetAccountRequest>
            </t:request>
            
            <t:response>
                <t:select path="//admin:GetAccountResponse/admin:account" />
                <t:select path="//admin:GetAccountResponse/admin:account" attr="id" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraSieveRejectMailEnabled']"
                    match="FALSE" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraSieveNotifyActionRFCCompliant']"
                    match="TRUE" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminSieveScriptBefore']"
                    matches="${sieve_rule1}" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminSieveScriptAfter']"
                    matches="${sieve_rule2}" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminOutgoingSieveScriptBefore']"
                    matches="${sieve_rule3}" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminOutgoingSieveScriptAfter']"
                    matches="${sieve_rule4}" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <GetAccountRequest applyCos="0" xmlns="urn:zimbraAdmin">
                    <account by="id">${account1.id}</account>
                </GetAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:GetAccountResponse/admin:account" />
                <t:select path="//admin:GetAccountResponse/admin:account" attr="id" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraSieveRejectMailEnabled']"
                    emptyset="1" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraSieveNotifyActionRFCCompliant']"
                    emptyset="1" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminSieveScriptBefore']"
                    emptyset="1" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminSieveScriptAfter']"
                    emptyset="1" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminOutgoingSieveScriptBefore']"
                    emptyset="1" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminOutgoingSieveScriptAfter']"
                    emptyset="1" />
            </t:response>
        </t:test>

    </t:test_case>

    <t:test_case testcaseid="ModifyCosRequest" type="smoke" bugids="ZCS-1248">
        <t:objective> Modify sieve attributes of a Cos </t:objective>
        <t:test>
            <t:request>
                <ModifyCosRequest xmlns="urn:zimbraAdmin">
                    <id>${cos2.id}</id>
                    <a n="zimbraSieveRejectMailEnabled">TRUE</a>
                    <a n="zimbraSieveNotifyActionRFCCompliant">FALSE</a>
                    <a n="zimbraAdminSieveScriptBefore">${sieve_rule4}</a>
                    <a n="zimbraAdminSieveScriptAfter">${sieve_rule3}</a>
                    <a n="zimbraAdminOutgoingSieveScriptBefore">${sieve_rule2}</a>
                    <a n="zimbraAdminOutgoingSieveScriptAfter">${sieve_rule1}</a>
                </ModifyCosRequest>
            </t:request>
            
            <t:response>
                <t:select path="//admin:ModifyCosResponse/admin:cos" />
                <t:select path="//admin:ModifyCosResponse/admin:cos" attr="id" />
                <t:select path="//admin:ModifyCosResponse/admin:cos/admin:a[@n='zimbraSieveRejectMailEnabled']"
                    match="TRUE" />
                <t:select path="//admin:ModifyCosResponse/admin:cos/admin:a[@n='zimbraSieveNotifyActionRFCCompliant']"
                    match="FALSE" />
                <t:select path="//admin:ModifyCosResponse/admin:cos/admin:a[@n='zimbraAdminSieveScriptBefore']"
                    matches="${sieve_rule4}" />
                <t:select path="//admin:ModifyCosResponse/admin:cos/admin:a[@n='zimbraAdminSieveScriptAfter']"
                    matches="${sieve_rule3}" />
                <t:select path="//admin:ModifyCosResponse/admin:cos/admin:a[@n='zimbraAdminOutgoingSieveScriptBefore']"
                    matches="${sieve_rule2}" />
                <t:select path="//admin:ModifyCosResponse/admin:cos/admin:a[@n='zimbraAdminOutgoingSieveScriptAfter']"
                    matches="${sieve_rule1}" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <GetAccountRequest applyCos="1" xmlns="urn:zimbraAdmin">
                    <account by="id">${account2.id}</account>
                </GetAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:GetAccountResponse/admin:account" />
                <t:select path="//admin:GetAccountResponse/admin:account" attr="id" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraSieveRejectMailEnabled']"
                    match="TRUE" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraSieveNotifyActionRFCCompliant']"
                    match="FALSE" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminSieveScriptBefore']"
                    matches="${sieve_rule4}" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminSieveScriptAfter']"
                    matches="${sieve_rule3}" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminOutgoingSieveScriptBefore']"
                    matches="${sieve_rule2}" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminOutgoingSieveScriptAfter']"
                    matches="${sieve_rule1}" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <GetAccountRequest applyCos="0" xmlns="urn:zimbraAdmin">
                    <account by="id">${account2.id}</account>
                </GetAccountRequest>
            </t:request>
            
            <t:response>
                <t:select path="//admin:GetAccountResponse/admin:account" />
                <t:select path="//admin:GetAccountResponse/admin:account" attr="id" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraSieveRejectMailEnabled']"
                    emptyset="1" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraSieveNotifyActionRFCCompliant']"
                    emptyset="1" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminSieveScriptBefore']"
                    emptyset="1" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminSieveScriptAfter']"
                    emptyset="1" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminOutgoingSieveScriptBefore']"
                    emptyset="1" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminOutgoingSieveScriptAfter']"
                    emptyset="1" />
            </t:response>
        </t:test>

    </t:test_case>

    <t:test_case testcaseid="ModifyAccountRequest" type="smoke" bugids="ZCS-1248">
        <t:objective> Modify sieve attributes of an Account </t:objective>
        <t:test>
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account2.id}</id>
                    <a n="zimbraSieveRejectMailEnabled">FALSE</a>
                    <a n="zimbraSieveNotifyActionRFCCompliant">TRUE</a>
                    <a n="zimbraAdminSieveScriptBefore">${sieve_rule1}</a>
                    <a n="zimbraAdminSieveScriptAfter">${sieve_rule2}</a>
                    <a n="zimbraAdminOutgoingSieveScriptBefore">${sieve_rule3}</a>
                    <a n="zimbraAdminOutgoingSieveScriptAfter">${sieve_rule4}</a>
                </ModifyAccountRequest>
            </t:request>
            
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" />
                <t:select path="//admin:ModifyAccountResponse/admin:account" attr="id" />
                <t:select path="//admin:ModifyAccountResponse/admin:account/admin:a[@n='zimbraSieveRejectMailEnabled']"
                    match="FALSE" />
                <t:select
                    path="//admin:ModifyAccountResponse/admin:account/admin:a[@n='zimbraSieveNotifyActionRFCCompliant']"
                    match="TRUE" />
                <t:select path="//admin:ModifyAccountResponse/admin:account/admin:a[@n='zimbraAdminSieveScriptBefore']"
                    matches="${sieve_rule1}" />
                <t:select path="//admin:ModifyAccountResponse/admin:account/admin:a[@n='zimbraAdminSieveScriptAfter']"
                    matches="${sieve_rule2}" />
                <t:select
                    path="//admin:ModifyAccountResponse/admin:account/admin:a[@n='zimbraAdminOutgoingSieveScriptBefore']"
                    matches="${sieve_rule3}" />
                <t:select
                    path="//admin:ModifyAccountResponse/admin:account/admin:a[@n='zimbraAdminOutgoingSieveScriptAfter']"
                    matches="${sieve_rule4}" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <GetAccountRequest applyCos="1" xmlns="urn:zimbraAdmin">
                    <account by="id">${account2.id}</account>
                </GetAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:GetAccountResponse/admin:account" />
                <t:select path="//admin:GetAccountResponse/admin:account" attr="id" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraSieveRejectMailEnabled']"
                    match="FALSE" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraSieveNotifyActionRFCCompliant']"
                    match="TRUE" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminSieveScriptBefore']"
                    matches="${sieve_rule1}" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminSieveScriptAfter']"
                    matches="${sieve_rule2}" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminOutgoingSieveScriptBefore']"
                    matches="${sieve_rule3}" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminOutgoingSieveScriptAfter']"
                    matches="${sieve_rule4}" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <GetAccountRequest applyCos="0" xmlns="urn:zimbraAdmin">
                    <account by="id">${account2.id}</account>
                </GetAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:GetAccountResponse/admin:account" />
                <t:select path="//admin:GetAccountResponse/admin:account" attr="id" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraSieveRejectMailEnabled']"
                    match="FALSE" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraSieveNotifyActionRFCCompliant']"
                    match="TRUE" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminSieveScriptBefore']"
                    matches="${sieve_rule1}" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminSieveScriptAfter']"
                    matches="${sieve_rule2}" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminOutgoingSieveScriptBefore']"
                    matches="${sieve_rule3}" />
                <t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraAdminOutgoingSieveScriptAfter']"
                    matches="${sieve_rule4}" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="EditheaderEnableDisableVerification" type="smoke" bugids="ZCS-1841">
        <t:objective> Verify whether zimbraSieveEditHeaderEnabled works or not </t:objective>
        <t:steps>
            1. auth with admin
            2. set zimbraSieveEditHeaderEnabled to false and admin sieve script on account1
            3. send mail from admin to account1
            4. verify editheader is not processed
            5. set zimbraSieveEditHeaderEnabled to true on account1
            6. send mail from admin to account1
            7. verify editheader is processed
        </t:steps>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account1.id}</id>
                    <a n="zimbraSieveEditHeaderEnabled">FALSE</a>
                    <a n="zimbraAdminSieveScriptBefore">${sieve_rule5}</a>
                </ModifyAccountRequest>
            </t:request>
        </t:test>

        <t:test >
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                      <e t="t" a='${account1.name}'/>
                      <su>${test.subject}</su>
                      <mp ct="text/plain">
                          <content>Good Morning</content>
                      </mp>
                   </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${account1.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>${test.subject}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m//mail:su" match="${test.subject}" />
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg1.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <t:select attr="X-New-Header" match="test value" emptyset="1" />
            </t:restServletResponse>
        </t:resttest>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account1.id}</id>
                    <a n="zimbraSieveEditHeaderEnabled">TRUE</a>
                </ModifyAccountRequest>
            </t:request>
        </t:test>

        <t:test >
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                      <e t="t" a='${account1.name}'/>
                      <su>${test.subject2}</su>
                      <mp ct="text/plain">
                          <content>Good Morning</content>
                      </mp>
                   </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${account1.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>${test.subject2}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m//mail:su" match="${test.subject2}" />
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg2.id" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg2.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <t:select attr="X-New-Header" match="test value" />
            </t:restServletResponse>
        </t:resttest>

      </t:test_case>
</t:tests>