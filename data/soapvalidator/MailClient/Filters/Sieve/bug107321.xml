<t:tests xmlns:t="urn:zimbraTestHarness">
    <!-- Test accounts declaration -->
    <t:property name="test_account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="test_account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="test_account3.name" value="test3.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="test_account4.name" value="test4.${TIME}.${COUNTER}@${defaultdomain.name}" />

    <!-- Variables declaration -->
    <t:property name="folder_inbox" value="Inbox" />
    <t:property name="word1" value="bug-" />
    <t:property name="word2" value="107321" />
    <t:property name="word3" value="sample" />
    <t:property name="word4" value="message" />
    <t:property name="msg_subject" value="${word1}${word2} ${word3} ${word4}" />
    <t:property name="dollar0" value="$\{0}"/>
    <t:property name="dollar1" value="$\{1}"/>
    <t:property name="dollar2" value="$\{2}"/>
    <t:property name="dollar3" value="$\{3}"/>
    <t:property name="dollar4" value="$\{4}"/>
    <t:property name="dollar5" value="$\{5}"/>
    <t:property name="dollar6" value="$\{6}"/>
    <t:property name="dollar7" value="$\{7}"/>
    <t:property name="dollar8" value="$\{8}"/>
    <t:property name="dollar9" value="$\{9}"/>
    <t:property name="dateheader_str" value="$\{dateheader}"/>

    <!-- Sieve rules declaration -->
    <t:property name="sieve_rule1" value='require ["editheader", "variables", "relational"];
if header :matches :comparator "i;ascii-casemap" "Subject" "${word1}* ${word3} *" {
    addheader "X-Test-Header-0" "${dollar0}";
    addheader "X-Test-Header-1" "${dollar1}";
    addheader "X-Test-Header-2" "${dollar2}";
    addheader "X-Test-Header-3" "${dollar3}";
    addheader "X-Test-Header-4" "${dollar4}";
    addheader "X-Test-Header-5" "${dollar5}";
    addheader "X-Test-Header-6" "${dollar6}";
    addheader "X-Test-Header-7" "${dollar7}";
    addheader "X-Test-Header-8" "${dollar8}";
    addheader "X-Test-Header-9" "${dollar9}";
}'/>
    <t:property name="sieve_rule2" value='require ["editheader", "variables", "relational"];
if address :matches :comparator "i;ascii-casemap" "To" "test2.*.*@*" {
    addheader "X-Test-Header-0" "${dollar0}";
    addheader "X-Test-Header-1" "${dollar1}";
    addheader "X-Test-Header-2" "${dollar2}";
    addheader "X-Test-Header-3" "${dollar3}";
    addheader "X-Test-Header-4" "${dollar4}";
    addheader "X-Test-Header-5" "${dollar5}";
    addheader "X-Test-Header-6" "${dollar6}";
    addheader "X-Test-Header-7" "${dollar7}";
    addheader "X-Test-Header-8" "${dollar8}";
    addheader "X-Test-Header-9" "${dollar9}";
}'/>
    <t:property name="sieve_rule3" value='require ["editheader", "variables", "relational", "envelope"];
if envelope :matches :comparator "i;ascii-casemap" "To" "test3.*.*@*" {
    addheader "X-Test-Header-0" "${dollar0}";
    addheader "X-Test-Header-1" "${dollar1}";
    addheader "X-Test-Header-2" "${dollar2}";
    addheader "X-Test-Header-3" "${dollar3}";
    addheader "X-Test-Header-4" "${dollar4}";
    addheader "X-Test-Header-5" "${dollar5}";
    addheader "X-Test-Header-6" "${dollar6}";
    addheader "X-Test-Header-7" "${dollar7}";
    addheader "X-Test-Header-8" "${dollar8}";
    addheader "X-Test-Header-9" "${dollar9}";
}'/>
    <t:property name="sieve_rule4" value='require ["editheader", "variables", "relational"];
if header :matches :comparator "i;ascii-casemap" "Date" "*" {
    set "dateheader" "${dollar1}";
    addheader "X-Test-Header" "${dateheader_str}";
}
if exists "Subject" {
    replaceheader :newvalue "[NEW]${dollar1}" :matches "Subject" "*";
}'/>


    <t:test_case testcaseid="Ping" type="always">
        <t:objective>basic system check</t:objective>
        <t:test required="true">
            <t:request>
                <PingRequest xmlns="urn:zimbraAdmin" />
            </t:request>
            <t:response>
                <t:select path="//admin:PingResponse" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="AcctSetup1_create_account" type="always">
        <t:objective>create test accounts</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

	    <t:test>
	        <t:request xmlns="urn:zimbraAdmin">
	            <GetCosRequest>
	                <cos by="name">default</cos>
	            </GetCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="name" match="default"/>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="id" set="cosid"/>
	        </t:response>
	    </t:test>
	
	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveEditHeaderEnabled">TRUE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>
	    
        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account1.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n = "zimbraAdminSieveScriptBefore">${sieve_rule1}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account1.id" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account2.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraAdminSieveScriptAfter">${sieve_rule2}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account2.id" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account3.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraAdminSieveScriptBefore">${sieve_rule3}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account3.id" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account4.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraAdminSieveScriptBefore">${sieve_rule4}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account4.id" />
            </t:response>
        </t:test>

    </t:test_case>

    <t:test_case testcaseid="bug107321_rule1" type="smoke" bugids="107321">
        <t:objective>Match variable in test header: if the index is out of range, the empty string should be set</t:objective>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account1.name}" />
                        <su>${msg_subject}</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="sendmsg1.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account1.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg1.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <t:select attr="X-Test-Header-0" match="${msg_subject}" />
                <t:select attr="X-Test-Header-1" match="${word2}" />
                <t:select attr="X-Test-Header-2" match="${word4}" />
                <t:select attr="X-Test-Header-3" match="" />
                <t:select attr="X-Test-Header-4" match="" />
                <t:select attr="X-Test-Header-5" match="" />
                <t:select attr="X-Test-Header-6" match="" />
                <t:select attr="X-Test-Header-7" match="" />
                <t:select attr="X-Test-Header-8" match="" />
                <t:select attr="X-Test-Header-9" match="" />
            </t:restServletResponse>
        </t:resttest>
    </t:test_case>

    <t:test_case testcaseid="bug107321_rule2" type="smoke" bugids="107321">
        <t:objective>Match variable in test address: if the index is out of range, the empty string should be set</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account2.name}" />
                        <su>${msg_subject}</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="sendmsg2.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account2.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg2.id" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg2.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <t:select attr="X-Test-Header-0" match="${test_account2.name}" />
                <t:select attr="X-Test-Header-1" match="\d+" />
                <t:select attr="X-Test-Header-2" match="\d+" />
                <t:select attr="X-Test-Header-3" match="${defaultdomain.name}" />
                <t:select attr="X-Test-Header-4" match="" />
                <t:select attr="X-Test-Header-5" match="" />
                <t:select attr="X-Test-Header-6" match="" />
                <t:select attr="X-Test-Header-7" match="" />
                <t:select attr="X-Test-Header-8" match="" />
                <t:select attr="X-Test-Header-9" match="" />
            </t:restServletResponse>
        </t:resttest>
    </t:test_case>


    <t:test_case testcaseid="bug107321_rule3" type="smoke" bugids="107321">
        <t:objective>Match variable in test envelope: if the index is out of range, the empty string should be set</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account3.name}" />
                        <su>${msg_subject}</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="sendmsg3.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account3.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg3.id" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg3.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <t:select attr="X-Test-Header-0" match="${test_account3.name}" />
                <t:select attr="X-Test-Header-1" match="\d+" />
                <t:select attr="X-Test-Header-2" match="\d+" />
                <t:select attr="X-Test-Header-3" match="${defaultdomain.name}" />
                <t:select attr="X-Test-Header-4" match="" />
                <t:select attr="X-Test-Header-5" match="" />
                <t:select attr="X-Test-Header-6" match="" />
                <t:select attr="X-Test-Header-7" match="" />
                <t:select attr="X-Test-Header-8" match="" />
                <t:select attr="X-Test-Header-9" match="" />
            </t:restServletResponse>
        </t:resttest>
    </t:test_case>

    <t:test_case testcaseid="bug107321_rule4" type="smoke" bugids="107321">
        <t:objective>Match variable should take a value of the most recently evaluated successful match of type ":matches"</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account4.name}" />
                        <su></su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="sendmsg4.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account4.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message" fetch="1">
                    <query>in:${folder_inbox}</query>
                    <header n="Date" />
                    <header n="X-Test-Header" />
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg4.id" />
                <t:select path="//mail:SearchResponse/mail:m" attr="su" match="\[NEW\]" />
                <t:select path="//mail:SearchResponse/mail:m/mail:header[@n='Date']" set="msg4.date" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <GetMsgRequest xmlns="urn:zimbraMail" types="message" fetch="1">
                    <m id="${msg4.id}">
                        <header n="X-Test-Header" />
                    </m>
                </GetMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:GetMsgResponse/mail:m/mail:header[@n='X-Test-Header']" equals="${msg4.date}" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:finally type="always">
        <t:objective>reset cosconfig to default </t:objective>
        
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveEditHeaderEnabled">FALSE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>

    </t:finally>
</t:tests>
