<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account3.name" value="test3.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account4.name" value="test4.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account5.name" value="test5.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account6.name" value="test6.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account7.name" value="test7.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account8.name" value="test8.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account9.name" value="test9.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="dl1.member1.name" value="mem1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="dl1.member2.name" value="mem2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.dl1.name" value="dl1.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="notify_account2.name" value="notify2.${TIME}.${COUNTER}@${defaultdomain.name}" />

<t:property name="mail_subject" value="Spam Mail" />
<t:property name="val" value="$\{1}"/>

<t:property name="server.name" value="testserver${TIME}${COUNTER}"/>
<t:property name="server.spaceinname" value="testserver    ${TIME}${COUNTER}"/>
<t:property name="server.notes" value="test of adding Server via SOAP"/>
<t:property name="server.desc" value="test server description"/>

<t:property name="addheader.name1" value="X-Spam-Filtered1"/>
<t:property name="addheader.name2" value="X-Spam-Filtered2"/>
<t:property name="addheader.value1" value="This is a spam mail"/>
<t:property name="addheader.value2" value="This is a spam mail2"/>
<t:property name="variable.name.varname" value="$\{varname}"/>
<t:property name="variable.name.varvalue" value="$\{varvalue}"/>

<t:property name="sieve_rule1" value='require  ["log","variables","editheader"];
if header :contains ["Subject"] "Spam" {
addheader "${addheader.name1}" "${addheader.value1}";
stop;
}'/>

<t:property name="sieve_rule2" value='require  ["log","variables","editheader"];
if header :contains ["Subject"] "Spam" {
addheader :last "${addheader.name1}" "${addheader.value1}";
stop;
}'/>

<t:property name="sieve_rule3" value='require  ["log","variables","editheader"];
if header :contains ["Subject"] "Spam" {
addheader "${addheader.name1}" "${addheader.value1}";
addheader "${addheader.name2}" "${addheader.value2}"
stop;
}'/>

<t:property name="sieve_rule4" value='require  ["log","variables","editheader"];
if header :contains ["Subject"] "Spam" {
addheader "${addheader.name1}" "${addheader.value1}";
addheader "${addheader.name1}" "${addheader.value2}"
stop;
}'/>

<t:property name="sieve_rule5" value='require  ["log","variables","editheader"];
if header :contains ["Subject"] "Spam" {
addheader :last "${addheader.name1}" "${addheader.value1}";
stop;
}'/>

<t:property name="sieve_rule6" value='require  ["variables","editheader"];
set "varname" "X-New-Header";
set "varvalue" "test";
addheader :last "${variable.name.varname}" "${variable.name.varvalue}";
'/>

<t:property name="test_acct.server" value="NOT_DEFINED"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}" />

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>
    
	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin" />
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse" />
		</t:response>
	</t:test>
    
</t:test_case>


<t:test_case testcaseid="acctSetup1" type="smoke">
    <t:objective>create test account</t:objective>
    
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>

	    <t:test>
	        <t:request xmlns="urn:zimbraAdmin">
	            <GetCosRequest>
	                <cos by="name">default</cos>
	            </GetCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="name" match="default"/>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="id" set="cosid"/>
	        </t:response>
	    </t:test>
	
	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveEditHeaderEnabled">TRUE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>
	        
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account1.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test> 

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account2.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account3.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account4.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct4.server"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account5.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account5.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct5.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account6.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account6.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct6.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account7.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account7.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct7.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account8.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account8.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct8.server"/>
        </t:response>
    </t:test>                                          

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account9.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account9.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct9.server"/>
        </t:response>
    </t:test>
</t:test_case>

<t:test_case testcaseid="bug31446_rule1" type="smoke" bugids="31446">
   <t:objective>Addition of add/delete header extension (in sieve RFC 5293) to Zimbra filters</t:objective>
    <steps> 
        1. Add sieve_rule1 for the user.
		2. Send email to that user. Expected headers should be present in the email.
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
    	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account2.id}</id>
                <a n = "zimbraAdminSieveScriptAfter">${sieve_rule1}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
	
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account2.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account2.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
    </t:test>
    
	<t:resttest>
		<t:restServletRequest>
			<id>${msg1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="${addheader.name1}" match="${addheader.value1}"/>
		</t:restServletResponse>
	</t:resttest>
	             
</t:test_case>

<t:test_case testcaseid="bug31446_rule2" type="smoke" bugids="31446">
   <t:objective>Addition of add/delete header extension (in sieve RFC 5293) to Zimbra filters</t:objective>
    <steps> 
        1. Add sieve_rule2 for the user.
		2. Send email to that user. Expected headers should be present in the email.
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
    	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account3.id}</id>
                <a n = "zimbraAdminSieveScriptAfter">${sieve_rule2}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
	
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account3.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg2.id"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account3.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg2.id"/>
			</t:response>
    </t:test>
    
	<t:resttest>
		<t:restServletRequest>
			<id>${msg2.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="${addheader.name1}" match="${addheader.value1}"/>
		</t:restServletResponse>
	</t:resttest>
	             
</t:test_case>

<t:test_case testcaseid="bug31446_rule3" type="smoke" bugids="31446">
   <t:objective>Addition of add/delete header extension (in sieve RFC 5293) to Zimbra filters</t:objective>
    <steps> 
        1. Add sieve_rule3 for the user.
		2. Send email to that user. Expected headers should be present in the email.
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
    	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account4.id}</id>
                <a n = "zimbraAdminSieveScriptAfter">${sieve_rule3}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
	
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account4.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg3.id"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account4.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg3.id"/>
			</t:response>
    </t:test>
    
	<t:resttest>
		<t:restServletRequest>
			<id>${msg3.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="${addheader.name1}" match="${addheader.value1}"/>
			<t:select attr="${addheader.name2}" match="${addheader.value2}"/>
		</t:restServletResponse>
	</t:resttest>
	             
</t:test_case>

<t:test_case testcaseid="bug31446_rule4" type="smoke" bugids="31446">
   <t:objective>Addition of add/delete header extension (in sieve RFC 5293) to Zimbra filters</t:objective>
    <steps> 
        1. Add sieve_rule4 for the user.
		2. Send email to that user. Expected headers should be present in the email.
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
    	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account5.id}</id>
                <a n = "zimbraAdminSieveScriptAfter">${sieve_rule4}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
	
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account5.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg4.id"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account5.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg4.id"/>
			</t:response>
    </t:test>
    
	<t:resttest>
		<t:restServletRequest>
			<id>${msg4.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="${addheader.name1}" match="${addheader.value1}"/>
			<t:select attr="${addheader.name1}" match="${addheader.value2}"/>
		</t:restServletResponse>
	</t:resttest>
	             
</t:test_case>

<t:test_case testcaseid="bug31446_rule5" type="smoke" bugids="31446">
   <t:objective>Addition of add/delete header extension (in sieve RFC 5293) to Zimbra filters</t:objective>
    <steps> 
        1. Add sieve_rule5 for the user.
		2. Send email to that user. Expected headers should be present in the email.
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
    	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account6.id}</id>
                <a n = "zimbraAdminSieveScriptAfter">${sieve_rule5}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
	
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account6.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg6.id"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account6.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg6.id"/>
			</t:response>
    </t:test>
    
	<t:resttest>
		<t:restServletRequest>
			<id>${msg6.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="${addheader.name1}" match="${addheader.value1}"/>
		</t:restServletResponse>
	</t:resttest>
	             
</t:test_case>

<t:test_case testcaseid="bug31446_outgoingrule1" type="smoke" bugids="31446">
   <t:objective>Addition of add/delete header extension (in sieve RFC 5293) to Zimbra filters</t:objective>
    <steps> 
        1. Add sieve_outgoingrule1 for the user.
		2. Send email to that user. Expected headers should be present in the email.
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
    	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account7.id}</id>
                <a n = "zimbraAdminOutgoingSieveScriptBefore">${sieve_rule1}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
	
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account7.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account8.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg6.id"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account8.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg7.id"/>
			</t:response>
    </t:test>
    
	<t:resttest>
		<t:restServletRequest>
			<id>${msg7.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="${addheader.name1}" match="${addheader.value1}"/>
		</t:restServletResponse>
	</t:resttest>
	             
</t:test_case>

<t:test_case testcaseid="bug31446_usingVariables" type="smoke" bugids="31446">
   <t:objective>addheader using set variables</t:objective>
    <steps>
        1. Add sieve_outgoingrule1 for the user.
        2. Send email to that user. Expected headers should be present in the email.
    </steps>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
        </t:response>
    </t:test>

    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account9.id}</id>
                <a n = "zimbraAdminSieveScriptAfter">${sieve_rule6}</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
                <account by="name">${test_account7.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
             <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${test_account9.name}'/>
                    <su>${mail_subject}</su>
                    <mp ct="text/plain">
                        <content>Good Morning</content>
                    </mp>
                 </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg6.id"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
                <account by="name">${test_account9.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
             <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
        </t:response>
    </t:test>

     <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>subject:${mail_subject}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg9.id"/>
            </t:response>
    </t:test>

     <t:resttest>
        <t:restServletRequest>
            <id>${msg9.id}</id>
        </t:restServletRequest>
        <t:restServletResponse>
            <t:select attr="X-New-Header" match="test"/>
        </t:restServletResponse>
    </t:resttest>

</t:test_case>

    <t:finally type="always">
        <t:objective>reset cosconfig to default </t:objective>
        
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveEditHeaderEnabled">FALSE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>

    </t:finally>
</t:tests>
