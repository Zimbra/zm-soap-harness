<t:tests xmlns:t="urn:zimbraTestHarness">
    <!-- Test accounts declaration -->
    <t:property name="test_account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}" />

    <!-- Variables declaration -->
    <t:property name="folder_inbox" value="Inbox" />
    <t:property name="1" value="$\{1}" />
    <t:property name="2" value="$\{2}" />
    <t:property name="var_one"   value="$\{var_one}" />
    <t:property name="var_two"   value="$\{var_two}" />
    <t:property name="var_three" value="$\{var_three}" />

    <!-- Sieve rules declaration -->
    <t:property name="admin_sieve_before_rule1" value='
require ["tag", "variables"];
set "var_one" "one";
if header :matches ["X-Header0", "X-Header1"] "*" {
  tag "admin-before-set-${var_one}-";
  tag "admin-before-var1-${1}-";
  tag "admin-before-var2-${2}-";
}
'/>
    <t:property name="account_sieve_rule1" value='
require ["tag", "variables"];
set "var_two" "two";
tag "user admin-before-set-${var_one}-";
tag "user admin-before-var1-${1}-";
tag "user admin-before-var2-${2}-";
if  header :matches ["X-Header2"] "*" {
  tag "user-set-${var_two}-";
  tag "user-var-${1}-";
}
'/>
    <t:property name="admin_sieve_after_rule1" value='
require ["tag", "variables"];
set "var_three" "three";
tag "admin-after admin-before-set-${var_one}-";
tag "admin-after admin-before-var1-${1}-";
tag "admin-after admin-before-var2-${2}-";
tag "admin-after user-set-${var_two}-";
tag "admin-after user-var-${1}-";
if  header :matches ["X-Header3"] "*" {
  tag "admin-after-set-${var_three}-";
  tag "admin-after-var-${1}-";
}
'/>

    <t:test_case testcaseid="Ping" type="always">
        <t:objective>basic system check</t:objective>
        <t:test required="true">
            <t:request>
                <PingRequest xmlns="urn:zimbraAdmin" />
            </t:request>
            <t:response>
                <t:select path="//admin:PingResponse" />
            </t:response>
        </t:test>
    </t:test_case>


    <t:test_case testcaseid="AcctSetup1_create_account" type="always">
        <t:objective>create test accounts</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account1.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account1.id" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="configSetup" type="always">
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:objective>set zimbraCustomMimeHeaderNameAllowed key value </t:objective>
        <t:test>
            <t:request>
                <ModifyConfigRequest xmlns="urn:zimbraAdmin">
                    <a n="zimbraCustomMimeHeaderNameAllowed">X-Header0</a>
                    <a n="zimbraCustomMimeHeaderNameAllowed">X-Header1</a>
                    <a n="zimbraCustomMimeHeaderNameAllowed">X-Header2</a>
                    <a n="zimbraCustomMimeHeaderNameAllowed">X-Header3</a>
                </ModifyConfigRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyConfigResponse" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="zcs-1378_rule1" type="smoke" bugids="zcs-1378">
        <t:objective>
            1. The user-defined rule should not be able to refer any variables
                  (the labeled style $\{abc} and the numeric style $\{1}) defined in
               the admin-before rule.
            2. The admin-after rule should not be able to refer any variables
               defined in the admin-before and user-defined rules.
        </t:objective>
        <t:steps>
        1. Assign a sieve rule to user 1.
        2. Send a message to user 1.
        3. Check on user 1 message is in the inbox and tagged appropriately.
        </t:steps>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>
        <t:test id="modifyaccountrequest1">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${test_account1.id}</id>
                    <a n="zimbraAdminSieveScriptBefore">${admin_sieve_before_rule1}</a>
                    <a n="zimbraMailSieveScript">${account_sieve_rule1}</a>
                    <a n="zimbraAdminSieveScriptAfter">${admin_sieve_after_rule1}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account"/>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account1.name}" />
                        <su>Test message</su>
                        <header name="X-Header0">www</header>
                        <header name="X-Header1">xxx</header>
                        <header name="X-Header2">yyy</header>
                        <header name="X-Header3">zzz</header>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="sendmsg1.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account1.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" contains="admin-before-set-one-" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" contains="admin-before-var1-www-" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" contains="admin-before-var2-xxx-" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" contains="user admin-before-set--" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" contains="user admin-before-var1--" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" contains="user admin-before-var2--" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" contains="user-set-two-" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" contains="user-var-yyy-" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" contains="admin-after admin-before-set--" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" contains="admin-after admin-before-var1--" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" contains="admin-after admin-before-var2--" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" contains="admin-after user-set--" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" contains="admin-after user-var--" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" contains="admin-after-set-three-" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" contains="admin-after-var-zzz-" />
            </t:response>
        </t:test>
    </t:test_case>
</t:tests>
