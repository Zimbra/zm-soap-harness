<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account3.name" value="test3.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account4.name" value="test4.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account5.name" value="test5.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account6.name" value="test6.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account7.name" value="test7.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account8.name" value="test8.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account9.name" value="test9.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account10.name" value="test10.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account11.name" value="test11.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account12.name" value="test12.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account13.name" value="test13.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account14.name" value="test14.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="dl1.member1.name" value="mem1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="dl1.member2.name" value="mem2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.dl1.name" value="dl1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="mail_subject" value="Sieve Mail" />
<t:property name="val" value="$\{1}"/>
<t:property name="msg01.file" value="${testMailRaw.root}/bug104314/mime1.txt"/>
<t:property name="msg02.file" value="${testMailRaw.root}/bug104314/mime2.txt"/>

<t:property name="server.name" value="testserver${TIME}${COUNTER}"/>
<t:property name="server.spaceinname" value="testserver    ${TIME}${COUNTER}"/>
<t:property name="server.notes" value="test of adding Server via SOAP"/>
<t:property name="server.desc" value="test server description"/>

<t:property name="sieve_rule1" value='require ["editheader", "log"];
replaceheader :newvalue "[Spam] ${mail_subject}" :matches "subject" "*";
log "done";'/>

<t:property name="sieve_rule2" value='require ["editheader", "log"];
replaceheader :newvalue "${mail_subject} [Spam]" :matches "subject" "*";
log "done";'/>

<t:property name="sieve_rule3" value='require ["editheader", "log"];
replaceheader :newvalue "${mail_subject} [Spam]" :matches "subject" "Sieve Mail";
log "done";'/>

<t:property name="sieve_rule4" value='require ["editheader", "log"];
replaceheader :newname "X-Sieve-Header2" :matches "X-Sieve-Header" "*";
log "done";'/>

<t:property name="sieve_rule5" value='require ["editheader", "log"];
replaceheader :index 1 :newvalue "[NEWVAL] ${mail_subject}" :matches "X-Sieve-Header1" "*";
log "done";'/>

<t:property name="sieve_rule6" value='require ["editheader", "log"];
replaceheader :newname "X-Sieve-Header2" :matches "X-Sieve-Header" "HeaderVal";
log "done";'/>

<t:property name="sieve_rule7" value='require ["editheader", "log"];
replaceheader :newname "X-Sieve-Header2" :newvalue "[NEWVAL] HeaderVal" :matches "X-Sieve-Header" "*"; 
log "done";'/>

<t:property name="sieve_rule8" value='require ["editheader", "log"];
replaceheader :newname "X-Sieve-Header2" :newvalue "[NEWVAL] ${mail_subject}" :matches "X-Sieve-Header" "HeaderVal";
log "done";'/>

<t:property name="sieve_rule9" value='require ["editheader", "log"];
replaceheader :index 2 :newname "X-Sieve-Header2" :newvalue "[NEWVAL] ${mail_subject}" :matches "X-Sieve-Header1" "Oldval2"; 
log "done";'/>

<t:property name="sieve_rule10" value='require ["editheader", "log"];
replaceheader :index 2 :newname "X-Sieve-Header2" :newvalue "[NEWVAL] ${mail_subject}" :matches "X-Sieve-Header1" "*";
log "done";'/>

<t:property name="sieve_rule11" value='require ["editheader", "log", "comparator-i;ascii-numeric", "relational"];
replaceheader :newname "X-Numeric2-Header" :newvalue "0" :value "lt" :comparator "i;ascii-numeric" "X-Numeric-Header" "3";
log "done";'/>

<t:property name="sieve_rule12" value='require ["editheader", "log", "comparator-i;ascii-numeric", "relational"];
replaceheader :newname "X-Numeric2-Header" :count "ge" :comparator "i;ascii-numeric" "X-Numeric-Header" "3";
log "done";'/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}" />

<t:property name="sieve_rule13" value='require ["editheader", "log"];
replaceheader :newvalue "[Spam] ${mail_subject}" :matches "subject" ;
log "done";'/>

<t:property name="test_acct.server" value="NOT_DEFINED"/>

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>
    
	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin" />
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse" />
		</t:response>
	</t:test>
    
</t:test_case>


<t:test_case testcaseid="Variables setup" type="always">
    <t:objective>create test account</t:objective>
    
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>

		<t:test>
			<t:request>
				<ModifyConfigRequest xmlns="urn:zimbraAdmin">
					<a n="zimbraCustomMimeHeaderNameAllowed">X-Spam-Score</a>
					<a n="zimbraCustomMimeHeaderNameAllowed">X-Spam-Flag</a>
				</ModifyConfigRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyConfigResponse" />
			</t:response>
		</t:test>

	    <t:test>
	        <t:request xmlns="urn:zimbraAdmin">
	            <GetCosRequest>
	                <cos by="name">default</cos>
	            </GetCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="name" match="default"/>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="id" set="cosid"/>
	        </t:response>
	    </t:test>
	
	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveNotifyActionRFCCompliant">TRUE</a>
	                <a n="zimbraSieveEditHeaderEnabled">TRUE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>
	    
</t:test_case>

<t:test_case testcaseid="Accounts setup" type="smoke">  
<t:objective>create test account</t:objective>          
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account1.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account2.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>   

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account3.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
        </t:response>
    </t:test>  

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account4.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct4.server"/>
        </t:response>
    </t:test> 

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account5.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account5.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct5.server"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account6.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account6.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct6.server"/>
        </t:response>
    </t:test>    

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account7.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account7.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct7.server"/>
        </t:response>
    </t:test> 

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account8.name}</name>
                <password>${defaultpassword.value}</password>                
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account8.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct8.server"/>
        </t:response>
    </t:test> 

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account9.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account9.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct9.server"/>
        </t:response>
    </t:test> 

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account10.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account10.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct10.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account11.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account11.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct11.server"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account12.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account12.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct12.server"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account13.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account13.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct13.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account14.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account14.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct14.server"/>
        </t:response>
    </t:test>
                                
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${dl1.member1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="dl_member1.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="dl_member1.server"/>
        </t:response>
    </t:test>     

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${dl1.member2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="dl_member2.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="dl_member2.server"/>
        </t:response>
    </t:test> 
              
</t:test_case>

    
<t:test_case testcaseid="bug104314_newval1" type="smoke" bugids="104314">
   <t:objective>rewrite the "subject" header of all messages received  from a specific address  or to a specific DL</t:objective>
    <steps> 
        1. Add sieve rule for the user :newvalue "[SPAM] $\{1}"
		2. Send email to that user. Verify SPAM is appended at the start of the subject
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account2.id}</id>
                <a n = "zimbraAdminSieveScriptBefore">${sieve_rule1}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
    
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account2.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account2.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" contains="[Spam] ${mail_subject}"/>
			</t:response>
    </t:test>
     
</t:test_case>   


<t:test_case testcaseid="bug104314_newval2" type="smoke" bugids="104314">
   <t:objective>rewrite the "subject" header of all messages received  from a specific address  or to a specific DL</t:objective>
    <steps> 
        1. Add sieve rule for the user :newvalue "$\{1} [SPAM]"
		2. Send email to that user. Verify SPAM is appended at the end of the subject
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account3.id}</id>
                <a n = "zimbraAdminSieveScriptBefore">${sieve_rule2}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account3.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account3.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" contains="${mail_subject} [Spam]"/>
			</t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="bug104314_newval3" type="smoke" bugids="104314">
   <t:objective>rewrite the "subject" header of all messages received  from a specific address  or to a specific DL</t:objective>
    <steps> 
        1. Add sieve rule for the user :newvalue "$\{1} [SPAM]" matching the subject
		2. Send email to that user. Verify SPAM is appended at the end of the subject
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account4.id}</id>
                <a n = "zimbraAdminSieveScriptBefore">${sieve_rule3}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account4.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account4.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" contains="${mail_subject} [Spam]"/>
			</t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="bug104314_newval4" type="smoke" bugids="104314">
   <t:objective>rewrite the "subject" header of all messages received  from a specific address  or to a specific DL</t:objective>
    <steps> 
        1. Add sieve rule for the user :newname "X-Header2" :matches "X-Header" "*";
		2. Send email to that user. Verify X-Header is replaced with X-Header2 and has new value
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <ModifyConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraCustomMimeHeaderNameAllowed">X-Sieve-Header</a>
            </ModifyConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyConfigResponse"/>
        </t:response>
    </t:test>
    	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account5.id}</id>
                <a n = "zimbraAdminSieveScriptBefore">${sieve_rule4}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
      				<header name="X-Sieve-Header">Oldval</header>
					<e t="t" a='${test_account5.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account5.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
    </t:test>

	<t:resttest>
		<t:restServletRequest>
			<id>${msg1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="X-Sieve-Header2" match="Oldval"/>
		</t:restServletResponse>
	</t:resttest>
	    
</t:test_case>

<t:test_case testcaseid="bug104314_newval5" type="smoke" bugids="104314">
   <t:objective>rewrite the "subject" header of all messages received  from a specific address  or to a specific DL</t:objective>
    <steps> 
        1. Add sieve rule for the user :index 1 :newvalue "[NEWVAL] $\{1}" :matches "X-Header" "*";
		2. Verify if there are multiple X-Headers in mime, the 1st one should be matched and replaced with newvalue -- X-Header: [NEWVAL] My header
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
    	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account6.id}</id>
                <a n = "zimbraAdminSieveScriptBefore">${sieve_rule5}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
			<to>${test_account6.name}</to>
			<from>${test_account1.name}</from>
			<server>${test_acct1.server}</server>
            <modify>
                <header a="To">${test_account6.name}</header>
                <header a="From">${test_account1.name}</header>
                <header a="Subject">${mail_subject}</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account6.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
    </t:test>
	
	<t:resttest>
		<t:restServletRequest>
			<id>${msg1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="X-Sieve-Header1" contains="[NEWVAL] ${mail_subject}"/>
			<t:select attr="X-Sieve-Header1" match="Oldval2"/>
			<t:select attr="X-Sieve-Header1" match="Oldval1"/>
		</t:restServletResponse>
	</t:resttest>
	    
</t:test_case>

<t:test_case testcaseid="bug104314_newval6" type="smoke" bugids="104314">
   <t:objective>rewrite the "subject" header of all messages received  from a specific address  or to a specific DL</t:objective>
    <steps> 
        1. Add sieve rule for the user :newname "X-Header2" :matches "X-Header" "HeaderVal";
		2. Verify X-Header is replaced with X-Header2 only if its value is matched. -- X-Header2 : HeaderVal
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <ModifyConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraCustomMimeHeaderNameAllowed">X-Sieve-Header</a>
            </ModifyConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyConfigResponse"/>
        </t:response>
    </t:test>
    	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account7.id}</id>
                <a n = "zimbraAdminSieveScriptBefore">${sieve_rule6}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
      				<header name="X-Sieve-Header">HeaderVal</header>
					<e t="t" a='${test_account7.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account7.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
    </t:test>

	<t:resttest>
		<t:restServletRequest>
			<id>${msg1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="X-Sieve-Header2" match="HeaderVal"/>
		</t:restServletResponse>
	</t:resttest>
	    
</t:test_case>

<t:test_case testcaseid="bug104314_newval7" type="smoke" bugids="104314">
   <t:objective>rewrite the "subject" header of all messages received  from a specific address  or to a specific DL</t:objective>
    <steps> 
        1. Add sieve rule for the user :newname "X-Header2" :matches "X-Header" "HeaderVal";
		2. Verify X-Header is replaced with X-Header2 only if its value is matched. -- X-Header2 : HeaderVal
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <ModifyConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraCustomMimeHeaderNameAllowed">X-Sieve-Header</a>
            </ModifyConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyConfigResponse"/>
        </t:response>
    </t:test>
    	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account8.id}</id>
                <a n = "zimbraAdminSieveScriptBefore">${sieve_rule7}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
      				<header name="X-Sieve-Header">HeaderVal</header>
					<e t="t" a='${test_account8.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account8.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
    </t:test>

	<t:resttest>
		<t:restServletRequest>
			<id>${msg1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="X-Sieve-Header2" contains="[NEWVAL] HeaderVal"/>
		</t:restServletResponse>
	</t:resttest>
	    
</t:test_case>

<t:test_case testcaseid="bug104314_newval8" type="smoke" bugids="104314">
   <t:objective>rewrite the "subject" header of all messages received  from a specific address  or to a specific DL </t:objective>
    <steps> 
        1. Add sieve rule for the user :newname "X-Sieve-Header2" :newvalue "[NEWVAL] $\{1}" :matches "X-Sieve-Header" "HeaderVal";
		2. Verify X-Header is replaced with X-Header2 only if its value is matched. -- X-Header2 :[NEWVAL] HeaderVal
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <ModifyConfigRequest xmlns="urn:zimbraAdmin">
                <a n="zimbraCustomMimeHeaderNameAllowed">X-Sieve-Header</a>
            </ModifyConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyConfigResponse"/>
        </t:response>
    </t:test>
    	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account9.id}</id>
                <a n = "zimbraAdminSieveScriptBefore">${sieve_rule8}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
      				<header name="X-Sieve-Header">HeaderVal</header>
					<e t="t" a='${test_account9.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account9.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
    </t:test>

	<t:resttest>
		<t:restServletRequest>
			<id>${msg1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="X-Sieve-Header2" contains="[NEWVAL] HeaderVal"/>
		</t:restServletResponse>
	</t:resttest>
	    
</t:test_case>

<t:test_case testcaseid="bug104314_newval9" type="smoke" bugids="104314">
   <t:objective>rewrite the "subject" header of all messages received  from a specific address  or to a specific DL</t:objective>
    <steps> 
        1. Add sieve rule for the user :index 2 :newname "X-Header2" :newvalue "[NEWVAL] $\{1}" :matches "X-Header" "HeaderVal"; 
		2. Verify X-Header is replaced with X-Header2 only if its value in the 2nd index is matched. -- X-Header2 :[NEWVAL] HeaderVal
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
    	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account10.id}</id>
                <a n = "zimbraAdminSieveScriptBefore">${sieve_rule9}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
			<to>${test_account10.name}</to>
			<from>${test_account1.name}</from>
			<server>${test_acct1.server}</server>
            <modify>
                <header a="To">${test_account10.name}</header>
                <header a="From">${test_account1.name}</header>
                <header a="Subject">${mail_subject}</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account10.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
    </t:test>
	
	<t:resttest>
		<t:restServletRequest>
			<id>${msg1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="X-Sieve-Header2" contains="[NEWVAL] ${mail_subject}"/>
			<t:select attr="X-Sieve-Header1" match="Oldval1"/>
			<t:select attr="X-Sieve-Header1" match="Oldval3"/>
		</t:restServletResponse>
	</t:resttest>
	    
</t:test_case>

<t:test_case testcaseid="bug104314_newval10" type="smoke" bugids="104314">
   <t:objective>rewrite the "subject" header of all messages received  from a specific address  or to a specific DL</t:objective>
    <steps> 
        1. Add sieve rule for the user :index 2 :newname "X-Header2" :newvalue "[NEWVAL] $\{1}" :matches "X-Header" "HeaderVal"; 
		2. Verify X-Header is replaced with X-Header2 only if its value in the 2nd index is matched. -- X-Header2 :[NEWVAL] HeaderVal
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
    	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account11.id}</id>
                <a n = "zimbraAdminSieveScriptBefore">${sieve_rule10}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
			<to>${test_account11.name}</to>
			<from>${test_account1.name}</from>
			<server>${test_acct1.server}</server>
            <modify>
                <header a="To">${test_account11.name}</header>
                <header a="From">${test_account1.name}</header>
                <header a="Subject">${mail_subject}</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account11.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
    </t:test>
	
	<t:resttest>
		<t:restServletRequest>
			<id>${msg1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="X-Sieve-Header2" contains="[NEWVAL] ${mail_subject}"/>
			<t:select attr="X-Sieve-Header1" match="Oldval1"/>
			<t:select attr="X-Sieve-Header1" match="Oldval3"/>
		</t:restServletResponse>
	</t:resttest>
	    
</t:test_case>

<t:test_case testcaseid="bug104314_outgoing1" type="smoke" bugids="104314">
   <t:objective>rewrite the "subject" header of all messages received  from a specific address  or to a specific DL</t:objective>
    <steps> 
        1. Add outgoing sieve rule for the user :newvalue "[SPAM] $\{1}"
		2. Send email to that user. Verify SPAM is appended at the start of the subject
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
    	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account1.id}</id>
                <a n = "zimbraAdminOutgoingSieveScriptBefore">${sieve_rule1}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
    
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account12.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account12.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" contains="[Spam] ${mail_subject}"/>
			</t:response>
    </t:test>
     
</t:test_case>

<t:test_case testcaseid="bug104314_comparator1" type="smoke" bugids="104314">
   <t:objective>rewrite the "subject" header of all messages received  from a specific address  or to a specific DL</t:objective>
    <steps> 
        1. Add sieve rule 11 for user
        2. Verify expected results are seen as per sieve rule
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
    	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account13.id}</id>
                <a n = "zimbraAdminSieveScriptBefore">${sieve_rule11}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg02.file}</filename>
			<to>${test_account13.name}</to>
			<from>${test_account1.name}</from>
			<server>${test_acct1.server}</server>
            <modify>
                <header a="To">${test_account13.name}</header>
                <header a="From">${test_account1.name}</header>
                <header a="Subject">${mail_subject}</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account13.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
    </t:test>
	
	<t:resttest>
		<t:restServletRequest>
			<id>${msg1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="X-Numeric2-Header" contains="0"/>
			<t:select attr="X-Numeric-Header" contains="3"/>
			<t:select attr="X-Numeric-Header" contains="4"/>
		</t:restServletResponse>
	</t:resttest>
	    
</t:test_case>

<t:test_case testcaseid="bug104314_comparator2" type="smoke" bugids="104314">
   <t:objective>rewrite the "subject" header of all messages received  from a specific address  or to a specific DL</t:objective>
    <steps> 
        1. Add sieve rule 12 for user
        2. Verify expected results are seen as per sieve rule
    </steps>	

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
    	
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account14.id}</id>
                <a n = "zimbraAdminSieveScriptBefore">${sieve_rule12}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test> 
	
<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg02.file}</filename>
			<to>${test_account14.name}</to>
			<from>${test_account1.name}</from>
			<server>${test_acct1.server}</server>
            <modify>
                <header a="To">${test_account14.name}</header>
                <header a="From">${test_account1.name}</header>
                <header a="Subject">${mail_subject}</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account14.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
    </t:test>
	
	<t:resttest>
		<t:restServletRequest>
			<id>${msg1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="X-Numeric2-Header" contains="2"/>
			<t:select attr="X-Numeric2-Header" contains="3"/>
			<t:select attr="X-Numeric2-Header" contains="4"/>
		</t:restServletResponse>
	</t:resttest>
	    
</t:test_case>   


<t:test_case testcaseid="bug1ZCS-859" type="smoke" bugids="ZCS-859">
   <t:objective>Rewrite the "subject" header of all messages received</t:objective>
    <steps> 
        1. Add sieve rule for the user :newvalue "[SPAM] + {original subject}"
    2. Send email to that user. Verify SPAM is appended at the start of the subject
    </steps>  

  <t:test required="true">
    <t:request>
      <AuthRequest xmlns="urn:zimbraAdmin">
        <name>${admin.user}</name>
        <password>${admin.password}</password>
      </AuthRequest>
    </t:request>
    <t:response>
      <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
    </t:response>
  </t:test>
  
    <t:test id = "modifyaccountrequest01">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account2.id}</id>
                <a n = "zimbraAdminSieveScriptBefore">${sieve_rule12}</a>             
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
    
<t:test required="true">
  <t:request>
    <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
            <account by="name">${test_account1.name}</account>
      <password>${defaultpassword.value}</password>
    </AuthRequest>
    </t:request>
    <t:response>       
       <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
    </t:response>
  </t:test>

    <t:test >
    <t:request>
        <SendMsgRequest xmlns="urn:zimbraMail">
            <m>
          <e t="t" a='${test_account2.name}'/>
          <su>${mail_subject}</su>
          <mp ct="text/plain">
              <content>Good Morning</content>
          </mp>
           </m>
        </SendMsgRequest>
      </t:request>
      <t:response>
          <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
      </t:response>
  </t:test>

<t:test required="true">
  <t:request>
    <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
            <account by="name">${test_account2.name}</account>
      <password>${defaultpassword.value}</password>
    </AuthRequest>
    </t:request>
    <t:response>       
       <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
    </t:response>
  </t:test>
  
     <t:test>
      <t:request>
        <SearchRequest xmlns="urn:zimbraMail" types="message">          
          <query>subject:${mail_subject}</query>
        </SearchRequest>
      </t:request>
          <t:response>      
        <t:select path="//mail:SearchResponse/mail:m/mail:su" contains="[Spam] ${mail_subject}"/>
      </t:response>
    </t:test>
     
</t:test_case>

    <t:finally type="always">
        <t:objective>reset cosconfig </t:objective>
        
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

		<t:test>
			<t:request>
				<ModifyConfigRequest xmlns="urn:zimbraAdmin">
					<a n="zimbraCustomMimeHeaderNameAllowed"></a>
				</ModifyConfigRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyConfigResponse" />
			</t:response>
		</t:test>
		
	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveNotifyActionRFCCompliant">FALSE</a>
	                <a n="zimbraSieveEditHeaderEnabled">FALSE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>

    </t:finally>   
</t:tests>
