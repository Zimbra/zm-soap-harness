<t:tests xmlns:t="urn:zimbraTestHarness">
	<!-- Test accounts declaration -->
	<t:property name="account.name"
		value="test_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account1.name"
		value="test1_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account2.name"
		value="test2_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account3.name"
		value="test3_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account4.name"
		value="test4_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account5.name"
		value="test5_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account6.name"
		value="test6_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account7.name"
		value="test7_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account8.name"
		value="test8_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account9.name"
		value="test9_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account10.name"
		value="test10_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account11.name"
		value="test11_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account12.name"
		value="test12_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account13.name"
		value="test13_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account14.name"
		value="test14_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account15.name"
		value="test15_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account16.name"
		value="test16_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account17.name"
		value="test17_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account18.name"
		value="test18_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account19.name"
		value="test19_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account20.name"
		value="test20_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account21.name"
		value="test21_${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="msg.subject" value="test subject" />

	<t:property name="sieve_rule1"
		value='
    addheader "X-NewHeader" "Test";
    addheader "X-Header" "Test";
    if header :matches "To" "test1_*@${defaultdomain.name}" {
        deleteheader :value "ge" :comparator "i;ascii-casemap" "X-NewHeader" "Test";
    }
    ' />

	<t:property name="sieve_rule2"
		value='
    addheader "X-NewHeader" "Test1";
    addheader "X-NewHeader" "Test2";
    addheader "X-Header" "Test";
    if header :matches "To" "test2_*@${defaultdomain.name}" {
        deleteheader :value "ge" :comparator "i;ascii-casemap" "X-NewHeader" "Test";
    }
    ' />

	<t:property name="sieve_rule3"
		value='
 	addheader "X-NewHeader" "2";
    addheader "X-NewHeader" "5";
    if header :matches "To" "test3_*@${defaultdomain.name}" {
        deleteheader :value "le" :comparator "i;ascii-numeric" "X-NewHeader" "2"; 
    }
    ' />

	<t:property name="sieve_rule4"
		value='
 	addheader "X-NewHeader" "2";
    addheader "X-NewHeader" "5";
    addheader "X-Header" "Test";
    if header :matches "To" "test4_*@${defaultdomain.name}" {
        deleteheader :value "ge" :comparator "i;ascii-numeric" "X-NewHeader" "2"; 
    }
    ' />

	<t:property name="sieve_rule5"
		value='
 	addheader "X-NewHeader" "1";
    addheader "X-NewHeader" "2";
    if header :matches "To" "test5_*@${defaultdomain.name}" {
        deleteheader :value "gt" :comparator "i;ascii-numeric" "X-NewHeader" "1"; 
    }
    ' />

	<t:property name="sieve_rule6"
		value='
 	addheader "X-NewHeader" "C";
 	addheader "X-NewHeader" "D";
 	addheader "X-NewHeader" "E";
    if header :matches "To" "test6_*@${defaultdomain.name}" {
        deleteheader :value "ge" :comparator "i;ascii-casemap" "X-NewHeader" "D";
    }
    ' />

	<t:property name="sieve_rule7"
		value='
 	addheader "X-NewHeader" "10";
 	addheader "X-NewHeader" "20";
    if header :matches "To" "test7_*@${defaultdomain.name}" {
 	    deleteheader :last :value "le" :comparator "i;ascii-numeric" "X-NewHeader" "30";
    }
    ' />

	<t:property name="sieve_rule8"
		value='
 	addheader "X-NewHeader" "1";
 	addheader "X-NewHeader" "2";
    if header :matches "To" "test8_*@${defaultdomain.name}" {
 	    deleteheader :value "gt" :comparator "i;ascii-numeric" "X-NewHeader" "";
    }
    ' />

	<t:property name="sieve_rule9"
		value='
 	addheader "X-NewHeader" "1";
 	addheader "X-NewHeader" "2";
 	addheader "X-NewHeader" "3";
    if header :matches "To" "test9_*@${defaultdomain.name}" {
 	    deleteheader :index 2 :last :value "gt" :comparator "i;ascii-numeric" "X-NewHeader" "1";
    }
    ' />

	<t:property name="sieve_rule10"
		value='
 	addheader "X-NewHeader" "1";
 	addheader "X-NewHeader" "2";
 	addheader "X-NewHeader" "3";
    if header :matches "To" "test10_*@${defaultdomain.name}" {
 	    deleteheader :value "eq" :comparator "i;ascii-numeric" "X-NewHeader" "2"; 
 	    deleteheader :last :value "gt" :comparator "i;ascii-numeric" "X-NewHeader" "1";
    }
    ' />

	<t:property name="sieve_rule11"
		value='
 	addheader "X-NewHeader" "TestR";
    if header :matches "To" "test11_*@${defaultdomain.name}" {
 	    replaceheader :newname "X-Sieve" :newvalue "Sieve1" :value "ge" :comparator "i;ascii-casemap" "X-NewHeader" "TestR"; 
    }
    ' />

	<t:property name="sieve_rule12"
		value='
 	addheader "X-NewHeader" "Test1";
 	addheader "X-NewHeader" "Test2";
    if header :matches "To" "test12_*@${defaultdomain.name}" {
 	    replaceheader :newname "X-Sieve" :newvalue "Sieve2" :value "ge" :comparator "i;ascii-casemap" "X-NewHeader" "Test";
    }
    ' />

	<t:property name="sieve_rule13"
		value='
 	addheader "X-NewHeader" "2";
 	addheader "X-NewHeader" "5";
    if header :matches "To" "test13_*@${defaultdomain.name}" {
 	    replaceheader :newname "X-Sieve" :newvalue "Sieve3" :value "le" :comparator "i;ascii-numeric" "X-NewHeader" "2";
    }
    ' />

	<t:property name="sieve_rule14"
		value='
 	addheader "X-NewHeader" "2";
    addheader "X-NewHeader" "5";
    if header :matches "To" "test14_*@${defaultdomain.name}" {
    replaceheader :newname "X-Sieve" :newvalue "Sieve4" :index 1 :value "ge" :comparator "i;ascii-numeric" "X-NewHeader" "2";
    }
    ' />

	<t:property name="sieve_rule15"
		value='
 	addheader "X-NewHeader" "1";
    addheader "X-NewHeader" "2";
    if header :matches "To" "test15_*@${defaultdomain.name}" {
    replaceheader :newname "X-Sieve" :newvalue "Sieve5" :index 4 :value "gt" :comparator "i;ascii-numeric" "X-NewHeader" "1"; 
    }
    ' />

	<t:property name="sieve_rule16"
		value='
 	addheader "X-NewHeader" "C";
    addheader "X-NewHeader" "D";
    addheader "X-NewHeader" "E";
    if header :matches "To" "test16_*@${defaultdomain.name}" {
        replaceheader :newname "X-Sieve" :newvalue "Sieve6" :value "ge" :comparator "i;ascii-casemap" "X-NewHeader" "C";
    }
    ' />

	<t:property name="sieve_rule17"
		value='
 	addheader "X-NewHeader" "10";
    addheader "X-NewHeader" "20";
    if header :matches "To" "test17_*@${defaultdomain.name}" {
        replaceheader :newname "X-Sieve" :newvalue "Sieve7" :last :value "le" :comparator "i;ascii-numeric" "X-NewHeader" "30";
    }
    ' />

	<t:property name="sieve_rule18"
		value='
 	addheader "X-NewHeader" "1";
    addheader "X-NewHeader" "2";
    if header :matches "To" "test18_*@${defaultdomain.name}" {
    replaceheader :newname "X-Sieve" :newvalue "Sieve8" :value "gt" :comparator "i;ascii-numeric" "X-NewHeader" "";
    }
    ' />

	<t:property name="sieve_rule19"
		value='
 	addheader "X-NewHeader" "1";
    addheader "X-NewHeader" "2";
    addheader "X-NewHeader" "3";
    if header :matches "To" "test19_*@${defaultdomain.name}" {
    replaceheader :newname "X-Test" :newvalue "Sieve9" :index 2 :last :value "gt" :comparator "i;ascii-numeric" "X-NewHeader" "1";
    }
    ' />

	<t:property name="sieve_rule20"
		value='
 	addheader "X-NewHeader" "1";
    addheader "X-NewHeader" "2";
    addheader "X-NewHeader" "3";
    if header :matches "To" "test20_*@${defaultdomain.name}" {
        replaceheader :newname "X-Test" :newvalue "Sieve10" :value "eq" :comparator "i;ascii-numeric" "X-NewHeader" "2"; 
        replaceheader :newname "X-Test" :newvalue "Sieve11" :last :value "gt" :comparator "i;ascii-numeric" "X-NewHeader" "1";
    }
    ' />

	<t:property name="sieve_rule21"
		value='
 	addheader "X-NewHeader" "A";
    addheader "X-NewHeader" "B";
    if header :matches "To" "test21_*@${defaultdomain.name}" {
    replaceheader :newname "" :newvalue "Sieve8" :value "eq" :comparator "i;ascii-casemap" "X-NewHeader" "A";
    }
    ' />

    <t:test_case testcaseid="Ping" type="always">
        <t:objective>basic system check</t:objective>
        <t:test required="true">
            <t:request>
                <PingRequest xmlns="urn:zimbraAdmin" />
            </t:request>
            <t:response>
                <t:select path="//admin:PingResponse" />
            </t:response>
        </t:test>
    </t:test_case>
    
<!-- Marking EditHeader tests as deprecated. They should be enabled once zcs-1254 is fixed -->
	<t:test_case testcaseid="CreateAccounts" type="deprecated">
		<t:objective>create accounts</t:objective>
		<t:steps>
			1. Auth with admin
			2. create accounts
		</t:steps>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account1.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account1.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account1.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account2.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account2.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account2.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account3.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account3.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account3.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account4.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account4.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account4.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account5.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account5.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account5.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account6.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account6.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account6.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account7.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account7.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account7.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account8.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account8.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account8.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account9.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account9.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account9.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account10.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account10.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account10.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account11.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account11.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account11.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account12.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account12.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account12.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account13.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account13.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account13.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account14.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account14.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account14.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account15.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account15.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account15.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account16.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account16.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account16.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account17.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account17.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account17.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account18.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account18.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account18.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account19.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account19.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account19.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account20.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account20.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account20.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account21.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account21.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account21.server" />
			</t:response>
		</t:test>
	</t:test_case>

	<t:test_case testcaseid="ZCS-865_rule1" type="deprecated" bugids="ZCS-865">
		<t:objective>deleteheader i;ascii-casemap (ge)</t:objective>
		<t:steps>
			addheader "X-NewHeader" "Test";
			deleteheader :value "ge" :comparator "i;ascii-casemap" "X-NewHeader" "Test";

			1. Auth with admin
			2. set sieve rule in account1
			3. auth with account
			4. send mail from account to account1
			5. auth with account1
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account1.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule1}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account1.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-NewHeader" emptyset="1" />
				<t:select attr="X-Header" count="1" value="Test" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

	<t:test_case testcaseid="ZCS-865_rule2" type="deprecated"
		bugids="ZCS-865">
		<t:objective>deleteheader i;ascii-casemap multiple headers (ge)
		</t:objective>
		<t:steps>
			addheader "X-NewHeader" "Test1";
			addheader "X-NewHeader" "Test2";
			deleteheader :value "ge" :comparator "i;ascii-casemap" "X-NewHeader" "Test";

			1. Auth with admin
			2. set sieve rule in account2
			3. auth with account
			4. send mail from account to account2
			5. auth with account2
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account2.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule2}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account2.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account2.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-NewHeader" emptyset="1" />
				<t:select attr="X-Header" count="1" value="Test" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

	<t:test_case testcaseid="ZCS-865_rule3" type="deprecated"
		bugids="ZCS-865">
		<t:objective>deleteheader i;ascii-numeric (le)</t:objective>
		<t:steps>
			addheader "X-NewHeader" "2";
			addheader "X-NewHeader" "5";
			deleteheader :value "le" :comparator "i;ascii-numeric" "X-NewHeader" "2";

			1. Auth with admin
			2. set sieve rule in account3
			3. auth with account
			4. send mail from account to account3
			5. auth with account3
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account3.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule3}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account3.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account3.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-NewHeader" count="1" value="5" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

	<t:test_case testcaseid="ZCS-865_rule4" type="deprecated"
		bugids="ZCS-865">
		<t:objective>deleteheader i;ascii-numeric with index (ge)
		</t:objective>
		<t:steps>
			addheader "X-NewHeader" "2";
			addheader "X-NewHeader" "5";
			deleteheader :index 1 :value "ge" :comparator "i;ascii-numeric" "X-NewHeader"
			"2";

			1. Auth with admin
			2. set sieve rule in account4
			3. auth with account
			4. send mail from account to account4
			5. auth with account4
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account4.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule4}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account4.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account4.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-NewHeader" emptyset="1" />
				<t:select attr="X-Header" count="1" value="Test" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>


	<t:test_case testcaseid="ZCS-865_rule5" type="deprecated"
		bugids="ZCS-865">
		<t:objective>deleteheader i;ascii-numeric with index (gt)
		</t:objective>
		<t:steps>
			addheader "X-NewHeader" "1";
			addheader "X-NewHeader" "2";
			deleteheader :index 4 :value "gt" :comparator "i;ascii-numeric" "X-NewHeader"
			"1";

			1. Auth with admin
			2. set sieve rule in account5
			3. auth with account
			4. send mail from account to account5
			5. auth with account5
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account5.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule5}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account5.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account5.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-NewHeader" count="1" value="1" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

	<t:test_case testcaseid="ZCS-865_rule6" type="deprecated"
		bugids="ZCS-865">
		<t:objective>deleteheader i;ascii-casemap (ge)</t:objective>
		<t:steps>
			addheader "X-NewHeader" "C";
			addheader "X-NewHeader" "D";
			addheader "X-NewHeader" "E";
			deleteheader :value "ge" :comparator "i;ascii-casemap" "X-NewHeader" "C";

			1. Auth with admin
			2. set sieve rule in account6
			3. auth with account
			4. send mail from account to account6
			5. auth with account6
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account6.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule6}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account6.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account6.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-NewHeader" count="1" value="C" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

	<t:test_case testcaseid="ZCS-865_rule7" type="deprecated"
		bugids="ZCS-865">
		<t:objective>deleteheader i;ascii-numeric last (le)</t:objective>
		<t:steps>
			addheader "X-NewHeader" "10";
			addheader "X-NewHeader" "20";
			deleteheader :last :value "le" :comparator "i;ascii-numeric" "X-NewHeader" "30";

			1. Auth with admin
			2. set sieve rule in account7
			3. auth with account
			4. send mail from account to account7
			5. auth with account7
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account7.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule7}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account7.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account7.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-NewHeader" count="1" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

	<t:test_case testcaseid="ZCS-865_rule8" type="deprecated"
		bugids="ZCS-865">
		<t:objective>deleteheader i;ascii-numeric positive infinity (gt)
		</t:objective>
		<t:steps>
			addheader "X-NewHeader" "1";
			addheader "X-NewHeader" "2";
			deleteheader :value "gt" :comparator "i;ascii-numeric" "X-NewHeader" "";

			1. Auth with admin
			2. set sieve rule in account8
			3. auth with account
			4. send mail from account to account8
			5. auth with account8
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account8.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule8}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account8.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account8.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-NewHeader" count="2" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

	<t:test_case testcaseid="ZCS-865_rule9" type="deprecated"
		bugids="ZCS-865">
		<t:objective>deleteheader i;ascii-numeric with (gt) index last
		</t:objective>
		<t:steps>
			addheader "X-NewHeader" "1";
			addheader "X-NewHeader" "2";
			addheader "X-NewHeader" "3";
			deleteheader :index 2 :last :value "gt" :comparator "i;ascii-numeric"
			"X-NewHeader" "1";

			1. Auth with admin
			2. set sieve rule in account9
			3. auth with account
			4. send mail from account to account9
			5. auth with account9
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account9.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule9}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account9.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account9.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-NewHeader" count="2" value="1,2" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>


	<t:test_case testcaseid="ZCS-865_rule10" type="deprecated"
		bugids="ZCS-865">
		<t:objective>deleteheader i;ascii-numeric last (gt)</t:objective>
		<t:steps>
			addheader "X-NewHeader" "1";
			addheader "X-NewHeader" "2";
			addheader "X-NewHeader" "3";
			deleteheader :value "eq" :comparator "i;ascii-numeric" "X-NewHeader" "2";
			deleteheader :last :value "gt" :comparator "i;ascii-numeric"
			"X-NewHeader" "1";

			1. Auth with admin
			2. set sieve rule in account10
			3. auth with account
			4. send mail from account to account10
			5. auth with account10
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account10.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule10}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account10.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account10.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-NewHeader" count="1" value="1" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>


	<t:test_case testcaseid="ZCS-865_rule11" type="deprecated"
		bugids="ZCS-865">
		<t:objective>replaceheader i;ascii-casemap (eq)</t:objective>
		<t:steps>
			addheader "X-NewHeader" "Test";
			replaceheader :newname "X-Sieve" :newvalue "Sieve1" :value "eq" :comparator
			"i;ascii-casemap" "X-NewHeader" "Test";

			1. Auth with admin
			2. set sieve rule in account11
			3. auth with account
			4. send mail from account to account11
			5. auth with account11
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account11.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule11}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account11.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account11.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-Sieve" count="1" value="Sieve1" />
				<t:select attr="X-NewHeader" emptyset="1" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

	<t:test_case testcaseid="ZCS-865_rule12" type="deprecated"
		bugids="ZCS-865">
		<t:objective>replaceheader i;ascii-casemap (ge)</t:objective>
		<t:steps>
			addheader "X-NewHeader" "Test1";
			addheader "X-NewHeader" "Test2";
			replaceheader :newname "X-Sieve" :newvalue "Sieve2" :value "ge" :comparator
			"i;ascii-casemap" "X-NewHeader" "Test";

			1. Auth with admin
			2. set sieve rule in account12
			3. auth with account
			4. send mail from account to account12
			5. auth with account12
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account12.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule12}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account12.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account12.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-Sieve" count="2" value="Sieve2" />
				<t:select attr="X-NewHeader" emptyset="1" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

	<t:test_case testcaseid="ZCS-865_rule13" type="deprecated"
		bugids="ZCS-865">
		<t:objective>replaceheader i;ascii-numeric (le)</t:objective>
		<t:steps>
			addheader "X-NewHeader" "2";
			addheader "X-NewHeader" "5";
			replaceheader :newname "X-Sieve" :newvalue "Sieve3" :value "le" :comparator
			"i;ascii-numeric" "X-NewHeader" "2";

			1. Auth with admin
			2. set sieve rule in account13
			3. auth with account
			4. send mail from account to account13
			5. auth with account13
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account13.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule13}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account13.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account13.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>
		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-Sieve" count="1" value="Sieve3" />
				<t:select attr="X-NewHeader" count="1" value="5" />

			</t:restServletResponse>
		</t:resttest>
	</t:test_case>


	<t:test_case testcaseid="ZCS-865_rule14" type="deprecated"
		bugids="ZCS-865">
		<t:objective>replaceheader i;ascii-numeric with index (ge)
		</t:objective>
		<t:steps>
			addheader "X-NewHeader" "2";
			addheader "X-NewHeader" "5";
			replaceheader :newname "X-Sieve" :newvalue "Sieve4" :index 1 :value "ge"
			:comparator "i;ascii-numeric" "X-NewHeader" "2";

			1. Auth with admin
			2. set sieve rule in account14
			3. auth with account
			4. send mail from account to account14
			5. auth with account14
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account14.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule14}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account14.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account14.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-Sieve" count="1" value="Sieve4" />
				<t:select attr="X-NewHeader" count="1" value="2" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

	<t:test_case testcaseid="ZCS-865_rule15" type="deprecated"
		bugids="ZCS-865">
		<t:objective>replaceheader i;ascii-numeric with index (gt)
		</t:objective>
		<t:steps>
			addheader "X-NewHeader" "1";
			addheader "X-NewHeader" "2";
			replaceheader :newname "X-Sieve" :newvalue "Sieve5" :index 4 :value "gt"
			:comparator "i;ascii-numeric" "X-NewHeader" "1";

			1. Auth with admin
			2. set sieve rule in account15
			3. auth with account
			4. send mail from account to account15
			5. auth with account15
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account15.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule15}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account15.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account15.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-Sieve" emptyset="1" />
				<t:select attr="X-NewHeader" count="2" value="1,2" />

			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

	<t:test_case testcaseid="ZCS-865_rule16" type="deprecated"
		bugids="ZCS-865">
		<t:objective>replaceheader i;ascii-casemap multiple (ge)</t:objective>
		<t:steps>
			addheader "X-NewHeader" "C";
			addheader "X-NewHeader" "D";
			addheader "X-NewHeader" "E";
			replaceheader :newname "X-Sieve" :newvalue "Sieve6" :value "ge" :comparator
			"i;ascii-casemap" "X-NewHeader" "C";

			1. Auth with admin
			2. set sieve rule in account16
			3. auth with account
			4. send mail from account to account16
			5. auth with account16
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account16.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule16}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account16.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account16.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-Sieve" count="3" value="Sieve6" />
				<t:select attr="X-NewHeader" emptyset="1" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

	<t:test_case testcaseid="ZCS-865_rule17" type="deprecated"
		bugids="ZCS-865">
		<t:objective>replaceheader i;ascii-numeric last (le)</t:objective>
		<t:steps>
			addheader "X-NewHeader" "10";
			addheader "X-NewHeader" "20";
			replaceheader :newname "X-Sieve" :newvalue "Sieve7" :last :value "le" :comparator
			"i;ascii-numeric" "X-NewHeader" "30";

			1. Auth with admin
			2. set sieve rule in account17
			3. auth with account
			4. send mail from account to account17
			5. auth with account17
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account17.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule17}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account17.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account17.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-Sieve" count="1" value="Sieve7" />
				<t:select attr="X-NewHeader" count="1" value="20" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

	<t:test_case testcaseid="ZCS-865_rule18" type="deprecated"
		bugids="ZCS-865">
		<t:objective>replaceheader i;ascii-numeric positive infinity (gt)
		</t:objective>
		<t:steps>
			addheader "X-NewHeader" "1";
			addheader "X-NewHeader" "2";
			replaceheader :newname "X-Sieve" :newvalue "Sieve8" :value "gt" :comparator
			"i;ascii-numeric" "X-NewHeader" "";

			1. Auth with admin
			2. set sieve rule in account18
			3. auth with account
			4. send mail from account to account18
			5. auth with account18
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account18.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule18}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account18.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account18.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-Sieve" emptyset="1" />
				<t:select attr="X-NewHeader" count="2" value="1,2" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

	<t:test_case testcaseid="ZCS-865_rule19" type="deprecated"
		bugids="ZCS-865">
		<t:objective>replaceheader i;ascii-numeric (gt) index last
		</t:objective>
		<t:steps>
			addheader "X-NewHeader" "1";
			addheader "X-NewHeader" "2";
			addheader "X-NewHeader" "3";
			replaceheader :newname "X-Test" :newvalue "Sieve9" :index 2 :last :value "gt"
			:comparator "i;ascii-numeric" "X-NewHeader" "1";

			1. Auth with admin
			2. set sieve rule in account19
			3. auth with account
			4. send mail from account to account19
			5. auth with account19
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account19.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule19}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account19.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account19.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-Test" count="1" value="Sieve9" />
				<t:select attr="X-NewHeader" count="2" value="1,3" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

	<t:test_case testcaseid="ZCS-865_rule20" type="deprecated"
		bugids="ZCS-865">
		<t:objective>replaceheader i;ascii-numeric multiple replace
		</t:objective>
		<t:steps>
			addheader "X-NewHeader" "1"
			addheader "X-NewHeader" "2"
			addheader "X-NewHeader" "3"
			replaceheader :newname "X-Test" :newvalue "Sieve10" :value "eq" :comparator
			"i;ascii-numeric" "X-NewHeader" "2";
			replaceheader :newname "X-Test" :newvalue "Sieve11" :last :value "gt" :comparator
			"i;ascii-numeric" "X-NewHeader" "1";

			1. Auth with admin
			2. set sieve rule in account20
			3. auth with account
			4. send mail from account to account20
			5. auth with account20
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account20.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule20}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account20.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account20.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-Test" count="2" value="Sieve10,Sieve11" />
				<t:select attr="X-NewHeader" count="1" value="1" />

			</t:restServletResponse>
		</t:resttest>
	</t:test_case>


	<t:test_case testcaseid="ZCS-865_rule21" type="deprecated"
		bugids="ZCS-865">
		<t:objective>replaceheader with empty header-name i;ascii-casemap (eq)
		</t:objective>
		<t:steps>
			addheader "X-NewHeader" "A";
			addheader "X-NewHeader" "B";
			replaceheader :newname "" :newvalue "Sieve8" :value "eq" :comparator
			"i;ascii-casemap" "X-NewHeader" "A";

			1. Auth with admin
			2. set sieve rule in account21
			3. auth with account
			4. send mail from account to account21
			5. auth with account21
			6. find and verify email headers
		</t:steps>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		
		<t:test id="modifyaccountrequest1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account21.id}</id>
					<a n="zimbraMailSieveScript">${sieve_rule21}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account21.name}" />
						<su>${msg.subject}</su>
						<mp ct="text/plain">
							<content>content3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account21.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message"
					fetch="1">
					<query>in:Inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="" count="1" value="Sieve8" />
				<t:select attr="X-NewHeader" count="1" value="B" />

			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

</t:tests>