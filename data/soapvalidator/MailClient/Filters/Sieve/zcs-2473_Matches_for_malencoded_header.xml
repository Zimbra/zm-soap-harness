<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account3.name" value="test3.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account4.name" value="test4.${TIME}.${COUNTER}@${defaultdomain.name}" />

<t:property name="folder_inbox" value="Inbox" />
<t:property name="msg01.file" value="${testMailRaw.root}/zcs-2473/msg01.txt" />
<t:property name="msg02.file" value="${testMailRaw.root}/zcs-2473/msg02.txt" />
<t:property name="1" value="$\{1}" />


<t:property name="sieve_rule1" value='require ["editheader", "variables"];
	replaceheader :newvalue "[new value]${1}" :matches "Subject" "*";
'/>

<t:property name="sieve_rule2" value='require ["editheader"];
	deleteheader :matches "Subject" "*";
'/>

<t:property name="sieve_rule3" value='require ["tag"];
    if anyof (header :matches ["subject"] "*") {
        tag "ABC";
        stop;
    } else {
        tag "Not ABC";
        stop;
    }
'/>

<t:property name="sieve_rule4" value='require ["tag"];
    if address :matches ["To"] "*" {
        tag "Matched";
        stop;
    } else {
        tag "Not matched";
        stop;
    }
'/>


    <t:test_case testcaseid="Ping" type="always">
        <t:objective>basic system check</t:objective>
        <t:test required="true">
            <t:request>
                <PingRequest xmlns="urn:zimbraAdmin" />
            </t:request>
            <t:response>
                <t:select path="//admin:PingResponse" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="AcctSetup1_create_account" type="always">
        <t:objective>create test accounts</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

	    <t:test>
	        <t:request xmlns="urn:zimbraAdmin">
	            <GetCosRequest>
	                <cos by="name">default</cos>
	            </GetCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="name" match="default"/>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="id" set="cosid"/>
	        </t:response>
	    </t:test>

	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveEditHeaderEnabled">TRUE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>
	        </t:response>
	    </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account1.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraAdminSieveScriptAfter">${sieve_rule1}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_account1.server" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account2.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraAdminSieveScriptAfter">${sieve_rule2}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_account2.server" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account3.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraAdminSieveScriptAfter">${sieve_rule3}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_account3.server" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account4.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraAdminSieveScriptAfter">${sieve_rule4}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_account4.server" />
            </t:response>
        </t:test>

     </t:test_case>

     <t:test_case testcaseid="zcs-861_rule1" type="smoke" bugids="zcs-2473">
        <t:objective>
            Verify that the mal-encoded header value (subject) does
            not cancel the filter execution of "replaceheader" action.
            Mal-encoded header -- invalid charset "ABC"
        </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a="${test_account1.name}" />
                        <su>=?ABC?B?GyRCJFskMhsoQg==?=</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account1.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="su" contains="[new value]=?ABC?B?GyRCJFskMhsoQg==?=" />
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>
    </t:test_case>


     <t:test_case testcaseid="zcs-2473_rule2" type="smoke" bugids="zcs-2473">

        <t:objective>
            Verify that the mal-encoded header value (subject) does
            not cancel the filter execution of "deleteheader" action.
            Mal-encoded header -- invalid encode method "Z"
        </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a="${test_account2.name}" />
                        <su>=?UTF-8?Z?GyRCJFskMhsoQg==?=</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg2.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account2.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg2.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <t:select attr="Subject" emptyset="1" />
            </t:restServletResponse>
        </t:resttest>
    </t:test_case>


    <t:test_case testcaseid="zcs-2473_rule3" type="smoke" bugids="zcs-2473">
        <t:objective>
            Verify that the mal-encoded header value (subject) does
            not cancel the filter execution of "header" test.
            Mal-encoded header -- Empty base64 encoding
        </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:mailinjecttest>
            <t:lmtpInjectRequest>
                <filename>${msg01.file}</filename>
                <to>${test_account3.name}</to>
                <from>${admin.user}</from>
                <server>${test_account3.server}</server>
            </t:lmtpInjectRequest>
        </t:mailinjecttest>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account3.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />

            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="ABC"/>
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg3.id" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg3.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <t:select attr="Subject"  contains="=?utf-8?B??=" />
            </t:restServletResponse>
        </t:resttest>

    </t:test_case>


    <t:test_case testcaseid="zcs-2473_rule4" type="smoke" bugids="zcs-2473">
        <t:objective>
            Verify that the mal-encoded header value (To) does
            not cancel the filter execution of "address" test.
            Mal-encoded header -- Broken base64 encoding
        </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:mailinjecttest>
            <t:lmtpInjectRequest>
                <filename>${msg02.file}</filename>
                <to>${test_account4.name}</to>
                <from>${admin.user}</from>
                <server>${test_account4.server}</server>
            </t:lmtpInjectRequest>
        </t:mailinjecttest>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account4.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="Matched"/>
            </t:response>
        </t:test>
    </t:test_case>


    <t:finally type="always">
        <t:objective>reset cosconfig to default </t:objective>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveEditHeaderEnabled">FALSE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>
	        </t:response>
	    </t:test>
    </t:finally>
</t:tests>
