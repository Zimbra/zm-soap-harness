<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="fil_backup.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="fil_backup.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="filter1.name" value="filterbackup.${TIME}.${COUNTER}"/>
<t:property name="filter2.name" value="filterbackup.${TIME}.${COUNTER}"/>
<t:property name="subject1" value="Subject 1"/>
<t:property name="subject2" value="Subject 2"/>
<t:property name="compose.content" value="Content in the message is Filter Backup..."/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>


    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct_setup_Contacts_Backup" type="always" >
    <t:objective>Create test accounts</t:objective>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid="Filter_Backup_01" type="smoke" areas="backup,nonappliance">
    <t:objective>Verify that after backup and restore an account having a Filter Rule, filter is restored. </t:objective>
    <t:steps>
			1. Login into account1.
			2. Create an Filter Rule(with action as "fileinto" Junk folder).
			3. Delete the account.
			4. Restore the account.
			5. Verify the Filter Rule.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test id="filters_basic01a">
        <t:request>
            <ModifyFilterRulesRequest xmlns="urn:zimbraMail">
                <filterRules>
					<filterRule name="${filter1.name}" active="1">
                         <filterTests condition="anyof">
                        	<headerTest  header= "subject" stringComparison="is"  value="${subject1}" />          
                        </filterTests>
                        <filterActions> 
                        	<actionFileInto folderPath="/Junk" />
                        </filterActions>
                    </filterRule>
                 </filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>
    
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="account.name" value="${account1.name}"/>
	<t:property name="account.id" value="${account1.id}"/>
     
    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:include filename="BackupWorkflowFullDeleteRestore.inc"/> 
 	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test >
        <t:request>
	        <GetFilterRulesRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFilterRulesResponse/mail:filterRules/mail:filterRule" attr="name" match="${filter1.name}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="Sign_Backup_02" type="smoke" areas="backup,nonappliance">
    <t:objective>Backup (incremental) and restore an account with a Filter Rule. Verify that after backup and restore the Filter Rule is correctly restored. </t:objective>
    <t:steps>
			1. Login into account2.
			2. Create an Filter Rule (with action as "fileinto" Junk folder).
			3. Backup the account.
			4. Modify the Filter Rule (Rename).
			5. Do incremental backup.
			6. Delete the account.
			7. Restore the account.
			8. Verify the modified Filter Rule is displayed.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
	
    <t:test id="filters_basic01a">
        <t:request>
            <ModifyFilterRulesRequest xmlns="urn:zimbraMail">
                <filterRules>
					<filterRule name="${filter1.name}" active="1">
                         <filterTests condition="anyof">
                        	<headerTest  header= "subject" stringComparison="is"  value="${subject1}" />          
                        </filterTests>
                        <filterActions> 
                        	<actionFileInto folderPath="/Junk" />
                        </filterActions>
                    </filterRule>
                 </filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="account.name" value="${account2.name}"/>
	<t:property name="account.id" value="${account2.id}"/>
     
    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:include filename="BackupRequestFullBasic.inc"/> 
 	
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test id="filters_basic01a">
        <t:request>
            <ModifyFilterRulesRequest xmlns="urn:zimbraMail">
                <filterRules>
					<filterRule name="${filter2.name}" active="1">
                         <filterTests condition="anyof">
                        	<headerTest  header= "subject" stringComparison="is"  value="${subject1}" />          
                        </filterTests>
                        <filterActions> 
                        	<actionFileInto folderPath="/Junk" />
                        </filterActions>
                    </filterRule>
                 </filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>
    
    
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="account.name" value="${account2.name}"/>
	<t:property name="account.id" value="${account2.id}"/>
     
    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:include filename="BackupWorkflowIncrementalDeleteRestore.inc"/> 
 	
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test >
        <t:request>
	        <GetFilterRulesRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFilterRulesResponse/mail:filterRules/mail:filterRule" attr="name" match="${filter2.name}"/>
        </t:response>
    </t:test>

</t:test_case>


</t:tests>