<t:tests xmlns:t = "urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="domain1.name" value="domain${TIME}${COUNTER}.com"/>  

<t:property name="account1.name" value="acct1${TIME}${COUNTER}@${domain1.name}"/>
<t:property name="account2.name" value="acct2${TIME}${COUNTER}@${domain1.name}"/>
<t:property name="account3.name" value="acct2${TIME}${COUNTER}@${domain1.name}"/>
<t:property name="account4.name" value="acct2${TIME}${COUNTER}@${domain1.name}"/>


<t:property name="msg01.subject" value="message1"/>
<t:property name="msg02.subject" value="message1"/>
<t:property name="message_content" value="this mail is to check whether the message is read or unread"/>



<t:test_case testcaseid = "Ping" type = "always">
    <t:objective>basic system check</t:objective>
    
    <t:test id = "ping">
        <t:request>
            <PingRequest xmlns = "urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path = "//admin:PingResponse"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid = "acctSetup1_conv_backup" type = "always">
    <t:objective>create test account</t:objective>
    
    <t:test id = "admin_login" required = "true" depends = "ping">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:AuthResponse/admin:authToken" set = "authToken"/>
        </t:response>
    </t:test>

	<t:test reuqired="true">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain1.name}</name>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain1.id"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>   

	<t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>   

	<t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>   
       
</t:test_case>


<t:test_case testcaseid="conv_backup_01" type="smoke" areas="backup,nonappliance" bugids="11745" >
<t:objective>Backup and restore an account with conversations. Verify that after backup and restore, the 3 messages are still formed in the same conversation  </t:objective>
<t:steps>
         1. Login to account1.  Send 3 mails("subject", "RE: subject" and  "FWD: subject") to account2.
		 2. Login to Account2.  Verify the conversation exists with three mails
		 3. Backup the Account2
         4. Delete the Account2
         5. Restore the Account2
		 6. Login to Account2.  Verify that the 3 messages are still formed in the same conversation
</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

     <t:test required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a="${account2.name}"/>
                    <su>${msg01.subject}</su>
                    <mp ct="text/plain">
                        <content>${message_content}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse"/>
        </t:response>
    </t:test>

	<!-- Wait for 5 seconds to make sure the first message is received -->
	<t:delay msec="5000"/>
	
	<t:test required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a="${account2.name}"/>
                    <su>Re:${msg01.subject}</su>
                    <mp ct="text/plain">
                        <content>${message_content}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse"/>
        </t:response>
    </t:test>

	<t:test required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a="${account2.name}"/>
                    <su>Fwd:${msg01.subject}</su>
                    <mp ct="text/plain">
                        <content>${message_content}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse"/>
        </t:response>
    </t:test>
 
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>   

	<t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" groupBy="conversation" >
                <query>subject:(${msg01.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:c" attr="id" set="conv.id"/>
        </t:response>
    </t:test>

	<t:test >
	 <t:request>
	   <GetConvRequest xmlns="urn:zimbraMail">
	     <c id="${conv.id}"/>
	   </GetConvRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:GetConvResponse/mail:c" attr="n" match="3"/>
	 </t:response>
	</t:test>

	<t:property name="server.zimbraAdmin" value="${account2.server}"/>
	<t:property name="account.name" value="${account2.name}"/>
	<t:property name="account.id" value="${account2.id}"/>
     
    

	<t:include filename="BackupWorkflowFullDeleteRestore.inc"/> 
 	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>   

	<t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" groupBy="conversation" >
                <query>subject:(${msg01.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:c" attr="id" set="conv.id"/>
        </t:response>
    </t:test>

	<t:test >
	 <t:request>
	   <GetConvRequest xmlns="urn:zimbraMail">
	     <c id="${conv.id}"/>
	   </GetConvRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:GetConvResponse/mail:c" attr="n" match="3"/>
	 </t:response>
	</t:test>


</t:test_case>


<t:test_case testcaseid="conv_backup_02" type="smoke" areas="backup,nonappliance"  bugids="2414">
<t:objective>Backup (incremental) and restore an account with conversations. Verify that after backup and restore, the 3 messages are still formed in the same conversation </t:objective>
<t:steps>
         1. Login to account3 
         2. Send a mail to account4.
		 3. Backup the Account4.
		 4. Send two more mails ("RE: subject" and  "FWD: subject") to account4
		 5. Do incremental backup of Account4
         6. Delete the Account4
         7. Restore the Account4
		 8. Verify that the 3 messages are still formed in the same conversation
</t:steps>

	<t:property name="server.zimbraAccount" value="${account3.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

     <t:test required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a="${account4.name}"/>
                    <su>${msg02.subject}</su>
                    <mp ct="text/plain">
                        <content>${message_content}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:SendMsgResponse/mail:m" attr = "id" set = "msg02.id1"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAdmin" value="${account4.server}"/>
	<t:property name="account.name" value="${account4.name}"/>
	<t:property name="account.id" value="${account4.id}"/>
     
   
	<t:include filename="BackupRequestFullBasic.inc"/> 

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/> 	
	<t:property name="server.zimbraAccount" value="${account3.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a="${account4.name}"/>
                    <su>Re:${msg02.subject}</su>
                    <mp ct="text/plain">
                        <content>${message_content}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:SendMsgResponse/mail:m" attr = "id" set = "msg02.id2"/>
        </t:response>
    </t:test>

	<t:test required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a="${account4.name}"/>
                    <su>Fwd:${msg02.subject}</su>
                    <mp ct="text/plain">
                        <content>${message_content}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:SendMsgResponse/mail:m" attr = "id" set = "msg02.id3"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account4.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>   

	<t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" groupBy="conversation" >
                <query>subject:(${msg02.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:c" attr="id" set="conv1.id"/>
        </t:response>
    </t:test>

	<t:test >
	 <t:request>
	   <GetConvRequest xmlns="urn:zimbraMail">
	     <c id="${conv1.id}"/>
	   </GetConvRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:GetConvResponse/mail:c" attr="n" match="3"/>
	 </t:response>
	</t:test>


	<t:property name="server.zimbraAdmin" value="${account4.server}"/>
	<t:property name="account.name" value="${account4.name}"/>
	<t:property name="account.id" value="${account4.id}"/>
     
    
	<t:include filename="BackupWorkflowIncrementalDeleteRestore.inc"/> 
 	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account4.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>   

	<t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" groupBy="conversation" >
                <query>subject:(${msg02.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:c" attr="id" set="conv1.id"/>
        </t:response>
    </t:test>

	<t:test >
	 <t:request>
	   <GetConvRequest xmlns="urn:zimbraMail">
	     <c id="${conv1.id}"/>
	   </GetConvRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:GetConvResponse/mail:c" attr="n" match="3"/>
	 </t:response>
	</t:test>


</t:test_case>



</t:tests>
