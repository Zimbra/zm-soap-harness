<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="tag1.name" value="tag1${TIME}${COUNTER}" />
<t:property name="tag2.name" value="tag2${TIME}${COUNTER}" />

<t:property name="test_account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account3.name" value="test3.${TIME}.${COUNTER}@${defaultdomain.name}" />

<t:property name="tag.colorvalid" value="4" />
<t:property name="folder1.name" value="folder1.${TIME}.${COUNTER}"/>
<t:property name="folder2.name" value="folder2.${TIME}.${COUNTER}"/>

<t:property name="msg.subject" value="email01A"/>
<t:property name="message.sub" value="subject${TIME}.${COUNTER}"/>
<t:property name="message.content1" value="content${TIME}.${COUNTER}"/>

<t:property name="root1" value="${soapxml.root}/MailClient/iCal/MS_Outlook_2003"/>
<t:property name="msg02.file" value="${root1}/outlook-ical-allday.txt"/>

<t:property name="mail1.subject" value="outlook_ical_subject6"/>
<t:property name="appt1.subject" value="appt1_subject"/>
<t:property name="search.start" value="${TIME(-100d)}"/>
<t:property name="search.end" value="${TIME(+100d)}"/>
<t:property name="TimeRangeStart" value="${TIME}"/>
<t:property name="TimeRangeFinish" value="${TIME(+2d)}"/>

<t:property name="compose.subject" value="Subject of the message is testing"/>
<t:property name="compose1.subject" value="Subject of the message is testing123"/>
<t:property name="compose.content" value="Content in the message is contents..."/>

<t:property name="root" value="${testMailRaw.root}/email01"/>
<t:property name="msg01.file" value="${root}/msg01.txt"/>

<t:property name="appointment.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.location" value="Location of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.content" value="Content of the message${TIME}.${COUNTER}"/>
<t:property name="appointment2.content" value="Content of the message2${TIME}.${COUNTER}"/>
<t:property name="appointment1.subject" value="subject1${TIME}.${COUNTER}"/>
<t:property name="appointment2.subject" value="subject2${TIME}.${COUNTER}"/>
<t:property name="appointment1.location" value="Location1 of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment2.location" value="Location2 of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment1.content" value="Content1 of the message${TIME}.${COUNTER}"/>
<t:property name="appointment1.newsubject" value="Subj${TIME}.${COUNTER}"/>
<t:property name="appointment1.newlocation" value="Loc${TIME}.${COUNTER}"/>
<t:property name="appointment1.newcontent" value="Cont${TIME}.${COUNTER}"/>

<t:property name="CurrentTime" value="${GENTIME}"/>
<t:property name="Time1" value="${ICALTIME(+30m)}"/>
<t:property name="Time2" value="${ICALTIME(+1h)}"/>
<t:property name="Time3" value="${ICALTIME(-1d)}"/>
<t:property name="Time4" value="${ICALTIME(+1d)}"/>

<t:property name="op.flag" value="flag"/>
<t:property name="op.unflag" value="!flag"/>
<t:property name="op.read" value="read"/>
<t:property name="op.unread" value="!read"/>
<t:property name="op.tag" value="tag"/>
<t:property name="op.untag" value="!tag"/>
<t:property name="op.move" value="move"/>
<t:property name="op.delete" value="delete"/>
<t:property name="op.spam" value="spam"/>
<t:property name="message.subject1" value="Subject${TIME}.${COUNTER}"/>
<t:property name="message.content1" value="content of the message${TIME}.${COUNTER}"/>
<t:property name="message.subject2" value="Subjectof message${TIME}.${COUNTER}"/>
<t:property name="message.content2" value="content${TIME}.${COUNTER}"/>

<t:property name="test_acct.server" value="NOT_DEFINED"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}" />

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>
    
	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin" />
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse" />
		</t:response>
	</t:test>
    
</t:test_case>


<t:test_case testcaseid="acctSetup1_notification" type="always">
    <t:objective>create test account</t:objective>
    
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account1.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>


</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

<t:test_case testcaseid="acctlogin1_notification" type="always">
    <t:objective>login as the test account</t:objective>
    
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${test_account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />

		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="Notification25" type="smoke" bugids="18478" >
	<t:objective> Verify nonotify should turn off notifications, but maintain sessions  </t:objective>

    <!-- Per Bug 18478 - nonotify is equivalent to nosession -->
    
    <t:test>
        <t:requestContext>
            <authToken>${authToken}</authToken>

            <nonotify/>
        </t:requestContext>
        <t:request>
            <CreateTagRequest xmlns="urn:zimbraMail">
                <tag name="tag1.${TIME}.${COUNTER}" color="${tag.colorvalid}" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:header path="//zimbra:context/zimbra:notify" emptyset="1"/>

            <t:header path="//zimbra:context/zimbra:change" attr="token"/>
            <t:select path="//mail:CreateTagResponse"/>
        </t:response>
    </t:test>

</t:test_case>



</t:tests>