<t:tests xmlns:t="urn:zimbraTestHarness">

	<t:property name="account1.name"
		value="user${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account2.name"
		value="user${TIME}${COUNTER}@${defaultdomain.name}" />

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}" />

	<t:test_case testcaseid="Ping" type="always">
		<t:objective>basic system check</t:objective>

		<t:test required="true">
			<t:request>
				<PingRequest xmlns="urn:zimbraAdmin" />
			</t:request>
			<t:response>
				<t:select path="//admin:PingResponse" />
			</t:response>
		</t:test>

	</t:test_case>


	<t:test_case testcaseid="acct1_setup" type="always">
		<t:objective>create test account</t:objective>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account1.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account1.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account1.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account2.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account2.id" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account2.server" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<GetAllAccountsRequest xmlns="urn:zimbraAdmin">
					<domain by="name">${defaultdomain.name}</domain>
				</GetAllAccountsRequest>
			</t:request>
			<t:response>
				<t:select
					path="//admin:GetAllAccountsResponse/admin:account[contains(@name,'galsync.')]"
					attr="id" set="galsyncid" />
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<SyncGalAccountRequest xmlns="urn:zimbraAdmin">
					<account id="${galsyncid}">
						<datasource by="name">InternalGal</datasource>
					</account>
				</SyncGalAccountRequest>
			</t:request>
			<t:response>
			</t:response>
		</t:test>
	</t:test_case>


	<t:test_case testcaseid="JSON_MultiValuedAttributes_01"
		type="functional" bugids="6087">
		<t:objective>JSON: verify JSON supports multi-valued attributes
		</t:objective>


		<t:property name="server.zimbraAccount" value="${account1.server}" />

		<!-- The harness looks for the <format type="js"/> element, and if present, 
			will convert the JSON response to XML for <t:select/> parsing. -->

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse" attr="authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchGalRequest xmlns="urn:zimbraAccount">
					<name>${account2.name}</name>
				</SearchGalRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:SearchGalResponse">
					<t:select path="//acct:a[@n='objectClass']" match="inetOrgPerson" />
					<t:select path="//acct:a[@n='objectClass']" match="zimbraAccount" />
				</t:select>
			</t:response>
		</t:test>

		<t:test>
			<t:requestContext>
				<authToken>${authToken}</authToken>
				<format type="js" />
			</t:requestContext>
			<t:request>
				<SearchGalRequest xmlns="urn:zimbraAccount">
					<name>${account2.name}</name>
				</SearchGalRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:SearchGalResponse">
					<t:select path="//acct:a[@n='objectClass']" match="inetOrgPerson" />
					<t:select path="//acct:a[@n='objectClass']" match="zimbraAccount" />
				</t:select>
			</t:response>
		</t:test>

	</t:test_case>


</t:tests>
