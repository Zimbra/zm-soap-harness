<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="subject" value="test account alias"/>
<t:property name="alias.name" value="alias${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="message.content1" value="content of the message${TIME}.${COUNTER}"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>Basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Create a test account </t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="account1.server"/>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="account2.server"/>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
        </t:response>
    </t:test>
        
</t:test_case>

<t:test_case testcaseid="add account alias for account1" type="always" >
    <t:objective>Add account alias</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>	
	
	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "/opt/zimbra/bin/zmprov aaa ${account1.name} ${alias.name}"  RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.zmmtactl}</params>
		</t:request>
	</t:staftask>
	
	<!-- Sleep for 2 minutes to wait for mbox to come up -->
	<t:delay sec="10"/>

</t:test_case>

<t:test_case testcaseid="bug89672" type="smoke" bugids="89672">
    <t:objective>envelope from address does not change when sending mail using persona</t:objective>
	<t:steps>
	1. Change zimbraSmtpRestrictEnvelopeFrom to FALSE for user1
	2. Create alias for user1 and send an email from user1 to user2
	3. Verify ReturnPath is set to the alias of the account
	</t:steps>

    <t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
   
      <t:test>
        <t:request>
            <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                <id>${account1.id}</id>
                <a n="zimbraSmtpRestrictEnvelopeFrom">FALSE</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
    
	<t:test id="auth1" required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>
	    
	<t:test id="sendmail1" required="true">
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="f" a="${alias.name}"/>
					<e t="t" a="${account2.name}"/>
					<su> ${subject}</su>
					<mp ct="text/plain">
					<content> ${message.content1}</content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message.id1"/>
		</t:response>
	</t:test>

	<t:test id="auth1" required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message.id1}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='f']" attr="a" match="${alias.name}"  />
        </t:response>
    </t:test>

	<t:resttest>
		<t:restServletRequest>
			<id>${message.id1}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
			<t:select attr="Return-Path" match="${alias.name}"/>
		</t:restServletResponse>
	</t:resttest>
	
</t:test_case>

</t:tests>