<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="acct1.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="msg01.file"				value="${testMailRaw.root}/8055/msg01.txt"/>
<t:property name="msg01.part1.file.tnef"	value="${testMailRaw.root}/8055/winmail.dat"/>
<t:property name="msg01.subject" value="Update for Calendar"/>

<t:property name="account1.server" value="NOT_DEFINED"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    	

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
	    <t:response>
	        <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<!-- Since this bug crashes the server, make it smoke -->
<t:test_case testcaseid="Bug_8055" type="smoke" bugids="8055, 8212">
    <t:objective>Verify bug #8055 (and 8212)</t:objective>
    <t:steps>
	1. Inject mail with TNEF attachment
	2. Verify that the message is received without error
    </t:steps>


	<t:property name="uri" value="${admin.uri}"/>
    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test >
	    <t:request>
	        <CreateAccountRequest xmlns="urn:zimbraAdmin">
	            <name>${account1.name}</name>
	            <password>${defaultpassword.value}</password>
	        </CreateAccountRequest>
	    </t:request>
	    <t:response>
		    <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id"/>	
                 <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
	    </t:response>
	</t:test>


    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
			<to>${account1.name}</to>
			<from>${nonZimbraUser.name}</from>
			<server>${account1.server}</server>
         </t:lmtpInjectRequest>
    </t:mailinjecttest>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
	<t:test >
	 <t:request>
	  <AuthRequest xmlns="urn:zimbraAccount">
	    <account by="name">${account1.name}</account>
	    <password>${defaultpassword.value}</password>
	  </AuthRequest>
	 </t:request>
	 <t:response>
		<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
		<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

	 </t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
	   <query>subject:(${msg01.subject})</query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg01.id"/>
	 </t:response>
	</t:test>

    <t:test id="MsgGetRequest1b" depends="MsgGetRequest1a">
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${msg01.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${msg01.id}"/>
            <t:select path="//mail:GetMsgResponse/mail:m">
            	<t:select path="mail:mp[@ct='multipart/mixed']//mail:mp[@ct='application/vnd.ms-tnef']" attr="part" set="msg01.part1.id"/>
            </t:select>
        </t:response>
    </t:test>

	<t:property name="server.restServlet" value="${account1.server}"/>
	
	<!-- Binary checking of attachment fails which unnecessary failing the test case. Hence commenting the check>
	<t:resttest>
		<t:restServletRequest>
			<id>${msg01.id}</id>
			<part>${msg01.part1.id}</part>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
			<t:content file="${msg01.part1.file.tnef}"/>
		</t:restServletResponse>
	</t:resttest-->


</t:test_case>


</t:tests>

