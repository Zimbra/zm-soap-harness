<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.document.textfile" value="${testMailRaw.root}/Contact/contact1.txt"/>
<t:property name="account2.document.htmlfile" value="${testMailRaw.root}/wiki01/basic.html"/>

<t:property name="uploadFile.name" value="${testMailRaw.root}/email01/msg01.txt"/>
<t:property name="uploadFile.subject" value="email01A"/>
<t:property name="uploadFile.fragment" value="simple text string in the body"/>
<t:property name="uploadFile.content" value="simple text string in the body.*"/>

<t:property name="account1.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.server" value="NOT_DEFINED"/>
<t:property name="account1.folder1.name" value="folder.${TIME}.${COUNTER}"/>

<t:property name="account2.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.server" value="NOT_DEFINED"/>
<t:property name="account2.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="account2.message1.content" value="content.${TIME}.${COUNTER}"/>

<t:property name="account3.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account4.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.server" value="NOT_DEFINED"/>
<t:property name="account4.folder1.name" value="folder.${TIME}.${COUNTER}"/>

<t:property name="account5.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account5.server" value="NOT_DEFINED"/>
<t:property name="account5.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="account5.message2.content" value="content.${TIME}.${COUNTER}"/>

<t:property name="account6.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account6.server" value="NOT_DEFINED"/>
<t:property name="account6.folder1.name" value="folder.${TIME}.${COUNTER}"/>

<t:property name="account7.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account7.server" value="NOT_DEFINED"/>
<t:property name="account7.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="account7.message2.content" value="content.${TIME}.${COUNTER}"/>

<t:property name="account8.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account8.server" value="NOT_DEFINED"/>
<t:property name="account8.folder1.name" value="folder.${TIME}.${COUNTER}"/>

<t:property name="account9.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account9.server" value="NOT_DEFINED"/>
<t:property name="account9.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="account10.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account10.server" value="NOT_DEFINED"/>
<t:property name="account10.folder1.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="account11.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account11.server" value="NOT_DEFINED"/>
<t:property name="account11.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="account11.folder1.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="account12.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account12.server" value="NOT_DEFINED"/>
<t:property name="account12.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="account13.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account14.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account13.folder1.name" value="account13.folder1.${TIME}.${COUNTER}"/>
<t:property name="account14.mountpoint1.name" value="mountpoint1.${account13.folder1.name}"/>


<t:property name="op.grant"			value="grant"/>
<t:property name="op.read"			value="read"/>
<t:property name="op.flag"			value="flag"/>
<t:property name="op.tag"			value="tag"/>
<t:property name="op.delete"		value="delete"/>

<t:property name="grant.usr"			value="usr"/>
<t:property name="grant.grp"			value="grp"/>


<t:property name="rights.none"			value=""/>
<t:property name="rights.read"			value="r"/>
<t:property name="rights.write"			value="w"/>
<t:property name="rights.insert"		value="i"/>
<t:property name="rights.delete"		value="d"/>
<t:property name="rights.administer"	value="a"/>
<t:property name="rights.workflow"		value="x"/>
<t:property name="rights.manager"		value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}"/>



<t:test_case testcaseid="BriefcaseFoldersSharingBasic_AccountSetup" type="always" >
    <t:objective>Create accounts needed for the all testcases for this file</t:objective>

    <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account1" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account1.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account2" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account2.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account3" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account3.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account4" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account4.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account5" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account5.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account5.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account5.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account6" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account6.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account6.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account6.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account7" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account7.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account7.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account7.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account8" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account8.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account8.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account8.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account9" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account9.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account9.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account9.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account10" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account10.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account10.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account10.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account11" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account11.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account11.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account11.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account12" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account12.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account12.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account12.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account13" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account13.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account13.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account13.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account14" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account14.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account14.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account14.server"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="BriefcaseFoldersSharingBasic_01" type="smoke">
    <t:objective>Verify that sharing  briefcase folders with read access allows document to be viewed, but not added,  deleted, or reshared</t:objective>
	<t:steps>
		1. Login as account1
		2. Add a briefcase folder, share the folder with account2 (permissions=read)
		3. Login as account2
		4. Mount the drive, success.	
		5. SearchRequest.  Success.
		6. Try add a document.  PERM_DENIED.	
		7. Try to delete a document from mounted folder (op=delete).  PERM_DENIED.
		8. FolderActionRequest(grant).  PERM_DENIED.	
		9. Create a subfolder in the folder.  PERM_DENIED.
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account1.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder1.name}" l="${account1.folder.briefcase.id}" />
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder1.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account1.folder1.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse"/>           
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder1.id}">
					<grant gt="${grant.usr}" d="${account2.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	<t:property name="account2.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account2.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account2.folder.briefcase.id}" name="${account2.folder.shared.name}" zid="${account1.id}" rid="${account1.folder1.id}" view="document"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account2.folder.shared.id"/>
        </t:response>
    </t:test>	

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account2.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFolderResponse"/>
        </t:response>
    </t:test>

 	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="document">
				<query>in:"${globals.briefcase}/${account2.folder.shared.name}"</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:doc" attr="name" match="contact1.txt"/>
			<t:select path="//mail:SearchResponse/mail:doc" attr="id" set="account1.document.id"/>
		</t:response>
	</t:test>
	
  	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account2.document.htmlfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="account2.document.htmlfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account2.folder.shared.id}">
			    <upload id="${account2.document.htmlfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>    
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.document.id}" op="${op.delete}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account2.folder.shared.id}">
					<grant gt="${grant.usr}" d="${account3.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test> 

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="NewSubFolder" l="${account2.folder.shared.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test >
    
</t:test_case>

<t:test_case testcaseid="BriefcaseFoldersSharingBasic_02" type="smoke" >
    <t:objective>Verify that sharing briefcase folders with manager (rwidx) access allows messages to be viewed, added, modified, and deleted, but not reshared</t:objective>
	<t:steps>
		1. Login as account4
		2. Add a briefcase folder, share folder with account5 (permissions=rwidx)
		3. Login as account5
		4. Mount the drive, success.
		5. Run a document search.  Success.
		6. GetItemRequest.  Success.
		7. Add a document.  Success.	
		9. ItemActionRequest(op=delete).  Success.
		10. FolderActionRequest(grant).  PERM_DENIED.
		12. Create a subfolder in the folder-->  allowed( r + i permission grants c permission) .
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account4.server}"/>
	<t:property name="uploadServletServer" value="${account4.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account4.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account4.folder1.name}" l="${account4.folder.briefcase.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account4.folder1.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account4.folder1.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse"/>           
        </t:response>
    </t:test>
      
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account4.folder1.id}">
					<grant gt="${grant.usr}" d="${account5.name}" perm="${rights.manager}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account5.server}"/>
	<t:property name="account5.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account5.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account5.folder.briefcase.id}" name="${account5.folder.shared.name}" zid="${account4.id}" rid="${account4.folder1.id}" view="document"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account5.folder.shared.id"/>
        </t:response>
    </t:test>	

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account5.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFolderResponse"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="document">
				<query>in:${globals.briefcase}/${account5.folder.shared.name}</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:doc" attr="id" set="account5.document1.id"/>
		</t:response>
	</t:test>
	
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account2.document.htmlfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="account5.document.htmlfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account5.folder.shared.id}">
			    <upload id="${account5.document.htmlfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse"/>       
        </t:response>
    </t:test>  
   
    <t:test >
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${account5.document1.id}" op="${op.delete}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:ItemActionResponse/mail:action">
				<t:select attr="op" match="${op.delete}"/>
				<t:select attr="id" match="${account5.document1.id}"/>
			</t:select>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account5.folder.shared.id}">
					<grant gt="${grant.usr}" d="${account3.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="NewSubFolder" l="${account5.folder.shared.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="newfolder.id"/>
        </t:response>
    </t:test >
    
</t:test_case>



<t:test_case testcaseid="BriefcaseFoldersSharingBasic_03" type="smoke" >
    <t:objective>Verify that sharing briefcase folders with no permission does not allow to be mounted, viewed</t:objective>
	<t:steps>
	1. Login as account6
	2. Add a briefcase folder, share folder with account7 (permissions=none)
	3. Login as account7
	4. Mount the drive, fialure.
	5. Run a document search.   No results.		
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account6.server}"/>
	<t:property name="uploadServletServer" value="${account6.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account6.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account6.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account6.folder1.name}" l="${account6.folder.briefcase.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account6.folder1.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account6.folder1.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse"/>           
        </t:response>
    </t:test>
      
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account6.folder1.id}">
					<grant gt="${grant.usr}" d="${account7.name}" perm="${rights.none}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account7.server}"/>
	<t:property name="account7.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account7.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account7.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account7.folder.briefcase.id}" name="${account7.folder.shared.name}" zid="${account6.id}" rid="${account6.folder1.id}" view="document"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
             <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="document">
				<query>in:${globals.briefcase}/${account7.folder.shared.name}</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse" emptyset="1"/>
		</t:response>
	</t:test>    
    
</t:test_case>

<t:test_case testcaseid="BriefcaseFoldersSharingBasic_04" type="functional" >
    <t:objective>Verify a grantee with "ra" rights can share the folder again to another user</t:objective>
	<t:steps>
		1. Login as account8
		2. Add a briefcase folder, share folder with account9 (permissions=ra)
		3. Login as account9
		4. Mount the drive, share the folder with account10 (permissions=r)
		5. Login as account10.
		6. Verify that account8's contents can be viewed.
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account8.server}"/>
	<t:property name="uploadServletServer" value="${account8.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account8.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account8.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account8.folder1.name}" l="${account8.folder.briefcase.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account8.folder1.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account8.folder1.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse"/>           
        </t:response>
    </t:test>
      
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account8.folder1.id}">
					<grant gt="${grant.usr}" d="${account9.name}" perm="${rights.read}${rights.administer}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account9.server}"/>
	<t:property name="account9.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account9.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account9.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account9.folder.briefcase.id}" name="${account9.folder.shared.name}" zid="${account8.id}" rid="${account8.folder1.id}" view="document"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
             <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account9.folder.shared.id"/>
        </t:response>
    </t:test>	

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account9.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFolderResponse"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="document">
				<query>in:${globals.briefcase}/${account9.folder.shared.name}</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:doc" attr="id" set="account9.document1.id"/>
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<GetItemRequest xmlns="urn:zimbraMail">
				<item id="${account9.document1.id}"/>
			</GetItemRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GetItemResponse/mail:doc" attr="name" match="contact1.txt"/>
		</t:response>
	</t:test>
	
	 <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account9.folder.shared.id}">
					<grant gt="${grant.usr}" d="${account10.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
    <t:property name="server.zimbraAccount" value="${account10.server}"/>
	<t:property name="account10.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
    
    <t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account10.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account10.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account10.folder.briefcase.id}" name="${account10.folder.shared.name}" zid="${account9.id}" rid="${account9.folder.shared.id}" view="document"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>
   
	<t:test>
		<t:request>
			<GetItemRequest xmlns="urn:zimbraMail">
				<item id="${account9.document1.id}"/>
			</GetItemRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GetItemResponse/mail:doc" attr="name" match="contact1.txt"/>
		</t:response>
	</t:test>
    
</t:test_case>

<t:test_case testcaseid="BriefcaseFoldersSharingBasic_05" type="functional" >
    <t:objective>Verify tagging a shared message does not apply</t:objective>
	<t:steps>
		1. Login as account11
		2. Add a briefcase folder, share folder with account12 (permissions=manager)
		3. Login as account12
		4. Mount the drive, apply a tag to the shared document - PERM_DENIED
		5. Flag the shared document-- Success
		6. Login as account11.
		7. Verify that the tag does not appear
		8. Verify the shared doc is flagged 
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account11.server}"/>
	<t:property name="uploadServletServer" value="${account11.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account11.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account11.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account11.folder1.name}" l="${account11.folder.briefcase.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account11.folder1.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account11.folder1.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse/mail:doc" attr="id" set="account11.document1.id"/>           
        </t:response>
    </t:test>
      
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account11.folder1.id}">
					<grant gt="${grant.usr}" d="${account12.name}" perm="${rights.manager}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account12.server}"/>
	<t:property name="account12.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account12.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account12.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account12.folder.briefcase.id}" name="${account12.folder.shared.name}" zid="${account11.id}" rid="${account11.folder1.id}" view="document"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
             <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account12.folder.shared.id"/>
        </t:response>
    </t:test>	

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account12.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFolderResponse"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="document">
				<query>in:${globals.briefcase}/${account12.folder.shared.name}</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:doc" attr="id" set="account12.document1.id"/>			
		</t:response>
	</t:test>
	
	<t:test>
        <t:request>
            <CreateTagRequest xmlns="urn:zimbraMail">
                <tag name="tag.${TIME}.${COUNTER}" color="1" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTagResponse/mail:tag" attr="id" set="account12.tag1.id"/>
        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<ItemActionRequest xmlns="urn:zimbraMail">
				<action id="${account12.document1.id}" op="${op.tag}"  tag="${account12.tag1.id}"/>
			</ItemActionRequest>	
		</t:request>
		<t:response>
			 <t:select path="//zimbra:Code" />
		</t:response>
	</t:test>
	
    <t:test>
		<t:request>
			<ItemActionRequest xmlns="urn:zimbraMail">
				<action id="${account12.document1.id}" op="${op.flag}" />
			</ItemActionRequest>	
		</t:request>
		<t:response>
			  <t:select path="//mail:ItemActionResponse/mail:action" attr="op" match="${op.flag}"/>
		</t:response>
	</t:test>
	
    <t:property name="server.zimbraAccount" value="${account11.server}"/>	
    
    <t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account11.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>	
   
	<t:test>
		<t:request>
			<GetItemRequest xmlns="urn:zimbraMail">
				<item id="${account11.document1.id}"/>
			</GetItemRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GetItemResponse/mail:doc" attr="t" match="${account12.tag1.id}" emptyset="1"/>
		</t:response>
	</t:test>
    
    <t:test>
		<t:request>
			<GetItemRequest xmlns="urn:zimbraMail">
				<item id="${account11.document1.id}"/>
			</GetItemRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GetItemResponse/mail:doc" attr="f" match="f" />
		</t:response>
	</t:test>
</t:test_case>

</t:tests>
