<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="foreignPrincipal.Attr.name" value="zimbraForeignPrincipal"/>


<t:property name="account1.name" value="mp.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account2.name" value="mp.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="account3.name" value="mp.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
    
<t:property name="account1.document.textfile" value="${testMailRaw.root}/Contact/contact1.txt"/>

<t:property name="op.grant"			value="grant"/>

<t:property name="grant.usr"			value="usr"/>
<t:property name="grant.grp"			value="grp"/>

<t:property name="rights.none"			value=""/>
<t:property name="rights.read"			value="r"/>
<t:property name="rights.write"			value="w"/>
<t:property name="rights.insert"		value="i"/>
<t:property name="rights.delete"		value="d"/>
<t:property name="rights.administer"	value="a"/>
<t:property name="rights.workflow"		value="x"/>
<t:property name="rights.manager"		value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}"/>
<t:property name="view.document"	value="document"/>


<t:test_case testcaseid="AccountSetup_BackupRequest_MountedBriefcaseFolder" type="always" >
    <t:objective>Create Test account</t:objective>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>	
  

    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test> 
 
  	<t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test> 
 

	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id="getFolderRequest" required="true">
        <t:request>
             <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.briefcase}']" attr="id" set="acct1.folder.briefcase"/>       
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder l="${acct1.folder.briefcase}" name="folder${COUNTER}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="name" set="sub-folder.name"/>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="acct1.briefcase_folder1.id"/>
        </t:response>
    </t:test>    
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${acct1.briefcase_folder1.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse"/>           
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${acct1.folder.briefcase}" op="grant">
                    <grant d="${account2.name}" gt="usr" perm="rwidax"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${acct1.folder.briefcase}">
					<grant gt="${grant.usr}" d="${account3.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="BriefcaseMountpoint_AccountBackup_01" type="smoke" areas="backup,nonappliance">
    <t:objective>Backup (full) and restore an account with a Mount Point.  Verify the Mount Point is backed up and restored</t:objective>
    <t:steps>
	    1. Account1 shares a briefcase folder with Account2
	    2. Account2 creates a mountpoint to Account1's briefcase folder
	    2. Backup the Account2
	    3. Delete the Account2
	    4. Restore the Account2
	    5. Verify the Mount Point is still exist
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:folder[@name='${globals.briefcase}']" attr="id" set="account2.folder.briefcase.id"/> 			
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account2.folder.briefcase.id}" name="${account2.folder.shared.name}" zid="${account1.id}" rid="${acct1.briefcase_folder1.id}" view="document"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account2.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account2.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFolderResponse"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="document">
				<query>in:briefcase/${account2.folder.shared.name}</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:doc" attr="name"  match="contact1.txt"/>			
		</t:response>
	</t:test>	
	

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAdmin" value="${account2.server}"/>

    <t:test >
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" sync="1">
                    <account name="${account2.name}"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse/admin:backup" attr="label" set="backup1.label1.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${account2.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:DeleteAccountResponse" />
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <RestoreRequest xmlns="urn:zimbraAdmin">
                <restore includeIncrementals="0" method="ra" replayRedo="0" label="${backup1.label1.id}">
                    <account name="${account2.name}"/>                    
                </restore>
            </RestoreRequest>
        </t:request>
        <t:response>
                <t:select path="//admin:RestoreResponse"/>
        </t:response>
    </t:test> 


	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder/mail:link" attr="name" match="^${account2.folder.shared.name}$"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account2.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:GetFolderResponse/mail:link" attr="name" match="^${account2.folder.shared.name}$"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="document">
				<query>in:briefcase/${account2.folder.shared.name}</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:doc" attr="name"  match="contact1.txt"/>		
		</t:response>
	</t:test>
	

</t:test_case>


<t:test_case testcaseid="BriefcaseMountpoint_AccountBackup_02" type="smoke" areas="backup,nonappliance" >
    <t:objective>Backup (incremental) and restore an account with a Mount Point.  Verify the mount point value is backed up and restored</t:objective>
    <t:steps>
	    1. Backup Account3
	    2. Account1 shares briefcase folder with Account3
	    3. Account3 creates a mountpoint to Account1's briefcase folder
	    4. Do incremental backup of Account3
	    5. Delete the Account3
	    6. Restore the Account3 (no redo logs)
	    7. Verify the Mount Point is still valid
    </t:steps>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAdmin" value="${account3.server}"/>

    <t:test >
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" sync="1">
                    <account name="${account3.name}"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse/admin:backup" attr="label" set="backup2.label1.id"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>			
			<t:select path="//mail:folder[@name='${globals.briefcase}']" attr="id" set="account3.folder.briefcase.id"/> 			
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account3.folder.briefcase.id}" name="${account3.folder.shared.name}" zid="${account1.id}" rid="${acct1.briefcase_folder1.id}" view="document"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account3.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account3.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFolderResponse"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="document">
				<query>in:briefcase/${account3.folder.shared.name}</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:doc" attr="name"  match="contact1.txt"/>		
		</t:response>
	</t:test>
	

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAdmin" value="${account3.server}"/>

    <t:test >
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="incremental" sync="1">
                    <account name="${account3.name}"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse/admin:backup"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${account3.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:DeleteAccountResponse" />
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <RestoreRequest xmlns="urn:zimbraAdmin">
                <restore includeIncrementals="1" method="ra" replayRedo="0">
                    <account name="${account3.name}"/>                    
                </restore>
            </RestoreRequest>
        </t:request>
        <t:response>
                <t:select path="//admin:RestoreResponse"/>
        </t:response>
    </t:test> 

	
	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder/mail:link" attr="name" match="^${account3.folder.shared.name}$"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account3.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:GetFolderResponse/mail:link" attr="name" match="^${account3.folder.shared.name}$"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="document">
				<query>in:briefcase/${account3.folder.shared.name}</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:doc" attr="name"  match="contact1.txt"/>		
		</t:response>
	</t:test>
	

</t:test_case>


</t:tests>

