<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="mime.dir" value="${testMailRaw.root}/email01"/>
<t:property name="pop.source.name" value="pop.source.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="imap.source.name" value="imap.source.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="dsrc.source.name" value="dsrc.source.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account1.name" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>Basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="DataSource_Import_AccountSetup" type="always" >
    <t:objective>Setup test accounts</t:objective>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${pop.source.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="pop.source.id"/>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="pop.source.server"/>
        </t:response>
    </t:test>

    <t:mailinjecttest >
        <t:lmtpInjectRequest>
			<foldername>${mime.dir}</foldername>
			<to>${pop.source.name}</to>
			<from>${nonZimbraUser.name}</from>
			<server>${pop.source.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${imap.source.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="imap.source.id"/>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="imap.source.server"/>
        </t:response>
    </t:test>

    <t:mailinjecttest >
        <t:lmtpInjectRequest>
			<foldername>${mime.dir}</foldername>
			<to>${imap.source.name}</to>
			<from>${nonZimbraUser.name}</from>
			<server>${imap.source.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${dsrc.source.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="dsrc.source.id"/>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="dsrc.source.server"/>
        </t:response>
    </t:test>

    <t:mailinjecttest >
        <t:lmtpInjectRequest>
			<foldername>${mime.dir}</foldername>
			<to>${dsrc.source.name}</to>
			<from>${nonZimbraUser.name}</from>
			<server>${dsrc.source.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="account1.server"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account1.folder.inbox.id"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="DataSource_Import_01" type="smoke">
	<t:objective>Basic ImportDataRequest request for IMAP</t:objective>
	
    <t:property name="folder.name" value="imapsource${TIME}${COUNTER}"/>
    <t:property name="source.name" value="imapsource${TIME}${COUNTER}"/>
    
    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder.name}" l="${account1.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder.id"/>
        </t:response>
	</t:test>

	<t:test>
		<t:request>
			<CreateDataSourceRequest xmlns="urn:zimbraMail">
				<imap name="${source.name}" isEnabled="${globals.true}" l="${folder.id}" 
				emailAddress="${imap.source.name}" username="${imap.source.name}" password="${defaultpassword.value}"
				host="${imap.source.server}" port="993" connectionType="ssl" leaveOnServer="${globals.true}" />
			</CreateDataSourceRequest>
		</t:request>
		<t:response>
            <t:select path="//mail:CreateDataSourceResponse">
				<t:select path="//mail:imap" attr="id" set="account1.datasource.id"/>
           </t:select>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
			<ImportDataRequest xmlns="urn:zimbraMail">
				<imap id="${account1.datasource.id}"/>
			</ImportDataRequest>
        </t:request>
        <t:response>              
            <t:select path="//mail:ImportDataResponse"/>
        </t:response>
    </t:test>


	<t:for start="1" end="30" break="response">
	
		<t:delay msec="1000"/>
		<t:test >
			<t:request>
				<GetImportStatusRequest xmlns="urn:zimbraMail"/>
			</t:request>
			<t:response>
				<t:select path="//mail:GetImportStatusResponse/mail:imap[@isRunning='0']"  query="response"/>
			</t:response>
		</t:test>

	</t:for>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(email01A)</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse">
				<t:select path="//mail:m"/>
			</t:select>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="DataSource_Import_02" type="smoke">
	<t:objective>Basic ImportDataRequest request for POP</t:objective>
	
    <t:property name="folder.name" value="imapsource${TIME}${COUNTER}"/>
    <t:property name="source.name" value="imapsource${TIME}${COUNTER}"/>
    
    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder.name}" l="${account1.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder.id"/>
        </t:response>
	</t:test>

	<!-- TODO -->
	
</t:test_case>

<t:test_case testcaseid="DataSource_Import_03" type="smoke">
	<t:objective>Basic ImportDataRequest request for DSRC</t:objective>
	
    <t:property name="folder.name" value="imapsource${TIME}${COUNTER}"/>
    <t:property name="source.name" value="imapsource${TIME}${COUNTER}"/>
    
    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder.name}" l="${account1.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder.id"/>
        </t:response>
	</t:test>

	<!-- TODO -->
	
</t:test_case>

<t:test_case testcaseid="DataSource_Import_04" type="functional" bugids="21106">
	<t:objective>Basic ImportDataRequest request for DSRC</t:objective>
	
    <t:property name="folder.name" value="imapsource${TIME}${COUNTER}"/>
    <t:property name="source.name" value="imapsource${TIME}${COUNTER}"/>
    
    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder.name}" l="${account1.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder.id"/>
        </t:response>
	</t:test>

	<t:test>
		<t:request>
			<CreateDataSourceRequest xmlns="urn:zimbraMail">
				<imap name="${source.name}" isEnabled="${globals.true}" l="${folder.id}" 
				emailAddress="${imap.source.name}" username="${imap.source.name}" password="${defaultpassword.value}"
				host="${imap.source.server}" port="993" connectionType="ssl" leaveOnServer="${globals.true}" />
			</CreateDataSourceRequest>
		</t:request>
		<t:response>
            <t:select path="//mail:CreateDataSourceResponse">
				<t:select path="//mail:imap" attr="id" set="account1.datasource.id"/>
           </t:select>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
			<ImportDataRequest xmlns="urn:zimbraMail">
				<imap id="invalid${account1.datasource.id}"/>
			</ImportDataRequest>
        </t:request>
        <t:response>              
            <t:select path="//zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
	
</t:test_case>


</t:tests>