<t:tests xmlns:t="urn:zimbraTestHarness">



<t:property name="account1.name" value="complex.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="complex.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2A.name" value="complex2A.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2B.name" value="complex2B.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2C.name" value="complex2C.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="complex.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3A.name" value="complex3A.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3B.name" value="complex3B.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3C.name" value="complex3C.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.name" value="complex.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4A.name" value="complex4A.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4B.name" value="complex4B.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4C.name" value="complex4C.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account5.name" value="complex.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account5A.name" value="complex5A.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account5B.name" value="complex5B.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account5C.name" value="complex5C.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account5D.name" value="complex5D.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="validpassword.value" value="ABCDEFabcdef123456,.?!;:"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/> 

<t:test_case testcaseid="Ping" type="always" >
	<t:objective>basic system check</t:objective>

	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

</t:test_case>



<t:test_case testcaseid="ComplexPassword_AccountSetup" type="always" bugids="11540">
	<t:objective>create test accounts</t:objective>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>


	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">3</a>
				<a n="zimbraPasswordMinLowerCaseChars">2</a>
				<a n="zimbraPasswordMinPunctuationChars">1</a>
				<a n="zimbraPasswordMinNumericChars">4</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account1.server"/>
			<t:select path="//admin:CreateAccountResponse">
				<t:select path="//admin:a[@n='zimbraPasswordMinUpperCaseChars']" match="3"/>
				<t:select path="//admin:a[@n='zimbraPasswordMinLowerCaseChars']" match="2"/>
				<t:select path="//admin:a[@n='zimbraPasswordMinPunctuationChars']" match="1"/>
				<t:select path="//admin:a[@n='zimbraPasswordMinNumericChars']" match="4"/>
			</t:select>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">5</a>
				<a n="zimbraPasswordMinLowerCaseChars">0</a>
				<a n="zimbraPasswordMinPunctuationChars">0</a>
				<a n="zimbraPasswordMinNumericChars">0</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account2.server"/>
			<t:select path="//admin:CreateAccountResponse">
				<t:select path="//admin:a[@n='zimbraPasswordMinUpperCaseChars']" match="5"/>
			</t:select>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2A.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">5</a>
				<a n="zimbraPasswordMinLowerCaseChars">0</a>
				<a n="zimbraPasswordMinPunctuationChars">0</a>
				<a n="zimbraPasswordMinNumericChars">0</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account2A.server"/>
			<t:select path="//admin:CreateAccountResponse">
				<t:select path="//admin:a[@n='zimbraPasswordMinUpperCaseChars']" match="5"/>
			</t:select>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2B.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">5</a>
				<a n="zimbraPasswordMinLowerCaseChars">0</a>
				<a n="zimbraPasswordMinPunctuationChars">0</a>
				<a n="zimbraPasswordMinNumericChars">0</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account2B.server"/>
			<t:select path="//admin:CreateAccountResponse">
				<t:select path="//admin:a[@n='zimbraPasswordMinUpperCaseChars']" match="5"/>
			</t:select>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2C.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">5</a>
				<a n="zimbraPasswordMinLowerCaseChars">0</a>
				<a n="zimbraPasswordMinPunctuationChars">0</a>
				<a n="zimbraPasswordMinNumericChars">0</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account2C.server"/>
			<t:select path="//admin:CreateAccountResponse">
				<t:select path="//admin:a[@n='zimbraPasswordMinUpperCaseChars']" match="5"/>
			</t:select>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account3.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">0</a>
				<a n="zimbraPasswordMinLowerCaseChars">5</a>
				<a n="zimbraPasswordMinPunctuationChars">0</a>
				<a n="zimbraPasswordMinNumericChars">0</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account3.server"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account3A.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">0</a>
				<a n="zimbraPasswordMinLowerCaseChars">5</a>
				<a n="zimbraPasswordMinPunctuationChars">0</a>
				<a n="zimbraPasswordMinNumericChars">0</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account3A.server"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account3B.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">0</a>
				<a n="zimbraPasswordMinLowerCaseChars">5</a>
				<a n="zimbraPasswordMinPunctuationChars">0</a>
				<a n="zimbraPasswordMinNumericChars">0</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account3B.server"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account3C.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">0</a>
				<a n="zimbraPasswordMinLowerCaseChars">5</a>
				<a n="zimbraPasswordMinPunctuationChars">0</a>
				<a n="zimbraPasswordMinNumericChars">0</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account3C.server"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account4.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">0</a>
				<a n="zimbraPasswordMinLowerCaseChars">0</a>
				<a n="zimbraPasswordMinNumericChars">5</a>
				<a n="zimbraPasswordMinPunctuationChars">0</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account4.server"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account4A.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">0</a>
				<a n="zimbraPasswordMinLowerCaseChars">0</a>
				<a n="zimbraPasswordMinNumericChars">5</a>
				<a n="zimbraPasswordMinPunctuationChars">0</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account4A.server"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account4B.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">0</a>
				<a n="zimbraPasswordMinLowerCaseChars">0</a>
				<a n="zimbraPasswordMinNumericChars">5</a>
				<a n="zimbraPasswordMinPunctuationChars">0</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account4B.server"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account4C.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">0</a>
				<a n="zimbraPasswordMinLowerCaseChars">0</a>
				<a n="zimbraPasswordMinNumericChars">5</a>
				<a n="zimbraPasswordMinPunctuationChars">0</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account4C.server"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account5.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">0</a>
				<a n="zimbraPasswordMinLowerCaseChars">0</a>
				<a n="zimbraPasswordMinNumericChars">0</a>
				<a n="zimbraPasswordMinPunctuationChars">5</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account5.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account5.server"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account5A.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">0</a>
				<a n="zimbraPasswordMinLowerCaseChars">0</a>
				<a n="zimbraPasswordMinNumericChars">0</a>
				<a n="zimbraPasswordMinPunctuationChars">5</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account5A.server"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account5B.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">0</a>
				<a n="zimbraPasswordMinLowerCaseChars">0</a>
				<a n="zimbraPasswordMinNumericChars">0</a>
				<a n="zimbraPasswordMinPunctuationChars">5</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account5B.server"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account5C.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">0</a>
				<a n="zimbraPasswordMinLowerCaseChars">0</a>
				<a n="zimbraPasswordMinNumericChars">0</a>
				<a n="zimbraPasswordMinPunctuationChars">5</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account5C.server"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account5D.name}</name>
				<password>${validpassword.value}</password>
				<a n="zimbraPasswordMinUpperCaseChars">0</a>
				<a n="zimbraPasswordMinLowerCaseChars">0</a>
				<a n="zimbraPasswordMinNumericChars">0</a>
				<a n="zimbraPasswordMinPunctuationChars">5</a>
				<a n="zimbraPasswordMinLength">0</a>
				<a n="zimbraPasswordMaxLength">64</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account5D.server"/>
		</t:response>
	</t:test>

</t:test_case>









<t:test_case testcaseid="ComplexPassword_01" type="smoke">
	<t:objective>Verify zimbraPasswordMinUpperCaseChars = 5 requires 5 upper case letters in the password</t:objective>
	<t:steps>
	1. Login as account2 (zimbraPasswordMinUpperCaseChars = 5)
	2. Change password to 4 upper case letters (fails)
	3. Change password to 5 non alpha characters (fails)
	4. Change password to 5 upper case letters (success)
	5. Change password to 5 non consecutive upper case letters (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account2.server}"/>


	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${validpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>ABCD</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough upper case characters$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>12345</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough upper case characters$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>abcdef</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough upper case characters$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>,.?!;:</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough upper case characters$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>ABCDE</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:ChangePasswordResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${account2A.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2A.name}</account>
				<password>${validpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2A.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>aAbBcCdDeEf</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:ChangePasswordResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${account2B.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2B.name}</account>
				<password>${validpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2B.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>AAAAA</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:ChangePasswordResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${account2C.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2C.name}</account>
				<password>${validpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2C.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>12345</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough upper case characters$"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="ComplexPassword_02" type="smoke">
	<t:objective>Verify zimbraPasswordMinLowerCaseChars = 5 requires 5 lower case letters in the password</t:objective>
	<t:steps>
	1. Login as account3 (zimbraPasswordMinLowerCaseChars = 5)
	2. Change password to 4 upper case letters (fails)
	3. Change password to 5 non alpha characters (fails)
	4. Change password to 5 upper case letters (success)
	5. Change password to 5 non consecutive upper case letters (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${validpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>abcd</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough lower case characters$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>12345</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough lower case characters$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>ABCDEF</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough lower case characters$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>,.?!;:</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough lower case characters$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>abcde</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:ChangePasswordResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${account3A.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3A.name}</account>
				<password>${validpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3A.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>${validpassword.value}</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:ChangePasswordResponse"/>
		</t:response>
	</t:test>


	<t:property name="server.zimbraAccount" value="${account3B.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3B.name}</account>
				<password>${validpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>
	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3B.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>aaaaa</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:ChangePasswordResponse"/>
		</t:response>
	</t:test>

<t:property name="server.zimbraAccount" value="${account3C.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3C.name}</account>
				<password>${validpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>
	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3C.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>12345</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough lower case characters$"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="ComplexPassword_03" type="smoke" bugids="11540">
	<t:objective>Verify zimbraPasswordMinNumericChars = 5 requires 5 numeric chars in the password</t:objective>
	<t:steps>
	1. Login as account3 (zimbraPasswordMinNumericChars = 5)
	2. Change password to 4 upper case letters (fails)
	3. Change password to 5 non alpha characters (fails)
	4. Change password to 5 upper case letters (success)
	5. Change password to 5 non consecutive upper case letters (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account4.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<password>${validpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>1234</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough numeric characters$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>ABCDEF</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough numeric characters$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>abcdef</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough numeric characters$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>,.?!;:</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough numeric characters$"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>12345</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:ChangePasswordResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${account4A.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4A.name}</account>
				<password>${validpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4A.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>a1b2c3d4e5f</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:ChangePasswordResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${account4B.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4B.name}</account>
				<password>${validpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>


	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4B.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>11111</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:ChangePasswordResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${account4C.server}"/>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4C.name}</account>
				<password>${validpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>


	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4C.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>ABCDEF</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough numeric characters$"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="ComplexPassword_04" type="smoke" bugids="11540">
	<t:objective>Verify zimbraPasswordMinPunctuationChars = 5 requires 5 punctuation chars in the password</t:objective>
	<t:steps>
	1. Login as account3 (zimbraPasswordMinPuncutationChars = 5)
	2. Change password to 4 upper case letters (fails)
	3. Change password to 5 non alpha characters (fails)
	4. Change password to 5 upper case letters (success)
	5. Change password to 5 non consecutive upper case letters (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account5.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5.name}</account>
				<password>${validpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>,.?!</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough punctuation characters$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>ABCDEF</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough punctuation characters$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>abcdef</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough punctuation characters$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>123456</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough punctuation characters$"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>,.?!;:</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:ChangePasswordResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${account5A.server}"/>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5A.name}</account>
				<password>${validpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>


	<t:test>
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5A.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>a!b,c.d?e;f</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:ChangePasswordResponse"/>
		</t:response>
	</t:test>

<t:property name="server.zimbraAccount" value="${account5B.server}"/>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5B.name}</account>
				<password>${validpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5B.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>.....</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:ChangePasswordResponse"/>
		</t:response>
	</t:test>

<t:property name="server.zimbraAccount" value="${account5D.server}"/>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5D.name}</account>
				<password>${validpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5D.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>.....</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:ChangePasswordResponse"/>
		</t:response>
	</t:test>

<t:property name="server.zimbraAccount" value="${account5C.server}"/>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5C.name}</account>
				<password>${validpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5C.name}</account>
				<oldPassword>${validpassword.value}</oldPassword>
				<password>ABCDEF</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.INVALID_PASSWORD$"/>
			<t:select path="//soap:Text"  match="^invalid password: not enough punctuation characters$"/>
		</t:response>
	</t:test>

</t:test_case>


</t:tests>
