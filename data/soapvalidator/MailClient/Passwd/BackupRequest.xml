<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="passwd.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.password" value="${defaultpassword.value}"/>
<t:property name="account1.new_password" value="new${defaultpassword.value}"/>
    
<t:property name="account2.name" value="passwd.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.password" value="${defaultpassword.value}"/>
<t:property name="account2.new_password" value="new${defaultpassword.value}"/>
    


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${account2.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${account2.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid="AccountPassword_AccountBackup_01" type="smoke" areas="backup,nonappliance">
    <t:objective>Backup (full) and restore an account with a changed password.  Verify the new password value is backed up and restored by authenticating</t:objective>
    <t:steps>
    1. Change the account password
    2. Backup the account
    3. Delete the account
    4. Restore the account
    5. Auth using the new password
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account1.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<oldPassword>${account1.password}</oldPassword>
				<password>${account1.new_password}</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:ChangePasswordResponse"/>
		</t:response>
	</t:test>


	<t:property name="server.zimbraAdmin" value="${account1.server}"/>
	<t:property name="account.name" value="${account1.name}"/>
	<t:property name="account.id" value="${account1.id}"/>
    <t:include filename="BackupWorkflowFullDeleteRestore.inc"/>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account1.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account1.new_password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>


</t:test_case>


<t:test_case testcaseid="AccountPassword_AccountBackup_02" type="smoke" areas="backup,nonappliance" bugids="8901">
    <t:objective>Backup (incremental) and restore an account with a new password.  Verify the new password value is backed up and restored by authenticating</t:objective>
    <t:steps>
    1. Create an account
    2. Backup the account
    3. Modify the password
    4. Do incremental backup
    3. Delete the account
    4. Restore the account (no redo logs)
    5. Verify the new password is still set by authenticating
    </t:steps>

	<t:property name="server.zimbraAdmin" value="${account2.server}"/>
	<t:property name="account.name" value="${account2.name}"/>
    <t:include filename="BackupRequestFullBasic.inc"/>
	<t:property name="backup2.label1.id" value="${backup.label}"/>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${account2.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<ChangePasswordRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<oldPassword>${account2.password}</oldPassword>
				<password>${account2.new_password}</password>
			</ChangePasswordRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:ChangePasswordResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAdmin" value="${account2.server}"/>
	<t:property name="account.name" value="${account2.name}"/>
	<t:property name="account.id" value="${account2.id}"/>
    <t:include filename="BackupWorkflowIncrementalDeleteRestore.inc"/>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${account2.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${account2.new_password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>


</t:test_case>



</t:tests>

