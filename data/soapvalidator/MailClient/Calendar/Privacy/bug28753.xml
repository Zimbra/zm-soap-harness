<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="account1.name" value="privacy.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="delegatee1.name" value="delegatee1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="share1.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="time.20180101120000.gmt" value="1514808000000"/>
<t:property name="time.20180101120000.pst" value="${TIME(-8h)[${time.20180101120000.gmt}]}"/>
<t:property name="timezone.pst" value="(GMT-08.00) Pacific Time (US &amp; Canada) / Tijuana"/>

<t:property name="appt.loc" value="Location of meeting${TIME}.${COUNTER}"/>
<t:property name="appt.subject1" value="1st Private Meeting.${TIME}.${COUNTER}"/>
<t:property name="appt.content1" value="This meeting is marked as private"/>

<t:property name="appt.subject2" value="2nd Private Meeting.${TIME}.${COUNTER}"/>
<t:property name="appt.content2" value="This meeting is marked as private"/>


<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_test_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${delegatee1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="delegatee1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="delegatee1.server"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ApptAdminRights01" type="smoke" bugids="28753">
    <t:objective>Verify delegatee can see private appts</t:objective>

	<t:steps>
			1. Create a private appt
			2. Share calendar to delegatee with admin rights and with "allow users to see my private appt" as true i.e perm="rwidxap"
			3. Login as delegatee and accept the sharing
			4. Verify private appt is visible
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id="bug28752a">
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv > 
                    	<comp method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appt.subject1}" class="PRI" >
	                        <s d="${ICALTIME[${time.20180101120000.gmt}]}" tz="${timezone.pst}"/>  
	                        <e d="${ICALTIME(+1h)[${time.20180101120000.gmt}]}" tz="${timezone.pst}"/>  
	                        <or a="${account1.name}"/>
                        </comp>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appt.content1}</content>
                    </mp>
                    <su>${appt.subject1}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.calendar}']" attr="id" set="account1.folder.calendar"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="grant" id="${account1.folder.calendar}">
					<grant gt="usr" inh="1" d="${delegatee1.name}" perm="rwidxap"/>
				</action>
            </FolderActionRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:FolderActionResponse"/>
		</t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${delegatee1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${delegatee1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.calendar}']" attr="id" set="account2.folder.calendar"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account2.folder.calendar}" name="${share1.name}" zid="${account1.id}" rid="${account1.folder.calendar}" view="appt"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="delegatee1.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${TIME(-1d)[${time.20180101120000.gmt}]}" calExpandInstEnd="${TIME(+1d)[${time.20180101120000.gmt}]}" types="appointment">
				<query>inid:${delegatee1.folder.shared.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse/mail:appt" attr="name" match="${appt.subject1}"/>
            <t:select path="//mail:SearchResponse/mail:appt" attr="class" match="PRI"/>
            <t:select path="//mail:SearchResponse/mail:appt/mail:or" attr="a" match="${account1.name}"/>
            <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="appt1.id"/>
		</t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ApptAdminRights02" type="smoke" bugids="28753">
    <t:objective>Verify delegatee can modify the above private appt </t:objective>

	<t:steps>
			1. Modify time: start it one hr earlier and end after 3 hr
			2. Add location
			3. Mark show as "Tentative" instead of busy
	</t:steps>


    <t:test id="bug28752b" depends="bug28752a">
        <t:request>
            <ModifyAppointmentRequest xmlns="urn:zimbraMail" id="${appt1.id}" comp="0">
                <m>
                    <inv method="REQUEST" type="event" fb="T" transp="O" status="CONF" allDay="0" name="${appt.subject1}" loc="${appt.loc}">
                        <s d="${ICALTIME(-1h)[${time.20180101120000.gmt}]}" tz="${timezone.pst}"/>  
                        <e d="${ICALTIME(+3h)[${time.20180101120000.gmt}]}" tz="${timezone.pst}"/>  
                        <or a="${account1.name}"/>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appt.content1}</content>
                    </mp>
                    <su>${appt.subject1}</su>
                </m>
            </ModifyAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:ModifyAppointmentResponse" attr="invId" set="appt.modify.id"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" id="${appt.modify.id}"/>
        </t:request>
        <t:response>
            <t:select path = "//mail:GetAppointmentResponse/mail:appt/mail:inv/mail:comp" attr="name" match="${appt.subject1}"/>
            <t:select path = "//mail:GetAppointmentResponse/mail:appt/mail:inv/mail:comp" attr="loc" match="${appt.loc}"/>
            <t:select path = "//mail:GetAppointmentResponse/mail:appt/mail:inv/mail:comp/mail:s" attr="d" match="${ICALTIME(-1h)[${time.20180101120000.gmt}]}"/>
            <t:select path = "//mail:GetAppointmentResponse/mail:appt/mail:inv/mail:comp/mail:e" attr="d" match="${ICALTIME(+3h)[${time.20180101120000.gmt}]}"/>
            <t:select path = "//mail:GetAppointmentResponse/mail:appt/mail:inv/mail:comp" attr="fb" match="T"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ApptAdminRights03" type="smoke" bugids="28753">
    <t:objective>Verify delegatee can delete the above private appt (try delete above modified appt only) </t:objective>

    <t:test>
        <t:request>
            <CancelAppointmentRequest xmlns="urn:zimbraMail" id="${appt.modify.id}" comp="0">
                <m>
                   <su>Cancelled${appt.subject1}</su>
                    <mp content-type="text/plain">
                        <content> Action: Cancelled ${appt.subject1}" </content>
                    </mp>
                </m>
            </CancelAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CancelAppointmentResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${TIME(-1d)[${time.20180101120000.gmt}]}" calExpandInstEnd="${TIME(+1d)[${time.20180101120000.gmt}]}" types="appointment">
				<query>inid:${account1.folder.calendar}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse/mail:appt" attr="name" match="${appt.subject1}" emptyset="1"/>
		</t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ApptAdminRights04" type="smoke" bugids="28753">
    <t:objective>Verify delegatee can mark private appt as public </t:objective>

	<t:steps>
			1. Share calendar to delegatee with admin rights and with "allow users to see my private appt" as true
			2. Create a private appt
			3. Login as delegatee and accept the sharing
			4. Verify private appt is visible
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id="bug28752a">
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv > 
                    	<comp method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appt.subject2}" class="PRI" >
	                        <s d="${ICALTIME(+4h)[${time.20180101120000.gmt}]}" tz="${timezone.pst}"/>  
	                        <e d="${ICALTIME(+6h)[${time.20180101120000.gmt}]}" tz="${timezone.pst}"/>  
	                        <or a="${account1.name}"/>
                        </comp>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appt.content2}</content>
                    </mp>
                    <su>${appt.subject2}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="invId" match="^\d+-\d+$"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${delegatee1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${delegatee1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${TIME(-1d)[${time.20180101120000.gmt}]}" calExpandInstEnd="${TIME(+1d)[${time.20180101120000.gmt}]}" types="appointment">
				<query>inid:${delegatee1.folder.shared.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse/mail:appt" attr="name" match="${appt.subject2}"/>
            <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="appt2.id"/>
		</t:response>
    </t:test>

    <t:test id="bug28752b" depends="bug28752a">
        <t:request>
            <ModifyAppointmentRequest xmlns="urn:zimbraMail" id="${appt2.id}" comp="0">
                <m>
                    <inv method="REQUEST" type="event" transp="O" status="CONF" allDay="0" name="${appt.subject2}" class="PUB">
                        <s d="${ICALTIME(+4h)[${time.20180101120000.gmt}]}" tz="${timezone.pst}"/>  
                        <e d="${ICALTIME(+6h)[${time.20180101120000.gmt}]}" tz="${timezone.pst}"/>  
                        <or a="${account1.name}"/>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appt.content2}</content>
                    </mp>
                    <su>${appt.subject2}</su>
                </m>
            </ModifyAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:ModifyAppointmentResponse" attr="invId" set="appt.modify.id"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${TIME(-1d)[${time.20180101120000.gmt}]}" calExpandInstEnd="${TIME(+1d)[${time.20180101120000.gmt}]}" types="appointment">
				<query>inid:${account1.folder.calendar}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse/mail:appt" attr="name" match="${appt.subject2}"/>
            <t:select path="//mail:SearchResponse/mail:appt" attr="class" match="PUB"/>
		</t:response>
    </t:test>

</t:test_case>

</t:tests>