<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:property name="owner1.name" value="owner1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="user1.name" value="user1.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="timezone.pst" value="(GMT-08.00) Pacific Time (US &amp; Canada)"/>
<t:property name="grant.usr"		value="usr"/>
<t:property name="op.grant"			value="grant"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_test_owner" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${owner1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="owner1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="owner1.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_user" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${user1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="user1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="user1.server"/>
        </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="MiniCal_MountedCalendar_01" type="functional">
    <t:objective>Verify GetMiniCalRequest return mounted calendar's appointments </t:objective>
    <t:steps>
        1. Login as owner1. Create an appointment and share the calendar with the user1.
        2. Login as user1.
        3. Accept and mount the shared calendar
        4. Send GetMiniCalRequest to search the mounted calendar.
        5. Verify the appointment date
    </t:steps>
    
<t:property name="server.zimbraAccount" value="${owner1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${owner1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder/mail:folder[@name='${globals.calendar}']" attr="id" set="owner1.folder.calendar"/>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="owner1.folder.root"/>
        </t:response>
    </t:test>


	<t:property name="appointment1.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment1.location" value="Location of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment1.content" value="Content of the message${TIME}.${COUNTER}"/>
	<t:property name="appt1.start.gmt" value="${TIME(+1h)}"/> 
    <t:property name="appt1.start.pst" value="${TIME(-8h)[${appt1.start.gmt}]}"/>
    
     <t:test>
        <t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m >
					<inv>
						<comp status="CONF" fb="B" transp="O" allDay="0" name="${appointment1.subject}">
							<or a="${owner1.name}"/>							
							<s d="${ICALTIME[${appt1.start.pst}]}" tz="${timezone.pst}" />
							<e d="${ICALTIME(+3h)[${appt1.start.pst}]}" tz="${timezone.pst}" />
						</comp>
					</inv>					
					<su>${appointment1.subject}</su>
					<mp ct="text/plain">
						<content>${appointment1.content}</content>
					</mp>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">            	
            </t:select>
        </t:response>
    </t:test>
	
    <t:test required="true">
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${owner1.folder.calendar}" op="${op.grant}">
                    <grant d="${user1.name}" gt="${grant.usr}" perm="r"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action" attr="zid" set="folder.zid"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${user1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${user1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="user1.folder.root"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${user1.folder.root}" name="Calendar.${TIME}.${COUNTER}" view="appointment" rid="${owner1.folder.calendar}" zid="${owner1.id}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="user1.delegated.id"/>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="owner" match="${owner1.name}"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <GetMiniCalRequest xmlns="urn:zimbraMail" s="${TIME(-1d)}" e="${TIME(+3d)}">       
				<folder id="${user1.delegated.id}" />				
			</GetMiniCalRequest>
        </t:request>        
        <t:response>			 
			 <t:select path = "//mail:GetMiniCalResponse/mail:date" match="${CURRDATE()}"/>			
        </t:response>
    </t:test>
     
</t:test_case>

<t:test_case testcaseid="MiniCal_MountedCalendar_02" type="functional">
  <t:objective>Verify GetMiniCalRequest return mounted calendar's appointments along with own calendar appts </t:objective>
    <t:steps>
         
        1. Login as owner1. Create an appointment and share the calendar with the user1.
        2. Login as user1.
        3. Accept and mount the shared calendar
        4. Login as usr1. Create an appointment          
        5. Send GetMiniCalRequest to search the mounted calendar  and own calendar.
        3. Verify the appointment dates
    </t:steps>
 
 <t:property name="server.zimbraAccount" value="${owner1.server}"/>
   
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${owner1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder/mail:folder[@name='${globals.calendar}']" attr="id" set="owner1.folder.calendar"/>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="owner1.folder.root"/>
        </t:response>
    </t:test>

	<t:property name="appointment1.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment1.location" value="Location of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment1.content" value="Content of the message${TIME}.${COUNTER}"/>
	<t:property name="appt1.start.gmt" value="${TIME(+1h)}"/> 
    <t:property name="appt1.start.pst" value="${TIME(-8h)[${appt1.start.gmt}]}"/>
    
     <t:test>
        <t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m >
					<inv>
						<comp status="CONF" fb="B" transp="O" allDay="0" name="${appointment1.subject}">
							<or a="${owner1.name}"/>							
							<s d="${ICALTIME[${appt1.start.pst}]}" tz="${timezone.pst}" />
							<e d="${ICALTIME(+3h)[${appt1.start.pst}]}" tz="${timezone.pst}" />
						</comp>
					</inv>					
					<su>${appointment1.subject}</su>
					<mp ct="text/plain">
						<content>${appointment1.content}</content>
					</mp>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">            	
            </t:select>
        </t:response>
    </t:test>
	
    <t:test required="true">
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${owner1.folder.calendar}" op="${op.grant}">
                    <grant d="${user1.name}" gt="${grant.usr}" perm="r"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <!--  <t:select path="//mail:FolderActionResponse/mail:action" attr="zid" set="folder.zid"/>-->
            <t:select path="//zimbra:Code" match="mail.GRANT_EXISTS"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${user1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${user1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="user1.folder.root"/>
            <t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="user1.folder.calendar.id"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${user1.folder.root}" name="Calendar.${TIME}.${COUNTER}" view="appointment" rid="${owner1.folder.calendar}" zid="${owner1.id}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="user1.delegated.id"/>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="owner" match="${owner1.name}"/>
        </t:response>
    </t:test>    
  <!--  
    <t:test required="true">
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="user1.folder.calendar.id"/>
        </t:response>
    </t:test> -->
    
    <t:property name="appointment2.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment2.location" value="Location of meeting${TIME}.${COUNTER}"/>
	<t:property name="appointment2.content" value="Content of the message${TIME}.${COUNTER}"/>	
	
    <t:property name="appt2.start.gmt" value="${TIME(+2d)}"/> 
    <t:property name="appt2.start.pst" value="${TIME(-8h)[${appt2.start.gmt}]}"/>
   
    <t:test >
        <t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m l="${user1.folder.calendar.id}">
					<inv>
						<comp status="CONF" fb="B" transp="O" allDay="0" name="${appointment2.subject}">
							<or a="${user1.name}"/>
							<s d="${ICALTIME[${appt2.start.pst}]}" tz="${timezone.pst}" />
							<e d="${ICALTIME(+3h)[${appt2.start.pst}]}" tz="${timezone.pst}" />
						</comp>
					</inv>
					<su>${appointment2.subject}</su>
					<mp ct="text/plain">
						<content>${appointment2.content}</content>
					</mp>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" />        	   
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <GetMiniCalRequest xmlns="urn:zimbraMail" s="${TIME(-1d)}" e="${TIME(+3d)}">       
				<folder id="${user1.delegated.id}" />
				<folder id="${user1.folder.calendar.id}" />					
			</GetMiniCalRequest>
        </t:request>        
        <t:response>			 
        
			 <t:select path = "//mail:GetMiniCalResponse/mail:date" match="${CURRDATE(+2d)}"/>
			 <t:select path = "//mail:GetMiniCalResponse/mail:date" match="${CURRDATE()}"/>			 		
        </t:response>
    </t:test>
    
</t:test_case>
</t:tests>
