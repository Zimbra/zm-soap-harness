<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:property name="organizer1.name" value="organizer1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="invitee1.name" value="invitee1.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="appointment.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.location" value="Location of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.content" value="Content of the message${TIME}.${COUNTER}"/>
<t:property name="reminder.text" value="Reminder 1"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>




<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_test_organizer1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${organizer1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="organizer1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="organizer1.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_organizer1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${invitee1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="invitee1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="invitee1.server"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${organizer1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${organizer1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="CreateMeetingRequest_Reminder_01" type="smoke" areas="Calendar">
    <t:objective>Send a meeting request with reminder to an invitee.</t:objective>


	<t:property name="time.20220708120000.gmt" value="1657282156000"/>
	<t:property name="time.20220708120000.pst" value="${TIME(-8h)[${time.20220708120000.gmt}]}"/>
    <t:property name="timezone.pst.regex" value="America\/Los_Angeles"/>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="account1.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv > 
                    	<comp method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" >
	                        <s d="${ICALTIME[${time.20220708120000.gmt}]}"/>
	                        <e d="${ICALTIME(+1h)[${time.20220708120000.gmt}]}"/>
	                        <or a="${organizer1.name}"/>
							<at a="${invitee1.name}" role="REQ" ptst="NE" rsvp="1"/>
						<alarm action="DISPLAY">
							<trigger>
							  <rel related="START" neg="1" m="30"/>
							</trigger>
								<desc>${reminder.text}</desc>
							 <repeat count="2" m="10"/>
						 </alarm>
						</comp>
                    </inv>
					<e a="${invitee1.name}" t="t"/>
                <mp ct="text/plain">
				 <content>${appointment.content}</content>
              </mp>
		          <su>${appointment.subject}</su>
	          </m>
	        </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">
            	<t:select attr="calItemId" set="appt1.calItemId"/>
            	<t:select attr="invId" set="organizer1.appt1.invId"/>
            	<t:select attr="invId" set="appt1.invId"/>
            	<t:select attr="apptId" set="appt1.apptId"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${appt1.invId}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${appt1.invId}']">
        		<t:select path="//mail:comp">
                    <t:select path="//mail:s" attr="d" match="${ICALTIME[${time.20220708120000.gmt}]}"/>
            	</t:select>
            </t:select>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${TIME(-1d)[${time.20220708120000.gmt}]}" calExpandInstEnd="${TIME(+1d)[${time.20220708120000.gmt}]}" types="appointment">
				<query>inid:${account1.calendar.folder.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse">
            	<t:select path="//mail:appt[@invId='${appt1.invId}']"/>
            	<t:select path="//mail:appt/mail:alarmData/mail:alarm" attr="action" match="DISPLAY"/>
            	<t:select path="//mail:appt/mail:alarmData/mail:alarm/mail:repeat" attr="count" match="2"/>
            	<t:select path="//mail:appt/mail:alarmData/mail:alarm/mail:repeat" attr="m" match="10"/>
            	<t:select path="//mail:appt/mail:alarmData/mail:alarm" attr="desc" match="${reminder.text}"/>
            </t:select>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${invitee1.server}"/>
    
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${invitee1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="invitee1.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    <t:test delay="5000" required="true">
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${TIME(-1d)[${time.20220708120000.gmt}]}" calExpandInstEnd="${TIME(+1d)[${time.20220708120000.gmt}]}" types="appointment">
				<query>inid:${invitee1.calendar.folder.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse/mail:appt">
            	<t:select attr="invId" set="invitee1.appt1.invId"/>
            	<t:select attr="compNum" set="invitee1.appt1.compNum"/>
            	<t:select attr="name" set="invitee1.appt1.name"/>
            	<t:select path="//mail:or" attr="a" set="invitee1.appt1.or"/>
            </t:select> 
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<SendInviteReplyRequest xmlns="urn:zimbraMail" id="${invitee1.appt1.invId}" compNum="${invitee1.appt1.compNum}" verb="ACCEPT" updateOrganizer="TRUE">
				<m rt="r">
					<e t="t" a="${invitee1.appt1.or}"/>
					<su>Accept: ${invitee1.appt1.name}</su>
					<mp ct="text/plain">
						<content>Accept: ${invitee1.appt1.name}</content>
					</mp>
				</m>
			</SendInviteReplyRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendInviteReplyResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${organizer1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${organizer1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
   
    <t:test delay="5000">
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${organizer1.appt1.invId}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${organizer1.appt1.invId}']">
            	<t:select path="//mail:at[@a='${invitee1.name}']" attr="ptst" match="AC"/>
            	<t:select path="//mail:reply[@at='${invitee1.name}']" attr="ptst" match="AC"/>
            </t:select>
			<t:select path="//mail:comp" attr="compNum" set="organizer1.appt1.compNum"/>
        </t:response>
    </t:test>

</t:test_case>

</t:tests>
