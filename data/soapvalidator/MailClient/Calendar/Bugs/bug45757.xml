<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:property name="user1.name" value="user1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="user2.name" value="user2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="user3.name" value="user3.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="verb.accept" value="ACCEPT"/>
<t:property name="ptst.accept" value="AC"/>


<t:property name="timezone.pst" value="(GMT-08.00) Pacific Time (US &amp; Canada)"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
</t:test_case>




<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_test_user1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${user1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="user1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="user1.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_user2" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${user2.name}</name>
                <password>${defaultpassword.value}</password>
                <a n="zimbraPrefMailForwardingAddress">${user3.name}</a> 
                <a n="zimbraPrefMailLocalDeliveryDisabled">TRUE</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="user2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="user2.server"/>
        </t:response>
    </t:test>
    
    <t:test id="create_test_user3" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${user3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="user3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="user3.server"/>
        </t:response>
    </t:test>


</t:test_case>


<t:test_case testcaseid="bug_45757" type="smoke" areas="Calendar" bugids="45757">
    <t:objective>Create new appointment when accepting an appointment already in Trash</t:objective>
    <t:steps>
	1. Create user1, user2, user3
	2. Set user2 forwarding all messages to user3.
	3. create an appointment from user1 and invite user2 and user3.
	4. user3 accept the appointment.
	5. Modify appointment changed the end time and remove user3.
	6. verify in user3 account there is meeting request for user2 (Forwarded) and meeting for user3 has been cancelled.
	7. accept the modified meeting request.
	8. Verify appointment search shows modified appointment in calendar.
    </t:steps>



    <t:property name="server.zimbraAccount" value="${user1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${user1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
   
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="user1.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    
   
	<t:property name="appointment.subject" value="subject${TIME}.${COUNTER}"/>
	<t:property name="appointment.location" value="location${TIME}.${COUNTER}"/>
	<t:property name="appointment.content" value="content${TIME}.${COUNTER}"/>

	<t:property name="time.20180101120000.gmt" value="1514808000000"/>
	<t:property name="time.20180101120000.pst" value="${TIME(-8h)[${time.20180101120000.gmt}]}"/>

    <t:test>
        <t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m >
					<inv>
						<comp status="CONF" fb="B" transp="O" allDay="0" name="${appointment.subject}">
							<or a="${user1.name}"/>
							<at a="${user2.name}" role="REQ" ptst="NE" rsvp="1"/>
							<at a="${user3.name}" role="REQ" ptst="NE" rsvp="1"/>
							<s d="${ICALTIME[${time.20180101120000.pst}]}" tz="${timezone.pst}" />
							<e d="${ICALTIME(+3h)[${time.20180101120000.pst}]}" tz="${timezone.pst}" />
						</comp>
					</inv>
					<e a="${user2.name}" t="t"/>
					<e a="${user3.name}" t="t"/>
					<su>${appointment.subject}</su>
					<mp ct="text/plain">
						<content>${appointment.content}</content>
					</mp>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">
            	<t:select attr="calItemId" set="user1.appt1.calItemId"/>
            	<t:select attr="invId" set="user1.appt1.invId"/>
            	<t:select attr="apptId" set="user1.appt1.apptId"/>
            </t:select>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${user3.server}"/>

    
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${user3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="user3.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    <t:test required="true" >
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${TIME(-1d)[${time.20180101120000.gmt}]}" calExpandInstEnd="${TIME(+1d)[${time.20180101120000.gmt}]}" types="appointment">
				<query>inid:${user3.calendar.folder.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse/mail:appt[@name='${appointment.subject}']">
            	<t:select attr="invId" set="user3.appt1.invId"/>
            	<t:select attr="compNum" set="user3.appt1.compNum"/>
            	<t:select attr="name" set="user3.appt1.name"/>
            	<t:select path="//mail:or" attr="a" set="user3.appt1.or"/>
            </t:select> 
        </t:response>
    </t:test>

	<t:property name="verb.response" value="ACCEPT"/>
	<t:property name="verb.expected" value="AC"/>
	
	<t:test>
        <t:request>
			<SendInviteReplyRequest xmlns="urn:zimbraMail" verb="${verb.response}" id="${user3.appt1.invId}" compNum="${user3.appt1.compNum}" updateOrganizer="TRUE">
				<m rt="r">
					<e t="t" a="${user3.appt1.or}"/>
					<su>${verb.response}: ${user3.appt1.name}</su>
					<mp ct="text/plain">
						<content>${verb.response}: ${user3.appt1.name}</content>
					</mp>
				</m>
			</SendInviteReplyRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendInviteReplyResponse"/>
        </t:response>
    </t:test>


    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${user1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:property name="appointment.subjectNew" value="${appointment.subject}Updated" />
    <t:property name="appointment.message" value="Changed Meeting" />
    <t:test>
        <t:request>
            <ModifyAppointmentRequest xmlns="urn:zimbraMail" id="${user1.appt1.invId}" >
                <m>
					<inv>
						<comp status="CONF" fb="B" transp="O" allDay="0" name="${appointment.subjectNew}">
							<or a="${user1.name}"/>
							<at a="${user2.name}" role="REQ" ptst="NE" rsvp="1"/>
							<s d="${ICALTIME[${time.20180101120000.pst}]}" tz="${timezone.pst}" />
							<e d="${ICALTIME(+4h)[${time.20180101120000.pst}]}" tz="${timezone.pst}" />
						</comp>
					</inv>
                    <mp content-type="text/plain">
                        <content>${appointment.message}</content>
                    </mp>
		    <e a="${user2.name}" t="t"/>
                    <su>${appointment.subjectNew}</su>
                </m>
            </ModifyAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:ModifyAppointmentResponse" attr="invId" set="user1.appt1.invNewId"/>
        </t:response>
    </t:test>

   <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${user3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>


    <t:test delay="5000">
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail">
				<query>${appointment.message}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse/mail:c/mail:m" attr="id" set="user2.modinvID" >

            </t:select> 
        </t:response>
    </t:test>

	<t:test>
        <t:request>
			<SendInviteReplyRequest xmlns="urn:zimbraMail" verb="${verb.response}" id="${user2.modinvID}" compNum="${user3.appt1.compNum}" updateOrganizer="TRUE">
				<m rt="r">
					<e t="t" a="${user3.appt1.or}"/>
					<su>${verb.response}: ${user3.appt1.name}</su>
					<mp ct="text/plain">
						<content>${verb.response}: ${user3.appt1.name}</content>
					</mp>
				</m>
			</SendInviteReplyRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendInviteReplyResponse"/>
        </t:response>
    </t:test>



     <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${TIME(-2d)[${time.20180101120000.gmt}]}" calExpandInstEnd="${TIME(+2d)[${time.20180101120000.gmt}]}" types="appointment">
				<query>inid:${user3.calendar.folder.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse/mail:appt[@name='${appointment.subjectNew}']"/> 
        </t:response>
    </t:test>

</t:test_case>

</t:tests>
