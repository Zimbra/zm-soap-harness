<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="test_account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}"/> 
<t:property name="test_account3.name" value="test3.${TIME}.${COUNTER}@${defaultdomain.name}"/> 

<t:property name="test_account1.password" value="test123"/>
   
<t:property name="appointment.subject1" value="subject1 ${TIME}.${COUNTER}"/>

<t:property name="appointment.location" value="Location of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.content" value="Content of the message${TIME}.${COUNTER}"/>

<t:property name="tz.default" value="(GMT-08.00) Pacific Time (US &amp; Canada) / Tijuana"/>

<t:property name="Time1" value="${ICALTIME(+1h)}"/>
<t:property name="Time2" value="${ICALTIME(+2h)}"/>
<t:property name="Time3" value="${ICALTIME(+3h)}"/>
<t:property name="Time4" value="${ICALTIME(+4h)}"/>
<t:property name="Time5" value="${ICALTIME(+5h)}"/>
<t:property name="Time6" value="${ICALTIME(+6h)}"/>
<t:property name="Time7" value="${ICALTIME(+7h)}"/>
<t:property name="Time8" value="${ICALTIME(+8h)}"/>

<!-- Make sure that the range includes all created appointments -->
<t:property name="TimeRangeStart" value="${TIME(-2d)}"/>
<t:property name="TimeRangeFinish" value="${TIME(+2d)}"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="acct_setup1" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
      
	<t:property name="authToken.admin" value="${authToken}"/>
    
    <t:test id="create_test_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account1.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>
    
    <t:test id="create_test_account3" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
        </t:response>
    </t:test>

</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

<t:test_case testcaseid="CreateAppointmentRequest1" type="always" >
    <t:objective>Verify that CreateAppointmentRequest respond with "mail.SEND_ABORTED_ADDRESS_FAILURE" error when tried to create appointment with non existing user</t:objective>
    <t:steps> 1. Login to account1
              2. Create calendar event with invalid user[within the domain, but does not exist]
    </t:steps>
    
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail" forcesend="0">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject1}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${test_account2.name}"/>                                    
                        <s d="${Time1}" tz="${tz.default}"/>  
                        <e d="${Time2}" tz="${tz.default}"/>  
                        <or a="${test_account1.name}"/>
                    </inv>
                    <e a="${test_account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject1}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
             <t:select path="//zimbra:Code" match="mail.SEND_ABORTED_ADDRESS_FAILURE"/>
        </t:response>
    </t:test>
    
</t:test_case>   
    
<t:test_case testcaseid="ModifyAppointmentRequest1" type="always" >
    <t:objective>Verify that CreateAppointmentRequest respond with "mail.SEND_ABORTED_ADDRESS_FAILURE" error when tried to create appointment with non existing user</t:objective>
    <t:steps> 1. Login to account1
              2. Modify calendar event with invalid user[within the domain, but does not exist]
    </t:steps>

	<t:test required="true">
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject1}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${test_account3.name}"/>                                    
                        <s d="${Time1}" tz="${tz.default}"/>  
                        <e d="${Time2}" tz="${tz.default}"/>  
                        <or a="${test_account1.name}"/>
                    </inv>
                    <e a="${test_account3.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject1}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="invId" set="appointment1.id"/>
       </t:response>
    </t:test>
	
	<t:test required="true">
        <t:request>
           <ModifyAppointmentRequest xmlns="urn:zimbraMail" id="${appointment1.id}" comp="0" forcesend="0">
	            <m>
	                <inv method="REQUEST" type="event" fb="B" transp="O" status="CONF" allDay="0" name="${appointment.subject1}">
	                    <at role="OPT" ptst="NE" rsvp="1" a="${test_account3.name}"/> 
	                    <at role="OPT" ptst="NE" rsvp="1" a="${test_account2.name}"/> 
	                    <s d="${Time1}" tz="${tz.default}"/>  
                        <e d="${Time2}" tz="${tz.default}"/> 
	                    <or a="${test_account1.name}"/>
	                </inv>
	                 <e a="${test_account3.name}" t="t"/>
	                 <e a="${test_account2.name}" t="t"/>
	                <mp content-type="text/plain">
	                    <content>New Appointment Content ${TIME} ${COUNTER}</content>
	                </mp>
	                <su>${appointment.subject1}</su>
	            </m>
	        </ModifyAppointmentRequest>
	        </t:request>
        <t:response>
             <t:select path="//zimbra:Code" match="mail.SEND_ABORTED_ADDRESS_FAILURE"/>
        </t:response>
    </t:test>
	
</t:test_case>
</t:tests>

