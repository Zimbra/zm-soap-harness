<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="test_account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="test_account.password" value="test123"/>

<t:property name="appointment.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.location" value="Meeting Room 1"/>
<t:property name="appointment.content" value="Content of the message"/>

<t:property name="Time1" value="${ICALTIME(+30m)}"/>
<t:property name="Time2" value="${ICALTIME(+1h)}"/>

<t:property name="id.blank" value=""/>
<t:property name="id.space" value="            "/>
<t:property name="id.spchar" value=":/\\.;&lt;*''"/>
<t:property name="id.sometext" value="some text"/>

<t:property name="id.negative" value="-1"/>
<t:property name="id.zero" value="0"/>
<t:property name="id.largenumber" value="1234567890"/>
<t:property name="id.decimal" value="12.34"/>
<t:property name="test_acct.server" value="NOT_DEFINED"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acctSetup1_appointment_get" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_test_account1" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server"/>
        </t:response>
    </t:test>

    <t:test id="create_test_account2" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${test_account.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account2.id"/>
        </t:response>
    </t:test>

</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

<t:test_case testcaseid="acctSetup2_appointment_get" type="always" >
    <t:objective>login as the test account</t:objective>
    
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid = "GetAppointmentRequest1" type = "smoke" areas="Calendar">
    <t:objective>Obtain the details of an appointment using GetAppointmentRequest.</t:objective>
    <t:steps>1. Create an appointment.
             2. Give GetAppointmentRequest to obtain the details of the appointment.
    </t:steps>
    
    <t:test id = "GetAppointmentRequest1a">
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${test_account2.name}"/>
                        <s d="${Time1}"/>  
                        <e d="${Time2}"/>  
                        <or a="${test_account1.name}"/>
                    </inv>
                    <e a="${test_account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse" attr="invId" set="appointment1.id"/>
        </t:response>
    </t:test>
       
    <t:test depends="GetAppointmentRequest1a">
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" id="${appointment1.id}"/>
        </t:request>
        <t:response>
            <t:select path = "//mail:GetAppointmentResponse/mail:appt/mail:inv/mail:comp" attr="name" match="${appointment.subject}"/>
            <t:select path = "//mail:GetAppointmentResponse/mail:appt/mail:inv/mail:comp" attr="loc" match="${appointment.location}"/>
            <t:select path = "//mail:GetAppointmentResponse/mail:appt/mail:inv/mail:comp/mail:s" attr="d" match="${Time1}"/>
            <t:select path = "//mail:GetAppointmentResponse/mail:appt/mail:inv/mail:comp/mail:e" attr="d" match="${Time2}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "GetAppointmentRequest2" type = "negative" areas="Calendar">
    <t:objective>GetAppointmentRequest with invalid values of id.</t:objective>
          
    <t:test>
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" id="${id.blank}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
          
    <t:test>
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" id="${id.space}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
      
    <t:test>
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" id="${id.sometext}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
          
    <t:test>
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" id="${id.negative}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="mail.NO_SUCH_CALITEM"/>
        </t:response>
    </t:test>
          
    <t:test>
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" id="${id.zero}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="mail.NO_SUCH_ITEM"/>
        </t:response>
    </t:test>
          
    <t:test>
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" id="${id.largenumber}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="mail.NO_SUCH_ITEM"/>
        </t:response>
    </t:test>
          
    <t:test>
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" id="${id.decimal}"/>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
    
    <!-- GetAppointmentRequest without id attribute--> 
    <t:test>
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" />
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid = "GetAppointmentRequest3" type = "functional" areas="Calendar">
    <t:objective>GetAppointmentRequest with id of a canceled appointment.</t:objective>
    <t:steps>1. Cancel an appointment.
             2. Give GetAppointmentRequest with id of a canceled appointment.
    </t:steps>    
    
    <t:test id = "GetAppointmentRequest3a" >
        <t:request>
            <CancelAppointmentRequest xmlns="urn:zimbraMail" id="${appointment1.id}" comp="0">
                <m>
                    <e a="${test_account2.name}" t="t"/>
                    <su>${appointment.subject}</su>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
				</m>
            </CancelAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CancelAppointmentResponse"/>
        </t:response>
    </t:test>
    
    <t:test depends="GetAppointmentRequest3a">
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" id="${appointment1.id}"/>
        </t:request>
        <t:response>
            <t:select path="//mail:GetAppointmentResponse/mail:appt" attr="l" match="3"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid = "GetAppointmentRequest4" type = "smoke" areas="Calendar" bugids="48812">
    <t:objective>Obtain the details of an appointment using GetAppointmentRequest with UID.</t:objective>
    <t:steps>1. Create an appointment.
             2. Give GetAppointmentRequest to obtain the details of the appointment using uid.
    </t:steps>
    
    <t:property name="server.zimbraAccount" value="${test_acct.server}"/>
    
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test id = "GetAppointmentRequest4a">
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${test_account2.name}"/>
                        <s d="${Time1}"/>  
                        <e d="${Time2}"/>  
                        <or a="${test_account1.name}"/>
                    </inv>
                    <e a="${test_account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse" attr="invId" set="appointment1.id"/>
        </t:response>
    </t:test>
    
       <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${appointment1.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
             <t:select path="//mail:GetMsgResponse/mail:m/mail:inv/mail:comp" attr="uid" set="appointment.uid"/>
        </t:response>
    </t:test>
       
    <t:test depends="GetAppointmentRequest4a">
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" uid="${appointment.uid}"/>
        </t:request>
        <t:response>
            <t:select path = "//mail:GetAppointmentResponse/mail:appt/mail:inv/mail:comp" attr="name" match="${appointment.subject}"/>
            <t:select path = "//mail:GetAppointmentResponse/mail:appt/mail:inv/mail:comp" attr="loc" match="${appointment.location}"/>
        </t:response>
    </t:test>
    
</t:test_case>


</t:tests>
