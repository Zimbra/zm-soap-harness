<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:property name="account1.name" value="test1${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test2${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="appointment.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.location" value="Location of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.content" value="Content of the message${TIME}.${COUNTER}"/>
<t:property name="reminder.text" value="Reminder 1"/>
<t:property name="until.blank" value=""/>

<t:property name="task1.subject" value="Subject of task${TIME}.${COUNTER}"/>
<t:property name="task1.location" value="Location of task${TIME}.${COUNTER}"/>
<t:property name="task1.content" value="Content of the message${TIME}.${COUNTER}"/>
<t:property name="reminder2.text1" value="Reminder 1"/>
<t:property name="reminder2.text2" value="Reminder 2"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="SnoozeAlarm_acctSetup" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>
    
    <t:test id="create_account2" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SnoozeCalendarItemAlarmRequest_Smoke_01" type="smoke">
    <t:objective>Create Single event with reminder and snooze it.</t:objective>
   
   <t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="account1.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv > 
                    	<comp method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" >
	                        <s d="${ICALTIME(+15m)}"/>  
	                        <e d="${ICALTIME(+1h)}"/>  
	                        <or a="${account1.name}"/>
						<alarm action="DISPLAY">
							<trigger>
							  <rel m="15" related="START" neg="1"/>
							</trigger>
						 </alarm>
						</comp>
                    </inv>
                <mp ct="text/plain">
				 <content>${appointment.content}</content>
              </mp>
		          <su>${appointment.subject}</su>
	          </m>
	        </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">
            	<t:select attr="calItemId" set="appt1.calItemId"/>
            	<t:select attr="invId" set="appt1.invId"/>
            	<t:select attr="apptId" set="appt1.apptId"/>
            </t:select>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
			<SnoozeCalendarItemAlarmRequest xmlns="urn:zimbraMail">
				<appt xmlns="" id="${appt1.apptId}" until="${TIME(+5m)}"/>
			</SnoozeCalendarItemAlarmRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SnoozeCalendarItemAlarmResponse/mail:appt/mail:alarmData" attr="name" match="${appointment.subject}"/>
		</t:response>
	</t:test>
	
   
</t:test_case>


<t:test_case testcaseid="SnoozeCalendarItemAlarmRequest_Smoke_02" type="smoke">
    <t:objective>Create Single task with reminder and snooze it.</t:objective>
   
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.tasks}']" attr="id" set="account1.folder.task.id"/>
			</t:select>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateTaskRequest xmlns="urn:zimbraMail">
				<m l="${account1.folder.task.id}">
					<inv method="REQUEST">
						<comp priority="1" percentComplete="50" status="INPR" allDay="0" name="${task1.subject}" loc="${task1.location}">
							<s d="${ICALTIME(+15m)}"/>  
	                        <e d="${ICALTIME(+1h)}"/>
							<or a="${account1.name}"/>
							<alarm action="DISPLAY">
								<trigger>
									<abs d="${ICALTIME(+5h)}Z"/>
								</trigger>
							</alarm>
						</comp>
					</inv>
					<mp ct="text/plain">
    					<content>${task1.content}</content>
					</mp>
					<su>${task1.subject}</su>
				</m>
	        </CreateTaskRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTaskResponse">
            	<t:select attr="calItemId" set="task1.calItemId"/>
            </t:select>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
			<SnoozeCalendarItemAlarmRequest xmlns="urn:zimbraMail">
				<appt xmlns="" id="${task1.calItemId}" until="${TIME(+6h)}"/>
			</SnoozeCalendarItemAlarmRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SnoozeCalendarItemAlarmResponse/mail:task/mail:alarmData" attr="name" match="${task1.subject}"/>
			<t:select path="//mail:SnoozeCalendarItemAlarmResponse/mail:task/mail:alarmData/mail:alarm/mail:trigger/mail:abs"/>
		</t:response>
	</t:test>
	
   
</t:test_case>

<t:test_case testcaseid="SnoozeCalendarItemAlarmRequest_Smoke_03" type="smoke">
    <t:objective>Send SnoozeCalendarItemAlarmRequest with snooze until time as alphabets</t:objective>
   
   <t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="account2.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv > 
                    	<comp method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" >
	                        <s d="${ICALTIME(+15m)}"/>  
	                        <e d="${ICALTIME(+1h)}"/>  
	                        <or a="${account1.name}"/>
						<alarm action="DISPLAY">
							<trigger>
							  <rel m="15" related="START" neg="1"/>
							</trigger>
						 </alarm>
						</comp>
                    </inv>
                <mp ct="text/plain">
				 <content>${appointment.content}</content>
              </mp>
		          <su>${appointment.subject}</su>
	          </m>
	        </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">
            	<t:select attr="calItemId" set="appt1.calItemId"/>
            	<t:select attr="invId" set="appt1.invId"/>
            	<t:select attr="apptId" set="appt1.apptId"/>
            </t:select>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
			<SnoozeCalendarItemAlarmRequest xmlns="urn:zimbraMail">
				<appt xmlns="" id="${appt1.apptId}" until="aaaa"/>
			</SnoozeCalendarItemAlarmRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
	</t:test>
	
   
</t:test_case>

<t:test_case testcaseid="SnoozeCalendarItemAlarmRequest_Smoke_04" type="smoke">
    <t:objective>Send SnoozeCalendarItemAlarmRequest with snooze until time as "invalid time"</t:objective>
   
   <t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="account2.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv > 
                    	<comp method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" >
	                        <s d="${ICALTIME(+15m)}"/>  
	                        <e d="${ICALTIME(+1h)}"/>  
	                        <or a="${account1.name}"/>
						<alarm action="DISPLAY">
							<trigger>
							  <rel m="15" related="START" neg="1"/>
							</trigger>
						 </alarm>
						</comp>
                    </inv>
                <mp ct="text/plain">
				 <content>${appointment.content}</content>
              </mp>
		          <su>${appointment.subject}</su>
	          </m>
	        </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">
            	<t:select attr="calItemId" set="appt1.calItemId"/>
            	<t:select attr="invId" set="appt1.invId"/>
            	<t:select attr="apptId" set="appt1.apptId"/>
            </t:select>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
			<SnoozeCalendarItemAlarmRequest xmlns="urn:zimbraMail">
				<appt xmlns="" id="${appt1.apptId}" until="-111111111111111111111111111111"/>
			</SnoozeCalendarItemAlarmRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
	</t:test>
	
   
</t:test_case>

<t:test_case testcaseid="SnoozeCalendarItemAlarmRequest_Smoke_05" type="smoke">
    <t:objective>Send SnoozeCalendarItemAlarmRequest with snooze until time as blank</t:objective>
   
   <t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="account2.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv > 
                    	<comp method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" >
	                        <s d="${ICALTIME(+15m)}"/>  
	                        <e d="${ICALTIME(+1h)}"/>  
	                        <or a="${account1.name}"/>
						<alarm action="DISPLAY">
							<trigger>
							  <rel m="15" related="START" neg="1"/>
							</trigger>
						 </alarm>
						</comp>
                    </inv>
                <mp ct="text/plain">
				 <content>${appointment.content}</content>
              </mp>
		          <su>${appointment.subject}</su>
	          </m>
	        </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse">
            	<t:select attr="calItemId" set="appt1.calItemId"/>
            	<t:select attr="invId" set="appt1.invId"/>
            	<t:select attr="apptId" set="appt1.apptId"/>
            </t:select>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
			<SnoozeCalendarItemAlarmRequest xmlns="urn:zimbraMail">
				<appt xmlns="" id="${appt1.apptId}" until="${until.blank}"/>
			</SnoozeCalendarItemAlarmRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
	</t:test>
	
   
</t:test_case>

<t:test_case testcaseid="SnoozeCalendarItemAlarmRequest_Smoke_06" type="smoke">
    <t:objective>Send SnoozeCalendarItemAlarmRequest with snooze until time as alphabets</t:objective>
   
   <t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.tasks}']" attr="id" set="account1.folder.task.id"/>
			</t:select>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateTaskRequest xmlns="urn:zimbraMail">
				<m l="${account1.folder.task.id}">
					<inv method="REQUEST">
						<comp priority="1" percentComplete="50" status="INPR" allDay="0" name="${task1.subject}" loc="${task1.location}">
							<s d="${ICALTIME(+15m)}"/>  
	                        <e d="${ICALTIME(+1h)}"/>
							<or a="${account1.name}"/>
							<alarm action="DISPLAY">
								<trigger>
									<abs d="${ICALTIME(+5h)}Z"/>
								</trigger>
							</alarm>
						</comp>
					</inv>
					<mp ct="text/plain">
    					<content>${task1.content}</content>
					</mp>
					<su>${task1.subject}</su>
				</m>
	        </CreateTaskRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTaskResponse">
            	<t:select attr="calItemId" set="task1.calItemId"/>
            </t:select>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
			<SnoozeCalendarItemAlarmRequest xmlns="urn:zimbraMail">
				<appt xmlns="" id="${task1.calItemId}" until="aaaa"/>
			</SnoozeCalendarItemAlarmRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
	</t:test>
	
   
</t:test_case>

<t:test_case testcaseid="SnoozeCalendarItemAlarmRequest_Smoke_07" type="smoke">
    <t:objective>Send SnoozeCalendarItemAlarmRequest with snooze until time as "invalid time"</t:objective>
   
   <t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.tasks}']" attr="id" set="account1.folder.task.id"/>
			</t:select>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateTaskRequest xmlns="urn:zimbraMail">
				<m l="${account1.folder.task.id}">
					<inv method="REQUEST">
						<comp priority="1" percentComplete="50" status="INPR" allDay="0" name="${task1.subject}" loc="${task1.location}">
							<s d="${ICALTIME(+15m)}"/>  
	                        <e d="${ICALTIME(+1h)}"/>
							<or a="${account1.name}"/>
							<alarm action="DISPLAY">
								<trigger>
									<abs d="${ICALTIME(+5h)}Z"/>
								</trigger>
							</alarm>
						</comp>
					</inv>
					<mp ct="text/plain">
    					<content>${task1.content}</content>
					</mp>
					<su>${task1.subject}</su>
				</m>
	        </CreateTaskRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTaskResponse">
            	<t:select attr="calItemId" set="task1.calItemId"/>
            </t:select>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
			<SnoozeCalendarItemAlarmRequest xmlns="urn:zimbraMail">
				<appt xmlns="" id="${task1.calItemId}" until="-111111111111111111111111111111"/>
			</SnoozeCalendarItemAlarmRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
	</t:test>
	
   
</t:test_case>

<t:test_case testcaseid="SnoozeCalendarItemAlarmRequest_Smoke_08" type="smoke">
    <t:objective>Send SnoozeCalendarItemAlarmRequest with snooze until time as blank</t:objective>
   
   <t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.tasks}']" attr="id" set="account1.folder.task.id"/>
			</t:select>
		</t:response>
	</t:test>
    
	<t:test>
        <t:request>
            <CreateTaskRequest xmlns="urn:zimbraMail">
				<m l="${account1.folder.task.id}">
					<inv method="REQUEST">
						<comp priority="1" percentComplete="50" status="INPR" allDay="0" name="${task1.subject}" loc="${task1.location}">
							<s d="${ICALTIME(+15m)}"/>  
	                        <e d="${ICALTIME(+1h)}"/>
							<or a="${account1.name}"/>
							<alarm action="DISPLAY">
								<trigger>
									<abs d="${ICALTIME(+5h)}Z"/>
								</trigger>
							</alarm>
						</comp>
					</inv>
					<mp ct="text/plain">
    					<content>${task1.content}</content>
					</mp>
					<su>${task1.subject}</su>
				</m>
	        </CreateTaskRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTaskResponse">
            	<t:select attr="calItemId" set="task1.calItemId"/>
            </t:select>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
			<SnoozeCalendarItemAlarmRequest xmlns="urn:zimbraMail">
				<appt xmlns="" id="${task1.calItemId}" until="${until.blank}"/>
			</SnoozeCalendarItemAlarmRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
	</t:test>
	
	
</t:test_case>

<t:test_case testcaseid="SnoozeCalendarItemAlarmRequest_Smoke_09" type="smoke">
    <t:objective>Send SnoozeCalendarItemAlarmRequest : snooze until time with trailing Spaces.</t:objective>
   
   <t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.tasks}']" attr="id" set="account1.folder.task.id"/>
			</t:select>
		</t:response>
	</t:test>
	
	<t:test>
        <t:request>
            <CreateTaskRequest xmlns="urn:zimbraMail">
				<m l="${account1.folder.task.id}">
					<inv method="REQUEST">
						<comp priority="1" percentComplete="50" status="INPR" allDay="0" name="${task1.subject}" loc="${task1.location}">
							<s d="${ICALTIME(+15m)}"/>  
	                        <e d="${ICALTIME(+1h)}"/>
							<or a="${account1.name}"/>
							<alarm action="DISPLAY">
								<trigger>
									<abs d="${ICALTIME(+5h)}Z"/>
								</trigger>
							</alarm>
						</comp>
					</inv>
					<mp ct="text/plain">
    					<content>${task1.content}</content>
					</mp>
					<su>${task1.subject}</su>
				</m>
	        </CreateTaskRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTaskResponse">
            	<t:select attr="calItemId" set="task1.calItemId"/>
            </t:select>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
			<SnoozeCalendarItemAlarmRequest xmlns="urn:zimbraMail">
				<appt xmlns="" id="${task1.calItemId}" until="${TIME(+5m)}        "/>
			</SnoozeCalendarItemAlarmRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
	</t:test>
	
	
</t:test_case>

<t:test_case testcaseid="SnoozeCalendarItemAlarmRequest_Smoke_10" type="smoke">
    <t:objective>Send SnoozeCalendarItemAlarmRequest : snooze until time with leading spaces.</t:objective>
   
   <t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.tasks}']" attr="id" set="account1.folder.task.id"/>
			</t:select>
		</t:response>
	</t:test>
	
	<t:test>
        <t:request>
            <CreateTaskRequest xmlns="urn:zimbraMail">
				<m l="${account1.folder.task.id}">
					<inv method="REQUEST">
						<comp priority="1" percentComplete="50" status="INPR" allDay="0" name="${task1.subject}" loc="${task1.location}">
							<s d="${ICALTIME(+15m)}"/>  
	                        <e d="${ICALTIME(+1h)}"/>
							<or a="${account1.name}"/>
							<alarm action="DISPLAY">
								<trigger>
									<abs d="${ICALTIME(+5h)}Z"/>
								</trigger>
							</alarm>
						</comp>
					</inv>
					<mp ct="text/plain">
    					<content>${task1.content}</content>
					</mp>
					<su>${task1.subject}</su>
				</m>
	        </CreateTaskRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTaskResponse">
            	<t:select attr="calItemId" set="task1.calItemId"/>
            </t:select>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
			<SnoozeCalendarItemAlarmRequest xmlns="urn:zimbraMail">
				<appt xmlns="" id="${task1.calItemId}" until="       ${TIME(+5m)}"/>
			</SnoozeCalendarItemAlarmRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
	</t:test>
	
	
</t:test_case>

<t:test_case testcaseid="SnoozeCalendarItemAlarmRequest_Smoke_11" type="smoke">
    <t:objective>Send SnoozeCalendarItemAlarmRequest with space before and after the until time ="   1603125000000  "</t:objective>
   
   <t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.tasks}']" attr="id" set="account1.folder.task.id"/>
			</t:select>
		</t:response>
	</t:test>
	
	<t:test>
        <t:request>
            <CreateTaskRequest xmlns="urn:zimbraMail">
				<m l="${account1.folder.task.id}">
					<inv method="REQUEST">
						<comp priority="1" percentComplete="50" status="INPR" allDay="0" name="${task1.subject}" loc="${task1.location}">
							<s d="${ICALTIME(+15m)}"/>  
	                        <e d="${ICALTIME(+1h)}"/>
							<or a="${account1.name}"/>
							<alarm action="DISPLAY">
								<trigger>
									<abs d="${ICALTIME(+5h)}Z"/>
								</trigger>
							</alarm>
						</comp>
					</inv>
					<mp ct="text/plain">
    					<content>${task1.content}</content>
					</mp>
					<su>${task1.subject}</su>
				</m>
	        </CreateTaskRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTaskResponse">
            	<t:select attr="calItemId" set="task1.calItemId"/>
            </t:select>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
			<SnoozeCalendarItemAlarmRequest xmlns="urn:zimbraMail">
				<appt xmlns="" id="${task1.calItemId}" until="       ${TIME(+5m)}    "/>
			</SnoozeCalendarItemAlarmRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
	</t:test>
	
	
</t:test_case>

</t:tests>
