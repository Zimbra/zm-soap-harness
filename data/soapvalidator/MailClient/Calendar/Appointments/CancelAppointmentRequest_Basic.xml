<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="appointment.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.location" value="Location of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.content" value="Content of the message${TIME}.${COUNTER}"/>

<t:property name="appointment1.subject" value="New Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment1.content" value="New Content of the message${TIME}.${COUNTER}"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>




<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test id="create_account2" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>

    <t:test id="create_account3" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="account1.calendar.folder.id"/>
			</t:select>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="436581" type="smoke" areas="Calendar">
    <t:objective>Delete Inline event.</t:objective>


	<t:property name="time.20071201120000.gmt" value="1196510400000"/>
   
    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv > 
                    	<comp method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" >
	                        <s d="${ICALTIME[${time.20071201120000.gmt}]}"/>  
	                        <e d="${ICALTIME(+1h)[${time.20071201120000.gmt}]}"/>  
	                        <or a="${account1.name}"/>
                        </comp>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="invId" set="appointment1.id"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${appointment1.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m[@id='${appointment1.id}']">
        		<t:select path="//mail:comp">
        			<t:select path="//mail:s" attr="d" match="${ICALTIME[${time.20071201120000.gmt}]}"/>
            	</t:select>
            </t:select>
        </t:response>
    </t:test>

   <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${TIME(-1d)[${time.20071201120000.gmt}]}" calExpandInstEnd="${TIME(+1d)[${time.20071201120000.gmt}]}" types="appointment">
				<query>inid:${account1.calendar.folder.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse">
            	<t:select path="//mail:appt[@invId='${appointment1.id}']"/>
            </t:select>
        </t:response>
    </t:test>


    <t:test>
        <t:request>
            <CancelAppointmentRequest xmlns="urn:zimbraMail" id="${appointment1.id}" comp="0">
                <m>
                   <su>Cancelled${appointment.subject}</su>
                    <mp content-type="text/plain">
                        <content> Action: Cancelled ${appointment.subject}" </content>
                    </mp>
                </m>
            </CancelAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CancelAppointmentResponse"/>
        </t:response>
    </t:test>
 
   <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${TIME(-1d)[${time.20071201120000.gmt}]}" calExpandInstEnd="${TIME(+1d)[${time.20071201120000.gmt}]}" types="appointment">
				<query>inid:${account1.calendar.folder.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse">
            	<t:select path="//mail:appt[@invId='${appointment1.id}']" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>


</t:test_case>


<t:test_case testcaseid="bug54885" type="smoke" areas="Calendar">
    <t:objective>Create/Cancel/Modify an appointment from trash.</t:objective>
	<t:property name="Time1" value="${ICALTIME(+1h)}"/>
	<t:property name="Time2" value="${ICALTIME(+2h)}"/>
	<t:property name="time.before" value="${TIME(-1d)}"/>
	<t:property name="time.after" value="${TIME(+1d)}"/>
   
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
     <t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="account3.calendar.folder.id"/>
				<t:select path="//mail:folder[@name='${globals.trash}']" attr="id" set="account3.trash.folder.id"/>
			</t:select>
		</t:response>
     </t:test>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${account3.name}"/>
                        <s d="${Time1}"/>  
                        <e d="${Time2}"/>  
                        <or a="${account3.name}"/>
                    </inv>
                    <e a="${account3.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse" attr="invId" set="appointment1.id"/>
        </t:response>
    </t:test>

   <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${time.before}" calExpandInstEnd="${time.after}" types="appointment">
				<query>inid:${account3.calendar.folder.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse/mail:appt[@invId='${appointment1.id}']"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CancelAppointmentRequest xmlns="urn:zimbraMail" id="${appointment1.id}" comp="0">
                <m>
                   <su>Cancelled${appointment.subject}</su>
                    <mp content-type="text/plain">
                        <content> Action: Cancelled ${appointment.subject}" </content>
                    </mp>
                </m>
            </CancelAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CancelAppointmentResponse"/>
        </t:response>
    </t:test>
 
   <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${time.before}" calExpandInstEnd="${time.after}" types="appointment">
				<query>inid:${account3.calendar.folder.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse">
            	<t:select path="//mail:SearchResponse/mail:appt[@invId='${appointment1.id}']" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>


   <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" calExpandInstStart="${time.before}" calExpandInstEnd="${time.after}" types="appointment">
				<query>inid:${account3.trash.folder.id}</query>
			</SearchRequest>
        </t:request>
        <t:response>      
            <t:select path="//mail:SearchResponse">
            	<t:select path="//mail:SearchResponse/mail:appt[@invId='${appointment1.id}']"/>
            </t:select>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CancelAppointmentRequest xmlns="urn:zimbraMail" id="${appointment1.id}" comp="0">
                <m>
                   <su>Cancelled${appointment.subject}</su>
                    <mp content-type="text/plain">
                        <content> Action: Cancelled ${appointment.subject}" </content>
                    </mp>
                </m>
            </CancelAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
    
	<t:test>
        <t:request>
            <CancelAppointmentRequest xmlns="urn:zimbraMail" id="${appointment1.id}" comp="0">
                <m>
                   <su>Cancelled${appointment.subject}</su>
                    <mp content-type="text/plain">
                        <content> Action: Cancelled ${appointment.subject}" </content>
                    </mp>
                </m>
            </CancelAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//zimbra:Code" match="service.INVALID_REQUEST"/>
         	<t:select path = "//zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
	
    <t:test>
        <t:request>
            <ModifyAppointmentRequest xmlns="urn:zimbraMail" id="${appointment1.id}" comp="0">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" status="CONF" allDay="0" name="${appointment1.subject}" >
	                        <s d="${ICALTIME}"/>  
	                        <e d="${ICALTIME(+1h)]}"/>  
	                        <or a="${account3.name}"/>
                    </inv>
                    <mp content-type="text/plain">
                        <content>${appointment1.content}</content>
                    </mp>
                    <su>${appointment1.subject}</su>
                </m>
            </ModifyAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
    
        <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m l="${account3.trash.folder.id}">
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${account3.name}"/>
                        <s d="${Time1}"/>  
                        <e d="${Time2}"/>  
                        <or a="${account3.name}"/>
                    </inv>
                    <e a="${account3.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
</t:test_case>


</t:tests>
