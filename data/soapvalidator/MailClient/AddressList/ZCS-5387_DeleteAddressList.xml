<t:tests xmlns:t="urn:zimbraTestHarness">

	<t:property name="acct1.name"
		value="test1_${TIME}.${COUNTER}@${defaultdomain.name}" />

	<t:test_case testcaseid="Ping" type="always">
		<t:objective>basic system check</t:objective>

		<t:test required="true">
			<t:request>
				<PingRequest xmlns="urn:zimbraAdmin" />
			</t:request>
			<t:response>
				<t:select path="//admin:PingResponse" />
			</t:response>
		</t:test>
	</t:test_case>

	<t:test_case testcaseid="CreateAccounts" type="always">
		<t:objective>Account Setup </t:objective>
		<t:steps>
			1. Login into admin.
			2. Create test accounts.
		</t:steps>

		<t:test id="admin_login" required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:property name="domain1.name" value="domain1${COUNTER}.${TIME}.com" />

		<t:test required="true">
			<t:request>
				<CreateDomainRequest xmlns="urn:zimbraAdmin">
					<name>${domain1.name}</name>
				</CreateDomainRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateDomainResponse" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${acct1.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account1.id" />
			</t:response>
		</t:test>
	</t:test_case>

	<t:test_case testcaseid="DeleteAddressList_01" type="smoke"
		bugids="ZCS5387">
		<t:objective>Delete an address list.
		</t:objective>
		<t:steps>
			1. Create a new address list with description and search
			filter for accounts having department as QA
			2. Delete the address
			list.
			3. Verify using GetAllAddressList request the address list is
			not present
		</t:steps>

		<t:property name="addressList1_name" value="addressList1_${TIME}" />
		<t:property name="qa_dept" value="QA" />
		<t:property name="description" value="Test address list" />

		<t:test>
			<t:request>
				<CreateAddressListRequest type="account"
					xmlns="urn:zimbraAdmin">
					<name>${addressList1_name}</name>
					<desc>${description}</desc>
					<searchFilter>
						<conds not="false" or="1">
							<cond not="false" attr="department" op="has" value="${qa_dept}" />
						</conds>
					</searchFilter>
					<domain by="name">${defaultdomain.name}</domain>
				</CreateAddressListRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAddressListResponse//admin:id"
					set="addressList1.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<DeleteAddressListRequest id="${addressList1.id}"
					xmlns="urn:zimbraAdmin">
				</DeleteAddressListRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:DeleteAddressListResponse" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<GetAllAddressListsRequest xmlns="urn:zimbraAdmin">
					<domain by="name">${defaultdomain.name}</domain>
				</GetAllAddressListsRequest>
			</t:request>
			<t:response>
				<t:select
					path="//admin:GetAllAddressListsResponse/admin:addressLists//admin:addressList"
					attr="name" match="${addressList1_name}" emptyset="1" />
			</t:response>
		</t:test>
	</t:test_case>

	<t:test_case testcaseid="DeleteAddressList_02" type="smoke"
		bugids="ZCS5387">
		<t:objective>Delete an already deleted address list.
		</t:objective>
		<t:steps>
			1. Try Deleting the address list in step above.
			2. Verify
			error message as NO_SUCH_ADDRESS_LIST should be displayed
		</t:steps>

		<t:test>
			<t:request>
				<DeleteAddressListRequest id="${addressList1.id}"
					xmlns="urn:zimbraAdmin">
				</DeleteAddressListRequest>
			</t:request>
			<t:response>
				<t:select path="//zimbra:Code" match="^account.NO_SUCH_ADDRESS_LIST" />
			</t:response>
		</t:test>
	</t:test_case>

	<t:test_case testcaseid="DeleteAddressList_03" type="smoke"
		bugids="ZCS5387">
		<t:objective>Delete an addresslist with invalid id
		</t:objective>
		<t:steps>
			1. Try Deleting the address list with invalid id
			2. Verify
			error message as account.NO_SUCH_ADDRESS_LIST should be displayed
		</t:steps>

		<t:property name="invalid_id" value="ecasdasd-er123123-asdasdd" />

		<t:test>
			<t:request>
				<DeleteAddressListRequest id="${invalid_id}"
					xmlns="urn:zimbraAdmin">
				</DeleteAddressListRequest>
			</t:request>
			<t:response>
				<t:select path="//zimbra:Code" match="^account.NO_SUCH_ADDRESS_LIST" />
			</t:response>
		</t:test>
	</t:test_case>

	<t:test_case testcaseid="DeleteAddressList_04" type="smoke"
		bugids="ZCS5387">
		<t:objective>Delete an addresslist with blank id
		</t:objective>
		<t:steps>
			1. Try Deleting the address list with blank id
			2. Verify error
			message as service.INVALID_REQUEST should be displayed
		</t:steps>

		<t:test>
			<t:request>
				<DeleteAddressListRequest id=""
					xmlns="urn:zimbraAdmin">
				</DeleteAddressListRequest>
			</t:request>
			<t:response>
				<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
			</t:response>
		</t:test>
	</t:test_case>

	<t:test_case testcaseid="DeleteAddressList_05" type="smoke"
		bugids="ZCS5387">
		<t:objective>DeleteAddressList request in account namespace
		</t:objective>
		<t:steps>
			1. Try Deleting the address list with account namespace
			2.
			Verify error message as UKNOWN_DOCUMENT should be displayed
		</t:steps>

		<t:property name="addressList2_name" value="addressList2_${TIME}" />
		<t:property name="qa_dept" value="QA" />
		<t:property name="description" value="Test address list" />

		<t:test>
			<t:request>
				<CreateAddressListRequest type="account"
					xmlns="urn:zimbraAdmin">
					<name>${addressList2_name}</name>
					<desc>${description}</desc>
					<searchFilter>
						<conds not="false" or="1">
							<cond not="false" attr="department" op="has" value="${qa_dept}" />
						</conds>
					</searchFilter>
					<domain by="name">${defaultdomain.name}</domain>
				</CreateAddressListRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAddressListResponse//admin:id"
					set="addressList2.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<DeleteAddressListRequest id="${addressList2.id}"
					xmlns="urn:zimbraAccount">
				</DeleteAddressListRequest>
			</t:request>
			<t:response>
				<t:select path="//zimbra:Code" match="^service.UNKNOWN_DOCUMENT" />
			</t:response>
		</t:test>
	</t:test_case>

	<t:finally>

		<t:test>
			<t:request>
				<DeleteAddressListRequest id="${addressList2.id}"
					xmlns="urn:zimbraAdmin">
				</DeleteAddressListRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:DeleteAddressListResponse" />
			</t:response>
		</t:test>
	</t:finally>

</t:tests>
		