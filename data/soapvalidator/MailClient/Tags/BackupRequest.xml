<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="tag_backup.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="tag_backup.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="tag.name" value="tag${TIME}${COUNTER}" />
<t:property name="tag1.name" value="tag${TIME}${COUNTER}" />

<t:property name="tag.colorvalid" value="4" />
<t:property name="tag.colornew" value="6" />

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

	<t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct_setup_Contacts_Backup" type="always" >
    <t:objective>Create test accounts</t:objective>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid="tag_Backup_01" type="smoke" areas="backup,nonappliance">
    <t:objective>Verify that after backup and restore an account with a Tag, tag is restored. </t:objective>
    <t:steps>
			1. Login into account1.
			2. Create an Tag.
			3. Delete the account.
			4. Restore the account.
			5. Verify the Tag.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateTagRequest xmlns="urn:zimbraMail">
                <tag name="${tag.name}" color="${tag.colorvalid}" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTagResponse/mail:tag">
            <t:select attr="id" set="tag.id" />
            <t:select attr="name" match="${tag.name}" />
            <t:select attr="color" match="${tag.colorvalid}" />
            </t:select>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAdmin" value="${account1.server}"/>
	<t:property name="account.name" value="${account1.name}"/>
	<t:property name="account.id" value="${account1.id}"/>
     
    
	<t:include filename="BackupWorkflowFullDeleteRestore.inc"/> 
 	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<GetTagRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetTagResponse/mail:tag[@id='${tag.id}']">
			<t:select attr="name" match="${tag.name}"/>
			<t:select attr="color" match="${tag.colorvalid}"/>
		</t:select>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="tag_Backup_02" type="smoke" areas="backup,nonappliance">
    <t:objective>Backup (incremental) and restore an account with a tag. Verify that after backup and restore the correct tag is restored </t:objective>
    <t:steps>
			1. Login into account2.
			2. Create an tag.
			3. Backup the account.
			4. Modify the color of the tag.
			5. Do incremental backup.
			6. Delete the account.
			7. Restore the account.
			8. Verify the modified tag displayed.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateTagRequest xmlns="urn:zimbraMail">
                <tag name="${tag.name}" color="${tag.colorvalid}" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTagResponse/mail:tag">
            <t:select attr="id" set="tag.id" />
            <t:select attr="name" match="${tag.name}" />
            <t:select attr="color" match="${tag.colorvalid}" />
            </t:select>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAdmin" value="${account2.server}"/>
	<t:property name="account.name" value="${account2.name}"/>
	<t:property name="account.id" value="${account2.id}"/>
     
   
	<t:include filename="BackupRequestFullBasic.inc"/> 

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test>
        <t:request>
			<TagActionRequest xmlns="urn:zimbraMail">
				<action op="color" id="${tag.id}" color="${tag.colornew}"/>
			</TagActionRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:TagActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAdmin" value="${account2.server}"/>
	<t:property name="account.name" value="${account2.name}"/>
	<t:property name="account.id" value="${account2.id}"/>
     
   
	<t:include filename="BackupWorkflowIncrementalDeleteRestore.inc"/> 

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<GetTagRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetTagResponse/mail:tag[@id='${tag.id}']">
			<t:select attr="name" match="${tag.name}"/>
			<t:select attr="color" match="${tag.colornew}"/>
		</t:select>
		</t:response>
	</t:test>

</t:test_case>


</t:tests>