<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="skinbackup.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="skinbackup.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="skinbackup.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.name" value="skinbackup.${TIME}.${COUNTER}@${defaultdomain.name}"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>


    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct_setup_Contacts_Backup" type="always" >
    <t:objective>Create test accounts</t:objective>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid="BackupRequest_Skins_01" type="smoke" areas="backup,nonappliance">
    <t:objective>Verify that after backup and restore an account that the skin setting is restored. </t:objective>
    <t:steps>
			1. Login into account1.
			2. Change the skin setting.
			3. Delete the account.
			4. Restore the account.
			5. Verify the skin setting.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<!--
	The SOAP Harness cannot determine which skin is installed by default
	So, run this test twice, each time using a different skin.
	
	On the first run, use the index=1 to choose the skin to switch to
	On the second run, use the index=2 to choose the skin to switch to
	-->
	
	<t:test>
		<t:request>
			<GetAvailableSkinsRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetAvailableSkinsResponse">
				<t:select path="//acct:skin[1]" attr="name" set="account1.skin1.name"/>
			</t:select>
		</t:response>
	</t:test>  

    <t:test >
        <t:request>
			<ModifyPrefsRequest xmlns="urn:zimbraAccount" >
				<pref name="zimbraPrefSkin">${account1.skin1.name}</pref>
			</ModifyPrefsRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:ModifyPrefsResponse"/>	
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetPrefsRequest xmlns="urn:zimbraAccount"/>
        </t:request>
        <t:response>
            <t:select path="//acct:GetPrefsResponse">
            	<t:select path="//acct:pref[@name='zimbraPrefSkin']" match="${account1.skin1.name}"/>
            </t:select>
        </t:response>
    </t:test>


	
	<t:property name="server.zimbraAdmin" value="${account1.server}"/>
	<t:property name="account.name" value="${account1.name}"/>
	<t:property name="account.id" value="${account1.id}"/>
     
   
	<t:include filename="BackupWorkflowFullDeleteRestore.inc"/> 
 	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetPrefsRequest xmlns="urn:zimbraAccount"/>
        </t:request>
        <t:response>
            <t:select path="//acct:GetPrefsResponse">
            	<t:select path="//acct:pref[@name='zimbraPrefSkin']" match="${account1.skin1.name}"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="BackupRequest_Skins_02" type="smoke" areas="backup,nonappliance">
    <t:objective>Verify that after backup and restore an account that the skin setting is restored. </t:objective>
    <t:steps>
			1. Login into account2.
			2. Change the skin setting.
			3. Delete the account.
			4. Restore the account.
			5. Verify the skin setting.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<!--
	The SOAP Harness cannot determine which skin is installed by default
	So, run this test twice, each time using a different skin.
	
	On the first run, use the index=1 to choose the skin to switch to
	On the second run, use the index=2 to choose the skin to switch to
	-->
	
	<t:test>
		<t:request>
			<GetAvailableSkinsRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetAvailableSkinsResponse">
				<t:select path="//acct:skin[2]" attr="name" set="account2.skin2.name"/>
			</t:select>
		</t:response>
	</t:test>  

    <t:test >
        <t:request>
			<ModifyPrefsRequest xmlns="urn:zimbraAccount" >
				<pref name="zimbraPrefSkin">${account2.skin2.name}</pref>
			</ModifyPrefsRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:ModifyPrefsResponse"/>	
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetPrefsRequest xmlns="urn:zimbraAccount"/>
        </t:request>
        <t:response>
            <t:select path="//acct:GetPrefsResponse">
            	<t:select path="//acct:pref[@name='zimbraPrefSkin']" match="${account2.skin2.name}"/>
            </t:select>
        </t:response>
    </t:test>


	
	<t:property name="server.zimbraAdmin" value="${account2.server}"/>
	<t:property name="account.name" value="${account2.name}"/>
	<t:property name="account.id" value="${account2.id}"/>
     
   
	<t:include filename="BackupWorkflowFullDeleteRestore.inc"/> 
 	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetPrefsRequest xmlns="urn:zimbraAccount"/>
        </t:request>
        <t:response>
            <t:select path="//acct:GetPrefsResponse">
            	<t:select path="//acct:pref[@name='zimbraPrefSkin']" match="${account2.skin2.name}"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="Cont_Backup_03" type="smoke" areas="backup,nonappliance">
    <t:objective>Backup (incremental) and restore an account. Verify that after backup and restore the correct Skin is restored </t:objective>
    <t:steps>
			1. Login into account3.
			2. View the skin setting.
			3. Backup the account.
			4. Modify the skin setting.
			5. Do incremental backup.
			6. Delete the account.
			7. Restore the account.
			8. Verify the modified skin setting.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<!--
	The SOAP Harness cannot determine which skin is installed by default
	So, run this test twice, each time using a different skin.
	
	On the first run, use the index=3 to choose the skin to switch to
	On the second run, use the index=4 to choose the skin to switch to
	-->
	
	<t:test>
		<t:request>
			<GetAvailableSkinsRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetAvailableSkinsResponse">
				<t:select path="//acct:skin[3]" attr="name" set="account3.skin3.name"/>
			</t:select>
		</t:response>
	</t:test>  

    <t:test >
        <t:request>
            <GetPrefsRequest xmlns="urn:zimbraAccount"/>
        </t:request>
        <t:response>
            <t:select path="//acct:GetPrefsResponse"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAdmin" value="${account3.server}"/>
	<t:property name="account.name" value="${account3.name}"/>
	<t:property name="account.id" value="${account3.id}"/>
     
    
	<t:include filename="BackupRequestFullBasic.inc"/> 

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test >
        <t:request>
			<ModifyPrefsRequest xmlns="urn:zimbraAccount" >
				<pref name="zimbraPrefSkin">${account3.skin3.name}</pref>
			</ModifyPrefsRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:ModifyPrefsResponse"/>	
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetPrefsRequest xmlns="urn:zimbraAccount"/>
        </t:request>
        <t:response>
            <t:select path="//acct:GetPrefsResponse">
            	<t:select path="//acct:pref[@name='zimbraPrefSkin']" match="${account3.skin3.name}"/>
            </t:select>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAdmin" value="${account3.server}"/>
	<t:property name="account.name" value="${account3.name}"/>
	<t:property name="account.id" value="${account3.id}"/>
     
   
	<t:include filename="BackupWorkflowIncrementalDeleteRestore.inc"/> 
 	
	<t:property name="server.zimbraAccount" value="${account3.server}"/>
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetPrefsRequest xmlns="urn:zimbraAccount"/>
        </t:request>
        <t:response>
            <t:select path="//acct:GetPrefsResponse">
            	<t:select path="//acct:pref[@name='zimbraPrefSkin']" match="${account3.skin3.name}"/>
            </t:select>
        </t:response>
    </t:test>


</t:test_case>

<t:test_case testcaseid="Cont_Backup_04" type="smoke" areas="backup,nonappliance">
    <t:objective>Backup (incremental) and restore an account. Verify that after backup and restore the correct Skin is restored </t:objective>
    <t:steps>
			1. Login into account4.
			2. View the skin setting.
			3. Backup the account.
			4. Modify the skin setting.
			5. Do incremental backup.
			6. Delete the account.
			7. Restore the account.
			8. Verify the modified skin setting.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account4.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<!--
	The SOAP Harness cannot determine which skin is installed by default
	So, run this test twice, each time using a different skin.
	
	On the first run, use the index=3 to choose the skin to switch to
	On the second run, use the index=4 to choose the skin to switch to
	-->
	
	<t:test>
		<t:request>
			<GetAvailableSkinsRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetAvailableSkinsResponse">
				<t:select path="//acct:skin[4]" attr="name" set="account4.skin4.name"/>
			</t:select>
		</t:response>
	</t:test>  

    <t:test >
        <t:request>
            <GetPrefsRequest xmlns="urn:zimbraAccount"/>
        </t:request>
        <t:response>
            <t:select path="//acct:GetPrefsResponse"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAdmin" value="${account4.server}"/>
	<t:property name="account.name" value="${account4.name}"/>
	<t:property name="account.id" value="${account4.id}"/>
     
    
	<t:include filename="BackupRequestFullBasic.inc"/> 

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account4.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test >
        <t:request>
			<ModifyPrefsRequest xmlns="urn:zimbraAccount" >
				<pref name="zimbraPrefSkin">${account4.skin4.name}</pref>
			</ModifyPrefsRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:ModifyPrefsResponse"/>	
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetPrefsRequest xmlns="urn:zimbraAccount"/>
        </t:request>
        <t:response>
            <t:select path="//acct:GetPrefsResponse">
            	<t:select path="//acct:pref[@name='zimbraPrefSkin']" match="${account4.skin4.name}"/>
            </t:select>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAdmin" value="${account4.server}"/>
	<t:property name="account.name" value="${account4.name}"/>
	<t:property name="account.id" value="${account4.id}"/>
     
   
	<t:include filename="BackupWorkflowIncrementalDeleteRestore.inc"/> 
 	
	<t:property name="server.zimbraAccount" value="${account4.server}"/>
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetPrefsRequest xmlns="urn:zimbraAccount"/>
        </t:request>
        <t:response>
            <t:select path="//acct:GetPrefsResponse">
            	<t:select path="//acct:pref[@name='zimbraPrefSkin']" match="${account4.skin4.name}"/>
            </t:select>
        </t:response>
    </t:test>


</t:test_case>


</t:tests>