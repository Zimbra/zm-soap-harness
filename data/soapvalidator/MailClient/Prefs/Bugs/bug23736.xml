<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain1.name" value="extMailTestdomain1.com" />
<t:property name="domain2.name" value="extMailTestdomain2.com" />

<t:property name="account1.email" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.email" value="account2.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<!-- Yahoo account properties -->
<t:property name="yahooaccount.name" value="${IMAP.Yahoo.username}"/>
<t:property name="yahooaccount.password" value="${IMAP.Yahoo.password}"/>
<t:property name="yahooaccount.hostname" value="${IMAP.Yahoo.hostname}"/>
<t:property name="yahooaccount.port" value="${IMAP.Yahoo.port}"/>
<t:property name="yahooaccount.testhostname" value="${IMAP.Yahoo.test.hostname}"/>

<t:property name="account1.name" value="account1.${TIME}.${COUNTER}"/>
<t:property name="account2.name" value="account2.${TIME}.${COUNTER}"/>    
<t:property name="account3.name" value="account3.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.name" value="account3.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="message1" value="subject1.${TIME}.${COUNTER}"/>
<t:property name="message1.content" value="content1.${TIME}.${COUNTER}"/>

<t:property name="message2" value="subject2.${TIME}.${COUNTER}"/>
<t:property name="message2.content" value="content2.${TIME}.${COUNTER}"/>

<t:property name="message3.subject" value="subject3.${TIME}.${COUNTER}"/>
<t:property name="message3.content" value="content3.${TIME}.${COUNTER}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="account1.server" value="NOT_DEFINED"/>
<t:property name="account2.server" value="NOT_DEFINED"/>


<t:property name="msg01.file"		value="${testMailRaw.root}/email29/msg01.txt"/>
<t:property name="msg01.subject"	value="email29A"/>
<t:property name="msg02.file"		value="${testMailRaw.root}/email29/msg02.txt"/>
<t:property name="msg02.subject"	value="email29B"/>
<t:property name="imapName"		value="acct2"/>
<t:property name="dsNewPollingInterval"		value="2m"/>


<!-- authentication -->
<t:test_case testcaseid="Ping" type="always">
    <t:objective>Basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acctSetup1" type="always">
    <t:objective>Prepare the account for testing</t:objective>
    <t:steps>1. Login to admin.
             2. Create 2 test accounts.
             3. Login to the 1'st test account and add account2 as External account.
             4. Try to fetch 
             5. Get the list of folders
    </t:steps>

    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<!-- Creating the two accounts -->
    <t:test  required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.email}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="imapPollDataSource" type="smoke">
    <t:objective> Verify if the externalmail fetch for IMap folders work properly </t:objective>
    <t:steps>        
  		
    </t:steps>     
      	
	<!-- Login to account1 -->
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.email}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
    
 	<!-- Create a folder --> 
    <t:test id="CreateFolderReq">
        <t:request>
		    <CreateFolderRequest xmlns="urn:zimbraMail" requestId="0">
				<folder l="1" name="acct2" fie="1"/>
			</CreateFolderRequest>
		</t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="acct2.id"/>
        </t:response>
    </t:test>
        
        
        
    <!-- Configure externalImap pull --> 
    <t:test id="ConfExternalImapImport">
        <t:request>
		    <CreateDataSourceRequest xmlns="urn:zimbraMail" requestId="0">
				<imap name="${imapName}" isEnabled="true"	
				emailAddress="${yahooaccount.name}" 
				host="${yahooaccount.testhostname}" port="${yahooaccount.port}" 
				username="zimbraexttest" password="${yahooaccount.password}" 
				l="${acct2.id}" connectionType="cleartext" pollingInterval="0" leaveOnServer="true" 
				fromAddress="${account1.email}"/>
			</CreateDataSourceRequest>
      	</t:request>
        <t:response>
            <t:select path="//mail:CreateDataSourceResponse/mail:imap" attr="id" set="imap.conf1.id"/>
        </t:response>
    </t:test>
      
   <t:test id="importDataReq">
   		<t:request>	   
	   		<ImportDataRequest xmlns="urn:zimbraMail">
				<imap id="${imap.conf1.id}"/>
			</ImportDataRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:ImportDataResponse" />
		</t:response>		
	</t:test>
			
	<t:test delay="500" />
	 
	<t:test id="GetDSresponse" required="true">
 		<t:request>
  			<GetDataSourcesRequest xmlns="urn:zimbraMail"/>
 		</t:request>
 		<t:response>
			  <t:select path="//mail:GetDataSourcesResponse/mail:imap[@id='${imap.conf1.id}']" attr="name" match="${imapName}"/>			 
			  <t:select path="//mail:GetDataSourcesResponse/mail:pop3[@id='${imap.conf1.id}']" attr="pollingInterval" emptyset="1"/>
		</t:response>
	</t:test>

	<t:test id="modify" required="true">
	 <t:request>
	  <ModifyDataSourceRequest xmlns="urn:zimbraMail">
	   <imap id="${imap.conf1.id}" pollingInterval="${dsNewPollingInterval}"/>
	  </ModifyDataSourceRequest>
	 </t:request>
	 <t:response>
		<t:select path="//mail:ModifyDataSourceResponse"/>
	 </t:response>
	</t:test>
	
	
</t:test_case>
  
</t:tests>
