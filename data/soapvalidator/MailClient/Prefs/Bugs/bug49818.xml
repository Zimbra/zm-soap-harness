<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="account2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="account3.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.name" value="account3.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="message1.subject" value="subject1.${TIME}.${COUNTER}"/>
<t:property name="message1.content" value="content1.${TIME}.${COUNTER}"/>
<t:property name="test_acct1.server" value="NOT_DEFINED"/>
<t:property name="test_acct2.server" value="NOT_DEFINED"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<!-- authentication -->
<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<!-- Login as the admin to get an auth token -->
<t:test_case testcaseid="acct1_setup" type="always" >
    <t:objective>create test account</t:objective>
	<t:steps>1. Login to admin.
			2. Create a test account.
	</t:steps>

    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test  required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>
    
    <t:test>
		<t:request>
			<GetServerRequest xmlns="urn:zimbraAdmin">
				<server by="name">${test_acct1.server}</server>
			</GetServerRequest>
		</t:request>
		<t:response>
	            <t:select path='//admin:GetServerResponse/admin:server/admin:a[@n="zimbraSmtpHostname"]' set="account1.mta.server"/>
		</t:response>
    </t:test>
    

    <t:test  required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>

    <t:test  required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="bug_49818" type="smoke" bugids="49818">
    <t:objective>Unidentified characters are inserted at the end of the Notification message</t:objective>
    <t:steps>
	1. Login to Account1.
	2. "Preferences" -> "Mail" -> "Send a notification message to:" set email address
	3. Send an email login account. (Subject and Body enter double-byte characters)
	4. Check received notification message.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
	<!-- Login as Account1 to change its settings  --> 
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <!-- Modify Forwarding rule -->
     <t:test id="modifyprefsrequest1">
        <t:request>
			<ModifyPrefsRequest xmlns="urn:zimbraAccount">
				<pref name="zimbraPrefNewMailNotificationAddress">${account3.name}</pref>	
				<pref name="zimbraPrefNewMailNotificationEnabled">TRUE</pref>  			
			</ModifyPrefsRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:ModifyPrefsResponse"/>
        </t:response>
    </t:test>
    

<t:property name="msg01.file" value="${testMailRaw.root}/Bugs/49818/bug49818.txt"/>

	<t:smtpinjecttest>
        <t:smtpInjectRequest>
            <address>${account1.mta.server}</address>
            <filename>${msg01.file}</filename>
            <recipient>${account1.name}</recipient>
        </t:smtpInjectRequest>
    </t:smtpinjecttest>
    
   <t:delay sec="60"/>

    
    <t:property name="server.zimbraAccount" value="${test_acct3.server}"/>
 
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
        
    <t:test>
        <t:request>
           <SearchRequest xmlns="urn:zimbraMail" types="message">
           <query>from: Postmaster</query>
           </SearchRequest>
         </t:request>
          <t:response>
                <t:select path="//mail:SearchResponse/mail:m/mail:fr" match=".*.Subject: 配"/>
         </t:response>
     </t:test>
   
</t:test_case>

</t:tests>
