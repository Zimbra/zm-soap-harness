<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account0.name" value="test1${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.name" value="test2${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test3${TIME}${COUNTER}@${defaultdomain.name}"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>

	<t:test required="true">
	 <t:request>
	   <PingRequest xmlns="urn:zimbraAdmin"/>
	 </t:request>
	  <t:response>
		<t:select path="//admin:PingResponse"/>
	 </t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="acct1_setup" type="always" >
 <t:objective>create test accounts</t:objective>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account1.server"/>
        </t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid="bug47767_1" type="smoke" bugids="47767">
    <t:objective>Verify signature names are not case sensitive</t:objective>
    <t:steps>
    1.Create signatures by the following characters.
	SignatureName1 : aaa
	SignatureName2 : bbb
	SignatureName3 : Bbb  --> Error "signature already exists : Bbb"
	</t:steps>

	<t:property name="signature1.name" value="aaa"/>
	<t:property name="signature1.type" value="text/plain"/>
	<t:property name="signature1.content" value="signature${TIME}${COUNTER}"/>
	
	<t:property name="signature2.name" value="bbb"/>
	<t:property name="signature2.content" value="signature${TIME}${COUNTER}"/>
	
	<t:property name="signature3.name" value="Bbb"/>
	<t:property name="signature3.content" value="signature${TIME}${COUNTER}"/>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
	
	
    <t:test >
        <t:request>
			<CreateSignatureRequest xmlns="urn:zimbraAccount">
				<signature name="${signature1.name}">
					<content type="${signature1.type}">${signature1.content}</content>
				</signature>
			</CreateSignatureRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:CreateSignatureResponse"/>
		</t:response>
	</t:test>
	
	 <t:test >
        <t:request>
			<CreateSignatureRequest xmlns="urn:zimbraAccount">
				<signature name="${signature2.name}">
					<content type="${signature1.type}">${signature2.content}</content>
				</signature>
			</CreateSignatureRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:CreateSignatureResponse"/>
		</t:response>
	</t:test>
	
	 <t:test >
        <t:request>
			<CreateSignatureRequest xmlns="urn:zimbraAccount">
				<signature name="${signature3.name}">
					<content type="${signature1.type}">${signature3.content}</content>
				</signature>
			</CreateSignatureRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^account.SIGNATURE_EXISTS"/>
		</t:response>
	</t:test>
	
</t:test_case>


<t:test_case testcaseid="bug47767_2" type="smoke" >
    <t:objective>Verify signature type with invalid values.</t:objective>
    <t:steps>
  		1. create signature with blank type
	</t:steps>

	<t:property name="signature1.name" value="test${TIME}${COUNTER}"/>
	<t:property name="signature1.type" value="text/plain"/>
	<t:property name="signature1.content" value="signature1${TIME}${COUNTER}"/>

	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
	
	<!-- Blank signature type -->
    <t:test >
        <t:request>
			<CreateSignatureRequest xmlns="urn:zimbraAccount">
				<signature name="${signature1.name}">
					<content type=" ">${signature1.content}</content>
				</signature>
			</CreateSignatureRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
	</t:test>
	
	<!-- incorrect signature type -->
    <t:test >
        <t:request>
			<CreateSignatureRequest xmlns="urn:zimbraAccount">
				<signature name="${signature1.name}">
					<content type="abc">${signature1.content}</content>
				</signature>
			</CreateSignatureRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
	</t:test>
	
	<!-- blank signature name-->
    <t:test >
        <t:request>
			<CreateSignatureRequest xmlns="urn:zimbraAccount">
				<signature name=" ">
					<content type="abc">${signature1.content}</content>
				</signature>
			</CreateSignatureRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
	</t:test>

</t:test_case>

</t:tests>