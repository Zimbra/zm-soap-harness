<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain2.name" value="domain2.${TIME}.${COUNTER}.${defaultdomain.name}"/>

<t:property name="account1.name" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="account2.${TIME}.${COUNTER}@${domain2.name}"/>

<t:property name="account1.document.imagefile1" value="${testMailRaw.root}/photos/Picture1.jpg"/>
<t:property name="account1.document.imagefile2" value="${testMailRaw.root}/photos/Picture2.png"/>

<t:test_case testcaseid="Account_Setup" type="always" >
    <t:objective>Basic system check and create test accounts.</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>	
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>
	
</t:test_case>


<t:test_case testcaseid="UpdateProfileRequest_01" type="deprecated"  >
    <t:objective>Verify user can update photo to the profile.</t:objective>
    
    <t:steps>
    1. Login to account1
    2. Upload a image file
    3. Send UpdateProfileRequest to apply jpeg image to the profile
    4. Hit "http://server/profile/email-addr/image"
    </t:steps>

<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.imagefile1}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.imagefile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	 
    <t:test >
        <t:request>
            <UpdateProfileRequest xmlns="urn:zimbraAccount">
                <profile image="${document.imagefile.aid}"/>
            </UpdateProfileRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:UpdateProfileResponse"/>
        </t:response>
    </t:test>
    
    <t:property name="link.url" value="/profile/${account1.name}/image"/> 
    
	<t:resttest>
		<t:restServletRequest>
			<basepath>${link.url}</basepath>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
			<t:select attr="Content-Type" match="image/jpeg"/>
						<t:select attr="Content-Length" match="^9[0-9][0-9][0-9][0-9]"/>
		</t:restServletResponse>
	</t:resttest>
	
</t:test_case>

<t:test_case testcaseid="UpdateProfileRequest_02" type="deprecated"  >
    <t:objective>Verify that newly updated image gets replaced to the privious image.</t:objective>
    
    <t:steps>
    1. Login to account1
    2. Upload a image file
    3. Send UpdateProfileRequest to png image to the profile
    4. Hit "http://server/profile/email-addr/image"
    5. Verify that newly updated image gets replaced to the privious image.
    </t:steps>

<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.imagefile2}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.imagefile2.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	 
    <t:test >
        <t:request>
            <UpdateProfileRequest xmlns="urn:zimbraAccount">
                <profile image="${document.imagefile2.aid}"/>
            </UpdateProfileRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:UpdateProfileResponse"/>
        </t:response>
    </t:test>
    
    <t:property name="link.url" value="/profile/${account1.name}/image"/> 
    
	<t:resttest>
		<t:restServletRequest>
			<basepath>${link.url}</basepath>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
			<t:select attr="Content-Type" match="image/png"/>
			<t:select attr="Content-Length" match="^5[0-9][0-9][0-9][0-9]$"/>
		</t:restServletResponse>
	</t:resttest>
	
</t:test_case>

<t:test_case testcaseid="UpdateProfileRequest_03" type="deprecated"  >
    <t:objective>Verify user can retrieve Content-Disposition after updating photo to the profile.</t:objective>
    
    <t:steps>
    1. Login to account1
    2. Upload a image file
    3. Send UpdateProfileRequest to png image to the profile
    4. Hit "http://server/profile/email-addr/image"
    </t:steps>

<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.imagefile2}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.imagefile2.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	 
    <t:test >
        <t:request>
            <UpdateProfileRequest xmlns="urn:zimbraAccount">
                <profile image="${document.imagefile2.aid}"/>
            </UpdateProfileRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:UpdateProfileResponse"/>
        </t:response>
    </t:test>
    
    <t:property name="link.url" value="/profile/${account1.name}/image"/> 
    
	<t:resttest>
		<t:restServletRequest>
			<basepath>${link.url}</basepath>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
			<t:select attr="Content-Type" match="image/png"/>
			<t:select attr="Content-Disposition" match='inline; filename="unknown"'/>
			<t:select attr="Content-Length" match="^5[0-9][0-9][0-9][0-9]$"/>
		</t:restServletResponse>
		
	</t:resttest>
	
</t:test_case>

<t:test_case testcaseid="UpdateProfileRequest_04" type="deprecated"  >
    <t:objective>Send UpdateProfileRequest with blank image name</t:objective>
    
    <t:steps>
    1. Login to account1
    2. Send UpdateProfileRequest with blank image name - service.INVALID_REQUEST
    </t:steps>

<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
 
    <t:test >
        <t:request>
            <UpdateProfileRequest xmlns="urn:zimbraAccount">
                <profile image=""/>
            </UpdateProfileRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
 
</t:test_case>

<t:test_case testcaseid="UpdateProfileRequest_04" type="deprecated"  >
    <t:objective>Send UpdateProfileRequest with image name as alphabets</t:objective>
    
    <t:steps>
    1. Login to account1
    2. Send UpdateProfileRequest with image name as alphabets - service.INVALID_REQUEST
    </t:steps>

<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
 
    <t:test >
        <t:request>
            <UpdateProfileRequest xmlns="urn:zimbraAccount">
                <profile image="aaaa"/>
            </UpdateProfileRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
 
</t:test_case>

<t:test_case testcaseid="UpdateProfileRequest_05" type="deprecated"  >
    <t:objective>Send UpdateProfileRequest with invalid value for image name.</t:objective>
    
    <t:steps>
    1. Login to account1
    2. Send UpdateProfileRequest with invalid value for image name. - service.INVALID_REQUEST
    </t:steps>

<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
 
    <t:test >
        <t:request>
            <UpdateProfileRequest xmlns="urn:zimbraAccount">
                <profile image="-111111111"/>
            </UpdateProfileRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
 
</t:test_case>

</t:tests>

