<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="acctYahooImport${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="acctYahooImport${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="account${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.name" value="acctYahooImport${TIME}${COUNTER}@${defaultdomain.name}"/>

<t:property name="POP3.Yahoo.username" value="zzzimbratest@ymail.com"/>
<t:property name="POP3.Yahoo.password" value="test1234"/>
<t:property name="POP3.Yahoo.hostname" value="in.pop.mail.yahoo.com"/>
<t:property name="POP3.Yahoo.port" value="110"/>
<t:property name="POP3.Yahoo.defaultMailSubject" value="Welcome to Yahoo!"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>Basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="Filters_PopImportYahoo_CreateAccount" type="always" >
    <t:objective>Create a test account </t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="account1.server"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="account2.server"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="account3.server"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="account4.server"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="Filters_PopImport_Yahoo_01" type="functional" bugids="13821" >
    <t:objective>Verify Mail Filters with POP Accounts works</t:objective>
	<t:steps>
	1. Login as account1
    2. Create a filter (flag a known message)
    3. Test the datasource 
	4. Create a new data source (configure yahoo pop account) 
	5. Import data
	6. Verify filter is applied to the message
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
	<t:property name="message1.subject" value="Welcome to Yahoo!"/>

    <t:test id="filters_basic01a">
        <t:request>
            <ModifyFilterRulesRequest xmlns="urn:zimbraMail">
                <filterRules>
					<filterRule name="filter${TIME}${COUNTER}" active="true">
						<filterTests condition="anyof">
							<headerTest header="subject" stringComparison="contains" value="${message1.subject}"/>
						</filterTests>
						<filterActions>
							<actionFlag flagName="flagged"/>
							<actionStop/>
						</filterActions>
                    </filterRule>
                 </filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

    <t:test required="true" >
        <t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>              
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="account1.folder.inbox.id"/>
        </t:response>
    </t:test>

	<t:property name="account1.folder1.name" value="folder${TIME}${COUNTER}"/>

    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder1.name}" l="${account1.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse">
            	<t:select path="//mail:folder" attr="id" set="account1.folder1.id"/>
        	</t:select>
        </t:response>
	</t:test>

    <t:test>
        <t:request>
            <TestDataSourceRequest xmlns="urn:zimbraMail">
                <pop3 
                	host="${POP3.Yahoo.hostname}" 
                	port="${POP3.Yahoo.port}" 
                	username="${POP3.Yahoo.username}" 
                	password="${POP3.Yahoo.password}" 
                	connectionType="cleartext"/>
            </TestDataSourceRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:TestDataSourceResponse"/>
            <t:select path="//mail:TestDataSourceResponse/mail:pop3" attr="success" match="1" />
        </t:response>
	</t:test>


    <t:test>
        <t:request>
			<CreateDataSourceRequest xmlns="urn:zimbraMail">
				<pop3 
					name="${POP3.Yahoo.username}" 
					isEnabled="true" 
					emailAddress="${POP3.Yahoo.username}" 
					host="${POP3.Yahoo.hostname}" 
					port="${POP3.Yahoo.port}" 
					username="${POP3.Yahoo.username}" 
					password="${POP3.Yahoo.password}"
					l="${account1.folder1.id}" 
					connectionType="cleartext" 
					pollingInterval="0" 
					leaveOnServer="true" 
					fromAddress="${account1.name}"/>
			 </CreateDataSourceRequest>
        </t:request>
        <t:response>              
            <t:select path="//mail:CreateDataSourceResponse">
            	<t:select path="mail:pop3" attr="id" set="datasource1.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test required="true" >
        <t:request>
			<ImportDataRequest xmlns="urn:zimbraMail">
				<pop3 id="${datasource1.id}"/>
			</ImportDataRequest>
        </t:request>
        <t:response>              
            <t:select path="//mail:ImportDataResponse"/>
        </t:response>
    </t:test>
    
    <t:for start="1" end="20" break="response">
		<t:delay msec="4000"/>
		<t:test >
        	<t:request>
				<GetImportStatusRequest xmlns="urn:zimbraMail">
				</GetImportStatusRequest>
        	</t:request>
        	<t:response>              
            	<t:select path="//mail:GetImportStatusResponse/mail:pop3[@isRunning='0']"  query="response"/>
           	</t:response>
    	</t:test>
	</t:for>

    <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message" >
				<query>subject:(${message1.subject})</query>
			</SearchRequest>
        </t:request>
        <t:response>              
            <t:select path="//mail:SearchResponse">
            	<t:select path="//mail:m" attr="f" match=".*f.*"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="Filters_PopImport_Yahoo_02" type="functional" >
    <t:objective>Verify Mail Filters (file into folder) with POP Accounts (leave on server) does not duplicate messages</t:objective>
	<t:steps>
	1. Login as account2
    2. Create a filter (file into folder)
    3. Test the datasource 
	4. Create a new data source (configure yahoo pop account) 
	5. Import data
	6. Verify filter is applied to the message
	7. Import data
	8. Verify a second message is not copied
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:property name="account2.folder1.name" value="folder${TIME}${COUNTER}"/>

    <t:test required="true">
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="account2.folder.inbox.id"/>
        </t:response>
    </t:test>

    <t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account2.folder1.name}" l="${account2.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account2.folder1.id"/>
        </t:response>
	</t:test>

	<t:property name="message1.subject" value="Welcome to Yahoo!"/>

    <t:test id="filters_basic01a">
        <t:request>
            <ModifyFilterRulesRequest xmlns="urn:zimbraMail">
                <filterRules>
					<filterRule name="filter${TIME}${COUNTER}" active="true">
						<filterTests condition="anyof">
							<headerTest header="subject" stringComparison="contains" value="${message1.subject}"/>
						</filterTests>
						<filterActions>
							<actionFileInto folderPath="${globals.inbox}/${account2.folder1.name}"/>
							<actionStop/>
						</filterActions>
                    </filterRule>
                 </filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>



	<t:property name="account2.folder2.name" value="folder${TIME}${COUNTER}"/>
    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account2.folder2.name}" l="${account2.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse">
            	<t:select path="//mail:folder" attr="id" set="account2.folder2.id"/>
        	</t:select>
        </t:response>
	</t:test>

    <t:test>
        <t:request>
            <TestDataSourceRequest xmlns="urn:zimbraMail">
                <pop3 
                	host="${POP3.Yahoo.hostname}" 
                	port="${POP3.Yahoo.port}" 
                	username="${POP3.Yahoo.username}" 
                	password="${POP3.Yahoo.password}" 
                	connectionType="cleartext"/>
            </TestDataSourceRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:TestDataSourceResponse">
            	<t:select path="//mail:pop3" attr="success" match="1" />
            </t:select>
        </t:response>
	</t:test>


    <t:test>
        <t:request>
			<CreateDataSourceRequest xmlns="urn:zimbraMail">
				<pop3 
					name="${POP3.Yahoo.username}" 
					isEnabled="true" 
					emailAddress="${POP3.Yahoo.username}" 
					host="${POP3.Yahoo.hostname}" 
					port="${POP3.Yahoo.port}" 
					username="${POP3.Yahoo.username}" 
					password="${POP3.Yahoo.password}"
					l="${account2.folder2.id}" 
					connectionType="cleartext" 
					pollingInterval="0" 
					leaveOnServer="true" 
					fromAddress="${account2.name}"/>
			 </CreateDataSourceRequest>
        </t:request>
        <t:response>              
            <t:select path="//mail:CreateDataSourceResponse">
            	<t:select path="mail:pop3" attr="id" set="account2.datasource1.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test required="true" >
        <t:request>
			<ImportDataRequest xmlns="urn:zimbraMail">
				<pop3 id="${account2.datasource1.id}"/>
			</ImportDataRequest>
        </t:request>
        <t:response>              
            <t:select path="//mail:ImportDataResponse"/>
        </t:response>
    </t:test>

	 <t:for start="1" end="20" break="response1">
		<t:delay msec="4000"/>
		<t:test >
        	<t:request>
				<GetImportStatusRequest xmlns="urn:zimbraMail">
				</GetImportStatusRequest>
        	</t:request>
        	<t:response>              
            	<t:select path="//mail:GetImportStatusResponse/mail:pop3[@isRunning='0']"  query="response1"/>
           	</t:response>
    	</t:test>
	</t:for>

    <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message" >
				<query>subject:(${message1.subject})</query>
			</SearchRequest>
        </t:request>
        <t:response>              
            <t:select path="//mail:SearchResponse">
            	<t:select path="//mail:m" attr="l" match="${account2.folder1.id}"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test required="true" >
        <t:request>
			<ImportDataRequest xmlns="urn:zimbraMail">
				<pop3 id="${account2.datasource1.id}"/>
			</ImportDataRequest>
        </t:request>
        <t:response>              
            <t:select path="//mail:ImportDataResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message" limit="1">
				<query>subject:(${message1.subject})</query>
			</SearchRequest>
        </t:request>
        <t:response>              
            <t:select path="//mail:SearchResponse" attr="more" match="0"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="Filters_PopImport_Yahoo_03" type="functional" bugids="32752">
    <t:objective>Verify Mail Filters (file into mountpoint) with POP Accounts (leave on server) does not filter</t:objective>
	<t:steps>
	1. Login as account3
	2. Create a folder, share with account4
	3. Login to account4
    2. Create a filter (file into mountpoint)
    3. Test the datasource 
	4. Create a new data source (configure yahoo pop account) 
	5. Import data
	6. Verify filter is applied to the message
	7. Import data
	8. Verify a second message is not copied
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:property name="account3.folder1.name" value="folder${TIME}${COUNTER}"/>

    <t:test required="true">
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="account3.folder.inbox.id"/>
        </t:response>
    </t:test>

    <t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account3.folder1.name}" l="${account3.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account3.folder1.id"/>
        </t:response>
	</t:test>

    <t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${account3.folder1.id}" op="grant">
                    <grant d="${account4.name}" gt="usr" perm="rwidax"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
	<t:property name="server.zimbraAccount" value="${account4.server}"/>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    

    <t:test required="true">
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="account4.folder.inbox.id"/>
        </t:response>
    </t:test>

    <t:property name="account4.mountpoint1.name" value="mountpoint${TIME}${COUNTER}"/>
    
    <t:test>
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account4.folder.inbox.id}" name="${account4.mountpoint1.name}" view="message" rid="${account3.folder1.id}" zid="${account3.id}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account4.mountpoint1.id"/>
        </t:response>
    </t:test>
    
    
	<t:property name="message1.subject" value="welcome to yahoo"/>

    <t:test id="filters_basic01a">
        <t:request>
            <ModifyFilterRulesRequest xmlns="urn:zimbraMail">
                <filterRules>
					<filterRule name="filter${TIME}${COUNTER}" active="true">
						<filterTests condition="anyof">
							<headerTest header="subject" stringComparison="contains" value="${message1.subject}"/>
						</filterTests>
						<filterActions>
							<actionFileInto folderPath="${globals.inbox}/${account4.mountpoint1.name}"/>
							<actionStop/>
						</filterActions>
                    </filterRule>
                 </filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>


	<t:property name="account4.folder2.name" value="folder${TIME}${COUNTER}"/>
    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account4.folder2.name}" l="${account4.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse">
            	<t:select path="//mail:folder" attr="id" set="account4.folder2.id"/>
        	</t:select>
        </t:response>
	</t:test>

    <t:test>
        <t:request>
            <TestDataSourceRequest xmlns="urn:zimbraMail">
                <pop3 
                	host="${POP3.Yahoo.hostname}" 
                	port="${POP3.Yahoo.port}" 
                	username="${POP3.Yahoo.username}" 
                	password="${POP3.Yahoo.password}" 
                	connectionType="cleartext"/>
            </TestDataSourceRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:TestDataSourceResponse">
            	<t:select path="//mail:pop3" attr="success" match="1" />
            </t:select>
        </t:response>
	</t:test>


    <t:test>
        <t:request>
			<CreateDataSourceRequest xmlns="urn:zimbraMail">
				<pop3 
					name="${POP3.Yahoo.username}" 
					isEnabled="true" 
					emailAddress="${POP3.Yahoo.username}" 
					host="${POP3.Yahoo.hostname}" 
					port="${POP3.Yahoo.port}" 
					username="${POP3.Yahoo.username}" 
					password="${POP3.Yahoo.password}"
					l="${account4.folder2.id}" 
					connectionType="cleartext" 
					pollingInterval="0" 
					leaveOnServer="true" 
					fromAddress="${account4.name}"/>
			 </CreateDataSourceRequest>
        </t:request>
        <t:response>              
            <t:select path="//mail:CreateDataSourceResponse">
            	<t:select path="mail:pop3" attr="id" set="account4.datasource1.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test required="true" >
        <t:request>
			<ImportDataRequest xmlns="urn:zimbraMail">
				<pop3 id="${account4.datasource1.id}"/>
			</ImportDataRequest>
        </t:request>
        <t:response>              
            <t:select path="//mail:ImportDataResponse"/>
        </t:response>
    </t:test>

	 <t:for start="1" end="20" break="response2">
		<t:delay msec="4000"/>
		<t:test >
        	<t:request>
				<GetImportStatusRequest xmlns="urn:zimbraMail">
				</GetImportStatusRequest>
        	</t:request>
        	<t:response>              
            	<t:select path="//mail:GetImportStatusResponse/mail:pop3[@isRunning='0']"  query="response2"/>
           	</t:response>
    	</t:test>
	</t:for>

    <t:test>
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message" >
				<query>subject:(${message1.subject})</query>
			</SearchRequest>
        </t:request>
        <t:response>              
            <t:select path="//mail:SearchResponse">
            	<t:select path="//mail:m" attr="l" match="${account4.folder2.id}"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>



</t:tests>