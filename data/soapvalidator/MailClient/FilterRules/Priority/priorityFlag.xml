<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:test_case testcaseid="AcctSetup1_priority" type="always" >
    <t:objective>create test accounts</t:objective>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
	    <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
                <a n="zimbraPrefTimeZoneId">UTC</a>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
	    </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
	    </t:response>
    </t:test>    
        
</t:test_case>



<t:test_case testcaseid="PriorityFlag_01" type="smoke" bugids="42185" >
    <t:objective>Verify that message gets priority flagged for subject related priority flag filter</t:objective>
    
    <t:steps> 1. Create a filter to use priority flag for certain subject
			  2. Inject a message to the user containing the subject that filter is set for.
			  3. Verify that the message has priority flag.
    </t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="filter_priority.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter_priority1.subject" value="Testing priority flag ${TIME}${COUNTER}"/>	
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter_priority.name}" active="1">
						<filterTests condition="allof">
						 <headerTest header="Subject" stringComparison="contains" value="Testing priority flag" />				
						</filterTests>
						<filterActions>
							<actionFlag flagName="priority" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>   
   
	<t:property name="priority_msg01.file" value="${testMailRaw.root}/bug42185/priority01.txt" />

	<t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${priority_msg01.file}</filename>
			<to>${account1.name}</to>
			<from>filter@testfilter.com</from>
			<server>${account1.server}</server>
			<modify>
				<header a="To">${account1.name}</header>
                <header a="Subject">${filter_priority1.subject}</header>               
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>	

    <t:test id="filters_basic02d" depends="filters_basic01a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${filter_priority1.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${filter_priority1.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m"   attr="f" match=".*\+.*" />       
        </t:response>
    </t:test>  
          
</t:test_case>


<t:test_case testcaseid="PriorityFlag_02" type="smoke" bugids="42185" >
    <t:objective>Verify that message gets priority flagged for 'From' related priority flag filter</t:objective>
    
    <t:steps> 1. Create a filter to use priority flag for certain from address
			  2. Inject a message to the user from an address that filter is set for.
			  3. Verify that the message has priority flag.
    </t:steps>
	
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
	
	<t:property name="filter_priority2.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter_priority2.subject" value="Testing priority flag ${TIME}${COUNTER}"/>	
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter_priority2.name}" active="1">
						<filterTests condition="anyof">
						 <headerTest header="From" stringComparison="contains" value="priority" />				
						</filterTests>
						<filterActions>
							 <actionFlag flagName="priority" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>   
      
	<t:property name="priority_msg02.file" value="${testMailRaw.root}/bug42185/priority02.txt" />

	<t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${priority_msg02.file}</filename>
			<to>${account1.name}</to>
			<from>priority@testfilter.com</from>
			<server>${account1.server}</server>
			<modify>
				<header a="To">${account1.name}</header>
                <header a="Subject">${filter_priority2.subject}</header>
                <header a="From">priority@testfilter.com</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>	

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${filter_priority2.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${filter_priority2.subject}"/>
             <t:select path="//mail:SearchResponse/mail:m"   attr="f" match="u\+" />     
        </t:response>
    </t:test>  
    
</t:test_case> 

</t:tests>