<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>
    <t:test required="true">
     <t:request>
       <PingRequest xmlns="urn:zimbraAdmin"/>
     </t:request>
      <t:response>
        <t:select path="//admin:PingResponse"/>
     </t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="bug68840_setup" type="always" >
 <t:objective>Create test accounts</t:objective>
	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
		</t:response>
	</t:test>
	
	
</t:test_case>


<t:test_case testcaseid="GetInfoRequest_CreateDLRight01" type="smoke" bugids="68840" >
    <t:objective>Check createDistributionList right in GetInfoResponse  </t:objective>    
    <t:steps>
    	 1. Admin login.
    	 2. Grant Create right to account1
    	 3. Get id of the default domain
	     4. Account1 login.	    
	     5. Send createDistributionList right in GetInfoResponseRequest with createDistributionList attribute
	     6. It will return default domain
    </t:steps>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
	
	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>
	
	<t:property name="server.zimbraAdmin" value="${account1.server}"/>
	<t:test required="true">
		<t:request>
			<GrantRightRequest xmlns="urn:zimbraAdmin">
				<target xmlns="" by="name" type="domain">${defaultdomain.name}</target>
				<grantee xmlns="" by="name" type="usr">${account1.name}</grantee>
				<right xmlns="">createDistList</right>
			</GrantRightRequest>
		</t:request>
		<t:response>
		</t:response>
	</t:test>
	
	<t:test>
        <t:request>
            <GetDomainInfoRequest xmlns="urn:zimbraAdmin">
                <domain by="name">${defaultdomain.name}</domain>                 
            </GetDomainInfoRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetDomainInfoResponse/admin:domain" attr="name" match="${defaultdomain.name}"/>  
        	<t:select path="//admin:GetDomainInfoResponse/admin:domain" attr="id" set="defaultdomain.id"/>          </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
	
	<t:test>
		<t:request>
			<GetInfoRequest xmlns="urn:zimbraAccount" rights="createDistList"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetInfoResponse">
				<t:select path="//acct:rights/acct:targets/acct:target" attr="id" match="${defaultdomain.id}" /> 
			</t:select>
		</t:response>
	</t:test>
    
 </t:test_case>
 
 <t:test_case testcaseid="GetInfoRequest_CreateDLRight02" type="smoke" bugids="68840" >
    <t:objective>Check createDistributionList right in GetInfoResponse will not return any right value if createDistributionList is not granted for that account </t:objective>    
    <t:steps>
    	 
	     1. Account2 login.	    
	     2. Send createDistributionList right in GetInfoResponseRequest with createDistributionList attribute
	     3. It will not any right section
    </t:steps>

	
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
	
	<t:test>
		<t:request>
			<GetInfoRequest xmlns="urn:zimbraAccount" rights="createDistList"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetInfoResponse">
				<t:select path="//acct:rights/acct:targets/acct:target" emptyset="1" /> 
			</t:select>
		</t:response>
	</t:test>
    
 </t:test_case>
 
 </t:tests>
    
    
    
