<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.dl1.name" value="dl1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.dl2.name" value="dl2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.dl3.name" value="dl3.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.dl4.name" value="dl4.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.dl5.name" value="dl5.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.dl6.name" value="dl6.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.dl7.name" value="dl7.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="domain.new.name" value="new.${TIME}.${COUNTER}${defaultdomain.name}"/>
<t:property name="account1.dl8.name" value="dl8.${TIME}.${COUNTER}@${domain.new.name}"/>
<t:property name="account1.member1.name" value="mem1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.member2.name" value="mem2.${TIME}.${COUNTER}@otherdomain${TIME}.com"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>
    <t:test required="true">
     <t:request>
       <PingRequest xmlns="urn:zimbraAdmin"/>
     </t:request>
      <t:response>
        <t:select path="//admin:PingResponse"/>
     </t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="admin_auth" type="always" >
 <t:objective>login as the admin</t:objective>
	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
	</t:test>
	
	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
		</t:response>
	</t:test>
	
	<t:test required="true">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain.new.name}</name>
                <a n="zimbraNotes">test of adding via SOAP</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id"  set="domain1.id"/>
        </t:response>        
    </t:test>

	<t:property name="server.zimbraAdmin" value="${account1.server}"/>
	<t:test required="true">
		<t:request>
			<GrantRightRequest xmlns="urn:zimbraAdmin">
				<target xmlns="" by="name" type="domain">${defaultdomain.name}</target>
				<grantee xmlns="" by="name" type="usr">${account1.name}</grantee>
				<right xmlns="">createDistList</right>
			</GrantRightRequest>
		</t:request>
		<t:response>
		</t:response>
	</t:test>
	
	<t:test required="true">
		<t:request>
			<GrantRightRequest xmlns="urn:zimbraAdmin">
				<target xmlns="" by="name" type="domain">${domain.new.name}</target>
				<grantee xmlns="" by="name" type="usr">${account1.name}</grantee>
				<right xmlns="">createDistList</right>
			</GrantRightRequest>
		</t:request>
		<t:response>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="DeleteDistributionListRequest01" type="smoke" bugids="" >
    <t:objective>Create and delete distribution list by id . </t:objective>    

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 



    <t:test >
        <t:request >
            <CreateDistributionListRequest xmlns="urn:zimbraAccount" >
                 <name>${account1.dl1.name}</name>
          	</CreateDistributionListRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:CreateDistributionListResponse/acct:dl" attr="id" set="account1.dl1.id" />
    	<!--  <t:select path="//acct:CreateDistributionListResponse/acct:dl/acct:owners/acct:owner" attr="id" match="${account1.id}" /> -->	
        </t:response>
    </t:test> 

    
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl1.id}</dl>
                 <action op="delete" />
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 

    <t:test >
        <t:request >
            <GetDistributionListRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl1.id}</dl>
          	</GetDistributionListRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:GetDistributionListResponse/acct:dl[@id='${account1.dl1.id}']" emptyset="1"/>
        </t:response>
    </t:test> 

</t:test_case>

<t:test_case testcaseid="DeleteDistributionListRequest02" type="smoke" bugids="" >
    <t:objective>Create and delete distribution list by name . </t:objective>    

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 



    <t:test >
        <t:request >
            <CreateDistributionListRequest xmlns="urn:zimbraAccount" >
                 <name>${account1.dl2.name}</name>
          	</CreateDistributionListRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:CreateDistributionListResponse/acct:dl" attr="id" set="account1.dl2.id" />
    		<!-- <t:select path="//acct:CreateDistributionListResponse/acct:dl/acct:owners/acct:owner" attr="id" match="${account1.id}" />  -->
        </t:response>
    </t:test> 

    
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="name">${account1.dl2.name}</dl>
                 <action op="delete" />
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 

    <t:test >
        <t:request >
            <GetDistributionListRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl2.id}</dl>
          	</GetDistributionListRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:GetDistributionListResponse/acct:dl[@id='${account1.dl2.id}']" emptyset="1"/>
        </t:response>
    </t:test> 

</t:test_case>

<t:test_case testcaseid="DeleteDistributionListRequest03" type="smoke" bugids="" >
    <t:objective>Create distribution list add members delete it . </t:objective>    

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 



    <t:test >
        <t:request >
            <CreateDistributionListRequest xmlns="urn:zimbraAccount" >
                 <name>${account1.dl3.name}</name>
          	</CreateDistributionListRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:CreateDistributionListResponse/acct:dl" attr="id" set="account1.dl3.id" />
    	<!--  <t:select path="//acct:CreateDistributionListResponse/acct:dl/acct:owners/acct:owner" attr="id" match="${account1.id}" /> -->	
        </t:response>
    </t:test> 

     <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="name">${account1.dl3.name}</dl>
                 <action op="addMembers">
                 <dlm>${account1.member1.name}</dlm>
                 </action>
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 
    
    
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="name">${account1.dl3.name}</dl>
                 <action op="delete" />
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 

    <t:test >
        <t:request >
            <GetDistributionListRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl3.id}</dl>
          	</GetDistributionListRequest>
        </t:request>
			<t:select path="//acct:GetDistributionListResponse/acct:dl[@id='${account1.dl3.id}']" emptyset="1"/>
        <t:response>
        </t:response>
    </t:test> 

</t:test_case>


<t:test_case testcaseid="DeleteDistributionListRequest04" type="smoke" bugids="" >
    <t:objective>Add member to deleted distribution list . </t:objective>    

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 

    <t:test >
        <t:request >
            <CreateDistributionListRequest xmlns="urn:zimbraAccount" >
                 <name>${account1.dl4.name}</name>
          	</CreateDistributionListRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:CreateDistributionListResponse/acct:dl" attr="id" set="account1.dl4.id" />
    		<!--  <t:select path="//acct:CreateDistributionListResponse/acct:dl/acct:owners/acct:owner" attr="id" match="${account1.id}" /> -->
        </t:response>
    </t:test> 

     <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="name">${account1.dl4.name}</dl>
                 <action op="addMembers">
                 <dlm>${account1.member2.name}</dlm>
                 </action>
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 
    
    
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="name">${account1.dl4.name}</dl>
                 <action op="delete" />
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 

    <t:test >
        <t:request >
            <GetDistributionListRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl4.id}</dl>
          	</GetDistributionListRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:GetDistributionListResponse/acct:dl[@id='${account1.dl4.id}']" emptyset="1"/>
        </t:response>
    </t:test> 
    
     <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="name">${account1.dl4.name}</dl>
                 <action op="addMembers">
                 <dlm>${account1.member2.name}</dlm>
                 </action>
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//zimbra:Code" match="account.NO_SUCH_DISTRIBUTION_LIST" />
        </t:response>
    </t:test> 

</t:test_case>
<t:test_case testcaseid="DeleteDistributionListRequest05" type="smoke" bugids="" >
    <t:objective>Create and delete distribution and re-create distribution list by same name . </t:objective>    

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 


    <t:test >
        <t:request >
            <CreateDistributionListRequest xmlns="urn:zimbraAccount" >
                 <name>${account1.dl5.name}</name>
          	</CreateDistributionListRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:CreateDistributionListResponse/acct:dl" attr="id" set="account1.dl5.id" />
    	<!-- <t:select path="//acct:CreateDistributionListResponse/acct:dl/acct:owners/acct:owner" attr="id" match="${account1.id}" />  -->	
        </t:response>
    </t:test> 

    
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="name">${account1.dl5.name}</dl>
                 <action op="delete" />
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 

    <t:test >
        <t:request >
            <CreateDistributionListRequest xmlns="urn:zimbraAccount" >
                 <name>${account1.dl5.name}</name>
          	</CreateDistributionListRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:CreateDistributionListResponse/acct:dl" attr="id" set="account1.dl5.id" />
    	<!--  <t:select path="//acct:CreateDistributionListResponse/acct:dl/acct:owners/acct:owner" attr="id" match="${account1.id}" /> -->	
        </t:response>
    </t:test> 

</t:test_case>


<t:test_case testcaseid="DeleteDistributionListRequest06" type="smoke" bugids="" >
    <t:objective>Try to delete distribution where user does not have createDistRight right on that domain. </t:objective>    

	<t:steps>
			1. Login into account1.
			2. Create a DL .
			3. Add account2 as a memeber of the DL created in step 2.
			4. Login into account2.
			5. Try to delete the DL. account2 will get service.PERM_DENIED.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 

    <t:test >
        <t:request >
            <CreateDistributionListRequest xmlns="urn:zimbraAccount" >
                 <name>${account1.dl6.name}</name>
          	</CreateDistributionListRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:CreateDistributionListResponse/acct:dl" attr="id" set="account1.dl6.id" />
    	<!--  <t:select path="//acct:CreateDistributionListResponse/acct:dl/acct:owners/acct:owner" attr="id" match="${account1.id}" /> -->	
        </t:response>
    </t:test> 
    
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl6.id}</dl>
                 <action op="addMembers">
                 	<dlm>${account2.name}</dlm>
                 </action>
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 
    
    <t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
    
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="name">${account1.dl6.name}</dl>
                 <action op="delete" />
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//zimbra:Code" match="service.PERM_DENIED" />
        </t:response>
    </t:test> 

</t:test_case>

<t:test_case testcaseid="DeleteDistributionListRequest07" type="smoke" bugids="69485" >
    <t:objective>Try to delete distribution where user is granted with createDistRight right on that domain. </t:objective>    

	<t:steps>
			1. Login into account1.
			2. Create a DL .
			3. Add account2 as a memeber of the DL created in step 2.
			4. Login into account2.
			5. Try to delete the DL. account2 will get service.PERM_DENIED.
			6. Admin grant createDistRight on the domain to account 2
			7. Login into account2.
			8. Try to delete the DL. account2 will be able to delete sucessfully.			
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 

    <t:test >
        <t:request >
            <CreateDistributionListRequest xmlns="urn:zimbraAccount" >
                 <name>${account1.dl7.name}</name>
          	</CreateDistributionListRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:CreateDistributionListResponse/acct:dl" attr="id" set="account1.dl7.id" />
    	<!--  <t:select path="//acct:CreateDistributionListResponse/acct:dl/acct:owners/acct:owner" attr="id" match="${account1.id}" /> -->	
        </t:response>
    </t:test> 
    
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl7.id}</dl>
                 <action op="addMembers">
                 	<dlm>${account2.name}</dlm>
                 </action>
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 
    
     <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl7.id}</dl>
                 <action op="addOwners">
                 	<owner type="usr" by="id">${account2.id}</owner>                 	
                 </action>
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test>   
     
    <t:test >
        <t:request >
            <GetDistributionListRequest xmlns="urn:zimbraAccount" needOwners="1" >
            	<dl by="name">${account1.dl7.name}</dl>
          	</GetDistributionListRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:GetDistributionListResponse/acct:dl/acct:owners/acct:owner[@name='${account1.name}']" attr="id" match="${account1.id}"/>
			<t:select path="//acct:GetDistributionListResponse/acct:dl/acct:owners/acct:owner[@name='${account2.name}']" attr="id" match="${account2.id}"/>
        </t:response>
     </t:test>  
    
    <t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
    
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="name">${account1.dl7.name}</dl>
                 <action op="delete" />
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//zimbra:Code" match="service.PERM_DENIED" />
        </t:response>
    </t:test> 

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>
	
	<t:test required="true">
		<t:request>
			<GrantRightRequest xmlns="urn:zimbraAdmin">
				<target xmlns="" by="name" type="domain">${defaultdomain.name}</target>
				<grantee xmlns="" by="name" type="usr">${account2.name}</grantee>
				<right xmlns="">createDistList</right>
			</GrantRightRequest>
		</t:request>
		<t:response>
		</t:response>
	</t:test>
	
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
    
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="name">${account1.dl7.name}</dl>
                 <action op="delete" />
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<DistributionListActionResponse xmlns="urn:zimbraAccount"></DistributionListActionResponse>
        </t:response>
    </t:test>     
    
    <t:test >
        <t:request >
            <GetDistributionListRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl7.id}</dl>
          	</GetDistributionListRequest>
        </t:request>
			<t:select path="//acct:GetDistributionListResponse/acct:dl[@id='${account1.dl7.id}']" emptyset="1"/>
        <t:response>
        </t:response>
    </t:test> 

</t:test_case>

<t:test_case testcaseid="DeleteDistributionListRequest08" type="smoke" bugids="69485" >
    <t:objective>Try to delete distribution where user is granted with ownertRight right on that domain but has no createDistRight. </t:objective>    

	<t:steps>
			1. Login into account1.
			2. Create a DL .
			3. Add account2 as a memeber  and owner of the DL created in step 2.
			4. Login into account2.
			5. Try to delete the DL. account2 will get service.PERM_DENIED.
			6. Admin grant createDistRight on the domain to account 2
			7. Login into account2.
			8. Try to delete the DL. account2 will be able to delete sucessfully.
			
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 

    <t:test >
        <t:request >
            <CreateDistributionListRequest xmlns="urn:zimbraAccount" >
                 <name>${account1.dl8.name}</name>
          	</CreateDistributionListRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:CreateDistributionListResponse/acct:dl" attr="id" set="account1.dl8.id" />
    		<!-- <t:select path="//acct:CreateDistributionListResponse/acct:dl/acct:owners/acct:owner" attr="id" match="${account1.id}" /> -->
        </t:response>
    </t:test> 
    
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl8.id}</dl>
                 <action op="addMembers">
                 	<dlm>${account2.name}</dlm>
                 </action>
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 
    
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl8.id}</dl>
                 <action op="addOwners">
                 	<owner type="usr" by="id">${account2.id}</owner>                 	
                 </action>
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 
  
     
    <t:test >
        <t:request >
            <GetDistributionListRequest xmlns="urn:zimbraAccount" needOwners="1" >
            	<dl by="name">${account1.dl8.name}</dl>
          	</GetDistributionListRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:GetDistributionListResponse/acct:dl/acct:owners/acct:owner[@name='${account1.name}']" attr="id" match="${account1.id}"/>
			<t:select path="//acct:GetDistributionListResponse/acct:dl/acct:owners/acct:owner[@name='${account2.name}']" attr="id" match="${account2.id}"/>
        </t:response>
     </t:test>  
   
    <t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
    
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="name">${account1.dl8.name}</dl>
                 <action op="delete" />
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//zimbra:Code" match="service.PERM_DENIED" />
        </t:response>
    </t:test> 

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>
	
	<t:test required="true">
		<t:request>
			<GrantRightRequest xmlns="urn:zimbraAdmin">
				<target xmlns="" by="name" type="domain">${domain.new.name}</target>
				<grantee xmlns="" by="name" type="usr">${account2.name}</grantee>
				<right xmlns="">createDistList</right>
			</GrantRightRequest>
		</t:request>
		<t:response>
		</t:response>
	</t:test>
	
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
    
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="name">${account1.dl8.name}</dl>
                 <action op="delete" />
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<DistributionListActionResponse xmlns="urn:zimbraAccount"></DistributionListActionResponse>
        </t:response>
    </t:test>     
    
    <t:test >
        <t:request >
            <GetDistributionListRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl8.id}</dl>
          	</GetDistributionListRequest>
        </t:request>
			<t:select path="//acct:GetDistributionListResponse/acct:dl[@id='${account1.dl8.id}']" emptyset="1"/>
        <t:response>
        </t:response>
    </t:test> 

</t:test_case>

</t:tests>


