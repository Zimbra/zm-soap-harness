<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="multihost.${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="multihost.${TIME}${COUNTER}@${defaultdomain.name}"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>

	<t:test required="true">
	 <t:request>
	   <PingRequest xmlns="urn:zimbraAdmin"/>
	 </t:request>
	  <t:response>
		<t:select path="//admin:PingResponse"/>
	 </t:response>
	</t:test>

</t:test_case>




<t:test_case testcaseid="multihost_auth_basic_account_setup1" hostCount="2" type="always" >
 <t:objective>create test account</t:objective>

	<t:test required="true" >
	 <t:request>
	  <AuthRequest xmlns="urn:zimbraAdmin">
	    <name>${admin.user}</name>
	    <password>${admin.password}</password>
	  </AuthRequest>
	 </t:request>
	 <t:response>
	    <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
	 </t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
                <a n="zimbraMailHost">${multihostA.FQDN}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
                <a n="zimbraMailHost">${multihostB.FQDN}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
        </t:response>
    </t:test>  

</t:test_case>




<t:test_case testcaseid="multihostAuthBasic01" hostCount="2" type="smoke" >
 <t:objective>Verify that an account configured with zimbraMailHost=A can log into host A</t:objective>

	
	<t:property name="uri" value="${multihostA.mailClientUri}"/>

	<t:test >
	 <t:request>
	  <AuthRequest xmlns="urn:zimbraAccount">
	    <account by="name">${account1.name}</account>
	    <password>${defaultpassword.value}</password>
	  </AuthRequest>
	 </t:request>
	 <t:response>
		<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
		<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

	 </t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="multihostAuthBasic02" hostCount="2" type="smoke" >
 <t:objective>Verify that an account configured with zimbraMailHost=A can log into host B</t:objective>

	
	<t:property name="uri" value="${multihostB.mailClientUri}"/>

	<t:test >
	 <t:request>
	  <AuthRequest xmlns="urn:zimbraAccount">
	    <account by="name">${account1.name}</account>
	    <password>${defaultpassword.value}</password>
	  </AuthRequest>
	 </t:request>
	 <t:response>
		<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
		<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

	 </t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="multihostAuthBasic03" hostCount="2" type="smoke" >
 <t:objective>Verify that an account configured with zimbraMailHost=B can log into host A</t:objective>

	
	<t:property name="uri" value="${multihostA.mailClientUri}"/>

	<t:test >
	 <t:request>
	  <AuthRequest xmlns="urn:zimbraAccount">
	    <account by="name">${account2.name}</account>
	    <password>${defaultpassword.value}</password>
	  </AuthRequest>
	 </t:request>
	 <t:response>
		<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
		<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

	 </t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="multihostAuthBasic04" hostCount="2" type="smoke" >
 <t:objective>Verify that an account configured with zimbraMailHost=B can log into host B</t:objective>

	
	<t:property name="uri" value="${multihostB.mailClientUri}"/>

	<t:test >
	 <t:request>
	  <AuthRequest xmlns="urn:zimbraAccount">
	    <account by="name">${account2.name}</account>
	    <password>${defaultpassword.value}</password>
	  </AuthRequest>
	 </t:request>
	 <t:response>
		<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
		<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

	 </t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="multihostAuthBasic10" hostCount="2" type="smoke" >
 <t:objective>Verify that an auth token from host A is active on host B</t:objective>

	
	<t:property name="uri" value="${multihostA.mailClientUri}"/>

	<t:test >
	 <t:request>
	  <AuthRequest xmlns="urn:zimbraAccount">
	    <account by="name">${account1.name}</account>
	    <password>${defaultpassword.value}</password>
	  </AuthRequest>
	 </t:request>
	 <t:response>
		<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
		<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

	 </t:response>
	</t:test>

	<t:property name="uri" value="${multihostB.mailClientUri}"/>

	<t:test>
		<t:request>
			<GetInfoRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetInfoResponse/acct:name" match="${account1.name}"/> 
		</t:response>
	</t:test>

</t:test_case>




</t:tests>
