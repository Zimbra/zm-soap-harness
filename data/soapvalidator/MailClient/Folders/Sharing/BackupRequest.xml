<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account1.contact1.firstName" value="first.${TIME}.${COUNTER}"/>
<t:property name="account1.contact1.lastName" value="last.${TIME}.${COUNTER}"/>
<t:property name="account1.contact1.email" value="${nonZimbraUser.name}"/>

<t:property name="account1.appointment1.subject" value="appointment.${TIME}.${COUNTER}"/>
<t:property name="account1.appointment1.start" value="${ICALTIME(+30d)(+2h)}"/>
<t:property name="account1.appointment1.finish" value="${ICALTIME(+30d)(+3h)}"/>

<t:property name="account1.message1.subject" value="mail.${TIME}.${COUNTER}"/>
<t:property name="account1.message1.content" value="content.${TIME}.${COUNTER}"/>

<t:property name="account2.name" value="account2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="account3.name" value="account3.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account3.contact1.firstName" value="first.${TIME}.${COUNTER}"/>
<t:property name="account3.contact1.lastName" value="last.${TIME}.${COUNTER}"/>
<t:property name="account3.contact1.email" value="${nonZimbraUser.name}"/>

<t:property name="account3.appointment1.subject" value="appointment.${TIME}.${COUNTER}"/>
<t:property name="account3.appointment1.start" value="${ICALTIME(+30d)(+2h)}"/>
<t:property name="account3.appointment1.finish" value="${ICALTIME(+30d)(+3h)}"/>

<t:property name="account3.message1.subject" value="mail.${TIME}.${COUNTER}"/>
<t:property name="account3.message1.content" value="content.${TIME}.${COUNTER}"/>

<t:property name="account4.name" value="account4.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.folder.shared.name" value="share.${TIME}.${COUNTER}"/>


<t:property name="destination.name" value="destination.${TIME}.${COUNTER}@${defaultdomain.name}"/>
    

<t:property name="op.grant"			value="grant"/>

<t:property name="grant.usr"			value="usr"/>
<t:property name="grant.grp"			value="grp"/>
<t:property name="grant.dom"			value="dom"/>
<t:property name="grant.cos"			value="cos"/>
<t:property name="grant.all"			value="all"/>
<t:property name="grant.pub"			value="pub"/>
<t:property name="grant.guest"			value="guest"/>

<t:property name="rights.none"			value=""/>
<t:property name="rights.read"			value="r"/>
<t:property name="rights.write"			value="w"/>
<t:property name="rights.insert"		value="i"/>
<t:property name="rights.delete"		value="d"/>
<t:property name="rights.administer"	value="a"/>
<t:property name="rights.workflow"		value="x"/>
<t:property name="rights.manager"		value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}"/>
<t:property name="view.conversation"	value="conversation"/>
<t:property name="view.message"			value="message"/>
<t:property name="view.contact"			value="contact"/>
<t:property name="view.appointment"		value="appointment"/>
<t:property name="view.note"			value="note"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${destination.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="destination.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="destination.server"/>
        </t:response>
    </t:test>  


</t:test_case>


<t:test_case testcaseid="Sharing_AccountBackup_01" type="smoke" areas="backup,nonappliance">
    <t:objective>Backup (full) and restore an account with a sharing.  Verify the shared data is still viewable by grantee after restore</t:objective>
    <t:steps>
    1. Account1 shares contacts, calendar, sent items with Account2
    2. Backup the Account1
    3. Delete the Account1
    4. Restore the Account1
    5. Verify that account2 still has access to contacts, calendar, sent items
    </t:steps>




	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
                <cn>
                    <a n="firstName">${account1.contact1.firstName}</a>
                    <a n="lastName">${account1.contact1.lastName}</a>
                    <a n="email">${account1.contact1.email}</a>
                </cn>     
            </CreateContactRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="account1.contact1.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m >
					<inv method="REQUEST" type="event" fb="B" transp="O" status="CONF" allDay="0" name="${account1.appointment1.subject}">
						<s tz="(GMT-10.00) Hawaii" d="${account1.appointment1.start}"/>
						<e tz="(GMT-10.00) Hawaii" d="${account1.appointment1.finish}"/>
						<or a="${account1.name}"/>
					</inv>
					<mp ct="text/plain">
						<content/>
					</mp>
					<su>${account1.appointment1.subject}</su>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="apptId" set="account1.appointment1.apptId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="calItemId" set="account1.appointment1.calItemId"/>
        </t:response>
    </t:test>

	<t:test >
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="t" a='${destination.name}'/>
					<su>${account1.message1.subject}</su>
					<mp ct="text/plain">
						<content>${account1.message1.content}</content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="account1.message1.id"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.contacts}']" attr="id" set="account1.folder.contacts.id"/>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.calendar}']" attr="id" set="account1.folder.calendar.id"/>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.sent}']" attr="id" set="account1.folder.sent.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.contacts.id}">
					<grant gt="${grant.usr}" d="${account2.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.calendar.id}">
					<grant gt="${grant.usr}" d="${account2.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.sent.id}">
					<grant gt="${grant.usr}" d="${account2.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<GetContactsRequest xmlns="urn:zimbraMail">
				<cn id="${account1.id}:${account1.contact1.id}"/>
			</GetContactsRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GetContactsResponse/mail:cn" attr="id" match="${account1.id}:${account1.contact1.id}"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" id="${account1.id}:${account1.appointment1.calItemId}"/>
        </t:request>
        <t:response>
            <t:select path = "//mail:GetAppointmentResponse/mail:appt/mail:inv/mail:comp" attr="calItemId" match="${account1.id}:${account1.appointment1.calItemId}"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.id}:${account1.message1.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account1.id}:${account1.message1.id}"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAdmin" value="${account1.server}"/>
	<t:property name="account.name" value="${account1.name}"/>
	<t:property name="account.id" value="${account1.id}"/>
    <t:include filename="BackupWorkflowFullDeleteRestore.inc"/>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<GetContactsRequest xmlns="urn:zimbraMail">
				<cn id="${account1.id}:${account1.contact1.id}"/>
			</GetContactsRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GetContactsResponse/mail:cn" attr="id" match="${account1.id}:${account1.contact1.id}"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" id="${account1.id}:${account1.appointment1.calItemId}"/>
        </t:request>
        <t:response>
            <t:select path = "//mail:GetAppointmentResponse/mail:appt/mail:inv/mail:comp" attr="calItemId" match="${account1.id}:${account1.appointment1.calItemId}"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.id}:${account1.message1.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account1.id}:${account1.message1.id}"/>
        </t:response>
    </t:test>



</t:test_case>


<t:test_case testcaseid="Sharing_AccountBackup_02" type="smoke" areas="backup,nonappliance" bugids="8902">
    <t:objective>Backup (incremental) and restore an account with sharing.  Verify the shared data is still viewable by grantee after restore</t:objective>
    <t:steps>
    1. Backup Account3
    2. Account3 shares contacts, calendar, and messages with Account4
    4. Do incremental backup of Account3
    5. Delete the Account3
    6. Restore the Account3 (no redo logs)
    7. Verify that Account4 can view Account3's contacts, calendar, and messages still
    </t:steps>


	<t:property name="server.zimbraAdmin" value="${account3.server}"/>
	<t:property name="account.name" value="${account3.name}"/>
	<t:property name="account.id" value="${account3.id}"/>
    <t:include filename="BackupRequestFullBasic.inc"/>
	<t:property name="backup2.label1.id" value="${backup.label}"/>


	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account3.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
                <cn>
                    <a n="firstName">${account3.contact1.firstName}</a>
                    <a n="lastName">${account3.contact1.lastName}</a>
                    <a n="email">${account3.contact1.email}</a>
                </cn>     
            </CreateContactRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="account3.contact1.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m >
					<inv method="REQUEST" type="event" fb="B" transp="O" status="CONF" allDay="0" name="${account3.appointment1.subject}">
						<s tz="(GMT-10.00) Hawaii" d="${account3.appointment1.start}"/>
						<e tz="(GMT-10.00) Hawaii" d="${account3.appointment1.finish}"/>
						<or a="${account3.name}"/>
					</inv>
					<mp ct="text/plain">
						<content/>
					</mp>
					<su>${account3.appointment1.subject}</su>
				</m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="apptId" set="account3.appointment1.apptId"/>
            <t:select path="//mail:CreateAppointmentResponse" attr="calItemId" set="account3.appointment1.calItemId"/>
        </t:response>
    </t:test>

	<t:test >
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="t" a='${destination.name}'/>
					<su>${account3.message1.subject}</su>
					<mp ct="text/plain">
						<content>${account3.message1.content}</content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="account3.message1.id"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.contacts}']" attr="id" set="account3.folder.contacts.id"/>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.calendar}']" attr="id" set="account3.folder.calendar.id"/>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.sent}']" attr="id" set="account3.folder.sent.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account3.folder.contacts.id}">
					<grant gt="${grant.usr}" d="${account4.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account3.folder.calendar.id}">
					<grant gt="${grant.usr}" d="${account4.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account3.folder.sent.id}">
					<grant gt="${grant.usr}" d="${account4.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account4.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<GetContactsRequest xmlns="urn:zimbraMail">
				<cn id="${account3.id}:${account3.contact1.id}"/>
			</GetContactsRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GetContactsResponse/mail:cn" attr="id" match="${account3.id}:${account3.contact1.id}"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" id="${account3.id}:${account3.appointment1.calItemId}"/>
        </t:request>
        <t:response>
            <t:select path = "//mail:GetAppointmentResponse/mail:appt/mail:inv/mail:comp" attr="calItemId" match="${account3.id}:${account3.appointment1.calItemId}"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account3.id}:${account3.message1.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account3.id}:${account3.message1.id}"/>
        </t:response>
    </t:test>







	<t:property name="server.zimbraAdmin" value="${account3.server}"/>
	<t:property name="account.name" value="${account3.name}"/>
	<t:property name="account.id" value="${account3.id}"/>
    <t:include filename="BackupWorkflowIncrementalDeleteRestore.inc"/>
	


	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account4.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<GetContactsRequest xmlns="urn:zimbraMail">
				<cn id="${account3.id}:${account3.contact1.id}"/>
			</GetContactsRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GetContactsResponse/mail:cn" attr="id" match="${account3.id}:${account3.contact1.id}"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request> 
            <GetAppointmentRequest  xmlns="urn:zimbraMail" id="${account3.id}:${account3.appointment1.calItemId}"/>
        </t:request>
        <t:response>
            <t:select path = "//mail:GetAppointmentResponse/mail:appt/mail:inv/mail:comp" attr="calItemId" match="${account3.id}:${account3.appointment1.calItemId}"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account3.id}:${account3.message1.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account3.id}:${account3.message1.id}"/>
        </t:response>
    </t:test>


</t:test_case>



</t:tests>

