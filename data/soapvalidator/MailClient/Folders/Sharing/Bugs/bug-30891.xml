<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="password" value="test1234"/>
<t:property name="op.grant"			value="grant"/>
<t:property name="grant.guest"			value="guest"/>
<t:property name="rights.read"			value="r"/>
<t:property name="POP3.Yahoo.username" value="zzzimbratest@ymail.com"/>
<t:property name="account1.wiki1.pagename" value="wiki.${TIME}.${COUNTER}"/>

<t:test_case testcaseid="Sharing_Bug30891Setup" type="always" >
    <t:objective>basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    
    <t:test  id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>


    <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account1" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account1.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="Bug_30891" type="deprecated" bugids="30891">
    <t:objective> Verify  "args" and "pw" attribute in "acl" (folderActionRequest) works </t:objective>
	<t:steps>
		1. Authenticate as user1
		2. Get the folder id of wiki folder
		3. Create a test wiki page
		4. Share that wiki folder with guests and specifying password in attribute "pw" (success in 5.0.10)
		5. Share that wiki folder with guests and specifying password in attribute "args" (success in 5.0.10)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<!-- Establish a session for this account -->
	<t:test required="true">
        <t:requestContext>
            <authToken>${authToken}</authToken>
            <session/>
        </t:requestContext>
        <t:request>
            <NoOpRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:NoOpResponse"/>
        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.notebook}']" attr="id" set="wiki.folder.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
			<SaveWikiRequest xmlns="urn:zimbraMail">
				<w name="${account1.wiki1.pagename}" l="${wiki.folder.id}">Now is the time for all good men to come to the aid of their country</w>
			</SaveWikiRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveWikiResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${wiki.folder.id}">
					<grant gt="${grant.guest}" inh="1"  d="${POP3.gmail.username}" perm="${rights.read}" pw="${password}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse"/>
            <t:header path="//zimbra:context"/>
            <t:header path="//zimbra:acl/zimbra:grant" attr="pw" match="${password}" />
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${wiki.folder.id}">
					<grant gt="${grant.guest}" inh="1"  d="${POP3.Yahoo.username}" perm="${rights.read}" args="${password}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse"/>
            <t:header path="//zimbra:context"/>
            <t:header path="//zimbra:acl/zimbra:grant" attr="pw" match="${password}" />
        </t:response>
    </t:test>
     
</t:test_case>


</t:tests>
