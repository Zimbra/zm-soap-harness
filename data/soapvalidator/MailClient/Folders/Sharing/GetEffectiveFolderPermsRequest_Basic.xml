<t:tests xmlns:t="urn:zimbraTestHarness">
	<t:property name="account1.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
	<t:property name="account1.folder1.name" value="folder.${TIME}.${COUNTER}"/>
	<t:property name="account1.folder2.name" value="sub.${TIME}.${COUNTER}"/>
	<t:property name="account2.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
	<t:property name="account3.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
	<t:property name="account4.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
	<t:property name="account5.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
	<t:property name="account6.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
	<t:property name="account7.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
	<t:property name="account8.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
	<t:property name="account9.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
	<t:property name="op.grant" value="grant"/>
	<t:property name="op.revoke" value="!grant"/>
	<t:property name="grant.usr" value="usr"/>

	<t:test_case testcaseid="AccountSetup" type="always">
		<t:objective>basic system check</t:objective>
		<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
		<t:test id="ping" required="true">
			<t:request>
				<PingRequest xmlns="urn:zimbraAdmin"/>
			</t:request>
			<t:response>
				<t:select path="//admin:PingResponse"/>
			</t:response>
		</t:test>
		<t:test id="admin_login" required="true" depends="ping">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test id="create_test_account1" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account1.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id"/>
				<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
			</t:response>
		</t:test>
		<t:test id="create_test_account2" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account2.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account2.id"/>
				<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
			</t:response>
		</t:test>
		<t:test id="create_test_account3" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account3.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account3.id"/>
				<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
			</t:response>
		</t:test>
				<t:test id="create_test_account4" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account4.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account4.id"/>
				<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
			</t:response>
		</t:test>
				<t:test id="create_test_account5" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account5.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account5.id"/>
				<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account5.server"/>
			</t:response>
		</t:test>
				<t:test id="create_test_account6" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account6.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account6.id"/>
				<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account6.server"/>
			</t:response>
		</t:test>
				<t:test id="create_test_account7" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account7.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account7.id"/>
				<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account7.server"/>
			</t:response>
		</t:test>
				<t:test id="create_test_account" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account8.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account8.id"/>
				<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account8.server"/>
			</t:response>
		</t:test>
		<t:test id="create_test_account" required="false" depends="admin_login">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account9.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account9.id"/>
				<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account9.server"/>
			</t:response>
		</t:test>	
		<t:property name="server.zimbraAccount" value="${account1.server}"/>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test required="true">
			<t:request>
				<GetFolderRequest xmlns="urn:zimbraMail"/>
			</t:request>
			<t:response>
				<t:select path="//mail:GetFolderResponse">
					<t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="account1.inbox.folder.id"/>
					<t:select path="//mail:folder[@name='${globals.drafts}']" attr="id" set="account1.drafts.folder.id"/>
					<t:select path="//mail:folder[@name='${globals.spam}']" attr="id" set="account1.spam.folder.id"/>
					<t:select path="//mail:folder[@name='${globals.trash}']" attr="id" set="account1.trash.folder.id"/>
					<t:select path="//mail:folder[@name='${globals.sent}']" attr="id" set="account1.sent.folder.id"/>
					<t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="account1.root.folder.id"/>
					<t:select path="//mail:folder[@name='${globals.contacts}']" attr="id" set="account1.contacts.folder.id"/>
					<t:select path="//mail:folder[@name='${globals.emailed}']" attr="id" set="account1.emailed.folder.id"/>
					<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="account1.calendar.folder.id"/>
					<t:select path="//mail:folder[@name='${globals.tasks}']" attr="id" set="account1.tasks.folder.id"/>
					<t:select path="//mail:folder[@name='${globals.chats}']" attr="id" set="account1.chats.folder.id"/>
				</t:select>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<CreateFolderRequest xmlns="urn:zimbraMail">
					<folder name="${account1.folder1.name}" l="${account1.root.folder.id}"/>
				</CreateFolderRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder1.id"/>
			</t:response>
		</t:test >
		<t:test>
			<t:request>
				<CreateFolderRequest xmlns="urn:zimbraMail">
					<folder name="${account1.folder2.name}" l="${account1.inbox.folder.id}"/>
				</CreateFolderRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder2.id"/>
			</t:response>
		</t:test >
	</t:test_case>
	<t:test_case testcaseid="GetEffectiveFolderPermsRequest_01" type="smoke">
		<t:objective>Verify GetEffectiveFolderPermsRequest for read access.</t:objective>
		<t:steps>
	1. Login as account1
	2. share system and custom folder with account2 (permissions=read)
	3. Login as account2
	4. send GetEffectiveFolderPermsRequest verify it gets read right.
	</t:steps>
		<t:property name="perm" value="r"/>
		<t:property name="server.zimbraAccount" value="${account1.server}"/>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.inbox.folder.id}">
						<grant gt="${grant.usr}" d="${account2.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.drafts.folder.id}">
						<grant gt="${grant.usr}" d="${account2.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.spam.folder.id}">
						<grant gt="${grant.usr}" d="${account2.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.trash.folder.id}">
						<grant gt="${grant.usr}" d="${account2.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.sent.folder.id}">
						<grant gt="${grant.usr}" d="${account2.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
	
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.contacts.folder.id}">
						<grant gt="${grant.usr}" d="${account2.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.emailed.folder.id}">
						<grant gt="${grant.usr}" d="${account2.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.calendar.folder.id}">
						<grant gt="${grant.usr}" d="${account2.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.tasks.folder.id}">
						<grant gt="${grant.usr}" d="${account2.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.chats.folder.id}">
						<grant gt="${grant.usr}" d="${account2.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.folder1.id}">
						<grant gt="${grant.usr}" d="${account2.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.root.folder.id}">
						<grant gt="${grant.usr}" d="${account2.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:property name="server.zimbraAccount" value="${account2.server}"/>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account2.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.inbox.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.drafts.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.spam.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.trash.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.sent.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.root.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.contacts.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.emailed.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.calendar.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.tasks.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.chats.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.folder1.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.folder2.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
	</t:test_case>
	<t:test_case testcaseid="GetEffectiveFolderPermsRequest_02" type="smoke">
		<t:objective>Verify GetEffectiveFolderPermsRequest for write access.</t:objective>
		<t:steps>
	1. Login as account1
	2. share system and custom folder with account3 (permissions=write)
	3. Login as account3
	4. send GetEffectiveFolderPermsRequest verify it gets write right.
	</t:steps>
		<t:property name="perm" value="w"/>
		<t:property name="server.zimbraAccount" value="${account1.server}"/>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.inbox.folder.id}">
						<grant gt="${grant.usr}" d="${account3.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.drafts.folder.id}">
						<grant gt="${grant.usr}" d="${account3.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.spam.folder.id}">
						<grant gt="${grant.usr}" d="${account3.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.trash.folder.id}">
						<grant gt="${grant.usr}" d="${account3.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.sent.folder.id}">
						<grant gt="${grant.usr}" d="${account3.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.contacts.folder.id}">
						<grant gt="${grant.usr}" d="${account3.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.emailed.folder.id}">
						<grant gt="${grant.usr}" d="${account3.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.calendar.folder.id}">
						<grant gt="${grant.usr}" d="${account3.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.tasks.folder.id}">
						<grant gt="${grant.usr}" d="${account3.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.chats.folder.id}">
						<grant gt="${grant.usr}" d="${account3.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.folder1.id}">
						<grant gt="${grant.usr}" d="${account3.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.root.folder.id}">
						<grant gt="${grant.usr}" d="${account3.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>

		<t:property name="server.zimbraAccount" value="${account3.server}"/>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account3.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.inbox.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.drafts.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.spam.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.trash.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.sent.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.root.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.contacts.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.emailed.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.calendar.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.tasks.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.chats.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.folder1.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.folder2.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
	</t:test_case>
		<t:test_case testcaseid="GetEffectiveFolderPermsRequest_03" type="smoke">
		<t:objective>Verify GetEffectiveFolderPermsRequest for delete access.</t:objective>
		<t:steps>
	1. Login as account1
	2. share system and custom folder with account4 (permissions=delete)
	3. Login as account4
	4. send GetEffectiveFolderPermsRequest verify it gets delete right.
	</t:steps>
		<t:property name="perm" value="d"/>
		<t:property name="server.zimbraAccount" value="${account1.server}"/>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.inbox.folder.id}">
						<grant gt="${grant.usr}" d="${account4.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.drafts.folder.id}">
						<grant gt="${grant.usr}" d="${account4.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.spam.folder.id}">
						<grant gt="${grant.usr}" d="${account4.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.trash.folder.id}">
						<grant gt="${grant.usr}" d="${account4.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.sent.folder.id}">
						<grant gt="${grant.usr}" d="${account4.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.contacts.folder.id}">
						<grant gt="${grant.usr}" d="${account4.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.emailed.folder.id}">
						<grant gt="${grant.usr}" d="${account4.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.calendar.folder.id}">
						<grant gt="${grant.usr}" d="${account4.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.tasks.folder.id}">
						<grant gt="${grant.usr}" d="${account4.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.chats.folder.id}">
						<grant gt="${grant.usr}" d="${account4.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.folder1.id}">
						<grant gt="${grant.usr}" d="${account4.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.root.folder.id}">
						<grant gt="${grant.usr}" d="${account4.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:property name="server.zimbraAccount" value="${account4.server}"/>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account4.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.inbox.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.drafts.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.spam.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.trash.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.sent.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.root.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.contacts.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.emailed.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.calendar.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.tasks.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.chats.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.folder1.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.folder2.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
	</t:test_case>
	
		<t:test_case testcaseid="GetEffectiveFolderPermsRequest_04" type="smoke">
		<t:objective>Verify GetEffectiveFolderPermsRequest for insert access.</t:objective>
		<t:steps>
	1. Login as account1
	2. share system and custom folder with account5 (permissions=insert)
	3. Login as account5
	4. send GetEffectiveFolderPermsRequest verify it gets insert right.
	</t:steps>
		<t:property name="perm" value="i"/>
		<t:property name="server.zimbraAccount" value="${account1.server}"/>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.inbox.folder.id}">
						<grant gt="${grant.usr}" d="${account5.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.drafts.folder.id}">
						<grant gt="${grant.usr}" d="${account5.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.spam.folder.id}">
						<grant gt="${grant.usr}" d="${account5.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.trash.folder.id}">
						<grant gt="${grant.usr}" d="${account5.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.sent.folder.id}">
						<grant gt="${grant.usr}" d="${account5.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.contacts.folder.id}">
						<grant gt="${grant.usr}" d="${account5.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.emailed.folder.id}">
						<grant gt="${grant.usr}" d="${account5.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.calendar.folder.id}">
						<grant gt="${grant.usr}" d="${account5.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.tasks.folder.id}">
						<grant gt="${grant.usr}" d="${account5.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.chats.folder.id}">
						<grant gt="${grant.usr}" d="${account5.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.folder1.id}">
						<grant gt="${grant.usr}" d="${account5.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.root.folder.id}">
						<grant gt="${grant.usr}" d="${account5.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:property name="server.zimbraAccount" value="${account5.server}"/>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account5.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.inbox.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.drafts.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.spam.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.trash.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.sent.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.root.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.contacts.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.emailed.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.calendar.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.tasks.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.chats.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.folder1.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.folder2.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
	</t:test_case>
	
	
		<t:test_case testcaseid="GetEffectiveFolderPermsRequest_05" type="smoke">
		<t:objective>Verify GetEffectiveFolderPermsRequest for freebusy access.</t:objective>
		<t:steps>
	1. Login as account1
	2. share system and custom folder with account6 (permissions=freebusy)
	3. Login as account6
	4. send GetEffectiveFolderPermsRequest verify it gets free busy right.
	</t:steps>
		<t:property name="perm" value="f"/>
		<t:property name="server.zimbraAccount" value="${account1.server}"/>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.inbox.folder.id}">
						<grant gt="${grant.usr}" d="${account6.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.drafts.folder.id}">
						<grant gt="${grant.usr}" d="${account6.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.spam.folder.id}">
						<grant gt="${grant.usr}" d="${account6.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.trash.folder.id}">
						<grant gt="${grant.usr}" d="${account6.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.sent.folder.id}">
						<grant gt="${grant.usr}" d="${account6.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.contacts.folder.id}">
						<grant gt="${grant.usr}" d="${account6.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.emailed.folder.id}">
						<grant gt="${grant.usr}" d="${account6.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.calendar.folder.id}">
						<grant gt="${grant.usr}" d="${account6.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.tasks.folder.id}">
						<grant gt="${grant.usr}" d="${account6.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.chats.folder.id}">
						<grant gt="${grant.usr}" d="${account6.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.folder1.id}">
						<grant gt="${grant.usr}" d="${account6.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.root.folder.id}">
						<grant gt="${grant.usr}" d="${account6.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:property name="server.zimbraAccount" value="${account6.server}"/>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account6.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.inbox.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.drafts.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.spam.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.trash.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.sent.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.root.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.contacts.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.emailed.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.calendar.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.tasks.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.chats.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.folder1.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.folder2.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
	</t:test_case>
		<t:test_case testcaseid="GetEffectiveFolderPermsRequest_06" type="smoke">
		<t:objective>Verify GetEffectiveFolderPermsRequest for workflow access.</t:objective>
		<t:steps>
	1. Login as account1
	2. share system and custom folder with account7 (permissions=workflow)
	3. Login as account7
	4. send GetEffectiveFolderPermsRequest verify it gets workflow right.
	</t:steps>
		<t:property name="perm" value="x"/>
		<t:property name="server.zimbraAccount" value="${account1.server}"/>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.inbox.folder.id}">
						<grant gt="${grant.usr}" d="${account7.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.drafts.folder.id}">
						<grant gt="${grant.usr}" d="${account7.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.spam.folder.id}">
						<grant gt="${grant.usr}" d="${account7.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.trash.folder.id}">
						<grant gt="${grant.usr}" d="${account7.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.sent.folder.id}">
						<grant gt="${grant.usr}" d="${account7.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.contacts.folder.id}">
						<grant gt="${grant.usr}" d="${account7.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.emailed.folder.id}">
						<grant gt="${grant.usr}" d="${account7.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.calendar.folder.id}">
						<grant gt="${grant.usr}" d="${account7.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.tasks.folder.id}">
						<grant gt="${grant.usr}" d="${account7.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.chats.folder.id}">
						<grant gt="${grant.usr}" d="${account7.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.folder1.id}">
						<grant gt="${grant.usr}" d="${account7.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.root.folder.id}">
						<grant gt="${grant.usr}" d="${account7.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>

		<t:property name="server.zimbraAccount" value="${account7.server}"/>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account7.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.inbox.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.drafts.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.spam.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.trash.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.sent.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.root.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.contacts.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.emailed.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.calendar.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.tasks.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.chats.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.folder1.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.folder2.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}"/>
			</t:response>
		</t:test>
	</t:test_case>
	
	
		<t:test_case testcaseid="GetEffectiveFolderPermsRequest_07" type="smoke">
		<t:objective>Verify GetEffectiveFolderPermsRequest for admin access.</t:objective>
		<t:steps>
	1. Login as account1
	2. share system and custom folder with account8 (permissions=admin)
	3. Login as account8
	4. send GetEffectiveFolderPermsRequest verify it gets admin right.
	</t:steps>
		<t:property name="perm" value="rwidxf"/>
		<t:property name="server.zimbraAccount" value="${account1.server}"/>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.inbox.folder.id}">
						<grant gt="${grant.usr}" d="${account8.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.drafts.folder.id}">
						<grant gt="${grant.usr}" d="${account8.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.spam.folder.id}">
						<grant gt="${grant.usr}" d="${account8.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.trash.folder.id}">
						<grant gt="${grant.usr}" d="${account8.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.sent.folder.id}">
						<grant gt="${grant.usr}" d="${account8.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.contacts.folder.id}">
						<grant gt="${grant.usr}" d="${account8.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.emailed.folder.id}">
						<grant gt="${grant.usr}" d="${account8.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.calendar.folder.id}">
						<grant gt="${grant.usr}" d="${account8.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.tasks.folder.id}">
						<grant gt="${grant.usr}" d="${account8.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.chats.folder.id}">
						<grant gt="${grant.usr}" d="${account8.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.folder1.id}">
						<grant gt="${grant.usr}" d="${account8.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.root.folder.id}">
						<grant gt="${grant.usr}" d="${account8.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>

		<t:property name="server.zimbraAccount" value="${account8.server}"/>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account8.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.inbox.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}c"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.drafts.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}c"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.spam.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}c"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.trash.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}c"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.sent.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}c"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.root.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}c"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.contacts.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}c"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.emailed.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}c"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.calendar.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}c"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.tasks.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}c"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.chats.folder.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}c"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.folder1.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}c"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.folder2.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}c"/>
			</t:response>
		</t:test>
	</t:test_case>
	
	<t:test_case testcaseid="GetEffectiveFolderPermsRequest_08" type="smoke">
		<t:objective>Verify GetEffectiveFolderPermsRequest for revoking the permission</t:objective>
		<t:steps>
	1. Login as account1
	2. share system a folder with account9 (permissions=admin)
	3. Login as account9
	4. send GetEffectiveFolderPermsRequest verify it gets admin right.
	5. revoke the permission and verify it reflected in GetEffectiveFolderPermsRequest
	</t:steps>
		<t:property name="perm" value="rwidxf"/>
		<t:property name="server.zimbraAccount" value="${account1.server}"/>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="${op.grant}" id="${account1.folder1.id}">
						<grant gt="${grant.usr}" d="${account9.name}" perm="${perm}"/>
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>

		<t:property name="server.zimbraAccount" value="${account9.server}"/>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account9.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.folder1.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match="${perm}c"/>
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<FolderActionRequest xmlns="urn:zimbraMail">
					<action op="!${op.grant}" id="${account1.folder1.id}" zid="${account9.id}">
					
					</action>
				</FolderActionRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:FolderActionResponse/mail:action"/>
			</t:response>
		</t:test>

		<t:property name="server.zimbraAccount" value="${account9.server}"/>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account9.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>
		<t:test>
			<t:request>
				<GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
					<folder l="${account1.id}:${account1.folder1.id}"/>
				</GetEffectiveFolderPermsRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder" attr="perm" match=""/>
			</t:response>
		</t:test>


	</t:test_case>
</t:tests>
