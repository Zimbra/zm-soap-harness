<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="foreignPrincipal.Attr.name" value="zimbraForeignPrincipal"/>


<t:property name="account1.name" value="mp.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.contact1.firstName" value="first.${TIME}.${COUNTER}"/>
<t:property name="account1.contact1.lastName" value="last.${TIME}.${COUNTER}"/>
<t:property name="account1.contact1.email" value="${nonZimbraUser.name}"/>

<t:property name="account2.name" value="mp.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="account3.name" value="mp.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
    

<t:property name="op.grant"			value="grant"/>

<t:property name="grant.usr"			value="usr"/>
<t:property name="grant.grp"			value="grp"/>
<t:property name="grant.dom"			value="dom"/>
<t:property name="grant.cos"			value="cos"/>
<t:property name="grant.all"			value="all"/>
<t:property name="grant.pub"			value="pub"/>
<t:property name="grant.guest"			value="guest"/>

<t:property name="rights.none"			value=""/>
<t:property name="rights.read"			value="r"/>
<t:property name="rights.write"			value="w"/>
<t:property name="rights.insert"		value="i"/>
<t:property name="rights.delete"		value="d"/>
<t:property name="rights.administer"	value="a"/>
<t:property name="rights.workflow"		value="x"/>
<t:property name="rights.manager"		value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}"/>
<t:property name="view.conversation"	value="conversation"/>
<t:property name="view.message"			value="message"/>
<t:property name="view.contact"			value="contact"/>
<t:property name="view.appointment"		value="appointment"/>
<t:property name="view.note"			value="note"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>	
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>  




<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
                <cn>
                    <a n="firstName">${account1.contact1.firstName}</a>
                    <a n="lastName">${account1.contact1.lastName}</a>
                    <a n="email">${account1.contact1.email}</a>
                </cn>     
            </CreateContactRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="account1.contact1.id"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.contacts}']" attr="id" set="account1.folder.contacts.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.contacts.id}">
					<grant gt="${grant.usr}" d="${account2.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.contacts.id}">
					<grant gt="${grant.usr}" d="${account3.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="Mountpoint_AccountBackup_01" type="smoke" areas="backup,nonappliance">
    <t:objective>Backup (full) and restore an account with a Mount Point.  Verify the Mount Point is backed up and restored</t:objective>
    <t:steps>
    1. Account1 shares contacts with Account2
    2. Account2 creates a mountpoint to Account1's contacts
    2. Backup the Account2
    3. Delete the Account2
    4. Restore the Account2
    5. Verify the Mount Point is still set
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder[@name='${globals.root}']" attr="id" set="account2.folder.root.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account2.folder.root.id}" name="${account2.folder.shared.name}" zid="${account1.id}" rid="${account1.folder.contacts.id}" view="${view.contact}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account2.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account2.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFolderResponse"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="contact">
				<query>in:"${account2.folder.shared.name}"</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:cn"  attr="id" set="account2.contact1.id" />
			<t:select path="//mail:SearchResponse/mail:cn/mail:a[@n='email']" match="^${account1.contact1.email}$"/>
		</t:response>
	</t:test>
	
	<t:test depends="getcontacts1a">
		<t:request>
			<GetContactsRequest xmlns="urn:zimbraMail">
				<cn id="${account2.contact1.id}"/>
			</GetContactsRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GetContactsResponse/mail:cn/mail:a[@n='firstName']" match="^${account1.contact1.firstName}$"/>
			<t:select path="//mail:GetContactsResponse/mail:cn/mail:a[@n='lastName']" match="^${account1.contact1.lastName}$"/>
			<t:select path="//mail:GetContactsResponse/mail:cn/mail:a[@n='email']" match="^${account1.contact1.email}$"/>
		</t:response>
	</t:test>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAdmin" value="${account2.server}"/>

    <t:test >
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" sync="1">
                    <account name="${account2.name}"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse/admin:backup" attr="label" set="backup1.label1.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${account2.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:DeleteAccountResponse" />
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <RestoreRequest xmlns="urn:zimbraAdmin">
                <restore includeIncrementals="0" method="ra" replayRedo="0" label="${backup1.label1.id}">
                    <account name="${account2.name}"/>                    
                </restore>
            </RestoreRequest>
        </t:request>
        <t:response>
                <t:select path="//admin:RestoreResponse"/>
        </t:response>
    </t:test> 


	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:link" attr="name" match="^${account2.folder.shared.name}$"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account2.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:GetFolderResponse/mail:link" attr="name" match="^${account2.folder.shared.name}$"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="contact">
				<query>in:"${account2.folder.shared.name}"</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:cn"  attr="id" set="account2.contact1.id" />
			<t:select path="//mail:SearchResponse/mail:cn/mail:a[@n='email']" match="^${account1.contact1.email}$"/>
		</t:response>
	</t:test>
	
	<t:test >
		<t:request>
			<GetContactsRequest xmlns="urn:zimbraMail">
				<cn id="${account2.contact1.id}"/>
			</GetContactsRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GetContactsResponse/mail:cn/mail:a[@n='firstName']" match="^${account1.contact1.firstName}$"/>
			<t:select path="//mail:GetContactsResponse/mail:cn/mail:a[@n='lastName']" match="^${account1.contact1.lastName}$"/>
			<t:select path="//mail:GetContactsResponse/mail:cn/mail:a[@n='email']" match="^${account1.contact1.email}$"/>
		</t:response>
	</t:test>


</t:test_case>


<t:test_case testcaseid="Mountpoint_AccountBackup_02" type="smoke" areas="backup,nonappliance" bugids="8902">
    <t:objective>Backup (incremental) and restore an account with a Mount Point.  Verify the mount point value is backed up and restored</t:objective>
    <t:steps>
    1. Backup Account3
    2. Account1 shares contacts with Account3
    3. Account3 creates a mountpoint to Account1's contacts
    4. Do incremental backup of Account3
    5. Delete the Account3
    6. Restore the Account3 (no redo logs)
    7. Verify the Mount Point is still set
    </t:steps>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAdmin" value="${account3.server}"/>

    <t:test >
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="full" sync="1">
                    <account name="${account3.name}"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse/admin:backup" attr="label" set="backup2.label1.id"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder[@name='${globals.root}']" attr="id" set="account3.folder.root.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account3.folder.root.id}" name="${account3.folder.shared.name}" zid="${account1.id}" rid="${account1.folder.contacts.id}" view="${view.contact}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account3.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account3.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFolderResponse"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="contact">
				<query>in:"${account3.folder.shared.name}"</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:cn"  attr="id" set="account3.contact1.id" />
			<t:select path="//mail:SearchResponse/mail:cn/mail:a[@n='email']" match="^${account1.contact1.email}$"/>
		</t:response>
	</t:test>
	
	<t:test depends="getcontacts1a">
		<t:request>
			<GetContactsRequest xmlns="urn:zimbraMail">
				<cn id="${account3.contact1.id}"/>
			</GetContactsRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GetContactsResponse/mail:cn/mail:a[@n='firstName']" match="^${account1.contact1.firstName}$"/>
			<t:select path="//mail:GetContactsResponse/mail:cn/mail:a[@n='lastName']" match="^${account1.contact1.lastName}$"/>
			<t:select path="//mail:GetContactsResponse/mail:cn/mail:a[@n='email']" match="^${account1.contact1.email}$"/>
		</t:response>
	</t:test>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAdmin" value="${account3.server}"/>

    <t:test >
        <t:request>
            <BackupRequest xmlns="urn:zimbraAdmin">
                <backup method="incremental" sync="1">
                    <account name="${account3.name}"/>
                </backup>
            </BackupRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:BackupResponse/admin:backup"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${account3.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:DeleteAccountResponse" />
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <RestoreRequest xmlns="urn:zimbraAdmin">
                <restore includeIncrementals="1" method="ra" replayRedo="0">
                    <account name="${account3.name}"/>                    
                </restore>
            </RestoreRequest>
        </t:request>
        <t:response>
                <t:select path="//admin:RestoreResponse"/>
        </t:response>
    </t:test> 

	<!-- Work around for bug 8901 - the local user password is droped -->
    <t:test >
        <t:request>
            <SetPasswordRequest xmlns="urn:zimbraAdmin">
                <id>${account3.id}</id>
                <newPassword>${defaultpassword.value}</newPassword>
            </SetPasswordRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:SetPasswordResponse"/>
        </t:response>
    </t:test>
	

	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:link" attr="name" match="^${account3.folder.shared.name}$"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account3.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:GetFolderResponse/mail:link" attr="name" match="^${account3.folder.shared.name}$"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="contact">
				<query>in:"${account3.folder.shared.name}"</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:cn"  attr="id" set="account3.contact1.id" />
			<t:select path="//mail:SearchResponse/mail:cn/mail:a[@n='email']" match="^${account1.contact1.email}$"/>
		</t:response>
	</t:test>
	
	<t:test >
		<t:request>
			<GetContactsRequest xmlns="urn:zimbraMail">
				<cn id="${account3.contact1.id}"/>
			</GetContactsRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GetContactsResponse/mail:cn/mail:a[@n='firstName']" match="^${account1.contact1.firstName}$"/>
			<t:select path="//mail:GetContactsResponse/mail:cn/mail:a[@n='lastName']" match="^${account1.contact1.lastName}$"/>
			<t:select path="//mail:GetContactsResponse/mail:cn/mail:a[@n='email']" match="^${account1.contact1.email}$"/>
		</t:response>
	</t:test>


</t:test_case>



</t:tests>

