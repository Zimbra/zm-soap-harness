<t:tests xmlns:t="urn:zimbraTestHarness">



<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>

<t:test required="true">
 <t:request>
   <PingRequest xmlns="urn:zimbraAdmin"/>
 </t:request>
  <t:response>
	<t:select path="//admin:PingResponse"/>
 </t:response>
</t:test>

</t:test_case>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="account04.user" value="account04.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account04.password" value="${defaultpassword.value}"/>
<t:property name="account04.dir" value="${testMailRaw.root}/email04"/>


<t:test_case testcaseid="account04 setup" type="always" >
        <t:objective> setup account04 </t:objective>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>



    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account04.user}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account04.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>  


    <t:mailinjecttest >
        <t:lmtpInjectRequest>
		<foldername>${account04.dir}</foldername>
		<to>${account04.user}</to>
		<from>${nonZimbraUser.name}</from>
		<server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>


</t:test_case>


<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
<t:test_case testcaseid="SearchAuthRequest" type="functional" >
	<t:objective> Login as the appropriate test account
	</t:objective>


	<t:test required="true">
	 <t:request>
	  <AuthRequest xmlns="urn:zimbraAccount">
	    <account by="name">${account04.user}</account>
	    <password>${account04.password}</password>
	  </AuthRequest>
	 </t:request>
	 <t:response>
		<t:select path="//acct:AuthResponse/acct:lifetime" 
						match="^\d+$"/>
		<t:select path="//acct:AuthResponse/acct:authToken"
						set="authToken"/>


	 </t:response>
	</t:test>

</t:test_case>



<t:test_case testcaseid="specific_content_pdf_SearchRequest1" type="functional" areas="verity">
 <t:objective>
	Verify that a search for content in adobe PDF is successful
 </t:objective>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> content:(typical configuration for incoming traffic) </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m/mail:su" match="email04B"/>
	 </t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> typical configuration for incoming traffic </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m/mail:su" match="email04B"/>
	 </t:response>
	</t:test>


</t:test_case>

<!-- x-tar is not supported by verity - //kenny/public/third party docs/verity -->
<t:test_case testcaseid="specific_content_x-tar_SearchRequest" type="deprecated" >
 <t:objective>
	Verify that a search for content in application/x-tar is successful
 </t:objective>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> content:(Release all enhancements) </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04C$"/>
		</t:select>
	 </t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> Release all enhancements </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04C$"/>
		</t:select>
	 </t:response>
	</t:test>


</t:test_case>





<!--

<t:test_case testcaseid="specific_text/calendar_SearchRequest" type="functional" >
 <t:objective>
	Verify that a search for content in text/calendar is successful
 </t:objective>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> content:(20050615T035338Z) </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04E$"/>
		</t:select>
	 </t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> 20050615T035338Z </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04E$"/>
		</t:select>
	 </t:response>
	</t:test>


</t:test_case>
-->


<t:test_case testcaseid="specific_text/plain_SearchRequest" type="functional" >
 <t:objective>
	Verify that a search for content in text/plain is successful
 </t:objective>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> content:(script so that it can be used generically on any system) </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04F$"/>
		</t:select>
	 </t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> script so that it can be used generically on any system </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04F$"/>
		</t:select>
	 </t:response>
	</t:test>


</t:test_case>



<t:test_case testcaseid="specific_text/html_SearchRequest" type="functional" >
 <t:objective>
	Verify that a search for content in text/html is successful
 </t:objective>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> content:(The following tests passed) </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04G$"/>
		</t:select>
	 </t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> The following tests passed </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04G$"/>
		</t:select>
	 </t:response>
	</t:test>


</t:test_case>


<t:test_case testcaseid="specific_text/richtext_SearchRequest" type="functional"  areas="verity">
 <t:objective>
	Verify that a search for content in text/richtext is successful
 </t:objective>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> content:(text that is within a richtext) </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04H$"/>
		</t:select>
	 </t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> text that is within a richtext </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04H$"/>
		</t:select>
	 </t:response>
	</t:test>


</t:test_case>





<t:test_case testcaseid="specific_content_vnd.ms-exce_SearchRequest" type="functional"  areas="verity">
 <t:objective>
	Verify that a search for content in application/vnd.ms-exce is successful
 </t:objective>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> content:(Matt to follow up on 2015) </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04L$"/>
		</t:select>
	 </t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> Matt to follow up on 2015 </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04L$"/>
		</t:select>
	 </t:response>
	</t:test>


</t:test_case>



<t:test_case testcaseid="specific_content_vnd.ms-powerpoint_SearchRequest" type="functional"  areas="verity">
 <t:objective>
	Verify that a search for content in application/vnd.ms-powerpoint is successful
 </t:objective>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> content:(Here is the subtitle) </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04M$"/>
		</t:select>
	 </t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> Here is the subtitle </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04M$"/>
		</t:select>
	 </t:response>
	</t:test>


</t:test_case>


<t:test_case testcaseid="specific_content_msword_SearchRequest" type="functional"  areas="verity" bugids="3785">
 <t:objective>
	Verify that a search for content in application/msword is successful
 </t:objective>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> content:(exception dialog boxes and integrate it with the existing scripts) </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04N$"/>
		</t:select>
	 </t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> exception dialog boxes and integrate it with the existing scripts </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04N$"/>
		</t:select>
	 </t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="specific_content_zip_SearchRequest" type="functional"  areas="verity">
 <t:objective>
	Verify that a search for content in application/zip is successful
 </t:objective>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> content:(text within a compressed zip) </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04O$"/>
		</t:select>
	 </t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> text within a compressed zip </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^email04O$"/>
		</t:select>
	 </t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="specific_content_msword_SearchRequest1" type="functional"  areas="open" bugids="3785">
 <t:objective>
	Verify that a search for content in msword is unsuccessful.
 </t:objective>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> content:(exception dialog boxes and integrate it with the existing scripts) </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse"/>
	 </t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		<query> exception dialog boxes and integrate it with the existing scripts </query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse" />
	 </t:response>
	</t:test>


</t:test_case>



</t:tests>