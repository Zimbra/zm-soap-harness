<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="account1.name" value="lmtp${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="lmtp${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="root" value="${soapxml.root}/MailClient/Mail/lmtp/Attachments/"/>
<t:property name="msg01.file" value="${root}/attachmentZimbra.txt"/>

<t:property name="subject1.valid" value="Subject${TIME}${COUNTER}"/>   
<t:property name="attachment2.name" value="Sample.jpg"/>
<t:property name="message_content" value="A mail with an attachemnt sent to Zimbra account"/>

	
<t:test_case testcaseid="Ping" type="always">
    <t:objective>Basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="acctSetup_backup_search" type="always">
     <t:objective>Create test account</t:objective>
    <t:steps>1. Login to admin
             2. Create a test account        
    </t:steps>
    
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_account1" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

	<t:test id="create_user_account2" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>
    
</t:test_case>

<t:property name="server.zimbraAccount" value="${account1.server}"/>
<t:test_case testcaseid="backup_search_inject01" type="smoke" areas="backup,nonappliance">
    <t:objective>Backup and restore account.Verify that after backup and restore, the injected message with attachment is correctly restored </t:objective>
    <t:steps>
	         1.Inject message(s) with specific content
             2.Do a backup/delete/restore
			 3.Search for content
			 4.Search for attachment content
			 5.Search by subject
			 6.Search by To:, From:, CC:     
    </t:steps>
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
            <to>${account1.name}</to>
			<cc>${account2.name}</cc>
            <from>${nonZimbraUser.name}</from>
            <server>${account1.server}</server>
            <modify>
                <header a="To">${account1.name}</header>
				<header a="Cc">${account2.name}</header>
                <header a="From">First Last ${nonZimbraUser.name}</header>
                <header a="Subject">${subject1.valid}</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

    <t:property name="server.zimbraAdmin" value="${account1.server}"/>
	<t:property name="account.name" value="${account1.name}"/>
	<t:property name="account.id" value="${account1.id}"/>
     
   	<t:include filename="BackupWorkflowFullDeleteRestore.inc"/> 
 	
	    <t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
		<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test delay="${postfixdelay.msec}">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>${message_content}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m/mail:su" match="^${subject1.valid}$"/>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg01.id"/>
        </t:response>
    </t:test>

	<t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${msg01.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${msg01.id}"/>
			<t:select path="//mail:GetMsgResponse/mail:m/mail:mp/mail:mp[@filename='${attachment2.name}']"/>
        </t:response>
    </t:test>

    <t:test delay="${postfixdelay.msec}">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${subject1.valid})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m/mail:su" match="^${subject1.valid}$"/>
        </t:response>
    </t:test>

	<t:test delay="${postfixdelay.msec}">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>to:(${account1.name})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m/mail:su" match="^${subject1.valid}$"/>
        </t:response>
    </t:test>

	<t:test delay="${postfixdelay.msec}">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>cc:(${account2.name})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m/mail:su" match="^${subject1.valid}$"/>
        </t:response>
    </t:test>

	<t:test delay="${postfixdelay.msec}">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>from:(${nonZimbraUser.name})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m/mail:su" match="^${subject1.valid}$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="backup_search_inject02" type="smoke" areas="backup,nonappliance">
    <t:objective>Backup (incremental) and restore account.Verify that after backup and restore, the injected message with attachment is correctly restored </t:objective>
    <t:steps>
	         1.Backup the account
	         2.Inject message(s) with specific content
             2.Do a incremental backup/delete/restore
			 3.Search for content
			 4.Search for attachment content
			 5.Search by subject
			 6.Search by To:, From:, CC:    
    </t:steps>

    <t:property name="server.zimbraAdmin" value="${account2.server}"/>
	<t:property name="account.name" value="${account2.name}"/>
	<t:property name="account.id" value="${account2.id}"/>
     
    
	<t:include filename="BackupRequestFullBasic.inc"/> 
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
            <to>${account2.name}</to>
			<cc>${account1.name}</cc>
            <from>${nonZimbraUser.name}</from>
            <server>${account2.server}</server>
            <modify>
                <header a="To">${account2.name}</header>
				<header a="Cc">${account1.name}</header>
                <header a="From">First Last ${nonZimbraUser.name}</header>
                <header a="Subject">${subject1.valid}</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

    <t:property name="server.zimbraAdmin" value="${account2.server}"/>
	<t:property name="account.name" value="${account2.name}"/>
	<t:property name="account.id" value="${account2.id}"/>
     
    
	<t:include filename="BackupWorkflowIncrementalDeleteRestore.inc"/> 
    <t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test delay="${postfixdelay.msec}">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>${message_content}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m/mail:su" match="^${subject1.valid}$"/>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg02.id"/>
        </t:response>
    </t:test>

	<t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${msg02.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${msg02.id}"/>
			<t:select path="//mail:GetMsgResponse/mail:m/mail:mp/mail:mp[@filename='${attachment2.name}']"/>
        </t:response>
    </t:test>

    <t:test delay="${postfixdelay.msec}">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${subject1.valid})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m/mail:su" match="^${subject1.valid}$"/>
        </t:response>
    </t:test>

	<t:test delay="${postfixdelay.msec}">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>to:(${account2.name})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m/mail:su" match="^${subject1.valid}$"/>
        </t:response>
    </t:test>

	<t:test delay="${postfixdelay.msec}">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>cc:(${account1.name})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m/mail:su" match="^${subject1.valid}$"/>
        </t:response>
    </t:test>

	<t:test delay="${postfixdelay.msec}">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>from:(${nonZimbraUser.name})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m/mail:su" match="^${subject1.valid}$"/>
        </t:response>
    </t:test>


</t:test_case>


            
</t:tests>
