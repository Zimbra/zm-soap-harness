<t:tests xmlns:t = "urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="account1.name" value="acct1${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="acct2${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="acct1${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.name" value="acct2${TIME}${COUNTER}@${defaultdomain.name}"/>


<t:property name="msg01.subject" value="message1"/>
<t:property name="msg02.subject" value="message2"/>
<t:property name="message_content" value="this mail is to check whether the message is read or unread"/>


<t:test_case testcaseid = "Ping" type = "always">
    <t:objective>basic system check</t:objective>
    
    <t:test id = "ping">
        <t:request>
            <PingRequest xmlns = "urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path = "//admin:PingResponse"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid = "acctSetup1_backup" type = "always">
    <t:objective>create test account</t:objective>
    
    <t:test id = "admin_login" required = "true" depends = "ping">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:AuthResponse/admin:authToken" set = "authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>   

	<t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>   

	<t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>   
       
</t:test_case>


<t:test_case testcaseid="ReFwd_mail_Backup_01" type="smoke" areas="backup,nonappliance">
<t:objective>Verify that search for replied and forwarded messages still work after Backup and Restore</t:objective>
<t:steps>
         1. Login to account1 
         2. Send a message to account2
         3. Login to account2
         4. Reply to the message (to account1)
         5. Forward the message to account1
         6. Admin Backup account2, delete account2, restore account2
         7. Login to account2
         8. Verify that is:replied and is:forwarded match the original message
</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

     <t:test>
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a="${account2.name}"/>
                    <su>${msg01.subject}</su>
                    <mp ct="text/plain">
                        <content>${message_content}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:SendMsgResponse/mail:m" attr = "id" set = "msg01.id1"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test required="true">
		<t:request>

			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>   

	<t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${msg01.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="account2.msg01.id"/>
        </t:response>
    </t:test>

	<t:test required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m origid="${account2.msg01.id}" rt="r">
                    <e t="t" a="${account1.name}"/>
                    <su>Re: ${msg01.subject}</su>
                    <mp ct="text/plain">
                        <content>${message_content}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:SendMsgResponse/mail:m" attr = "id" set = "account2.reply01.id"/>
        </t:response>
    </t:test>

	<t:test required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m origid="${account2.msg01.id}" rt="w">
                    <e t="t" a="${account1.name}"/>
                    <su>Fwd: ${msg01.subject}</su>
                    <mp ct="text/plain">
                        <content>${message_content}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:SendMsgResponse/mail:m" attr = "id" set = "account2.forward01.id"/>
        </t:response>
    </t:test>

    <t:property name="server.zimbraAdmin" value="${account2.server}"/>
	<t:property name="account.name" value="${account2.name}"/>
	<t:property name="account.id" value="${account2.id}"/>

	<t:include filename="BackupWorkflowFullDeleteRestore.inc"/> 
 	
	
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>   

	<t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>is:replied</query>
            </SearchRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" match="${account2.msg01.id}"/>
        </t:response>
    </t:test>

	<t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>is:forwarded</query>
            </SearchRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" match="${account2.msg01.id}"/>
        </t:response>
    </t:test>
    
    <t:test id="GetTagRequest1">
	 	<t:request>
	  		 <GetTagRequest xmlns="urn:zimbraMail"/>
		 </t:request>
	  	<t:response>
			<t:select path="//mail:CreateTagResponse" attr="id" emptyset="1"/>
			<t:select path="//mail:CreateTagResponse" attr="name" emptyset="1"/>
	 	</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="ReFwd_mail_Backup_02" type="smoke" areas="backup,nonappliance">
<t:objective>Backup (incremental) and restore an account with replay/forward mails. Verify that after backup and restore, the replay/forward mails are correctly restored</t:objective>
<t:steps>
         1. Login to account3 
         2. Send mail to account4
         3. Admin runs Backup of account4.
		 4. Login to account4 
		 5. Reply to the message (to account4).
		 6. Forward the message to account4.
		 7. Admin runs incremental backup of account4, delete account4, restore account4
		 8. Login to account4 
         9. Verify that is:replied and is:forwarded match the original message
</t:steps>
     
    <t:property name="server.zimbraAccount" value="${account3.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

     <t:test>
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a="${account4.name}"/>
                    <su>${msg02.subject}</su>
                    <mp ct="text/plain">
                        <content>${message_content}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:SendMsgResponse/mail:m" attr = "id" set = "msg02.id1"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAdmin" value="${account4.server}"/>
	<t:property name="account.name" value="${account4.name}"/>
	<t:property name="account.id" value="${account4.id}"/>

	
	<t:include filename="BackupRequestFullBasic.inc"/> 

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account4.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${msg02.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="account4.msg02.id"/>
        </t:response>
    </t:test>

	<t:test required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m origid="${account4.msg02.id}" rt="r">
                    <e t="t" a="${account3.name}"/>
                    <su>Re: ${msg02.subject}</su>
                    <mp ct="text/plain">
                        <content>${message_content}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:SendMsgResponse/mail:m" attr = "id" set = "account4.reply02.id"/>
        </t:response>
    </t:test>

	<t:test required="true">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m origid="${account4.msg02.id}" rt="w">
                    <e t="t" a="${account3.name}"/>
                    <su>Fwd: ${msg02.subject}</su>
                    <mp ct="text/plain">
                        <content>${message_content}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:SendMsgResponse/mail:m" attr = "id" set = "account4.forward02.id"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAdmin" value="${account4.server}"/>
	<t:property name="account.name" value="${account4.name}"/>
	<t:property name="account.id" value="${account4.id}"/>
     
	<t:include filename="BackupWorkflowIncrementalDeleteRestore.inc"/> 

	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account4.server}"/>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>   

	<t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>is:replied</query>
            </SearchRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" match="${account4.msg02.id}"/>
        </t:response>
    </t:test>

	<t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>is:forwarded</query>
            </SearchRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" match="${account4.msg02.id}"/>
        </t:response>
    </t:test>
    
    <t:test id="GetTagRequest2">
	 	<t:request>
	  		 <GetTagRequest xmlns="urn:zimbraMail"/>
		 </t:request>
	  	<t:response>
			<t:select path="//mail:CreateTagResponse" attr="id" emptyset="1"/>
			<t:select path="//mail:CreateTagResponse" attr="name" emptyset="1"/>
	 	</t:response>
	</t:test>

</t:test_case>

</t:tests>
