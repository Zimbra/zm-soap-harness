<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}" />
<t:property name="account2.name" value="test${TIME}${COUNTER}@${defaultdomain.name}" />
<t:property name="account3.name" value="test${TIME}${COUNTER}@${defaultdomain.name}" />
<t:property name="account4.name" value="test${TIME}${COUNTER}@${defaultdomain.name}" />
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}" />
<t:property name="msg01.file" value="${testMailRaw.root}/Bugs/72260/bug72260.txt" />
<t:property name="subject.match" value="Moved Go/No To Tomorrow Thursday, 10am" />
	
<t:test_case testcaseid="Ping" type="always">
		<t:objective>basic system check</t:objective>
		<t:test id="ping" required="true">
			<t:request>
				<PingRequest xmlns="urn:zimbraAdmin" />
			</t:request>
			<t:response>
				<t:select path="//admin:PingResponse" />
			</t:response>
		</t:test>
</t:test_case>

<t:test_case testcaseid="acctSetup" type="always">
	<t:objective>Create test accounts</t:objective>
	<t:steps>	1. Login to admin account
					2. Create accounts        
	</t:steps>

	<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
	</t:test>

	<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account1.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id" />
				<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'	set="account1.server" />
			</t:response>
	</t:test>
		
</t:test_case>


<t:test_case testcaseid="bug72260_1" type="smoke" bugids="72260">
	<t:objective>Verify that advanced search query "from:" and "to:" works fine. </t:objective>
	<t:steps>
		1. Inject the message.
		2. Search for "to:kevinh" , "to:afregoso" and "from:Kathy Duran". => Verify message is returned in SearchResponse
	</t:steps>
	
    	<t:mailinjecttest >
        	<t:lmtpInjectRequest>
            	<filename>${msg01.file}</filename>
				<to>${account1.name}</to>
				<from>${account2.name}</from>
				<server>${account1.server}</server>
        	</t:lmtpInjectRequest>
    	</t:mailinjecttest> 
    		 
		<t:property name="server.zimbraAccount" value="${account1.server}"/>
		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>to:"kevinh"</query>
				</SearchRequest>
			</t:request>
	        <t:response>
				<t:select path="//mail:SearchResponse/mail:m/mail:su" equal="${subject.match}" />
				
			</t:response>
		</t:test> 

	 <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>to:"afregoso"</query>
				</SearchRequest>
			</t:request>
	        <t:response>
				<t:select path="//mail:SearchResponse/mail:m/mail:su" equal="${subject.match}" />
				
			</t:response>
		</t:test> 
		
		
		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>to:"kevinh" or to:"afregoso"</query>
				</SearchRequest>
			</t:request>
	        <t:response>
				<t:select path="//mail:SearchResponse/mail:m/mail:su" equal="${subject.match}" />
				
			</t:response>
		</t:test> 
		
		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>from:"Kathy Duran" or to:"afregoso"</query>
				</SearchRequest>
			</t:request>
	        <t:response>
				<t:select path="//mail:SearchResponse/mail:m/mail:su" equal="${subject.match}" />
				
			</t:response>
		</t:test> 
		
		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>to:"mlo"</query>
				</SearchRequest>
			</t:request>
	        <t:response>
				<t:select path="//mail:SearchResponse/mail:m/mail:su" equal="${subject.match}" />
				
			</t:response>
		</t:test> 
		
		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>to:"matt"</query>
				</SearchRequest>
			</t:request>
	        <t:response>
				<t:select path="//mail:SearchResponse/mail:m/mail:su" equal="${subject.match}" />
				
			</t:response>
		</t:test> 
		
		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>to:"mlo" or to:"matt"</query>
				</SearchRequest>
			</t:request>
	        <t:response>
				<t:select path="//mail:SearchResponse/mail:m/mail:su" equal="${subject.match}" />
				
			</t:response>
		</t:test> 
		
		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>from:"Kathy Duran" or to:"mlo"</query>
				</SearchRequest>
			</t:request>
	        <t:response>
				<t:select path="//mail:SearchResponse/mail:m/mail:su" equal="${subject.match}" />			
			</t:response>
		</t:test> 
		
		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>from:"Kathy Duran" or to:"mlo" or to:"matt"</query>
				</SearchRequest>
			</t:request>
	        <t:response>
				<t:select path="//mail:SearchResponse/mail:m/mail:su" equal="${subject.match}" />			
			</t:response>
		</t:test> 
    </t:test_case>
</t:tests>
