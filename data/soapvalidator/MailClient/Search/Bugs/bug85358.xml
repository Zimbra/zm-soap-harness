<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="conv.sometext" value="some text"/>
<t:property name="message.subject1" value="Subject${TIME}.${COUNTER}"/>
<t:property name="message.content1" value="content of the message${TIME}.${COUNTER}"/>
<t:property name="text" value="abcd"/>
<t:property name="test_acct1.server" value="NOT_DEFINED"/>
<t:property name="op.grant"			value="grant"/>
<t:property name="op.read"			value="read"/>
<t:property name="op.unread"		value="!read"/>
<t:property name="op.flag"			value="flag"/>
<t:property name="op.unflag"		value="!flag"/>
<t:property name="op.tag"			value="tag"/>
<t:property name="op.untag"			value="!tag"/>
<t:property name="op.move"			value="move"/>
<t:property name="op.delete"		value="delete"/>

<t:property name="grant.usr"			value="usr"/>
<t:property name="grant.grp"			value="grp"/>
<t:property name="grant.dom"			value="dom"/>
<t:property name="grant.cos"			value="cos"/>
<t:property name="grant.all"			value="all"/>
<t:property name="grant.pub"			value="pub"/>
<t:property name="grant.guest"			value="guest"/>

<t:property name="rights.none"			value=""/>
<t:property name="rights.read"			value="r"/>
<t:property name="rights.write"			value="w"/>
<t:property name="rights.insert"		value="i"/>
<t:property name="rights.delete"		value="d"/>
<t:property name="rights.administer"	value="a"/>
<t:property name="rights.workflow"		value="x"/>
<t:property name="rights.manager"		value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}"/>
<t:property name="view.conversation"	value="conversation"/>
<t:property name="view.message"			value="message"/>
<t:property name="view.contact"			value="contact"/>
<t:property name="view.appointment"		value="appointment"/>
<t:property name="view.note"			value="note"/>

<t:test_case testcaseid="Ping" type="always" >
	<t:objective>basic system check</t:objective>
    
	<t:test id="ping">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="acct_setup" type="always" >
	<t:objective>Create a test account</t:objective>
	<steps> 1. Login to admin account, 2. Create a test_account1 </steps>

	<t:test id="admin_login" required="true" depends="ping">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
        	<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_accountid1.id"/>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="account1.server"/>
        </t:response>
    </t:test>    

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
        	<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_accountid2.id"/>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="account2.server"/>
        </t:response>
    </t:test>
    
</t:test_case>

<t:property name="server.zimbraAccount" value="${account1.server}"/>

<t:test_case testcaseid="bug85358" type="smoke" bugids="85358" >
	<t:objective>login as the test account</t:objective>
	<t:steps> 
        1. Login to account1 
        2. Send a mail to account1
        3. Share inbox with account2
        4. Accept and create the share for account2
        5. View the email in the shared folder and verify the folder id returned        
	</t:steps>
    
	<t:test id="auth1" required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test id="getFolderRequest">
        <t:request>
               <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>              
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="account1.inboxFolder.id"/>
            <t:select path="//mail:folder[@name='${globals.trash}']" attr="id" set="account1.trashFolder.id"/>
            <t:select path="//mail:folder[@name='${globals.sent}']" attr="id" set="account1.sentFolder.id"/>
            <t:select path="//mail:folder[@name='${globals.spam}']" attr="id" set="account1.spamFolder.id"/> 
            <t:select path="//mail:folder[@name='${globals.drafts}']" attr="id" set="account1.draftsFolder.id"/>
        </t:response>
    </t:test>

	<t:test id="sendmail1" required="true">
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="t" a="${account1.name}"/>
					<su> ${message.subject1}</su>
					<mp ct="text/plain">
					<content> ${message.content1}</content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message.id1"/>
		</t:response>
	</t:test>
	
	<t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.inboxFolder.id}" op="grant">
                    <grant d="${account2.name}" gt="${grant.usr}" perm="rwidx"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>
    	
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="folder_root.id"/>
		</t:response>
	</t:test>

	<t:test id="auth1" required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>
	
    <t:test>
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${folder_root.id}" name="sharedfold" view="message" rid="${account1.inboxFolder.id}" zid="${test_accountid1.id}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account1.mount1.id"/>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="zid" set="mounted_folder.id"/>
        </t:response>
    </t:test>
        	
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="conversation" sortBy="dateDesc" offset="0" limit="25">
                <query>in:sharedfold</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:c/mail:m" attr="l" match="${mounted_folder.id}.*"/> 
        </t:response>
    </t:test>

</t:test_case>

</t:tests>