<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_acct.server" value="NOT_DEFINED"/>
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="junkmail.from" value="ibrahimmustapher@yahoo.com"/>
<t:property name="junkmail.subject1" value="Assalamu`Aliakum, From Ibrahim Mustapher,"/>
<t:property name="junkmail.subject2" value="this is test mail"/>

<t:property name="junkuser" value="junkuser.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="junkuser.password" value="${defaultpassword.value}"/>
<t:property name="junkuser.dir" value="${testMailRaw.root}/junk"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>account setup</t:objective>
    <t:steps> 
                1.Admin login
                2.Create test account
                3.Use lmtp inject to inject the message
    </t:steps> 

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
    
    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${junkuser}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="name"  match="${junkuser}"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server1"/>
        </t:response>
    </t:test>  
    
<!-- To verify zimbraJunkMessagesIndexingEnabled is true -->
	<t:test>
		<t:request xmlns="urn:zimbraAdmin">
			<GetCosRequest>
				<cos by="name">default</cos>
			</GetCosRequest>
		</t:request>
		<t:response>
            <t:select path='//admin:GetCosResponse/admin:cos/admin:a[@n="zimbraJunkMessagesIndexingEnabled"]' match="${globals.true}"/>
		</t:response>
	</t:test>

</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct.server1}"/>

<t:test_case testcaseid="SearchJunkRequest01" type="smoke" bugids="23573">
    <t:objective> Create setup for the Search Request </t:objective>
    <t:steps>1. Login to the account.
             2. Modify the Prefs to include Trash and Spam in search result.
             3. Search mails to get the message-ids
    </t:steps>

    <t:test id="login" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${junkuser}</account>
                <password>${junkuser.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
     <t:test id="modifyPrefsRequest">
        <t:request>
            <ModifyPrefsRequest xmlns="urn:zimbraAccount">
                <pref name="zimbraPrefIncludeSpamInSearch">${globals.true}</pref>
                <pref name="zimbraPrefIncludeTrashInSearch">${globals.true}</pref>
            </ModifyPrefsRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:ModifyPrefsResponse"/>
        </t:response>
    </t:test>
	
	<t:mailinjecttest>
        <t:lmtpInjectRequest>
		    <foldername>${junkuser.dir}</foldername>
		    <to>${junkuser}</to>
		    <from>${nonZimbraUser.name}</from>
		    <server>${test_acct.server1}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

    <t:test id="searchRequest1">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>in:junk from:(${junkmail.from})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
				<t:select attr="su" match="^${junkmail.subject1}$" emptyset="0"/>
			</t:select>
        </t:response>
    </t:test>

	<t:test id="searchRequest2">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${junkmail.subject2})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
				<t:select attr="su" match="^${junkmail.subject2}$" emptyset="0"/>
			</t:select>
        </t:response>
    </t:test>
</t:test_case> 

</t:tests>

