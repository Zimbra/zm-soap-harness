<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="task_backup.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="task_backup.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="task_backup.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.name" value="task_backup.${TIME}.${COUNTER}@${defaultdomain.name}"/>
	  
<t:property name="task.subject" value="Subject of task_backup meeting${TIME}.${COUNTER}"/>
<t:property name="task.content" value="Content of the task_backup message${TIME}.${COUNTER}"/>

<t:property name="task.newsubject" value="New Sub task_backup meeting${TIME}.${COUNTER}"/>
<t:property name="task.newcontent" value="New Cont task_backup meeting${TIME}.${COUNTER}"/>

<t:property name="Time1" value="${ICALTIME(+30m)}"/>
<t:property name="Time2" value="${ICALTIME(+1h)}"/>
<t:property name="Time3" value="${ICALTIME(+1d)}"/>
<t:property name="Time4" value="${ICALTIME(+1d)}"/>

<t:property name="TimeRangeStart" value="${TIME}"/>
<t:property name="TimeRangeFinish" value="${TIME(+2d)}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>


    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct_setup_Task_Backup" type="always" >
    <t:objective>Create test accounts</t:objective>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid="Task_Backup_01" type="smoke" areas="backup,nonappliance">
    <t:objective>Verify that after backup and restore an account with a Task, account and Task is restored. </t:objective>
    <t:steps>
			1. Login into account1.
			2. Create a Task.
			3. Delete the account.
			4. Restore the account.
			5. Verify the Task.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.tasks}']" attr="id" set="account1.folder.task.id"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
	        <CreateTaskRequest xmlns="urn:zimbraMail">
				<m l="${account1.folder.task.id}">
					<inv method="REQUEST">
						<comp priority="1" percentComplete="50" status="INPR" allDay="0" name="${task.subject}">
							<s d="${Time1}"/>
							<e d="${Time2}"/>
							<or a="${account1.name}"/>
							<at role="REQ" ptst="NE" rsvp="1" a="${account2.name}"/>
						</comp>
					</inv>
					<mp ct="text/plain">
    					<content>${task.content}</content>
					</mp>
					<su>${task.subject}</su>
					<e a="${account2.name}" t="t"/>
				</m>
	        </CreateTaskRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:CreateTaskResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAdmin" value="${account1.server}"/>
	<t:property name="account.name" value="${account1.name}"/>
	<t:property name="account.id" value="${account1.id}"/>
    
	<t:include filename="BackupWorkflowFullDeleteRestore.inc"/> 

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
	       <GetTaskSummariesRequest xmlns="urn:zimbraMail" s="${TimeRangeStart}" e="${TimeRangeFinish}"/>
		</t:request>
		<t:response>
	        <t:select path="//mail:GetTaskSummariesResponse/mail:task/mail:fr" match ="${task.content}"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="Task_Backup_02" type="smoke" areas="backup,nonappliance">
    <t:objective>Backup (incremental) and restore an account with a Task. Verify that after backup and restore the correct Task is restored </t:objective>
    <t:steps>
			1. Login into account3.
			2. Create a Task.
			3. Backup the account.
			4. Modify the Task.
			5. Do incremental backup
			6. Delete the account.
			7. Restore the account.
			8. Verify the modified Task displayed.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.tasks}']" attr="id" set="account3.folder.task.id"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
	        <CreateTaskRequest xmlns="urn:zimbraMail">
				<m l="${account3.folder.task.id}">
					<inv method="REQUEST">
						<comp priority="1" percentComplete="50" status="INPR" allDay="0" name="${task.subject}">
							<s d="${Time1}"/>
							<e d="${Time2}"/>
							<or a="${account3.name}"/>
							<at role="REQ" ptst="NE" rsvp="1" a="${account4.name}"/>
						</comp>
					</inv>
					<mp ct="text/plain">
    					<content>${task.content}</content>
					</mp>
					<su>${task.subject}</su>
					<e a="${account3.name}" t="t"/>
				</m>
	        </CreateTaskRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:CreateTaskResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAdmin" value="${account3.server}"/>
	<t:property name="account.name" value="${account3.name}"/>
	<t:property name="account.id" value="${account3.id}"/>
     
    
	<t:include filename="BackupRequestFullBasic.inc"/> 
 	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
        <t:request>
            <GetTaskSummariesRequest xmlns="urn:zimbraMail" s="${TimeRangeStart}" e="${TimeRangeFinish}"/>
        </t:request>
        <t:response>
            <t:select path = "//mail:GetTaskSummariesResponse/mail:task[@name='${task.subject}']" attr="invId" set="task1.id"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
	        <ModifyTaskRequest xmlns="urn:zimbraMail" id="${task1.id}">
				<m >
					<inv method="REQUEST">
						<comp priority="1" percentComplete="50" status="INPR" allDay="0" name="${task.newsubject}">
							<s d="${Time1}"/>
							<e d="${Time2}"/>
							<or a="${account3.name}"/>
							<at role="REQ" ptst="NE" rsvp="1" a="${account4.name}"/>
						</comp>
					</inv>
					<mp ct="text/plain">
    					<content>${task.newcontent}</content>
					</mp>
					<su>${task.newsubject}</su>
					<e a="${account3.name}" t="t"/>
				</m>
	        </ModifyTaskRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:ModifyTaskResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAdmin" value="${account3.server}"/>
	<t:property name="account.name" value="${account3.name}"/>
	<t:property name="account.id" value="${account3.id}"/>
     
    
	<t:include filename="BackupWorkflowIncrementalDeleteRestore.inc"/> 
 	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
	       <GetTaskSummariesRequest xmlns="urn:zimbraMail" s="${TimeRangeStart}" e="${TimeRangeFinish}"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetTaskSummariesResponse/mail:task/mail:fr" match ="${task.newcontent}"/> 
		</t:response>
	</t:test>

</t:test_case>
 
</t:tests>