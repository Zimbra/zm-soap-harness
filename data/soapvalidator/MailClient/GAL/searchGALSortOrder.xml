<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:property name="gal01.domain.name" value="gal.domain01.${TIME}.${COUNTER}.${defaultdomain.name}"/>

<t:property name="account1.name" value="test.${TIME}.${COUNTER}@${gal01.domain.name}"/>
<t:property name="account2.name" value="cname.${TIME}.${COUNTER}@${gal01.domain.name}"/>
<t:property name="account3.name" value="aname.${TIME}.${COUNTER}@${gal01.domain.name}"/>
<t:property name="account4.name" value="bname.${TIME}.${COUNTER}@${gal01.domain.name}"/>



<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Create two test account</t:objective>
    <steps>1. Login to admin account  
        2. Create the domains
        3. Create a test accounts 
    </steps>

    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="createDomainRequest1" required="true">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${gal01.domain.name}</name>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="gal01.domain.id"/>            
        </t:response>
    </t:test>
    
    
    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>               
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
                <password>${defaultpassword.value}</password>               
				<a n="displayName">CFirst CLast</a>
				<a n="givenName">CFirst</a>
				<a n="sn">CLast</a>
			</CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account3.name}</name>
                <password>${defaultpassword.value}</password>               
				<a n="displayName">AFirst ALast</a>
				<a n="givenName">AFirst</a>
				<a n="sn">ALast</a>
			</CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account4.name}</name>
                <password>${defaultpassword.value}</password>               
				<a n="displayName">BFirst BLast</a>
				<a n="givenName">BFirst</a>
				<a n="sn">BLast</a>
			</CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse"/>
        </t:response>
    </t:test>
    
    
</t:test_case>

<t:test_case testcaseid="SearchGalSortOrder_01" type="deprecated" bugids="9179" >
    <t:objective>Verify that the GAL Search response is sorted</t:objective>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="auth1" required="true">
        <t:request>
        	<AuthRequest xmlns="urn:zimbraAccount">
	            <account by="name">${account1.name}</account>
	            <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test id="SearchGal1">
        <t:request>
            <SearchGalRequest xmlns="urn:zimbraAccount">
                <name >.</name>
            </SearchGalRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:SearchGalResponse">
            	<t:select path="//acct:cn[1]/acct:a[@n='email']" match="${account3.name}"/>
            	<t:select path="//acct:cn[2]/acct:a[@n='email']" match="${account4.name}"/>
            	<t:select path="//acct:cn[3]/acct:a[@n='email']" match="${account2.name}"/>
            </t:select>                        
        </t:response>
    </t:test>

</t:test_case>



</t:tests>
