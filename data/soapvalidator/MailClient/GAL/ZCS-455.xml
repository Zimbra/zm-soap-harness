<t:tests xmlns:t="urn:zimbraTestHarness">
    <t:property name="domain_name" value="new.domain.local" />
    <t:property name="domain2_name" value="new.domain2.local" />
    <t:property name="account1.name" value="test${TIME}${COUNTER}@${domain_name}"/>
    <t:property name="account2.name" value="test2${TIME}${COUNTER}@${domain2_name}"/>
    <t:property name="domain2.galdatasource1.name" value="datasource${TIME}${COUNTER}"/>
    <t:property name="domain2.galdatasource2.name" value="ds${TIME}${COUNTER}"/>
    <t:property name="domain2.galsync.name" value="galsync@${domain2_name}"/>
    <t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test_case testcaseid="AcctSetup1_filters_save" type="always" >
        <t:objective>create domain and test account</t:objective>
        <t:test required="true" >
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
            </t:response>
        </t:test>
        <!-- create domain 1 -->
            <t:test required="true">
                <t:request>
                    <CreateDomainRequest xmlns="urn:zimbraAdmin">
                        <name>${domain_name}</name>
                    </CreateDomainRequest>
                </t:request>
                <t:response>
                    <t:select path="//admin:CreateDomainResponse//admin:domain"
                        attr="id" set="domain1.id" />
                </t:response>
            </t:test>
        <!-- create account on domain 1 -->
        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${account1.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                    <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
                    <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
            </t:response>
        </t:test>

        <!-- create domain 2 -->
        <t:test required="true" >
            <t:request>
                <CreateDomainRequest xmlns="urn:zimbraAdmin">
                    <name>${domain2_name}</name>
                    <a n="zimbraGalMode">zimbra</a>
                    <a n="zimbraGalMaxResults">100</a>
                </CreateDomainRequest>
            </t:request>
            <t:response>
                    <t:select path="//admin:CreateDomainResponse//admin:domain"
                        attr="id" set="domain2.id" />
            </t:response>
        </t:test>
        <!-- create and add galsync account on domain2 -->
        <t:test >
            <t:request>
                <CreateGalSyncAccountRequest xmlns="urn:zimbraAdmin" name="${domain2.galdatasource1.name}" type="zimbra" domain="${domain2_name}" server="${server.zimbraAdmin}">
                    <account by="name">${domain2.galsync.name}</account>
                </CreateGalSyncAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateGalSyncAccountResponse/admin:account" attr="id" set="domain2.galaccount.id"/>
            </t:response>
        </t:test>  
        <t:test >
            <t:request>
                <AddGalSyncDataSourceRequest xmlns="urn:zimbraAdmin" name="${domain2.galdatasource2.name}" type="zimbra" domain="${domain2_name}" server="${server.zimbraAdmin}" folder="${domain2.galdatasource2.name}">
                    <account by="name">${domain2.galsync.name}</account>
                </AddGalSyncDataSourceRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AddGalSyncDataSourceResponse/admin:account" attr="id" match="${domain2.galaccount.id}"/>
            </t:response>
        </t:test>
        <!-- create account on domain 2 -->
        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${account2.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                    <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
                    <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="SearchGalRequest_1" type="smoke" bugids="ZCS-455" >
        <t:objective>
            1. Do SearchGalRequest without galsync account
        </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${account1.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>
        <!-- with search text -->
        <t:test>
            <t:request>
                <SearchGalRequest xmlns="urn:zimbraAccount">
                    <name>${account1.name}</name>
                </SearchGalRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" match="${account1.name}"/>
            </t:response>
        </t:test>
        <!-- without search text -->
        <t:test>
            <t:request>
                <SearchGalRequest xmlns="urn:zimbraAccount">
                    <name></name>
                </SearchGalRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" match="${account1.name}"/>
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="SearchGalRequest_2" type="smoke" bugids="ZCS-455" >
        <t:objective>
            1. Do SearchGalRequest with galsync account
        </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${account2.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>
        <!-- with search text -->
        <t:test>
            <t:request>
                <SearchGalRequest xmlns="urn:zimbraAccount">
                    <name>${account2.name}</name>
                </SearchGalRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" match="${account2.name}"/>
            </t:response>
        </t:test>
        <!-- without search text -->
        <t:test>
            <t:request>
                <SearchGalRequest xmlns="urn:zimbraAccount">
                    <name></name>
                </SearchGalRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" match="${account2.name}"/>
            </t:response>
        </t:test>
    </t:test_case>

    <!-- clean up -->
    <t:finally>
        <t:test id="admin_login" required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>
        <!-- delete accounts -->
        <t:test required="false">
            <t:request>
                <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account1.id}</id>
                </DeleteAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:DeleteAccountResponse" />
            </t:response>
        </t:test>
        <t:test required="false">
            <t:request>
                <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${account2.id}</id>
                </DeleteAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:DeleteAccountResponse" />
            </t:response>
        </t:test>
        <!-- delete galsync account -->
        <t:test >
            <t:request>
                <DeleteGalSyncAccountRequest xmlns="urn:zimbraAdmin">
                    <account by="name">${domain2.galsync.name}</account>
                </DeleteGalSyncAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:DeleteGalSyncAccountResponse"/>
            </t:response>
        </t:test>
        <!-- delete domain -->
        <t:test>
            <t:request>
                <DeleteDomainRequest xmlns="urn:zimbraAdmin">
                    <id>${domain1.id}</id>
                </DeleteDomainRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:DeleteDomainResponse" />
            </t:response>
        </t:test>
        <t:test>
            <t:request>
                <DeleteDomainRequest xmlns="urn:zimbraAdmin">
                    <id>${domain2.id}</id>
                </DeleteDomainRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:DeleteDomainResponse" />
            </t:response>
        </t:test>
        </t:finally>
</t:tests>