<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test1${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
         <t:response>
             <t:select path="//admin:PingResponse"/>
         </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="AcctSetup1_filters_save" type="always" >
    <t:objective>create test accounts</t:objective>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
	    <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
	    </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="Bug56019" type="bhr" bugids="56019" >
    <t:objective>Filter on special character in message body.</t:objective>
    <t:steps>
    1. Login as user1
    2. Create filter if body contains André flag the message
    3. inject mime having body base64 encoded and contains André
    4. verify message get flagged.
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="filter1.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter1.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="filter1.body" value="André"/>	
	
    <t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter1.name}" active="1">
						<filterTests condition="anyof">
							  <bodyTest value="${filter1.body}" />
						</filterTests>
						<filterActions>
							<actionFlag flagName="flagged" />
							<actionStop />
						</filterActions> 
						</filterRule>                           
					</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="msg01.file" value="${testMailRaw.root}/bug56019/bug56019.txt" />

	<t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
			<to>${account1.name}</to>
			<from>filter@testfilter.com</from>
			<server>${account1.server}</server>
			<modify>
                <header a="Subject">${filter1.subject}</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>	

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${filter1.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${filter1.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="f" match=".*f.*"/>
        </t:response>
    </t:test>	   
</t:test_case>

</t:tests>

