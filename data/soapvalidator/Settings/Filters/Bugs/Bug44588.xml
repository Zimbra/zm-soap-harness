<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="folder.name" value="folder.${TIME}.${COUNTER}"/>
<t:property name="filter1.subject" value="subject.${TIME}.${COUNTER}"/>
<t:property name="filter1.name" value="filterName.${TIME}.${COUNTER}"/>
<t:property name="tag.color.default" value="5"/>
<t:property name="tag1.name" value="tag${TIME}${COUNTER}"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
         <t:response>
             <t:select path="//admin:PingResponse"/>
         </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="AcctSetup1_filters" type="always" >
    <t:objective>create test accounts</t:objective>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
	    <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
	    </t:response>
    </t:test>

   <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
	    </t:response>
    </t:test>
</t:test_case>

    <t:test_case testcaseid="Bug444588_01" type="bhr" bugids="44588">
    <t:objective>Bug with filter actions not processing after a move action</t:objective>
    <t:steps>
            1. Login to account1.
            2. Create a folder
	    	3. Add message to the folder
			4. Create filter that applies to the message to move in the folder
			5. RUn the filter, message moves in folder
			6. Modify filter to tag it with "Importat"
           	7. Run the filter. Message should be tagged.
    </t:steps>

    <t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
               <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>              
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="account1.folder.inbox.id"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder.name}" l="${account1.folder.inbox.id}" view="message"/>
	    </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder.id"/>
        </t:response>
     </t:test>

     <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account1.folder.inbox.id}">
                    <content>From: foo@foo.com 
To: foo@foo.com 
Subject: ${filter1.subject}
MIME-Version: 1.0 
Content-Type: text/plain; charset=utf-8 
Content-Transfer-Encoding: 7bit

simple text string in the body


</content>
                </m>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="message1.id"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter1.name}" active="1">
						<filterTests condition="anyof">
							<headerTest header="Subject" stringComparison="contains" value="${filter1.subject}" />
						</filterTests>
						<filterActions>
							<actionFileInto folderPath="${globals.inbox}/${folder.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

    <t:test>
	<t:request>
	     <ApplyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter1.name}"/>                                  
				</filterRules>
				<query>in:"${globals.inbox}"</query>
            </ApplyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ApplyFilterRulesResponse"/>
        </t:response>
    </t:test>


	<t:test >
        <t:request>
            <CreateTagRequest xmlns="urn:zimbraMail">
	            <tag name="${tag1.name}" color="${tag.color.default}"/>
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTagResponse/mail:tag">
	        <t:select attr="id" set="tag.id"/>
	        <t:select attr="color" match="${tag.color.default}"/>
            </t:select>
        </t:response>
    </t:test>

  
    <t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter1.name}" active="1">
						<filterTests condition="anyof">
							<headerTest header="Subject" stringComparison="contains" value="${filter1.subject}" />
						</filterTests>
						<filterActions>
							<actionFileInto folderPath="${globals.inbox}/${folder.name}" />
							<actionTag tagName="${tag1.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

    <t:test>
	<t:request>
	     <ApplyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter1.name}"/>                                  
				</filterRules>
				<query>in:"${globals.inbox}/${folder.name}"</query>
            </ApplyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ApplyFilterRulesResponse/mail:m" attr="ids" set="message1.move.id"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetMsgRequest xmlns="urn:zimbraMail">
				<m id="${message1.move.id}" />
			</GetMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GetMsgResponse">
				<t:select path="//mail:m" attr="l" match="${folder.id}"/>
				<t:select path="//mail:m" attr="t" match="${tag.id}"/>
			</t:select>
		</t:response>
	</t:test>
	


</t:test_case>


</t:tests>

