<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain1.name" value="dom${TIME}${COUNTER}.com"/>
<t:property name="domain2.name" value="DOM${TIME}${COUNTER}.com"/>

<t:property name="account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="TEST@${domain2.name}"/>
<t:property name="account3.name" value="test@${domain1.name}"/>
<t:property name="account4.name" value="Receiver@${domain1.name}"/>
<t:property name="account5.name" value="CaseSensitive${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account6.name" value="casesensitive${TIME}${COUNTER}@${defaultdomain.name}"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="root" value="${soapxml.root}/Mail/LMTP/MimeBasic/"/>
<t:property name="msg01.file" value="${root}/lmtp-basic01.txt"/>

<t:test_case testcaseid="AcctSetup_Filtering-addressTest" type="always" >
    <t:objective>create test accounts</t:objective>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
	    <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="CreateDomainRequest1a">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain1.name}</name>
                <a n="description">${domain1.name}</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain.id1"/>            
        </t:response>
    </t:test>
    
    <t:test id="CreateDomainRequest1b">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain2.name}</name>
                <a n="description">${domain2.name}</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain.id2"/>            
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
	    </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
	    </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
	    </t:response>
    </t:test>
    
	 <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
	    </t:response>
    </t:test>
    
     <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account5.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account5.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account5.server"/>
	    </t:response>
    </t:test>
    
     <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account6.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account6.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account6.server"/>
	    </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="Filtering-addressTest_01" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=flag is done for case sensitive match for From field which contains "Display name" and email address </t:objective>
    <t:steps> 
    	1. Create filter with Action Flag for case sensitive From field 
    	2. Inject a message with a From field in the form "Display name" with email address  
    	3. Verify message is flagged.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="filter1.name" value="filter${TIME}${COUNTER}"/>
	<!-- case sensitive = cs -->
	<t:property name="timecounter" value="${TIME}${COUNTER}"/>
	<t:property name="filter1.subject" value="filter${timecounter}"/>
	<t:property name="filter1.subject.cs" value="FILTER${timecounter}"/>	
	
		<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter1.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="From" stringComparison="is" caseSensitive="1" value="${account2.name}" part="all" />
						</filterTests>
						<filterActions>
							<actionFlag flagName="flagged"/>
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>
		
    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
			<to>${account1.name}</to>
			<from>${account2.name}</from>
			<server>${account2.server}</server>
            <modify>
                <header a="From">Display Name &lt;${account2.name}&gt;</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
	
	<t:waitforpostfixqueue/>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>    

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>from:${account2.name}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="f" match=".*f.*"/>
        </t:response>
    </t:test>
    
 </t:test_case>

<t:test_case testcaseid="Filtering-addressTest_02" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for case sesitive match for local part of From field</t:objective>
    <t:steps> 
    	1. Create filter with Action file into folder for case sensitive match for local part of From field.
    	2. Receive two  messages from two users which contains same local part(uppercase and lowercase) 
    	3. Verify one message is in the folder.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder1.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder1.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder1.id"/>            
        </t:response>
	</t:test>

	<t:property name="filter2.name" value="filter${TIME}${COUNTER}"/>
	<!-- case sensitive = cs -->
	<t:property name="filter2.subject" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter3.subject" value="filter${TIME}${COUNTER}"/>	
	<t:property name="sender.personal.name" value="firstname"/>
	<t:property name="sender.personal.name.cs" value="FirstName"/>
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter2.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="From" part="localpart" stringComparison="contains" caseSensitive="1" value="TEST" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder1.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account1.name}'/>
					<e t="f" a='${account2.name}' p="${sender.personal.name.cs}"/>
					<su>${filter2.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
	<t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account1.name}'/>
					<e t="f" a='${account3.name}' p="${sender.personal.name}"/>
					<su>${filter3.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>
	
	<t:waitforpostfixqueue/>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:${folder1.name}</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter2.subject}"/>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter3.subject}" emptyset="1"/>
		</t:response>
    </t:test>
    
 </t:test_case>


<t:test_case testcaseid="Filtering-addressTest_03" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for non-case sesitive match for local part of From field </t:objective>
    <t:steps> 
    		1. Create filter with Action file into folder for non case-sensitive local part of from field.
    		2. Receive two  messages from two users which contains same local part(uppercase and lowercase) 
   			3. Verify both messages are in the folder.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account4.server}"/>
	
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder2.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder2.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder2.id"/>            
        </t:response>
	</t:test>

	<t:property name="filter3.name" value="filter${TIME}${COUNTER}"/>
	<!-- case sensitive = cs -->
	<t:property name="filter4.subject" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter5.subject" value="filter${TIME}${COUNTER}"/>	
	<t:property name="sender.personal.name" value="firstname"/>
	<t:property name="sender.personal.name.cs" value="FirstName"/>
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter3.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="From" part="localpart" stringComparison="contains" caseSensitive="0" value="TEST" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder2.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account4.name}'/>
					<e t="f" a='${account2.name}' p="${sender.personal.name.cs}"/>
					<su>${filter4.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>
	
	<t:property name="server.zimbraAccount" value="${account3.server}"/>	
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
	<t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account4.name}'/>
					<e t="f" a='${account3.name}' p="${sender.personal.name}"/>
					<su>${filter5.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>
	
	<t:waitforpostfixqueue/>
	<t:property name="server.zimbraAccount" value="${account4.server}"/>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:${folder2.name}</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter4.subject}"/>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter5.subject}" />
		</t:response>
    </t:test>
    
 </t:test_case>
 
 <t:test_case testcaseid="Filtering-addressTest_04" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for non-case sesitive match for local part of CC field</t:objective>
    <t:steps>
    	 1. Create filter with Action file into folder for non-case sensitive of localpart of CC field.
    	 2. Receive two  messages with  two CC users which contains same local part(uppercase and lowercase) 
    	 3. Verify messages are in folder.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account4.server}"/>
	
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder3.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder3.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder3.id"/>            
        </t:response>
	</t:test>

	<t:property name="filter4.name" value="filter${TIME}${COUNTER}"/>
	<!-- case sensitive = cs -->
	<t:property name="filter6.subject" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter7.subject" value="filter${TIME}${COUNTER}"/>	
	<t:property name="sender.personal.name" value="firstname"/>
	<t:property name="sender.personal.name.cs" value="FirstName"/>
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter4.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="CC" part="localpart" stringComparison="contains" caseSensitive="0" value="CaseSensitive" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder3.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account4.name}'/>
					<e t="c" a='${account5.name}'/>
					<e t="f" a='${account2.name}' p="${sender.personal.name.cs}"/>
					<su>${filter6.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
     
	<t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account4.name}'/>
					<e t="c" a='${account6.name}'/>
					<e t="f" a='${account3.name}' p="${sender.personal.name}"/>
					<su>${filter7.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>
	
	<t:waitforpostfixqueue/>
	<t:property name="server.zimbraAccount" value="${account4.server}"/>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:${folder3.name}</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter6.subject}"/>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter7.subject}" />
		</t:response>
    </t:test>
    
 </t:test_case>
 
 <t:test_case testcaseid="Filtering-addressTest_05" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for case sesitive match for local part of CC field</t:objective>
    <t:steps> 
    	1. Create filter with Action file into folder for case sensitive localpart of CC field.
    	2. Receive two  messages with  two CC users which contains same local part(uppercase and lowercase) 
    	3. Verify one message is in folder.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account4.server}"/>
	
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder4.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder4.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder4.id"/>            
        </t:response>
	</t:test>

	<t:property name="filter5.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter8.subject" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter9.subject" value="filter${TIME}${COUNTER}"/>	
	<t:property name="sender.personal.name" value="firstname"/>
	<t:property name="sender.personal.name.cs" value="FirstName"/>
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter5.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="CC" part="localpart" stringComparison="contains" caseSensitive="1" value="CaseSensitive" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder4.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account4.name}'/>
					<e t="c" a='${account5.name}'/>
					<e t="f" a='${account2.name}' p="${sender.personal.name.cs}"/>
					<su>${filter8.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
	<t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account4.name}'/>
					<e t="c" a='${account6.name}'/>
					<e t="f" a='${account3.name}' p="${sender.personal.name}"/>
					<su>${filter9.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>
	
	<t:waitforpostfixqueue/>
	<t:property name="server.zimbraAccount" value="${account4.server}"/>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:${folder4.name}</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter8.subject}"/>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter9.subject}" emptyset="1" />
		</t:response>
    </t:test>
    
 </t:test_case>
 
 <t:test_case testcaseid="Filtering-addressTest_06" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for non-case sesitive match for local part To field</t:objective>
    <t:steps> 
    	1. Create filter with Action file into folder for non-case sensitive(lower-case) local part of To field.
    	2. Receive a message with To field starting with Upper case letter
    	3. Verify message is in folder.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account4.server}"/>
	
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder5.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder5.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder5.id"/>            
        </t:response>
	</t:test>

	<t:property name="filter6.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter10.subject" value="filter${TIME}${COUNTER}"/>	
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter6.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="To" part="localpart" stringComparison="contains" caseSensitive="0" value="receiver" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder5.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account4.name}'/>					
					<e t="f" a='${account2.name}'/>
					<su>${filter10.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>	
	
	<t:waitforpostfixqueue/>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:${folder5.name}</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter10.subject}"/>				
		</t:response>
    </t:test>
    
 </t:test_case>
 
 <t:test_case testcaseid="Filtering-addressTest_07" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for case sesitive match for localpart of To field</t:objective>
    <t:steps>
    	 1. Create filter with Action file into folder for case sensitive(lowecase) of local part for To field.
    	 2. Receive a message with To field starting with Upper case letter
    	 3. Verify message is not in folder.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account4.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder7.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder7.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder7.id"/>            
        </t:response>
	</t:test>

	<t:property name="filter7.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter11.subject" value="filter${TIME}${COUNTER}"/>
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter7.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="To" part="localpart" stringComparison="contains" caseSensitive="1" value="receiver" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder7.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account4.name}'/>					
					<e t="f" a='${account2.name}'/>
					<su>${filter11.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>	
	
	<t:waitforpostfixqueue/>
	<t:property name="server.zimbraAccount" value="${account4.server}"/>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:${folder7.name}</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter11.subject}" emptyset="1"/>				
		</t:response>
    </t:test>
    
 </t:test_case>
 
 
 <t:test_case testcaseid="Filtering-addressTest_08" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for case sensitive match for whole From field</t:objective>
    <t:steps> 
    	1. Create filter with Action file into folder for case sensitive(lowercase) whole from field.
    	2. Receive a message with from field which contain(upper and lower case letter)
   		3. Verify message is not in the folder.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder8.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder8.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder"/>            
        </t:response>
	</t:test>

	<t:property name="filter8.name" value="filter${TIME}${COUNTER}"/>
	<!-- case sensitive = cs -->
	<t:property name="filter12.subject" value="filter${TIME}${COUNTER}"/>
	
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter8.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="From" part="all" stringComparison="matches" caseSensitive="1" value="test@${domain2.name}" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder8.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account1.name}'/>
					<e t="f" a='${account2.name}'/>
					<su>${filter12.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>	
	
	<t:waitforpostfixqueue/>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:${folder8.name}</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter12.subject}" emptyset="1"/>
		</t:response>
    </t:test>
    
 </t:test_case>
 
  
 <t:test_case testcaseid="Filtering-addressTest_09" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for non-case sensitive match for whole From field</t:objective>
    <t:steps> 
    	1. Create filter with Action file into folder for non-case sensitive(lowercase) whole from field.
    	2. Receive a message with from field which contain(upper and lower case letter).
    	3. Verify message is in the folder.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder9.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder9.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder"/>            
        </t:response>
	</t:test>

	<t:property name="filter9.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter13.subject" value="filter${TIME}${COUNTER}"/>
		
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter9.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="From" part="all" stringComparison="contains" caseSensitive="0" value="test@${domain2.name}" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder9.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account1.name}'/>
					<e t="f" a='${account2.name}'/>
					<su>${filter13.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>
	
	<t:waitforpostfixqueue/>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>in:${folder9.name}</query>
				</SearchRequest>
			</t:request>
	        <t:response>
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter13.subject}" />
			</t:response>
    </t:test>
    
 </t:test_case>
 
  
 <t:test_case testcaseid="Filtering-addressTest_10" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for case sensitive match of whole 'To' field</t:objective>
    <t:steps> 
    	1. Create filter with Action file into folder for case sensitive(lowercase) of whole 'To' field.
    	2. Receive a message with To field which contains upper and lower case letter.
    	3. Verify message is not in the folder.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account2.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder10.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder10.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder"/>            
        </t:response>
	</t:test>

	<t:property name="filter10.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter14.subject" value="filter${TIME}${COUNTER}"/>	
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter10.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="To" part="all" stringComparison="contains" caseSensitive="1" value="test@${domain2.name}" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder10.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account2.name}'/>
					<e t="f" a='${account1.name}'/>
					<su>${filter14.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>	
	
	<t:waitforpostfixqueue/>
	
	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:${folder10.name}</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter14.subject}" emptyset="1"/>
		</t:response>
    </t:test>
    
 </t:test_case> 
 
  
 <t:test_case testcaseid="Filtering-addressTest_11" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for non-case sensitive match for whole To field</t:objective>
    <t:steps> 
    	1. Create filter with Action file into folder for noncase sensitive(lowercase) for the whole 'To' field.
    	2. Receive a message with To field which contains upper and lower case letter.
    	3. Verify message is in the folder.   
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account2.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder11.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder11.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder"/>            
        </t:response>
	</t:test>

	<t:property name="filter11.name" value="filter${TIME}${COUNTER}"/>	
	<t:property name="filter15.subject" value="filter${TIME}${COUNTER}"/>	
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter11.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="To" part="all" stringComparison="matches" caseSensitive="0" value="test@${domain2.name}" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder11.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account2.name}'/>
					<e t="f" a='${account1.name}'/>
					<su>${filter15.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>	
	
	<t:waitforpostfixqueue/>
	
	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:${folder11.name}</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter15.subject}"/>
		</t:response>
    </t:test>
    
 </t:test_case>
 
 <t:test_case testcaseid="Filtering-addressTest_12" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for case sensitive match of whole CC field</t:objective>
    <t:steps> 
    	1. Create filter with Action file into folder for case sensitive(lowercase) of whole CC field.
    	2. Receive a message with CC field which contains upper and lower case letter.
    	3. Verify message is not in the folder.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account2.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder12.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder12.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder"/>            
        </t:response>
	</t:test>

	<t:property name="filter12.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter16.subject" value="filter${TIME}${COUNTER}"/>	
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter12.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="CC" part="all" stringComparison="contains" caseSensitive="1" value="Test@${domain1.name}" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder12.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account2.name}'/>
					<e t="c" a='${account3.name}'/>
					<e t="f" a='${account1.name}'/>
					<su>${filter16.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>	
	
	<t:waitforpostfixqueue/>
	
	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:${folder12.name}</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter16.subject}" emptyset="1"/>
		</t:response>
    </t:test>
    
 </t:test_case>
 
 
 <t:test_case testcaseid="Filtering-addressTest_13" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for non-case sensitive match of whole 'CC' field</t:objective>
    <t:steps> 
    	1. Create filter with Action file into folder for non-case sensitive(lowercase) of whole 'CC' field.
    	2. Receive a message with CC field which contains upper and lower case letter.
    	3. Verify message is in the folder.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account2.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder13.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder13.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder"/>            
        </t:response>
	</t:test>

	<t:property name="filter13.name" value="filter${TIME}${COUNTER}"/>	
	<t:property name="filter17.subject" value="filter${TIME}${COUNTER}"/>
		
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter13.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="CC" part="all" stringComparison="is" caseSensitive="0" value="Test@${domain1.name}" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder13.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account2.name}'/>
					<e t="c" a='${account3.name}'/>
					<e t="f" a='${account1.name}'/>
					<su>${filter17.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>	
	
	<t:waitforpostfixqueue/>
	
	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:${folder13.name}</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter17.subject}"/>
		</t:response>
    </t:test>
    
 </t:test_case>
 
 <t:test_case testcaseid="Filtering-addressTest_14" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for case sensitive match doamin part of From field</t:objective>
    <t:steps> 
    	1. Create filter with Action file into folder for case sensitive domain part of From field.
    	2. Receive a message with From field which contains upper and lower case letter in domain part.
    	3. Verify message is not in the folder because domain part is not case sensitive.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder14.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder14.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder"/>            
        </t:response>
	</t:test>

	<t:property name="filter14.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter18.subject" value="filter${TIME}${COUNTER}"/>	
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter14.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="From" part="domain" stringComparison="contains" caseSensitive="1" value="dom" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder14.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account1.name}'/>
					<e t="f" a='${account2.name}'/>
					<su>${filter18.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>	
	
	<t:waitforpostfixqueue/>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:${folder14.name}</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter18.subject}"/>
		</t:response>
    </t:test>
    
 </t:test_case>
 
 <t:test_case testcaseid="Filtering-addressTest_15" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for non-case sensitive doamin part match of From field</t:objective>
    <t:steps> 
    	1. Create filter with Action file into folder for non-case sensitive domain part of From field.
    	2. Receive a message with From field which contains upper and lower case letter in domain part.    	
    	3. Verify message is in the folder.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder15.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder15.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder"/>            
        </t:response>
	</t:test>

	<t:property name="filter15.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter19.subject" value="filter${TIME}${COUNTER}"/>
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter15.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="From" part="domain" stringComparison="contains" caseSensitive="0" value="dom" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder15.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account1.name}'/>
					<e t="f" a='${account2.name}'/>
					<su>${filter19.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>	
	
	<t:waitforpostfixqueue/>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:${folder15.name}</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter19.subject}"/>
		</t:response>
    </t:test>
    
 </t:test_case>
 
 <t:test_case testcaseid="Filtering-addressTest_16" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for case sensitive doamin part match of CC field</t:objective>
    <t:steps> 
    	1. Create filter with Action file into folder for case sensitive domain part(lowercase) of CC field.
    	2. Receive a message with CC field which contains upper and lower case letter in domain part. 
    	3. Verify message is  in the folder because domain part is not case sensitive.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder16.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder16.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder"/>            
        </t:response>
	</t:test>

	<t:property name="filter16.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter20.subject" value="filter${TIME}${COUNTER}"/>	
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter16.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="CC" part="domain" stringComparison="contains" caseSensitive="1" value="dom" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder16.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account3.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account1.name}'/>
					<e t="f" a='${account3.name}'/>
					<e t="c" a='${account2.name}'/>
					<su>${filter20.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>	
	
	<t:waitforpostfixqueue/>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:${folder16.name}</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter20.subject}" />
		</t:response>
    </t:test>
    
 </t:test_case>
 
 <t:test_case testcaseid="Filtering-addressTest_17" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for non-case sensitive doamin part match of CC field</t:objective>
    <t:steps>
    	 1. Create filter with Action file into folder for non-case sensitive(lowercase) domain of CC field.
    	 2. Receive a message with CC field which contains upper and lower case letter in domain part. 
    	 3. Verify message is in the folder.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder17.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder17.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder"/>            
        </t:response>
	</t:test>

	<t:property name="filter17.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter21.subject" value="filter${TIME}${COUNTER}"/>
	
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter17.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="CC" part="domain" stringComparison="contains" caseSensitive="0" value="dom" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder17.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account3.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account1.name}'/>
					<e t="f" a='${account3.name}'/>
					<e t="c" a='${account2.name}'/>
					<su>${filter21.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>	
	
	<t:waitforpostfixqueue/>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:${folder17.name}</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter21.subject}"/>
		</t:response>
    </t:test>
    
 </t:test_case>
 
 <t:test_case testcaseid="Filtering-addressTest_18" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for case sensitive doamin part match of To field</t:objective>
    <t:steps> 
    	1. Create filter with Action file into folder for case sensitive(lowercase) domain part of To field.
    	2. Receive a message with To field which contains upper and lower case letter in domain part.
    	3. Verify message is not in the folder because domain part is not case sensitive.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account2.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder18.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder18.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder"/>            
        </t:response>
	</t:test>

	<t:property name="filter18.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter22.subject" value="filter${TIME}${COUNTER}"/>	
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter18.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="To" part="domain" stringComparison="contains" caseSensitive="1" value="dom" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder18.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account2.name}'/>
					<e t="f" a='${account1.name}'/>
					<su>${filter22.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>	
	
	<t:waitforpostfixqueue/>
	
	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:${folder18.name}</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter22.subject}"/>
		</t:response>
    </t:test>
    
 </t:test_case>
 
 <t:test_case testcaseid="Filtering-addressTest_19" type="bhr" bugids="20317" >
    <t:objective>Verify filter action=fileintofolder is done for case sensitive doamin part match of To field</t:objective>
    <t:steps> 
    	1. Create filter with Action file into folder for case sensitive domain of To field.
    	2. Receive a message with To field which contains upper and lower case letter in domain part.
    	3. Verify message is the folder.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account2.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="folder19.name" value="folder${TIME}${COUNTER}"/>

	<t:test id="CreateFolderRequest1a" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                	<folder name="${folder19.name}" l="1"/>                
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder"/>            
        </t:response>
	</t:test>

	<t:property name="filter19.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter23.subject" value="filter${TIME}${COUNTER}"/>
	
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter19.name}" active="1">
						<filterTests condition="anyof">
							<addressTest header="To" part="domain" stringComparison="contains" caseSensitive="0" value="dom" />
						</filterTests>
						<filterActions>
							 <actionFileInto folderPath="${folder19.name}" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${account2.name}'/>
					<e t="f" a='${account1.name}'/>
					<su>${filter23.subject}</su>
					<mp ct="text/plain">
	    				<content>Hello world</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse"/>
   		</t:response>
	</t:test>
		
	<t:waitforpostfixqueue/>
	
	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	<t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
     </t:test>
    
     <t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:${folder19.name}</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${filter23.subject}" />
		</t:response>
    </t:test>
    
 </t:test_case>
 
</t:tests>

