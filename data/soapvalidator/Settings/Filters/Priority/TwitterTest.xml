<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:test_case testcaseid="AcctSetup_twitterTest" type="always" >
    <t:objective>create test accounts</t:objective>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
	    <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
                <a n="zimbraPrefTimeZoneId">UTC</a>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
	    </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
	    </t:response>
    </t:test>
        
</t:test_case>




<t:test_case testcaseid="twitterTest_01" type="bhr" bugids="42185" >

    <t:objective>Verify that twitter direct message is filtered for twitterTest filter</t:objective>
    
    <t:steps> 1. Create filter with twitterTest to flag for account1
			  2. Inject a twitter direct message to the user(account1) 
			  3. Verify that the message gets flagged.
    </t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="filter_twitter.name" value="filter${TIME}${COUNTER}"/>	
	<t:property name="filter_twitter1.subject" value="filter${TIME}${COUNTER}"/>	
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter_twitter.name}" active="1">
						<filterTests condition="allof">
						 <twitterTest/>						
						</filterTests>
						<filterActions>
							 <actionFlag flagName="flagged" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>
   
	
	<t:property name="twitter_msg02.file" value="${testMailRaw.root}/bug42185/twitter_direct_msg.txt" />
    
    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${twitter_msg02.file}</filename>
			<to>${account1.name}</to>
			<from>filter@testfilter.com</from>
			<server>${account1.server}</server>
			<modify>
				<header a="To">${account1.name}</header>
                <header a="Subject">${filter_twitter1.subject}</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>	

    <t:test id="filters_basic02d" depends="filters_basic01a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${filter_twitter1.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${filter_twitter1.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m[@f='fu']" />
        </t:response>
    </t:test>	
    
</t:test_case> 

<t:test_case testcaseid="twitterTest_02" type="bhr" bugids="42185" >
    <t:objective>Verify that twitter mentioned message is filtered for twitterTest</t:objective>
    
    <t:steps> 1. Create filter with twitterTest to flag
			  2. Inject a twitter mentioned message to the user 
			  3. Verify that the message gets flagged.
    </t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="filter_twitter.name" value="filter${TIME}${COUNTER}"/>	
	<t:property name="filter_twitter2.subject" value="filter${TIME}${COUNTER}"/>	
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter_twitter.name}" active="1">
						<filterTests condition="allof">
						 <twitterTest/>						
						</filterTests>
						<filterActions>
							 <actionFlag flagName="flagged" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>   
	
	<t:property name="twitter_msg03.file" value="${testMailRaw.root}/bug42185/twitter_mention.txt" />
    
    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${twitter_msg03.file}</filename>
			<to>${account1.name}</to>
			<from>filter@testfilter.com</from>
			<server>${account1.server}</server>
			<modify>
				<header a="To">${account1.name}</header>
                <header a="Subject">${filter_twitter2.subject}</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>	

    <t:test id="filters_basic02d" depends="filters_basic01a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${filter_twitter2.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${filter_twitter2.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m[@f='fu']" />
        </t:response>
    </t:test>	     
   
</t:test_case> 

</t:tests>