<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>

<t:property name="filter1.name" value="filter1.${TIME}.${COUNTER}"/>
<t:property name="filter2.name" value="filter2.${TIME}.${COUNTER}"/>

<t:property name="msg.foldername" value="${testMailRaw.root}/email07"/>
<t:property name="mail1.subject" value="email07A"/>
<t:property name="mail2.subject" value="email07B"/>
<t:property name="mail3.subject" value="email07C"/>
<t:property name="mail4.subject" value="email07D"/>
<t:property name="mail5.subject" value="email07E"/>
<t:property name="mail6.subject" value="email07F"/>

<!-- 
 Below are the size of the mail injected into the account
<t:property name="messages1.size" value="157b"/>
<t:property name="messages2.size" value="559b"/>
<t:property name="messages3.size" value="1kb"/>
<t:property name="messages4.size" value="131kb"/>
<t:property name="messages5.size" value="2mb"/>
<t:property name="messages6.size" value="6mb"/>
-->


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
         <t:response>
             <t:select path="//admin:PingResponse"/>
         </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="FilterSize_AccountSetup" type="always" >
    <t:objective>create test account</t:objective>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
	    <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
	    </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>


</t:test_case>


<t:property name="server.zimbraAccount" value="${account1.server}"/>

<t:test_case testcaseid="FilterSize_01" type="bhr" >
    <t:objective>Verify messages that match "Size: under "are filtered</t:objective>
	    <t:steps> 
			  1. Login to test account 1
			  2. Create a filter based on "Size: under 1K"
			  3. Inject messages to account1
			  4. Verify message with less than the size are filtered
			  5. Verify message with size above 1K are not filtered
        </t:steps>
        
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
	   
	   <t:test>
        <t:request>
            <ModifyFilterRulesRequest xmlns="urn:zimbraMail">
                <filterRules>
					<filterRule name="${filter1.name}" active="1">
                         <filterTests condition="anyof">
                         <sizeTest numberComparison="under" s="1K"/>    
                        </filterTests>
                        <filterActions> 
                        	<actionFlag flagName="flagged" />    
                        	<actionStop />                 
                        </filterActions>
                    </filterRule>
                 </filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>
    
	<!-- Get the rules to check if it has got created -->
	<t:test>
        <t:request>
            <GetFilterRulesRequest xmlns="urn:zimbraMail"/>
	 </t:request>
	 <t:response>
            <t:select path="//mail:GetFilterRulesResponse"/>
        </t:response>
    </t:test>

    <t:mailinjecttest >
		<t:lmtpInjectRequest>
			<foldername>${msg.foldername}</foldername>
			<to>${account1.name}</to>
			<from>${nonZimbraUser.name}</from>
			<server>${account1.server}</server>
		</t:lmtpInjectRequest>
	</t:mailinjecttest>
	
   <t:waitforpostfixqueue/>
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>Subject:(email07A)</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="f" match=".*f.*"/>
        </t:response>
    </t:test>

<!-- Verify messages that do not match the rule are not filtered. Message with 6mb is not filtered-->
   <t:waitforpostfixqueue/>
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>Subject:(email07F)</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="f" match=".*f.*" emptyset="1"/>
        </t:response>
    </t:test>

</t:test_case>

</t:tests>

