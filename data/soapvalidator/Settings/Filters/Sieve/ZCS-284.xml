<t:tests xmlns:t="urn:zimbraTestHarness">

    <t:property name="test_account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="test_account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="test_account3.name" value="test3.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="test_account4.name" value="test4.${TIME}.${COUNTER}@${defaultdomain.name}" />

    <t:property name="folder_inbox" value="Inbox" />
    <t:property name="msg01.file" value="${testMailRaw.root}/zcs-284/mime1.txt" />
    <t:property name="mail_subject" value="Sieve Mail" />
    <t:property name="tag1" value="0,empty,one recipient" />
    <t:property name="tag2" value="ge,le,eq" />

    <t:property name="sieve_rule1"
        value='require ["envelope", "comparator-i;ascii-numeric", "relational"];
        if envelope :count "eq" :comparator "i;ascii-numeric" :all "FROM" "0" {
        tag "0";
        }
        if envelope :all :matches "from" "" {
        tag "empty";
        }
        if envelope :count "eq" :comparator "i;ascii-numeric" :all "to" "1" {
        tag "one recipient";
        }
' />

    <t:property name="sieve_rule2"
        value='require ["envelope", "comparator-i;ascii-numeric", "relational"];
        if envelope :count "gt" :comparator "i;ascii-numeric" :all "From" "0" {
        tag "gt";
        }
        if envelope :count "lt" :comparator "i;ascii-numeric" :all "From" "0" {
        tag "lt";
        }
        if envelope :count "ne" :comparator "i;ascii-numeric" :all "From" "0" {
        tag "ne";
        }
' />

    <t:property name="sieve_rule3"
        value='require ["envelope", "comparator-i;ascii-numeric", "relational"];
        if envelope :count "ge" :comparator "i;ascii-numeric" :all "From" "0" {
        tag "ge";
        }
        if envelope :count "le" :comparator "i;ascii-numeric" :all "From" "0" {
        tag "le";
        }
        if envelope :count "eq" :comparator "i;ascii-numeric" :all "From" "0" {
        tag "eq";
        }
' />

    <t:test_case testcaseid="Ping" type="always">
        <t:objective>basic system check</t:objective>
        <t:test required="true">
            <t:request>
                <PingRequest xmlns="urn:zimbraAdmin" />
            </t:request>
            <t:response>
                <t:select path="//admin:PingResponse" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="AcctSetup1_create_account" type="always">
        <t:objective>create test accounts</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account1.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account1.id" />
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account2.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account2.id" />
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account3.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account3.id" />
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account4.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account4.id" />
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct4.server" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="AcctSetup2_modify_accounts" type="always">
        <t:objective>Add sieve rules</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test id="modifyaccountrequest01">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${test_account2.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule1}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" />
            </t:response>
        </t:test>
        <t:test id="modifyaccountrequest02">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${test_account3.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule2}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" />
            </t:response>
        </t:test>
        <t:test id="modifyaccountrequest03">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${test_account4.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule3}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="test1_rule1" type="smoke" bugids="zcs-284">
        <t:objective>Test sieve rule 1</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
                    <account by="name">${test_account1.name}</account>
                    <password>test123</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:mailinjecttest>
            <t:lmtpInjectRequest>
                <filename>${msg01.file}</filename>
                <to>${test_account2.name}</to>
                <from>""</from>
                <server>${test_acct2.server}</server>
                <modify>
                    <header a="To">${test_account2.name}</header>
                    <header a="Subject">${mail_subject}</header>
                </modify>
            </t:lmtpInjectRequest>
        </t:mailinjecttest>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
                    <account by="name">${test_account2.name}</account>
                    <password>test123</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>subject:${mail_subject}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" emptyset="0" match="${tag1}" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="test2_rule2" type="smoke" bugids="zcs-284">
        <t:objective>Test sieve rule 2</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
                    <account by="name">${test_account1.name}</account>
                    <password>test123</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:mailinjecttest>
            <t:lmtpInjectRequest>
                <filename>${msg01.file}</filename>
                <to>${test_account3.name}</to>
                <from>""</from>
                <server>${test_acct3.server}</server>
                <modify>
                    <header a="To">${test_account3.name}</header>
                    <header a="Subject">${mail_subject}</header>
                </modify>
            </t:lmtpInjectRequest>
        </t:mailinjecttest>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
                    <account by="name">${test_account3.name}</account>
                    <password>test123</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>subject:${mail_subject}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" emptyset="1" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="test3_rule3" type="smoke" bugids="zcs-284">
        <t:objective>Test sieve rule 3</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
                    <account by="name">${test_account1.name}</account>
                    <password>test123</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:mailinjecttest>
            <t:lmtpInjectRequest>
                <filename>${msg01.file}</filename>
                <to>${test_account4.name}</to>
                <from>""</from>
                <server>${test_acct4.server}</server>
                <modify>
                    <header a="To">${test_account4.name}</header>
                    <header a="Subject">${mail_subject}</header>
                </modify>
            </t:lmtpInjectRequest>
        </t:mailinjecttest>

        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
                    <account by="name">${test_account4.name}</account>
                    <password>test123</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>subject:${mail_subject}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" emptyset="0" match="${tag2}" />
            </t:response>
        </t:test>
    </t:test_case>

</t:tests>