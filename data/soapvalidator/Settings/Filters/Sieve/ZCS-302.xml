<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="inbox.${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="sent.${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="myfolder.${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account.password" value="test123" />

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
         <t:response>
             <t:select path="//admin:PingResponse"/>
         </t:response>
    </t:test>
</t:test_case>

<t:test_case testcaseid="AcctSetup1" type="always" >
    <t:objective> Create test account and login to first account </t:objective>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
	    </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>
</t:test_case>

<t:property name="sieve_fileinto_inbox1" value='
require  ["fileinto", "copy"];
keep; 
fileinto "Inbox";
fileinto "/Inbox";
fileinto "Inbox/";
fileinto "/Inbox/";
fileinto "INBOX";
fileinto "inbox";
fileinto :copy "/iNbOx";'/>

<t:test_case testcaseid="Filters_Fileinto_Inbox" type="smoke" bugids="ZCS-302">
    <t:objective>　Verify that only one message is stored in the inbox folder </t:objective>
	<steps>
	  1. Set the per-user filter to zimbraMailSieveScript
	  2. Check the initial number of messages in the folder
	  3. Send a message
	  4. Verify the number of message delivered in the inbox folder
	</steps>

	<!-- 1. Set the per-user filter to zimbraMailSieveScript -->
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<ModifyAccountRequest xmlns="urn:zimbraAdmin">
				<id>${account1.id}</id>
				<a n="zimbraMailSieveScript">${sieve_fileinto_inbox1}</a>
			</ModifyAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:ModifyAccountResponse/admin:account"
				attr="name" match="${account1.name}" />
		</t:response>
	</t:test>

	<!-- 2. Before sending a message, check the folder status: None of message
	        should be in the inbox folder -->
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	<t:test required="true">
        <t:request>
       	    <GetFolderRequest xmlns="urn:zimbraMail"/>
       	</t:request>
       	<t:response>
           	<t:select path="//mail:folder[@name='${globals.inbox}']" attr="n" equals="0"/>
		</t:response>
	</t:test>
	
	<!-- 3. Send a mail from admin to account1 -->
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:property name="subject1" value="subject1_${TIME}${COUNTER}"/>
	<t:test>
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="t" a="${account1.name}" />
					<su>${subject1}</su>
					<mp ct="text/plain">
						<content>content 1</content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
				set="Sent_message1.id" />
		</t:response>
	</t:test>

	<!-- 4. Verify the number of message delivered in the inbox folder -->
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

	<t:delay msec="5000"/>
	<t:test required="true">
        <t:request>
       	    <GetFolderRequest xmlns="urn:zimbraMail"/>
       	</t:request>
       	<t:response>
           	<t:select path="//mail:folder[@name='${globals.inbox}']" attr="n" equals="1"/>
		</t:response>
	</t:test>
</t:test_case>

<t:property name="sieve_fileinto_sent1" value='
require  ["fileinto", "copy"];
keep; 
fileinto "Sent";
fileinto "/Sent";
fileinto "Sent/";
fileinto "/Sent/";
fileinto "SENT";
fileinto "sent";
fileinto :copy "/sEnT";'/>
<t:test_case testcaseid="Filters_Fileinto_Sent" type="smoke" bugids="ZCS-302">
    <t:objective>　Verify that only one message is stored in the sent folder of the sender account</t:objective>
	<steps>
	  1. Set the per-user filter to zimbraMailOutgoingSieveScript
	  2. Check the initial number of messages in the folder
	  3. Send a message
	  4. Verify the number of message delivered in the sent folder
	</steps>

	<!-- 1. Set the per-user filter to zimbraMailSieveScript -->
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<ModifyAccountRequest xmlns="urn:zimbraAdmin">
				<id>${account2.id}</id>
				<a n="zimbraMailSieveScript">${sieve_fileinto_sent1}</a>
			</ModifyAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:ModifyAccountResponse/admin:account"
				attr="name" match="${account2.name}" />
		</t:response>
	</t:test>

	<!-- 2. Before sending a message, check the folder status -->
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${account.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	<t:test required="true">
        <t:request>
       	    <GetFolderRequest xmlns="urn:zimbraMail"/>
       	</t:request>
       	<t:response>
           	<t:select path="//mail:folder[@name='${globals.inbox}']" attr="n" equals="0"/>
		</t:response>
	</t:test>
	
	<!-- 3. Send a mail from account2 to admin as sender. -->
	<t:property name="subject1" value="subject1_${TIME}${COUNTER}"/>
	<t:test>
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="t" a="${admin.user}" />
					<su>${subject1}</su>
					<mp ct="text/plain">
						<content>content 1</content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
				set="Sent_message2.id" />
		</t:response>
	</t:test>

	<!-- 4. Verify the number of message delivered in the sent folder -->
	<t:delay msec="5000"/>
	<t:test required="true">
        <t:request>
       	    <GetFolderRequest xmlns="urn:zimbraMail"/>
       	</t:request>
       	<t:response>
           	<t:select path="//mail:folder[@name='${globals.sent}']" attr="n" equals="1"/>
		</t:response>
	</t:test>

</t:test_case>

<t:property name="sieve_fileinto_myfolder1" value='
require  ["fileinto", "copy"];
fileinto "MyFolder";
fileinto "myfolder"; 
fileinto "MyFolder/";
fileinto "/MYFOLDER";
keep;
fileinto :copy "/mYfOLDER/";
'/>
<t:property name="folder.name" value='MyFolder'/>
<t:test_case testcaseid="Filters_Fileinto_myfolder" type="smoke" bugids="ZCS-302">
    <t:objective>　Verify that the folder is created with the name which is specified
    by the "fileinto" action case-sensitively, and the folder name is identified 
    case-insensitively so that only one message is delivered to this folder.</t:objective>
	<steps>
	  1. Set the per-user filter to zimbraMailSieveScript
	  2. Check the initial number of messages in the folder
	  3. Send a message
	  4. Verify the number of message delivered in the "MyFolder" folder
	</steps>

	<!-- 1. Set the per-user filter to zimbraMailSieveScript -->
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>

	<t:test id="modify_rule_inbox1">
		<t:request>
			<ModifyAccountRequest xmlns="urn:zimbraAdmin">
				<id>${account3.id}</id>
				<a n="zimbraMailSieveScript">${sieve_fileinto_myfolder1}</a>
			</ModifyAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:ModifyAccountResponse/admin:account"
				attr="name" match="${account3.name}" />
		</t:response>
	</t:test>

	<!-- 2. Before sending a message, make sure the folder is NOT existed -->
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${account.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	<t:test>
        <t:request>
       	    <GetFolderRequest xmlns="urn:zimbraMail"/>
       	</t:request>
       	<t:response>
           	<t:select path="//mail:folder" name='${folder.name}' emptyset="1"/>
		</t:response>
	</t:test>
	
	<!-- 3. Send a mail with admin as sender. -->
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:property name="subject1" value="subject1_${TIME}${COUNTER}"/>
	<t:test required="true">
		<t:request required="true">
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="t" a="${account3.name}" />
					<su>${subject1}</su>
					<mp ct="text/plain">
						<content>content 1</content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
				set="Sent_message1.id" />
		</t:response>
	</t:test>

	<!-- 4. Verify the number of message delivered: one message is stored
	 in the inbox folder, and one message is stored in the "MyFolder" folder -->
	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${account.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

	<t:delay msec="5000"/>
	<t:test required="true">
        <t:request>
       	    <GetFolderRequest xmlns="urn:zimbraMail"/>
       	</t:request>
       	<t:response>
           	<t:select path="//mail:folder[@name='${globals.inbox}']" attr="n" equals="1"/>
		</t:response>
	</t:test>

	<t:test>
        <t:request>
       	    <GetFolderRequest xmlns="urn:zimbraMail"/>
       	</t:request>
       	<t:response>
           	<t:select path="//mail:folder[@name='${folder.name}']" attr="n" equals="1"/>
		</t:response>
	</t:test>
</t:test_case>

</t:tests>
