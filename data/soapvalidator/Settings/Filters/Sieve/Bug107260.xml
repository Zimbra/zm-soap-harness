<t:tests xmlns:t="urn:zimbraTestHarness">
    <!-- Test accounts declaration -->
    <t:property name="test_account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="test_account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="test_account3.name" value="test3.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="test_account4.name" value="test4.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="test_account5.name" value="test5.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="test_account6.name" value="test6.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="test_account7.name" value="test7.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="test_account8.name" value="456123_test8.${TIME}.${COUNTER}@${defaultdomain.name}" />

    <!-- Variables declaration -->
    <t:property name="folder_inbox" value="Inbox" />

    <!-- Sieve rules declaration -->
    <t:property name="sieve_rule1" value='require ["tag", "comparator-i;ascii-numeric", "relational"];
if address :comparator "i;ascii-numeric" :contains "To" "123"{
    tag "tag-1-should-not-be-added";
}
tag "end-tag-should-not-be-added";
'/>
    <t:property name="sieve_rule2" value='require ["tag", "comparator-i;ascii-numeric", "relational"];
if address :comparator "i;ascii-numeric" :matches "To" "123"{
    tag "tag-1-should-not-be-added";
}
tag "end-tag-should-not-be-added";
'/>
    <t:property name="sieve_rule3" value='require ["tag", "comparator-i;ascii-numeric", "relational"];
if header :comparator "i;ascii-numeric" :contains "To" "123"{
    tag "tag-1-should-not-be-added";
}
tag "end-tag-should-not-be-added";
'/>
    <t:property name="sieve_rule4" value='require ["tag", "comparator-i;ascii-numeric", "relational"];
if header :comparator "i;ascii-numeric" :matches "To" "123"{
    tag "tag-1-should-not-be-added";
}
tag "end-tag-should-not-be-added";
'/>
    <t:property name="sieve_rule5" value='require ["tag", "comparator-i;ascii-numeric", "relational"];
if envelope :comparator "i;ascii-numeric" :contains "To" "123"{
    tag "tag-1-should-not-be-added";
}
tag "end-tag-should-not-be-added";
'/>
    <t:property name="sieve_rule6" value='require ["tag", "comparator-i;ascii-numeric", "relational"];
if envelope :comparator "i;ascii-numeric" :matches "To" "123"{
    tag "tag-1-should-not-be-added";
}
tag "end-tag-should-not-be-added";
'/>
    <t:property name="sieve_rule7" value='require ["tag", "comparator-i;ascii-numeric", "relational", "envelope"];
if address :comparator "i;ascii-numeric" :is "To" "NON-DIGIT"{
    tag "address-1";
}
if address :comparator "i;ascii-numeric" :is "To" "3"{
    tag "address-2-should-not-be-added";
}
if address :comparator "i;ascii-numeric" :is "To" ""{
    tag "address-3";
}
if header :comparator "i;ascii-numeric" :is "To" "NON-DIGIT"{
    tag "header-1";
}
if header :comparator "i;ascii-numeric" :is "To" "3"{
    tag "header-2-should-not-be-added";
}
if header :comparator "i;ascii-numeric" :is "To" ""{
    tag "header-3";
}
if envelope :comparator "i;ascii-numeric" :is "To" "NON-DIGIT"{
    tag "envelope-1";
}
if envelope :comparator "i;ascii-numeric" :is "To" "3"{
    tag "envelope-2-should-not-be-added";
}
if envelope :comparator "i;ascii-numeric" :is "To" ""{
    tag "envelope-3";
}
tag "end-tag";
'/>
    <t:property name="sieve_rule8" value='require ["tag", "comparator-i;ascii-numeric", "relational", "envelope"];
if address :comparator "i;ascii-numeric" :is "To" "456123"{
    tag "address-1";
}
if address :comparator "i;ascii-numeric" :is "To" "456123bapoxqa"{
    tag "address-2";
}
if address :comparator "i;ascii-numeric" :is "To" "avaswqs456123"{
    tag "address-3-should-not-be-added";
}
if address :comparator "i;ascii-numeric" :is "To" "456"{
    tag "address-4-should-not-be-added";
}
if address :comparator "i;ascii-numeric" :is "To" "000456123"{
    tag "address-5";
}
if header :comparator "i;ascii-numeric" :is "To" "456123"{
    tag "header-1";
}
if header :comparator "i;ascii-numeric" :is "To" "456123bapoxqa"{
    tag "header-2";
}
if header :comparator "i;ascii-numeric" :is "To" "avaswqs456123"{
    tag "header-3-should-not-be-added";
}
if header :comparator "i;ascii-numeric" :is "To" "456"{
    tag "header-4-should-not-be-added";
}
if header :comparator "i;ascii-numeric" :is "To" "000456123"{
    tag "header-5";
}
if envelope :comparator "i;ascii-numeric" :is "To" "456123"{
    tag "envelope-1";
}
if envelope :comparator "i;ascii-numeric" :is "To" "456123bapoxqa"{
    tag "envelope-2";
}
if envelope :comparator "i;ascii-numeric" :is "To" "avaswqs456123"{
    tag "envelope-3-should-not-be-added";
}
if envelope :comparator "i;ascii-numeric" :is "To" "456"{
    tag "envelope-4-should-not-be-added";
}
if envelope :comparator "i;ascii-numeric" :is "To" "000456123"{
    tag "envelope-5";
}
tag "end-tag";
'/>


    <t:test_case testcaseid="Ping" type="always">
        <t:objective>basic system check</t:objective>
        <t:test required="true">
            <t:request>
                <PingRequest xmlns="urn:zimbraAdmin" />
            </t:request>
            <t:response>
                <t:select path="//admin:PingResponse" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="AcctSetup1_create_account" type="always">
        <t:objective>create test accounts</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account1.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account1.id" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account2.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account2.id" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account3.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account3.id" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account4.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account4.id" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account5.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account5.id" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account6.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account6.id" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account7.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account7.id" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account8.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account8.id" />
            </t:response>
        </t:test>
    </t:test_case>

 <!--    <t:test_case testcaseid="bug107260_rule1" type="smoke" bugids="107260">
        <t:objective>Test Address with comparator "i;ascii-numeric" throws an exception if match-type is :contains</t:objective>
        <t:test id="modifyaccountrequest1">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${test_account1.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule1}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account"/>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account1.name}" />
                        <su>Test message</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="sendmsg1.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account1.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*tag-1-should-not-be-added.*" emptyset="1" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*end-tag-should-not-be-added.*" emptyset="1" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="bug107260_rule2" type="smoke" bugids="107260">
        <t:objective>Test Address with comparator "i;ascii-numeric" throws an exception if match-type is :matches</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>
        <t:test id="modifyaccountrequest2">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${test_account2.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule2}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account"/>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account2.name}" />
                        <su>Test message</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="sendmsg2.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account2.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*tag-1-should-not-be-added.*" emptyset="1" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*end-tag-should-not-be-added.*" emptyset="1" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="bug107260_rule3" type="smoke" bugids="107260">
        <t:objective>Test Header with comparator "i;ascii-numeric" throws an exception if match-type is :contains</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>
        <t:test id="modifyaccountrequest3">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${test_account3.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule3}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account"/>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account3.name}" />
                        <su>Test message</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="sendmsg3.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account3.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*tag-1-should-not-be-added.*" emptyset="1" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*end-tag-should-not-be-added.*" emptyset="1" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="bug107260_rule4" type="smoke" bugids="107260">
        <t:objective>Test Header with comparator "i;ascii-numeric" throws an exception if match-type is :matches</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>
        <t:test id="modifyaccountrequest4">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${test_account4.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule4}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account"/>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account4.name}" />
                        <su>Test message</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="sendmsg4.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account4.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*tag-1-should-not-be-added.*" emptyset="1" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*end-tag-should-not-be-added.*" emptyset="1" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="bug107260_rule5" type="smoke" bugids="107260">
        <t:objective>Test Envelope with comparator "i;ascii-numeric" throws an exception if match-type is :contains</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>
        <t:test id="modifyaccountrequest5">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${test_account5.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule5}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account"/>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account5.name}" />
                        <su>Test message</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="sendmsg5.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account5.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*tag-1-should-not-be-added.*" emptyset="1" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*end-tag-should-not-be-added.*" emptyset="1" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="bug107260_rule6" type="smoke" bugids="107260">
        <t:objective>Test Envelope with comparator "i;ascii-numeric" throws an exception if match-type is :matches</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>
        <t:test id="modifyaccountrequest6">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${test_account6.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule6}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account"/>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account6.name}" />
                        <su>Test message</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="sendmsg6.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account6.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*tag-1-should-not-be-added.*" emptyset="1" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*end-tag-should-not-be-added.*" emptyset="1" />
            </t:response>
        </t:test>
    </t:test_case> -->

    <t:test_case testcaseid="bug107260_rule7" type="smoke" bugids="107260">
        <t:objective>Test Address with comparator "i;ascii-numeric" and match-type ":is" - strings that do not start with a digit should represent positive infinity</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>
        <t:test id="modifyaccountrequest7">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${test_account7.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule7}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account"/>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account7.name}" />
                        <su>Test message</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="sendmsg7.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account7.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*address-1.*" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*address-2-should-not-be-added.*" emptyset="1" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*address-3.*" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*header-1.*" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*header-2-should-not-be-added.*" emptyset="1" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*header-3.*" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*envelope-1.*" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*envelope-2-should-not-be-added.*" emptyset="1" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*envelope-3.*" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*end-tag.*" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="bug107260_rule8" type="smoke" bugids="107260">
        <t:objective>Test Address with comparator "i;ascii-numeric" and match-type ":is" - strings that starts with a digit should represent the value</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>
        <t:test id="modifyaccountrequest8">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${test_account8.id}</id>
                    <a n="zimbraMailSieveScript">${sieve_rule8}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account"/>
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m f="!">
                        <e t="t" a="${test_account8.name}" />
                        <su>Test message</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="sendmsg8.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account8.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*address-1.*" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*address-2.*" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*address-3-should-not-be-added.*" emptyset="1" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*address-4-should-not-be-added.*" emptyset="1" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*address-5.*" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*header-1.*" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*header-2.*" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*header-3-should-not-be-added.*" emptyset="1" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*header-4-should-not-be-added.*" emptyset="1" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*header-5.*" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*envelope-1.*" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*envelope-2.*" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*envelope-3-should-not-be-added.*" emptyset="1" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*envelope-4-should-not-be-added.*" emptyset="1" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*envelope-5.*" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match=".*end-tag.*" />
            </t:response>
        </t:test>
    </t:test_case>
</t:tests>
