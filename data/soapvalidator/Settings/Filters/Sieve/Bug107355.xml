<t:tests xmlns:t="urn:zimbraTestHarness">
    <!-- Test accounts declaration -->
    <t:property name="test_account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="test_account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}" />

    <!-- Variables declaration -->
    <t:property name="folder_inbox" value="Inbox" />
    <t:property name="dollar0" value="$\{0}"/>
    <t:property name="dollar1" value="$\{1}"/>
    <t:property name="dollar2" value="$\{2}"/>
    <t:property name="dollar3" value="$\{3}"/>
    <t:property name="dollar4" value="$\{4}"/>
    <t:property name="dollar5" value="$\{5}"/>
    <t:property name="dollar6" value="$\{6}"/>
    <t:property name="dollar7" value="$\{7}"/>
    <t:property name="dollar8" value="$\{8}"/>
    <t:property name="dollar9" value="$\{9}"/>

    <t:property name="value1" value="sample header" />
    <t:property name="value2" value="111" />
    <t:property name="value3" value="aa22" />
    <t:property name="value4" value="c3" />
    <t:property name="value5" value="4d" />
    <t:property name="value6" value="" />
    <t:property name="value7" value="test 111" />
    <t:property name="value8" value="ABC" />
    <t:property name="value9" value="123" />

    <t:property name="msg01.file" value="${testMailRaw.root}/bug107355/mime.txt" />

    <!-- Sieve rules declaration -->
    <t:property name="sieve_rule1" value='require ["editheader", "variables"];
replaceheader :comparator "i;ascii-casemap" :matches "X-Test-Header" "*";
addheader :last "X-New-Header-0" "${dollar0}";
addheader :last "X-New-Header-1" "${dollar1}";
addheader :last "X-New-Header-2" "${dollar2}";
addheader :last "X-New-Header-3" "${dollar3}";
addheader :last "X-New-Header-4" "${dollar4}";
addheader :last "X-New-Header-5" "${dollar5}";
addheader :last "X-New-Header-6" "${dollar6}";
addheader :last "X-New-Header-7" "${dollar7}";
addheader :last "X-New-Header-8" "${dollar8}";
addheader :last "X-New-Header-9" "${dollar9}";
'/>
    <t:property name="sieve_rule2" value='require ["editheader", "variables"];
if anyof (header :matches ["X-Test-Header"] "*"){
    addheader :last "X-New-Header-0" "${dollar0}";
    addheader :last "X-New-Header-1" "${dollar1}";
    addheader :last "X-New-Header-2" "${dollar2}";
    addheader :last "X-New-Header-3" "${dollar3}";
    addheader :last "X-New-Header-4" "${dollar4}";
    addheader :last "X-New-Header-5" "${dollar5}";
    addheader :last "X-New-Header-6" "${dollar6}";
    addheader :last "X-New-Header-7" "${dollar7}";
    addheader :last "X-New-Header-8" "${dollar8}";
    addheader :last "X-New-Header-9" "${dollar9}";
}'/>

    <t:test_case testcaseid="Ping" type="always">
        <t:objective>basic system check</t:objective>
        <t:test required="true">
            <t:request>
                <PingRequest xmlns="urn:zimbraAdmin" />
            </t:request>
            <t:response>
                <t:select path="//admin:PingResponse" />
            </t:response>
        </t:test>
    </t:test_case>
    
    <t:test_case testcaseid="AcctSetup1_create_account" type="smoke">
        <t:objective>create test accounts</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

	    <t:test>
	        <t:request xmlns="urn:zimbraAdmin">
	            <GetCosRequest>
	                <cos by="name">default</cos>
	            </GetCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="name" match="default"/>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="id" set="cosid"/>
	        </t:response>
	    </t:test>
	
	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveEditHeaderEnabled">TRUE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>
	    
        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account1.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account1.id" />
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_account1.server" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account2.name}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account2.id" />
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_account2.server" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="bug107355_rule1" type="smoke" bugids="107355">
        <t:objective>Match Variables should have a value in matched order - replaceheader</t:objective>
        <t:test id="modifyaccountrequest1">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${test_account1.id}</id>
                    <a n="zimbraAdminSieveScriptBefore">${sieve_rule1}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account"/>
            </t:response>
        </t:test>

        <t:mailinjecttest>
            <t:lmtpInjectRequest>
                <filename>${msg01.file}</filename>
                <to>${test_account1.name}</to>
                <from>${admin.user}</from>
                <server>${test_account1.server}</server>
                <modify>
                    <header a="To">${test_account1.name}</header>
                    <header a="From">${admin.user}</header>
                </modify>
            </t:lmtpInjectRequest>
        </t:mailinjecttest>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account1.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg1.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <!-- ${0} should be the value of the first matched header -->
                <t:select attr="X-New-Header-0" match="${value1}" />
                <t:select attr="X-New-Header-1" match="${value1}" />
                <t:select attr="X-New-Header-2" match="${value2}" />
                <t:select attr="X-New-Header-3" match="${value3}" />
                <t:select attr="X-New-Header-4" match="${value4}" />
                <t:select attr="X-New-Header-5" match="${value5}" />
                <t:select attr="X-New-Header-6" match="${value6}" />
                <t:select attr="X-New-Header-7" match="${value7}" />
                <t:select attr="X-New-Header-8" match="${value8}" />
                <t:select attr="X-New-Header-9" match="${value9}" />
            </t:restServletResponse>
        </t:resttest>
    </t:test_case>

    <t:test_case testcaseid="bug107355_rule2" type="smoke" bugids="107355">
        <t:objective>Match Variables should have a value in matched order - header test</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>
        <t:test id="modifyaccountrequest2">
            <t:request>
                <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                    <id>${test_account2.id}</id>
                    <a n="zimbraAdminSieveScriptBefore">${sieve_rule2}</a>
                </ModifyAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:ModifyAccountResponse/admin:account"/>
            </t:response>
        </t:test>

        <t:mailinjecttest>
            <t:lmtpInjectRequest>
                <filename>${msg01.file}</filename>
                <to>${test_account2.name}</to>
                <from>${admin.user}</from>
                <server>${test_account2.server}</server>
                <modify>
                    <header a="To">${test_account2.name}</header>
                    <header a="From">${admin.user}</header>
                </modify>
            </t:lmtpInjectRequest>
        </t:mailinjecttest>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${test_account2.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg2.id" />
            </t:response>
        </t:test>

        <t:resttest>
            <t:restServletRequest>
                <id>${msg2.id}</id>
            </t:restServletRequest>
            <t:restServletResponse>
                <!-- ${0} should be the value of the first matched header -->
                <t:select attr="X-New-Header-0" match="${value1}" />
                <t:select attr="X-New-Header-1" match="${value1}" />
                <t:select attr="X-New-Header-2" match="${value2}" />
                <t:select attr="X-New-Header-3" match="${value3}" />
                <t:select attr="X-New-Header-4" match="${value4}" />
                <t:select attr="X-New-Header-5" match="${value5}" />
                <t:select attr="X-New-Header-6" match="${value6}" />
                <t:select attr="X-New-Header-7" match="${value7}" />
                <t:select attr="X-New-Header-8" match="${value8}" />
                <t:select attr="X-New-Header-9" match="${value9}" />
            </t:restServletResponse>
        </t:resttest>
    </t:test_case>

    <t:finally type="always">
        <t:objective>reset cosconfig to default </t:objective>
        
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveEditHeaderEnabled">FALSE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>

    </t:finally>    
</t:tests>
