<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account3.name" value="test3.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account4.name" value="test4.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account5.name" value="test5.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account6.name" value="test6.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account7.name" value="test7.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account8.name" value="test8.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="msg01.file" value="${testMailRaw.root}/zcs-283/mime01.txt"/>

<t:property name="mail_subject" value="Spam Mail" />
<t:property name="dollar" value="$"/>

<t:property name="varName" value="X-New-Header"/>
<t:property name="varValue" value="Value1"/>

<t:property name="sieve_rule1" value='require  ["log","editheader", "variables"];
set "varName" "${varName}"; set "varValue" "${varValue}";
addheader :last "${dollar}{varName}" "${dollar}{varValue}";'
/>

<t:property name="sieve_rule2" value='require  ["log","editheader", "variables"];
set "VARName" "${varName}"; set "VARValue" "${varValue}";
addheader :last "${dollar}{VarName}" "${dollar}{VarValue}";'
/>

<t:property name="sieve_rule3" value='require  ["log","editheader", "variables"];
set "VARNAME" "${varName}"; set "varvalue" "${varValue}";
addheader :last "${dollar}{VarName}" "${dollar}{VARVALUE}";'
/>

<t:property name="sieve_rule4" value='require  ["log","editheader", "variables"];
set "VaRnAmE" "${varName}"; set "VaRValUe" "${varValue}";
addheader :last "${dollar}{VarName}" "${dollar}{varvalue}";'
/>

<t:property name="sieve_rule5" value='require  ["log","editheader", "variables"];
set "VARname" "${varName}"; set "VarVALUE" "${varValue}";
addheader "${dollar}{varNAME}" "${dollar}{varvalue}";'
/>

<t:property name="sieve_rule6" value='require  ["log","editheader", "variables"];
set "VARname" "${varName}"; set "VarVALUE" "${varValue}";
addheader "${dollar}{Dummy}" "${dollar}{varvalue}";'
/>

<t:property name="sieve_rule7" value='require  ["log","variables","editheader"];
replaceheader :newname "X-New-Header2" :newvalue "NEWVAL" :matches "X-NEW-HEADER" "*";'
/>

<t:property name="test_acct.server" value="NOT_DEFINED"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}" />

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>
    
	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin" />
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse" />
		</t:response>
	</t:test>
    
</t:test_case>


<t:test_case testcaseid="acctSetup1" type="smoke">
    <t:objective>create test account</t:objective>
    
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>

	    <t:test>
	        <t:request xmlns="urn:zimbraAdmin">
	            <GetCosRequest>
	                <cos by="name">default</cos>
	            </GetCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="name" match="default"/>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="id" set="cosid"/>
	        </t:response>
	    </t:test>
	
	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveEditHeaderEnabled">TRUE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>
	        
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account1.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test> 

     <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${defaultpassword.value}</password>
                <a n = "zimbraAdminSieveScriptAfter">${sieve_rule1}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account2.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account3.name}</name>
                <password>${defaultpassword.value}</password>
                <a n = "zimbraAdminSieveScriptAfter">${sieve_rule2}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account3.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account4.name}</name>
                <password>${defaultpassword.value}</password>
                <a n = "zimbraAdminSieveScriptAfter">${sieve_rule3}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account4.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct4.server"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account5.name}</name>
                <password>${defaultpassword.value}</password>
                <a n = "zimbraAdminSieveScriptAfter">${sieve_rule4}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account5.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct5.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account6.name}</name>
                <password>${defaultpassword.value}</password>
                <a n = "zimbraAdminSieveScriptAfter">${sieve_rule5}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account6.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct6.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account7.name}</name>
                <password>${defaultpassword.value}</password>
                <a n = "zimbraAdminSieveScriptAfter">${sieve_rule6}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account7.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct7.server"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account8.name}</name>
                <password>${defaultpassword.value}</password>
                <a n = "zimbraAdminSieveScriptAfter">${sieve_rule7}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account8.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct8.server"/>
        </t:response>
    </t:test>    
	                                              
</t:test_case>

<t:test_case testcaseid="bugZCS-283_rule1" type="smoke" bugids="ZCS-283">
   <t:objective>Uppercase letters are not allowed to be used in variable name in sieve script </t:objective>
    <steps> 
        1. Add sieve_rule1 for the user.
		2. Send email to that user. 
		3. Verify header is added and value is appended even though the case of variable name does not match.
    </steps>	

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account2.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account2.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
    </t:test>
    
	<t:resttest>
		<t:restServletRequest>
			<id>${msg1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="${varName}" match="${varValue}"/>
		</t:restServletResponse>
	</t:resttest>
	             
</t:test_case>

<t:test_case testcaseid="bugZCS-283_rule2" type="smoke" bugids="ZCS-283">
   <t:objective>Uppercase letters are not allowed to be used in variable name in sieve script </t:objective>
    <steps> 
        1. Add sieve_rule2 for the user.
		2. Send email to that user. 
		3. Verify header is added and value is appended even though the case of variable name does not match.
    </steps>	

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account3.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account3.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
    </t:test>
    
	<t:resttest>
		<t:restServletRequest>
			<id>${msg1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="${varName}" match="${varValue}"/>
		</t:restServletResponse>
	</t:resttest>
	             
</t:test_case>

<t:test_case testcaseid="bugZCS-283_rule3" type="smoke" bugids="ZCS-283">
   <t:objective>Uppercase letters are not allowed to be used in variable name in sieve script </t:objective>
    <steps> 
        1. Add sieve_rule3 for the user.
		2. Send email to that user. 
		3. Verify header is added and value is appended even though the case of variable name does not match.
    </steps>	

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account4.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account4.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
    </t:test>
    
	<t:resttest>
		<t:restServletRequest>
			<id>${msg1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="${varName}" match="${varValue}"/>
		</t:restServletResponse>
	</t:resttest>
	             
</t:test_case>

<t:test_case testcaseid="bugZCS-283_rule4" type="smoke" bugids="ZCS-283">
   <t:objective>Uppercase letters are not allowed to be used in variable name in sieve script </t:objective>
    <steps> 
        1. Add sieve_rule4 for the user.
		2. Send email to that user. 
		3. Verify header is added and value is appended even though the case of variable name does not match.
    </steps>	

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account5.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account5.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
    </t:test>
    
	<t:resttest>
		<t:restServletRequest>
			<id>${msg1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="${varName}" match="${varValue}"/>
		</t:restServletResponse>
	</t:resttest>
	             
</t:test_case>

<t:test_case testcaseid="bugZCS-283_rule5" type="smoke" bugids="ZCS-283">
   <t:objective>Uppercase letters are not allowed to be used in variable name in sieve script </t:objective>
    <steps> 
        1. Add sieve_rule5 for the user.
		2. Send email to that user. 
		3. Verify header is added and value is appended even though the case of variable name does not match.
    </steps>	

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account6.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account6.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
    </t:test>
    
	<t:resttest>
		<t:restServletRequest>
			<id>${msg1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="${varName}" match="${varValue}"/>
		</t:restServletResponse>
	</t:resttest>
	             
</t:test_case>

<t:test_case testcaseid="bugZCS-283_rule6" type="smoke" bugids="ZCS-283">
   <t:objective>Uppercase letters are not allowed to be used in variable name in sieve script </t:objective>
    <steps> 
        1. Add sieve_rule6 for the user.
		2. Send email to that user. 
		3. Verify header is not added since the dummy variable is not set
    </steps>	

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:test >
 		<t:request>
    		<SendMsgRequest xmlns="urn:zimbraMail">
      			<m>
					<e t="t" a='${test_account7.name}'/>
					<su>${mail_subject}</su>
					<mp ct="text/plain">
	    				<content>Good Morning</content>
					</mp>
    			 </m>
    		</SendMsgRequest>
  		</t:request>
  		<t:response>
        	<t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id"/>
   		</t:response>
	</t:test>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account7.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
    </t:test>
    
	<t:resttest>
		<t:restServletRequest>
			<id>${msg1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="${varName}" emptyset="1"/>
		</t:restServletResponse>
	</t:resttest>
</t:test_case>

<t:test_case testcaseid="bugZCS-283_rule7" type="smoke" bugids="ZCS-283">
   <t:objective>Uppercase letters are not allowed to be used in variable name in sieve script </t:objective>
    <steps> 
        1. Add sieve_rule7 for the user to verify replaceheader.
		2. Send email to that user. 
		3. Verify header is replaced even though the name does not match exactly
    </steps>	

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account1.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>

    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
			<to>${test_account8.name}</to>
			<from>${test_account1.name}</from>
			<server>${test_acct1.server}</server>
            <modify>
                <header a="To">${test_account8.name}</header>
                <header a="From">${test_account1.name}</header>
                <header a="Subject">${mail_subject}</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

<t:test required="true">
	<t:request>
		<AuthRequest xmlns="urn:zimbraAccount" csrfTokenSecured="0">
          	<account by="name">${test_account8.name}</account>
			<password>${defaultpassword.value}</password>
		</AuthRequest>
		</t:request>
		<t:response>		   
			 <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>
	
     <t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">					
					<query>subject:${mail_subject}</query>
				</SearchRequest>
			</t:request>
	        <t:response>			
				<t:select path="//mail:SearchResponse/mail:m/mail:su" match="${mail_subject}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg1.id"/>
			</t:response>
    </t:test>
    
	<t:resttest>
		<t:restServletRequest>
			<id>${msg1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="X-New-Header2" match="NEWVAL"/>
		</t:restServletResponse>
	</t:resttest>
		             
</t:test_case>

    <t:finally type="always">
        <t:objective>reset cosconfig to default </t:objective>
        
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveEditHeaderEnabled">FALSE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>

    </t:finally>    
</t:tests>
