<t:tests xmlns:t="urn:zimbraTestHarness">

	<t:property name="account1.name"
		value="sieve1.${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account2.name"
		value="sieve2.${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account3.name"
		value="sieve3.${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="account4.name"
		value="sieve4.${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account1.password" value="test123" />

	<t:property name="subject1" value="sub1.${TIME}${COUNTER}" />
	<t:property name="subject2" value="sub2.${TIME}${COUNTER}" />
	<t:property name="subject3" value="sub3.${TIME}${COUNTER}" />
	<t:property name="subject4" value="sub4.${TIME}${COUNTER}" />
	<t:property name="subject5" value="sub5.${TIME}${COUNTER}" />
	<t:property name="subject6" value="sub6.${TIME}${COUNTER}" />
	<t:property name="subject7" value="sub7.${TIME}${COUNTER}" />
	<t:property name="subject8" value="sub8.${TIME}${COUNTER}" />
	<t:property name="subject9" value="SPAM" />
	<t:property name="subject10" value="sub10.${TIME}${COUNTER}" />
	<t:property name="subject11" value="sub11.${TIME}${COUNTER}" />
	<t:property name="subject12" value="sub12.${TIME}${COUNTER}" />
	<t:property name="subject13" value="sub13.${TIME}${COUNTER}" />


	<t:property name="folder1.name" value="folder${TIME}${COUNTER}" />
	<t:property name="folder2.name" value="folder${TIME}${COUNTER}" />


	<t:property name="sieve_ComparatorTest_1"
		value='require ["log","fileinto","relational"];
if address :value "eq" :comparator "i;ascii-casemap"
    "from" "admin@${defaultdomain.name}"
{     
		log"Comparator rule 1";
		fileinto "Junk";	
}
' />

	<t:property name="sieve_ComparatorTest_2"
		value='require ["log","fileinto","relational", "comparator-i;ascii-numeric"];
if header :value "lt" :comparator "i;ascii-numeric"
	              ["X-Priority"] ["3"]
{
         log "High priority email";
         fileinto "${folder1.name}";
}
' />

	<t:property name="sieve_ComparatorTest_3"
		value='require ["log","fileinto","flag","relational", "comparator-i;ascii-numeric"];
  if address :count "ge" :comparator "i;ascii-numeric"
                 ["to"] ["2"]
      {
         fileinto "${folder2.name}";
         stop;
      }
  else
  {
  	discard;
  }
  ' />

	<t:property name="sieve_ComparatorTest_4"
		value='require ["log","fileinto","flag","relational", "comparator-i;ascii-numeric"];
if anyof ( address :count "eq" :comparator "i;ascii-numeric"
                         ["to", "cc"] ["2"] ,
           address :value "eq" :comparator "i;ascii-casemap"
                         ["to", "cc"] "${account1.name}" )
      {
         log "Comparator test 4";
         redirect "${account2.name}";
  	}
 ' />

	<t:property name="sieve_ComparatorTest_5"
		value='require ["log","fileinto","flag","relational"];
 if address :all :comparator "i;ascii-casemap"
                         ["to", "cc"] "${account2.name}" 
  {	
  		log "Comparator test 5";
  		fileinto "Junk";
  } 
  ' />

	<t:property name="sieve_ComparatorTest_6"
		value='require ["log","fileinto","flag","relational"];
if header :value "ne" :comparator "i;ascii-casemap"
    		["subject"]["SPAM"]
{     
	keep;
	log "Not a spam."; 
	redirect "${account3.name}";
}  
else
{
	log "Discard message as a spam";
	discard;
}
' />


<t:property name="sieve_ComparatorTest_7"
		value='require ["log","fileinto","flag","relational", "comparator-i;ascii-numeric"];
if address :count "le" :comparator "i;ascii-numeric"
    		["to","cc"]["3"]
{     
	keep;
	log "Seems a legit mail";
	fileinto "${folder2.name}"; 
}  
else
{
	discard;
	log "Discard as more than 3 attendees";
	stop;
}
' />

<t:property name="sieve_ComparatorTest_8"
		value='require ["log","fileinto","relational"];
if header :value "eq" :comparator "i;octet" 
			"from" "admin@${defaultdomain.name}" 
{	
		log "Succeed on comparator 8 test";
        fileinto "${folder1.name}";
 }
 else
 {
 		redirect "${account3.name}";
 		stop;
 }
' />



	<t:test_case testcaseid="AcctSetup1_filters_actions_discard_basic"
		type="smoke">
		<t:objective> Create test account and login to first account
		</t:objective>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account1.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account1.id" />
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="name" set="account1.name" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account1.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account2.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account2.id" />
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="name" set="account2.name" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account2.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account3.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account3.id" />
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="name" set="account3.name" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account3.server" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account4.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account4.id" />
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="name" set="account4.name" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account4.server" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>



		<t:test>
			<t:request>
				<CreateFolderRequest xmlns="urn:zimbraMail">
					<folder name="${folder1.name}" l="1" />
				</CreateFolderRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:CreateFolderResponse/mail:folder"
					attr="id" set="folder.id1" />
			</t:response>
		</t:test>


		<t:test>
			<t:request>
				<CreateFolderRequest xmlns="urn:zimbraMail">
					<folder name="${folder2.name}" l="1" />
				</CreateFolderRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:CreateFolderResponse/mail:folder"
					attr="id" set="folder.id2" />
			</t:response>
		</t:test>

	</t:test_case>
	
	<t:test_case testcaseid="SendMail_And_checkFilter_Execution_1"
		type="smoke">
		<t:objective> Set sieve script and verify by sending mail
		</t:objective>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>


		<t:test id="modifyAccountRequest_1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account1.id}</id>
					<a n="zimbraMailSieveScript">${sieve_ComparatorTest_1}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account"
					attr="name" match="${account1.name}" />
			</t:response>
		</t:test>

		<!-- Send a mail with admin as sender. Should go in Junk of account 1 user -->
		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account1.name}" />
						<su>${subject1}</su>
						<mp ct="text/plain">
							<content>content 1</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message1.id" />
			</t:response>
		</t:test>


		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>



		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail">
					<query>in:Junk</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:c" attr="su"
					match="${subject1}" />
			</t:response>
		</t:test>


	</t:test_case>

	<t:test_case testcaseid="SendMail_And_checkFilter_Execution_2"
		type="smoke">
		<t:objective> Set sieve script and verify by sending mail
		</t:objective>


		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test id="modifyAccountRequest_2">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account1.id}</id>
					<a n="zimbraMailSieveScript">${sieve_ComparatorTest_2}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse//admin:account"
					attr="name" match="${account1.name}" />
			</t:response>
		</t:test>

		<!-- Send a mail with low priority. If priority less than 3, redirect to 
			folder 2 -->

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m f="!">
						<e t="t" a="${account1.name}" />
						<su>${subject2}</su>
						<mp ct="text/plain">
							<content>content 2</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message1.id" />
			</t:response>
		</t:test>



		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>



		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail">
					<query>in:${folder1.name}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:c" attr="su"
					match="${subject2}" />
			</t:response>
		</t:test>


	</t:test_case>

	<t:test_case testcaseid="SendMail_And_checkFilter_Execution_3"
		type="smoke">
		<t:objective> Set sieve script and verify by sending mail
		</t:objective>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test id="modifyAccountRequest_3">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account1.id}</id>
					<a n="zimbraMailSieveScript">${sieve_ComparatorTest_3}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse//admin:account"
					attr="name" match="${account1.name}" />
			</t:response>
		</t:test>

		<!-- Send a mail with attendees more than equal to 2. In case true, redirect 
			the mail to folder 1, else discard -->

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m f="!">
						<e t="t" a="${account1.name}" />
						<e t="t" a="${account2.name}" />
						<su>${subject3}</su>
						<mp ct="text/plain">
							<content>content 3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message1.id" />
			</t:response>
		</t:test>


		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>



		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail">
					<query>in:${folder2.name}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:c" attr="su"
					match="${subject3}" />
			</t:response>
		</t:test>


		<!-- Discard the mail as attendees is less than 2 -->

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>


		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m f="!">
						<e t="t" a="${account1.name}" />
						<su>${subject4}</su>
						<mp ct="text/plain">
							<content>content 4</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message1.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>



		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail">
					<query>in:${folder2.name}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:c" attr="su"
					match="${subject4}" emptyset="1" />
			</t:response>
		</t:test>

	</t:test_case>

	<t:test_case testcaseid="SendMail_And_checkFilter_Execution_4"
		type="smoke">
		<t:objective> Set sieve script and verify by sending mail
		</t:objective>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>


		<t:test id="modifyAccountRequest_4">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account1.id}</id>
					<a n="zimbraMailSieveScript">${sieve_ComparatorTest_4}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account"
					attr="name" match="${account1.name}" />
			</t:response>
		</t:test>

		<!-- Send a message with to,cc greater or equal to 2 -->

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m f="?">
						<e t="t" a="${account1.name}" />
						<e t="c" a="${account3.name}" />
						<su>${subject5}</su>
						<mp ct="text/plain">
							<content>Content 5</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message1.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account2.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail">
					<query>in:inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:c" attr="su"
					match="${subject5}" />
			</t:response>
		</t:test>

		<!-- Send a message with to,cc equal to account 1 user -->

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>


		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m f="?">
						<e t="t" a="${account1.name}" />
						<su>${subject6}</su>
						<mp ct="text/plain">
							<content>Content 6</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message1.id" />
			</t:response>
		</t:test>


		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account2.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail">
					<query>in:inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:c" attr="su"
					match="${subject6}" />
			</t:response>
		</t:test>

	</t:test_case>

	<t:test_case testcaseid="SendMail_And_checkFilter_Execution_5"
		type="smoke">
		<t:objective> Set sieve script and verify by sending mail
		</t:objective>


		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>



		<t:test id="modifyAccountRequest_5">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account1.id}</id>
					<a n="zimbraMailSieveScript">${sieve_ComparatorTest_5}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account"
					attr="name" match="${account1.name}" />
			</t:response>
		</t:test>

		<!-- Send a mail with any of to,cc as account1 user. -->
		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account1.name}" />
						<e t="c" a="${account2.name}" />
						<su>${subject7}</su>
						<mp ct="text/plain">
							<content>Content 7</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="message1.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail">
					<query>in:Junk</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:c" attr="su"
					match="${subject7}" />
			</t:response>
		</t:test>




	</t:test_case>

	<t:test_case testcaseid="SendMail_And_checkFilter_Execution_6"
		type="smoke">
		<t:objective> Set sieve script and verify by sending mail
		</t:objective>



		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>


		<t:test id="modifyAccountRequest_6">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account1.id}</id>
					<a n="zimbraMailSieveScript">${sieve_ComparatorTest_6}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account"
					attr="name" match="${account1.name}" />
			</t:response>
		</t:test>


		<!-- Send a mail with subject as non spam text. Redirect to user 3 -->

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m f="?">
						<e t="t" a="${account1.name}" />
						<su>${subject8}</su>
						<mp ct="text/plain">
							<content>Content 8</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message1.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail">
					<query>in:inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:c" attr="su"
					match="${subject8}" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account3.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail">
					<query>in:inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:c" attr="su"
					match="${subject8}" />
			</t:response>
		</t:test>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<!-- Send a mail with subject as "SPAM" text. Discard in this case -->

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m f="?">
						<e t="t" a="${account1.name}" />
						<su>${subject9}</su>
						<mp ct="text/plain">
							<content>Content 9</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message1.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account3.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail">
					<query>in:inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:c" attr="su"
					match="${subject9}" emptyset="1" />
			</t:response>
		</t:test>


	</t:test_case>

	<t:test_case testcaseid="SendMail_And_checkFilter_Execution_7"
		type="smoke">
		<t:objective> Set sieve script and verify by sending mail
		</t:objective>


		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>



		<t:test id="modifyAccountRequest_7">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account1.id}</id>
					<a n="zimbraMailSieveScript">${sieve_ComparatorTest_7}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account"
					attr="name" match="${account1.name}" />
			</t:response>
		</t:test>

		<!-- If count of to,cc less than 3, redirect the mail to folder 2 -->

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m f="?">
						<e t="t" a="${account1.name}" />
						<e t="t" a="${account2.name}" />
						<su>${subject10}</su>
						<mp ct="text/plain">
							<content>Content 10
							</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message1.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>


		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail">
					<query>in:${folder2.name}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:c" attr="su"
					match="${subject10}" />
			</t:response>
		</t:test>



		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<!-- If count of to,cc greater than 3, discard it -->

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m f="?">
						<e t="t" a="${account1.name}" />
						<e t="t" a="${account2.name}" />
						<e t="c" a="${account3.name}" />
						<e t="c" a="${account4.name}" />
						<su>${subject11}</su>
						<mp ct="text/plain">
							<content>Content 11
							</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message1.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>


		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail">
					<query>in:${folder2.name}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:c" attr="su"
					match="${subject11}" emptyset="1" />
			</t:response>
		</t:test>


	</t:test_case>

    <t:test_case testcaseid="SendMail_And_checkFilter_Execution_8"
		type="smoke">
		<t:objective> Set sieve script and verify by sending mail
		</t:objective>
		
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>


		<t:test id="modifyAccountRequest_8">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account1.id}</id>
					<a n="zimbraMailSieveScript">${sieve_ComparatorTest_8}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account"
					attr="name" match="${account1.name}" />
			</t:response>
		</t:test>
		
		<!-- Send message with from as admin user. Should go in folder 1 -->
		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m f="?">
						<e t="t" a="${account1.name}" />				
						<su>${subject12}</su>
						<mp ct="text/plain">
							<content>Content 12
							</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message1.id" />
			</t:response>
		</t:test>
		
		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>


		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail">
					<query>in:${folder1.name}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:c" attr="su"
					match="${subject12}"/>
			</t:response>
		</t:test>
		
		
		
		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account2.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
		
		<!-- Send message with from as user 2. Should go redirected to account3 -->
		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m f="?">
						<e t="t" a="${account1.name}" />				
						<su>${subject13}</su>
						<mp ct="text/plain">
							<content>Content 13
							</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message1.id" />
			</t:response>
		</t:test>
		
		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account3.name}</account>
					<password>${test_account1.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>
		
		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail">
					<query>in:inbox</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:c" attr="su"
					match="${subject13}"/>
			</t:response>
		</t:test>
		
</t:test_case>		

</t:tests>
