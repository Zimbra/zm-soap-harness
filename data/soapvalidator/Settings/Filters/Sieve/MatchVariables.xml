<t:tests xmlns:t="urn:zimbraTestHarness">

<!-- Following bugs are included as part of this testcase -->
<!-- zcs-876:- Sieve: match variable ${N} should work under the condition 0 <= N <= 9 
	Bug 107323:- Sieve: Match variable ${0001} should be treated as ${1}  
	zcs-616:- SIEVE: Match pattern containing more than four backslashes leads to incorrect behaviour -->

	<t:property name="account1.name"
		value="sieve1.${TIME}${COUNTER}@${defaultdomain.name}" />
	<t:property name="test_account1.password" value="test123" />
	<t:property name="subject1" value="SieveTest" />
	<t:property name="subject2" value="SieveTest" />
	<t:property name="subject3" value="Seive Test DeMo To Be Executed" />
	<t:property name="subject4" value="Seive Test DeMo To Be Executed 1" />
	<t:property name="subject5" value="Seive Test DeMo To Be Executed 2" />
	<t:property name="subject6" value="Seive Test DeMo To Be Executed 3" />
	<t:property name="subject7" value="Seive Test DeMo To Be Executed 4" />
	<t:property name="subject8" value="Seive Test DeMo To Be Executed 5" />
	<t:property name="folder1.name" value="folder${TIME}${COUNTER}" />
	<t:property name="folder2.name" value="folder${TIME}${COUNTER}" />
	<t:property name="01" value="$\{01}" />
	<t:property name="000000002" value="$\{000000002}" />
	<t:property name="9" value="$\{9}" />
	<t:property name="100" value="$\{100}" />
	<t:property name="-2" value="$\{-2}" />
	<t:property name="00010" value="$\{00010}" />
	<t:property name="-0001" value="$\{-0001}" />
	<t:property name="0" value="$\{0}" />
	
	<t:property name="tag1_expected" value="Sieve" />
	<t:property name="tag2_expected" value="e" />
	<t:property name="tag3_expected" value="e" />
	<t:property name="tag4_expected" value="Seive Test DeMo To Be Executed 5" />
	
	<t:property name="sieve_test1"
		value='require ["log","fileinto","relational","variables"];	
		if header :matches :comparator "i;ascii-casemap" "Subject" "*Test"
		{
			log "Log 1 as : ${01}"; 
			fileinto "Junk";
			tag "${01}";
		}   
' />
	
	<t:property name="sieve_test2"
		value='require ["log","fileinto","relational","variables"];	
		if header :matches :comparator "i;ascii-casemap" "Subject" "*T*st"
		{
			log "Log 2 as : ${000000002}";
			fileinto "Junk";
			tag "${000000002}";
		}   
' />

<t:property name="sieve_test3"
		value='require ["log","fileinto","relational","variables"];	
		if header :matches :comparator "i;ascii-casemap" "Subject" "*Test*D*M*T*B*E*c*t*d"
		{
			log "Log 3 as : ${9}";
			fileinto "Junk";
			tag "${9}";
		}   
' />
	
<t:property name="sieve_test4"
		value='require ["log","fileinto","relational"];	
		if header :matches :comparator "i;ascii-casemap" "Subject" "*Test*D*M*T*B*E*c*t*d*"
		{
			log "Log 4 as : ${100}"; 
			fileinto "Junk";
			tag "${100}";
		}   
' />

<t:property name="sieve_test5"
		value='require ["log","fileinto","relational"];	
	if header :matches :comparator "i;ascii-casemap" "Subject" "*Test*D*M*T*B*E*c*t*d*"
	{
		log "Log 5 as : ${-2}"; 
		fileinto "Junk";
		tag "${-2}";
	}   
' />

<t:property name="sieve_test6"
		value='require ["log","fileinto","relational"];	
		if header :matches :comparator "i;ascii-casemap" "Subject" "*Test*D*M*T*B*E*c*t*d*"
		{
			log "Log 6 as : ${00010}"; 
			fileinto "Junk";
			tag "${00010}";
		}   
' />

<t:property name="sieve_test7"
		value='require ["log","fileinto","tag","relational"];	
		if header :matches :comparator "i;ascii-casemap" "Subject" "*Test*D*M*T*B*E*c*t*d*"
		{ 
			log "Log 7 as : ${-0001}";
			fileinto "Junk";
			tag "${-0001}";
		}   
' />

<t:property name="sieve_test8"
		value='require ["log","fileinto","tag","variables","relational"];	
		if header :matches :comparator "i;ascii-casemap" "Subject" "*Test*D*M*T*B*E*c*t*d*"
		{ 
			log "Log 8 as : ${0}";
			fileinto "Junk";
			tag "${0}";
		}   
' />
 

	<t:test_case testcaseid="AcctSetup1_zcs876"
		type="smoke" bugids="zcs876">
		<t:objective> Create test account and login to first account
		</t:objective>

		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

	    <t:test>
	        <t:request xmlns="urn:zimbraAdmin">
	            <GetCosRequest>
	                <cos by="name">default</cos>
	            </GetCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="name" match="default"/>
	            <t:select path="//admin:GetCosResponse/admin:cos" attr="id" set="cosid"/>
	        </t:response>
	    </t:test>
	
	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveEditHeaderEnabled">TRUE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>
	    
		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account1.name}</name>
					<password>${defaultpassword.value}</password>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="id" set="account1.id" />
				<t:select path="//admin:CreateAccountResponse/admin:account"
					attr="name" set="account1.name" />
				<t:select
					path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]'
					set="account1.server" />
			</t:response>
		</t:test>
		  
	</t:test_case>

	<t:test_case testcaseid="ZCS-876_Filter1" type="smoke"
		bugids="ZCS-876">
		<t:objective>Set a match variable to 01. Should evaluate to 1 and message should be filed into Junk folder and tagged.
		</t:objective>
	
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test id="modifyAccountRequest_1">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account1.id}</id>
					<a n="zimbraMailSieveScript">${sieve_test1}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account"
					attr="name" match="${account1.name}" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account1.name}" />
						<su>${subject1}</su>
						<mp ct="text/plain">
							<content>content 1</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message1.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>in:Junk subject:${subject1}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="tn"
					match="${tag1_expected}" />
			</t:response>
		</t:test>
		
		
	
	</t:test_case>
		
	<t:test_case testcaseid="ZCS-876_Filter2" type="smoke"
		bugids="ZCS-876">
		<t:objective>Set a match variable to 000000002. Should evaluate to 2 and message should be filed into Junk folder and tagged.
		</t:objective>
	
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test id="modifyAccountRequest_2">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account1.id}</id>
					<a n="zimbraMailSieveScript">${sieve_test2}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account"
					attr="name" match="${account1.name}" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account1.name}" />
						<su>${subject2}</su>
						<mp ct="text/plain">
							<content>content 2</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message2.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>in:Junk subject:${subject2}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="tn"
					match="${tag2_expected}" />
			</t:response>
		</t:test>		
	
	</t:test_case>
	
	<t:test_case testcaseid="ZCS-876_Filter3" type="smoke"
		bugids="ZCS-876">
		<t:objective>Set a match variable to 9. Should evaluate 9th match and message should be filed into Junk folder and tagged.
		</t:objective>
	
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test id="modifyAccountRequest_3">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account1.id}</id>
					<a n="zimbraMailSieveScript">${sieve_test3}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account"
					attr="name" match="${account1.name}" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account1.name}" />
						<su>${subject3}</su>
						<mp ct="text/plain">
							<content>content 3</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message3.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>in:Junk subject:${subject3}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="tn"
					match="${tag3_expected}" />
			</t:response>
		</t:test>			
	
	</t:test_case>
	
	<t:test_case testcaseid="ZCS-876_Filter4" type="smoke"
		bugids="ZCS-876">
		<t:objective>Set a match variable to 100. Should evaluate to error in log  and message should not be filed into Junk folder and tagged.
		</t:objective>
	
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test id="modifyAccountRequest_4">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account1.id}</id>
					<a n="zimbraMailSieveScript">${sieve_test4}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account"
					attr="name" match="${account1.name}" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account1.name}" />
						<su>${subject4}</su>
						<mp ct="text/plain">
							<content>content 4</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message4.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>in:Junk subject:${subject4}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse//mail:su"
					match="${subject4}" emptyset="1"/>
			</t:response>
		</t:test>
		
		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>in:inbox subject:${subject4}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse//mail:su"
					match="${subject4}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="tn"
					emptyset="1" />
			</t:response>
		</t:test>			
	
	</t:test_case>
		
	<t:test_case testcaseid="ZCS-876_Filter5" type="smoke"
		bugids="ZCS-876">
		<t:objective>Set a match variable to -2. Should evaluate to error in log  and message should not be filed into Junk folder and tagged.
		</t:objective>
	
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test id="modifyAccountRequest_5">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account1.id}</id>
					<a n="zimbraMailSieveScript">${sieve_test5}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account"
					attr="name" match="${account1.name}" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account1.name}" />
						<su>${subject5}</su>
						<mp ct="text/plain">
							<content>content 5</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message5.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>in:Junk subject:${subject5}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse//mail:su"
					match="${subject5}" emptyset="1"/>
			</t:response>
		</t:test>	
		
		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>in:inbox subject:${subject5}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse//mail:su"
					match="${subject5}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="tn"
					emptyset="1" />
			</t:response>
		</t:test>		
	
	</t:test_case>
	
	<t:test_case testcaseid="ZCS-876_Filter6" type="smoke"
		bugids="ZCS-876">
		<t:objective>Set a match variable to 00010. Should evaluate to 10 and should give error in log  and message should not be filed into Junk folder and tagged.
		</t:objective>
	
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test id="modifyAccountRequest_6">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account1.id}</id>
					<a n="zimbraMailSieveScript">${sieve_test6}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account"
					attr="name" match="${account1.name}" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account1.name}" />
						<su>${subject6}</su>
						<mp ct="text/plain">
							<content>content 6</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message6.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>in:Junk subject:${subject6}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse//mail:su"
					match="${subject6}" emptyset="1"/>
			</t:response>
		</t:test>
		
		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>in:inbox subject:${subject6}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse//mail:su"
					match="${subject6}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="tn"
					emptyset="1" />
			</t:response>
		</t:test>			
	
	</t:test_case>
	
	<t:test_case testcaseid="ZCS-876_Filter7" type="smoke"
		bugids="ZCS-876">
		<t:objective>Set a match variable to -0001. Should evaluate to error in log  and message should not be filed into Junk folder and tagged.
		</t:objective>
	
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test id="modifyAccountRequest_7">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account1.id}</id>
					<a n="zimbraMailSieveScript">${sieve_test7}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account"
					attr="name" match="${account1.name}" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account1.name}" />
						<su>${subject7}</su>
						<mp ct="text/plain">
							<content>content 7</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message7.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>in:Junk subject:${subject7}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse//mail:su"
					match="${subject7}" emptyset="1"/>
			</t:response>
		</t:test>
		
		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>in:inbox subject:${subject7}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse//mail:su"
					match="${subject7}"/>
				<t:select path="//mail:SearchResponse/mail:m" attr="tn"
					emptyset="1" />
			</t:response>
		</t:test>			
	
	</t:test_case>
	
	<t:test_case testcaseid="ZCS-876_Filter8" type="smoke"
		bugids="ZCS-876">
		<t:objective>Set a match variable to 0. Should store entire string in variable and message should be filed into Junk folder and tagged.
		</t:objective>
	
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test id="modifyAccountRequest_8">
			<t:request>
				<ModifyAccountRequest xmlns="urn:zimbraAdmin">
					<id>${account1.id}</id>
					<a n="zimbraMailSieveScript">${sieve_test8}</a>
				</ModifyAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:ModifyAccountResponse/admin:account"
					attr="name" match="${account1.name}" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account1.name}" />
						<su>${subject8}</su>
						<mp ct="text/plain">
							<content>content 8</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="Sent_message8.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account1.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>in:Junk subject:${subject8}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="tn"
					match="${tag4_expected}" />
			</t:response>
		</t:test>	
	
	</t:test_case>

    <!-- zcs-616:- SIEVE: Match pattern containing more than four backslashes leads to incorrect behaviour -->
    <!-- Test accounts declaration -->
    <t:property name="zcs616_account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="zcs616_account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="zcs616_account3.name" value="test3.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="zcs616_account4.name" value="test4.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="zcs616_account5.name" value="test5.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="zcs616_account6.name" value="test6.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="zcs616_account7.name" value="test7.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="zcs616_account8.name" value="test8.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="zcs616_account9.name" value="test9.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="zcs616_account10.name" value="test10.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="zcs616_account11.name" value="test11.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="zcs616_account12.name" value="test12.${TIME}.${COUNTER}@${defaultdomain.name}" />
    <t:property name="zcs616_account13.name" value="test13.${TIME}.${COUNTER}@${defaultdomain.name}" />

    <!-- Variables declaration -->
    <t:property name="folder_inbox" value="Inbox" />
	<t:property name="dollar" value="$"/>

    <!-- Sieve rules declaration -->

<t:property name="sieve_rule1" value='require ["tag"];
	if header :matches "subject" "sieve\\\\test" {tag "matchestag";}
	if header :is "subject" "sieve\\\\test" {tag "istag";}
	if header :contains "subject" "sieve\\\\test" {tag "containstag";}'
/>

<t:property name="sieve_rule2" value='require ["tag"];
	if header :matches "subject" "sieve\\\\\\\\test" {tag "matchestag";}
	if header :is "subject" "sieve\\\\\\\\test" {tag "istag";}
	if header :contains "subject" "sieve\\\\\\\\test" {tag "containstag";}'
/> 

<t:property name="sieve_rule3" value='require ["tag"];
	if header :matches "subject" "sieve\\\\\\\\\\\\\\\\\\\\\\\\test" {tag "matchestag";}
	if header :is "subject" "sieve\\\\\\\\\\\\\\\\\\\\\\\\test" {tag "istag";}
	if header :contains "subject" "sieve\\\\\\\\\\\\\\\\\\\\\\\\test" {tag "containstag";}'
/>

<t:property name="sieve_rule4" value='require ["tag"];
	if header :matches "subject" "sieve\\\\\\\\test\\\\abc\\\\xyz" {tag "matchestag";}
	if header :is "subject" "sieve\\\\\\\\test\\\\abc\\\\xyz" {tag "istag";}
	if header :contains "subject" "sieve\\\\\\\\test\\\\abc\\\\xyz" {tag "containstag";}'
/>

<t:property name="sieve_rule5" value='require ["tag", "relational"];
	if header :matches :comparator "i;ascii-casemap" "subject" "sieve\\\\\\\\\\\\test" {tag "matchestag";}
	if header :is :comparator "i;ascii-casemap" "subject" "sieve\\\\\\\\\\\\test" {tag "istag";}
	if header :contains :comparator "i;ascii-casemap" "subject" "sieve\\\\\\\\\\\\test" {tag "containstag";}'
/> 

<t:property name="sieve_rule6" value='require ["tag", "relational"];
	if header :matches :comparator "i;ascii-casemap" "subject" "sieve\\\\\\\\\\\\test" {tag "matchestag";}
	if header :is :comparator "i;ascii-casemap" "subject" "sieve\\\\\\\\\\\\test" {tag "istag";}
	if header :contains :comparator "i;ascii-casemap" "subject" "sieve\\\\\\\\\\\\test" {tag "containstag";}'
/>

<t:property name="sieve_rule7" value='require ["tag", "relational"];
	if header :value "eq" :comparator "i;octet" "subject" "sieve\\\\\\\\\\\\\\\\test" {tag "matchestag";}'
/> 

<t:property name="sieve_rule8" value='require ["tag", "relational"];
	if header :value "eq" :comparator "i;octet" "subject" "sieve\\\\\\\\\\\\\\\\test" {tag "matchestag";}'
/>

<t:property name="sieve_rule9" value='require ["tag"];
	if header :matches "subject" "sieve\\\\test" {tag "notag1";}
	if header :matches "subject" "sievetest" {tag "notag2";}
	if header :matches "subject" "sieve\\\\??**\test" {tag "notag3";}
	if header :matches "subject" "nosubject" {tag "notag4";}
	if header :matches "subject" "sieve\\test" {tag "notag5";}
	if header :matches "subject" "sieve\\\test" {tag "notag6";}
	if header :matches "subject" "sieve\\\\\\\\test" {tag "matchestag";}'
/>

<t:property name="sieve_rule10" value='require ["tag"];
	if header :matches "subject" "\\\\\\\\\\\\\\\\sievetest" {tag "matchestag";}
	if header :is "subject" "\\\\\\\\\\\\\\\\sievetest" {tag "istag";}
	if header :contains "subject" "\\\\\\\\\\\\\\\\sievetest" {tag "containstag";}'
/>

<t:property name="sieve_rule11" value='require ["tag"];
	if header :matches "subject" "sievetest\\\\\\\\\\\\\\\\" {tag "matchestag";}
	if header :is "subject" "sievetest\\\\\\\\\\\\\\\\" {tag "istag";}
	if header :contains "subject" "sievetest\\\\\\\\\\\\\\\\" {tag "containstag";}'
/>

<t:property name="sieve_rule12" value='require ["tag", "variables"];
if header :matches "Subject" "*"
 {set "var1" "${dollar}{1}";
	if header :matches "Subject" "${dollar}{var1}" {tag "matchestag";}
}
if header :is "Subject" "sieve\\\\\\\\\\\\test"
 {set "var2" "${dollar}{1}";
	if header :is "Subject" "${dollar}{var2}" {tag "istag";}
}
if header :contains "Subject" "sieve\\\\\\\\\\\\test"
 {set "var3" "${dollar}{1}";
	if header :contains "Subject" "${dollar}{var3}" {tag "containstag";}
}
'/>

<t:property name="sieve_rule13" value='require ["tag", "variables"];
if header :matches "Subject" "*"
 {set "var1" "${dollar}{1}";
	if header :matches "Subject" "${dollar}{var1}" {tag "matchestag";}
}
if header :is "Subject" "sieve\\\\\\\\\\\\test"
 {set "var2" "${dollar}{1}";
	if header :is "Subject" "${dollar}{var2}" {tag "istag";}
}
if header :contains "Subject" "sieve\\\\\\\\test"
 {set "var1" "${dollar}{1}";
	if header :matches "Subject" "${dollar}{var1}" {tag "containstag";}
}
'/> 
 
    <t:test_case testcaseid="Ping" type="always">
        <t:objective>basic system check</t:objective>
        <t:test required="true">
            <t:request>
                <PingRequest xmlns="urn:zimbraAdmin" />
            </t:request>
            <t:response>
                <t:select path="//admin:PingResponse" />
            </t:response>
        </t:test>
    </t:test_case>

    <t:test_case testcaseid="AcctSetup1_create_account" type="always">
        <t:objective>create test accounts</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>


        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${zcs616_account1.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraMailSieveScript">${sieve_rule1}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${zcs616_account2.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraMailSieveScript">${sieve_rule2}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>
                
        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${zcs616_account3.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraMailSieveScript">${sieve_rule3}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${zcs616_account4.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraMailSieveScript">${sieve_rule4}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>
        
        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${zcs616_account5.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraMailSieveScript">${sieve_rule5}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>
        
        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${zcs616_account6.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraMailSieveScript">${sieve_rule6}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>
        
        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${zcs616_account7.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraMailSieveScript">${sieve_rule7}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>
        
        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${zcs616_account8.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraMailSieveScript">${sieve_rule8}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test> 
        
        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${zcs616_account9.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraMailSieveScript">${sieve_rule9}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>
        
        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${zcs616_account10.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraMailSieveScript">${sieve_rule10}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>                  

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${zcs616_account11.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraMailSieveScript">${sieve_rule11}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>

        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${zcs616_account12.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraMailSieveScript">${sieve_rule12}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>
        
        <t:test required="true">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${zcs616_account13.name}</name>
                    <password>${defaultpassword.value}</password>
                    <a n="zimbraMailSieveScript">${sieve_rule13}</a>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" />
            </t:response>
        </t:test>                                                   
    </t:test_case>


    <t:test_case testcaseid="zcs-616_rule1" type="smoke" bugids="zcs-616">
        <t:objective>Specify subject as "sieve\test" and "sieve\\test in rule". Message should be tagged </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a="${zcs616_account1.name}" />
                        <su>sieve\test</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${zcs616_account1.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="matchestag,istag,containstag" />
            </t:response>
        </t:test>

    </t:test_case>
    
    <t:test_case testcaseid="zcs-616_rule2" type="smoke" bugids="zcs-616">
        <t:objective>Specify subject as "sieve\\test" and "sieve\\\\test in rule". Message should be tagged </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a="${zcs616_account2.name}" />
                        <su>sieve\\test</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${zcs616_account2.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="matchestag,istag,containstag" />
            </t:response>
        </t:test>

    </t:test_case>
    
    <t:test_case testcaseid="zcs-616_rule3" type="smoke" bugids="zcs-616">
        <t:objective>Specify subject as "sieve\test" and "sieve\\test in rule". Message should be tagged </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a="${zcs616_account3.name}" />
                        <su>sieve\\\\\\test</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${zcs616_account3.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="matchestag,istag,containstag" />
            </t:response>
        </t:test>

    </t:test_case>
    
    <t:test_case testcaseid="zcs-616_rule4" type="smoke" bugids="zcs-616">
        <t:objective>Specify subject as "sieve\\test\abc\xyz" and "sieve\\\\test\\abc\\xyz" in rule. Message should be tagged </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a="${zcs616_account4.name}" />
                        <su>sieve\\test\abc\xyz</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${zcs616_account4.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="matchestag,istag,containstag" />
            </t:response>
        </t:test>

    </t:test_case>
    
    <t:test_case testcaseid="zcs-616_rule5" type="smoke" bugids="zcs-616">
        <t:objective>Specify subject as "sieve\\\test" and "i;ascii-casemap" "sieve\\\\\\test" in rule. Message should be tagged </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a="${zcs616_account5.name}" />
                        <su>sieve\\\test</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${zcs616_account5.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="matchestag,istag,containstag" />
            </t:response>
        </t:test>

    </t:test_case> 
    
    <t:test_case testcaseid="zcs-616_rule6" type="smoke" bugids="zcs-616">
        <t:objective>Specify subject as "sieve\\test" and "i;ascii-casemap" "sieve\\\\\\test" in rule. Message should not be tagged </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a="${zcs616_account6.name}" />
                        <su>sieve\\test</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${zcs616_account6.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="matchestag,istag,containstag" emptyset="1" />
            </t:response>
        </t:test>

    </t:test_case>
    
    <t:test_case testcaseid="zcs-616_rule7" type="smoke" bugids="zcs-616">
        <t:objective>Specify subject as "sieve\\\\test" with "i;octet" "sieve\\\\\\\\test" in rule. Message should be tagged </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a="${zcs616_account7.name}" />
                        <su>sieve\\\\test</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${zcs616_account7.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="matchestag" />
            </t:response>
        </t:test>

    </t:test_case>
    
    <t:test_case testcaseid="zcs-616_rule8" type="smoke" bugids="zcs-616">
        <t:objective>Specify subject as "sieve\\\test" with "i;octet" "sieve\\\\\\\\test" in rule. Message should not be tagged </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a="${zcs616_account8.name}" />
                        <su>sieve\\\test</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${zcs616_account8.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="matchestag" emptyset="1" />
            </t:response>
        </t:test>

    </t:test_case>
    
    <t:test_case testcaseid="zcs-616_rule9" type="smoke" bugids="zcs-616">
        <t:objective>Specify subject as "sieve\\test" and specify various non-matching subject and only one matching subject in rule. Message should not be tagged for non-matching subjects </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a="${zcs616_account9.name}" />
                        <su>sieve\\test</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${zcs616_account9.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="matchestag" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="notag1,notag2,notag3,notag4,notag5,notag6" emptyset="1"/>
            </t:response>
        </t:test>

    </t:test_case>
    
    <t:test_case testcaseid="zcs-616_rule10" type="smoke" bugids="zcs-616">
        <t:objective>Specify subject as "\\\\sievetest" and "\\\\\\\\sievetest" in rule. Message should be tagged </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a="${zcs616_account10.name}" />
                        <su>\\\\sievetest</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${zcs616_account10.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="matchestag,istag,containstag" />
            </t:response>
        </t:test>

    </t:test_case> 
    
    <t:test_case testcaseid="zcs-616_rule11" type="smoke" bugids="zcs-616">
        <t:objective>Specify subject as "sievetest\\\\\\\\" and "sievetest\\\\\\\\" in rule. Message should be tagged </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a="${zcs616_account11.name}" />
                        <su>sievetest\\\\</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${zcs616_account11.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="matchestag,istag,containstag" />
            </t:response>
        </t:test>

    </t:test_case>
    
    <t:test_case testcaseid="zcs-616_rule12" type="smoke" bugids="zcs-616">
        <t:objective>Variable and nested loop test. Message should be tagged </t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a="${zcs616_account12.name}" />
                        <su>sieve\\\test</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${zcs616_account12.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="matchestag,containstag" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="istag" emptyset="1"/>
            </t:response>
        </t:test>

    </t:test_case>
    
    <t:test_case testcaseid="zcs-616_rule13" type="smoke" bugids="zcs-616">
        <t:objective>Negative tes for Variable and nested loop. Message should be tagged for ":matches *" only and not for :is and contains</t:objective>
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SendMsgRequest xmlns="urn:zimbraMail">
                    <m>
                        <e t="t" a="${zcs616_account13.name}" />
                        <su>sievetest</su>
                        <mp ct="text/plain">
                            <content>Hello</content>
                        </mp>
                    </m>
                </SendMsgRequest>
            </t:request>
            <t:response>
                <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="msg1.id" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <AuthRequest xmlns="urn:zimbraAccount">
                    <account by="name">${zcs616_account13.name}</account>
                    <password>${defaultpassword.value}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
                <t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
            </t:response>
        </t:test>

        <t:test>
            <t:request>
                <SearchRequest xmlns="urn:zimbraMail" types="message">
                    <query>in:${folder_inbox}</query>
                </SearchRequest>
            </t:request>
            <t:response>
            	<t:select path="//mail:SearchResponse/mail:m" attr="tn" match="matchestag" />
                <t:select path="//mail:SearchResponse/mail:m" attr="tn" match="istag,containstag" emptyset="1"/>
            </t:response>
        </t:test>

    </t:test_case>

    <t:property name="account14.name"
		value="test14.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="account15.name"
		value="test15.${TIME}.${COUNTER}@${defaultdomain.name}" />
	<t:property name="Subject" value="test123" />
	<t:property name="00009" value="$\{00009}" />
	<t:property name="00002" value="$\{00002}" />
	<t:property name="000004" value="$\{000004}" />
	<t:property name="0000005" value="$\{0000005}" />

	<t:property name="sieve_test14"
		value='require ["editheader", "variables"];
		if header :matches :comparator "i;ascii-casemap" "Subject" "t*t*"
		{
		    addheader :last "X-New-Header1" "${00009}";
			addheader :last "X-New-Header2" "${00002}";
		}
' />

	<t:property name="sieve_test15"
		value='require ["editheader", "variables"];
		if header :matches :comparator "i;ascii-casemap" "Subject" "t??t1??"
		{
		    addheader :last "X-New-Header1" "${0000005}";
			addheader :last "X-New-Header2" "${000004}";
		}
' />

	<t:test_case testcaseid="AcctSetup1_create_account" type="always">
		<t:objective>create test accounts</t:objective>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>
		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account14.name}</name>
					<password>${defaultpassword.value}</password>
					<a n="zimbraAdminSieveScriptBefore">${sieve_test14}</a>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account" />
			</t:response>
		</t:test>
		<t:test required="true">
			<t:request>
				<CreateAccountRequest xmlns="urn:zimbraAdmin">
					<name>${account15.name}</name>
					<password>${defaultpassword.value}</password>
					<a n="zimbraAdminSieveScriptBefore">${sieve_test15}</a>
				</CreateAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:CreateAccountResponse/admin:account" />
			</t:response>
		</t:test>
	</t:test_case>

	<t:test_case testcaseid="zcs-616_rule14" type="smoke"
		bugids="zcs-616">
		<t:objective>Multiple occurance wildcard.
			Set a match variable to 00009. It should be parsed to empty string since
			the match variables don't exist.
		</t:objective>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account14.name}" />
						<su>${Subject}</su>
						<mp ct="text/plain">
							<content>Hello</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account14.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>subject:${Subject}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

	<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-New-Header1" match="" />
				<t:select attr="X-New-Header2" match="123" />
			</t:restServletResponse>
		</t:resttest> 
	</t:test_case>

	<t:test_case testcaseid="zcs-616_rule15" type="smoke"
		bugids="zcs-616">
		<t:objective>Single occurance wildcard.
			Set a match variable to 0000005. It should be parsed to empty string
			since the match variables don't exist.
		</t:objective>
		<t:test required="true">
			<t:request>
				<AuthRequest xmlns="urn:zimbraAdmin">
					<name>${admin.user}</name>
					<password>${admin.password}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SendMsgRequest xmlns="urn:zimbraMail">
					<m>
						<e t="t" a="${account15.name}" />
						<su>${Subject}</su>
						<mp ct="text/plain">
							<content>Hello</content>
						</mp>
					</m>
				</SendMsgRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SendMsgResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<AuthRequest xmlns="urn:zimbraAccount">
					<account by="name">${account15.name}</account>
					<password>${defaultpassword.value}</password>
				</AuthRequest>
			</t:request>
			<t:response>
				<t:select path="//acct:AuthResponse/acct:lifetime" match="^\d+$" />
				<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
			</t:response>
		</t:test>

		<t:test>
			<t:request>
				<SearchRequest xmlns="urn:zimbraMail" types="message">
					<query>subject:${Subject}</query>
				</SearchRequest>
			</t:request>
			<t:response>
				<t:select path="//mail:SearchResponse/mail:m" attr="id"
					set="msg1.id" />
			</t:response>
		</t:test>

		<t:resttest>
			<t:restServletRequest>
				<id>${msg1.id}</id>
			</t:restServletRequest>
			<t:restServletResponse>
				<t:select attr="X-New-Header1" match="" />
				<t:select attr="X-New-Header2" match="3" />
			</t:restServletResponse>
		</t:resttest>
	</t:test_case>

    <t:finally type="always">
        <t:objective>reset cosconfig to default </t:objective>
        
        <t:test required="true">
            <t:request>
                <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
                </AuthRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
            </t:response>
        </t:test>

	    <t:test>
	        <t:request>
	            <ModifyCosRequest xmlns="urn:zimbraAdmin">
	                <id>${cosid}</id>
	                <a n="zimbraSieveEditHeaderEnabled">FALSE</a>
	            </ModifyCosRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//admin:ModifyCosResponse/admin:cos"/>            
	        </t:response>
	    </t:test>

    </t:finally>	
</t:tests>
