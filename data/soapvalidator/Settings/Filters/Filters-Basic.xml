<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account2.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_acct1.server" value="NOT_DEFINED"/>
<t:property name="test_acct2.server" value="NOT_DEFINED"/>

<t:property name="filter1.name" value="filter1.${TIME}.${COUNTER}"/>
<t:property name="filter2.name" value="filter2.${TIME}.${COUNTER}"/>
<t:property name="compose.content" value="Content in the message is contents..."/>
<t:property name="uploadFile.name" value="${soapxml.root}/Settings/Filters/pdftest.pdf"/>

<t:property name="msg01.subject" value="email04A"/>
<t:property name="msg01.file" value="${testMailRaw.root}/email04/email04a.txt"/>
<t:property name="msg02.subject" value="email04B"/>
<t:property name="msg02.file" value="${testMailRaw.root}/email04/email04b.txt"/>




<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
         <t:response>
             <t:select path="//admin:PingResponse"/>
         </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="AcctSetup1_filters_basic" type="always" >
    <t:objective> Create test account and login to first account </t:objective>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
	    </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="filters_basic01" type="bhr">
    <t:objective>Create a basic rule to flag a message</t:objective>

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
        <t:request>
            <ModifyFilterRulesRequest xmlns="urn:zimbraMail">
                <filterRules>
					<filterRule name="${filter1.name}" active="1">
                         <filterTests condition="anyof">
                         <headerTest header="subject" stringComparison="is" value="${msg01.subject}"/>                    	     
                        </filterTests>
                        <filterActions> 
                        	<actionFlag flagName="flagged" />    
                                         
                        </filterActions>
                    </filterRule>
                 </filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>
    
   <!-- Get the rules to check if it has got created -->
	<t:test>
        <t:request>
            <GetFilterRulesRequest xmlns="urn:zimbraMail"/>
	 </t:request>
	 <t:response>
            <t:select path="//mail:GetFilterRulesResponse"/>
        </t:response>
    </t:test>
    
    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
			<to>${test_account1.name}</to>
			<from>${nonZimbraUser.name}</from>
			<server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    

    <t:test id="filters_basic02d" depends="filters_basic01a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${msg01.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${msg01.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="f" match=".*f.*"/>
        </t:response>
    </t:test>
    
</t:test_case>




</t:tests>

