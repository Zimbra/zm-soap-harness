<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="account2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="account3.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="domain1.black.name" value="blacklist1${TIME}${COUNTER}.com"/>
<t:property name="domain2.black.name" value="blacklist2${TIME}${COUNTER}.com"/>

<t:property name="domain1.white.name" value="whitelist1${TIME}${COUNTER}.com"/>
<t:property name="domain2.white.name" value="whitelist2${TIME}${COUNTER}.com"/>

<t:property name="account4.name" value="account4.${TIME}.${COUNTER}@${domain1.black.name}"/>
<t:property name="account5.name" value="account5.${TIME}.${COUNTER}@${domain2.black.name}"/>

<t:property name="account6.name" value="account6.${TIME}.${COUNTER}@${domain1.white.name}"/>
<t:property name="account7.name" value="account7.${TIME}.${COUNTER}@${domain2.white.name}"/>

<t:property name="account7a.name" value="account7a.${TIME}.${COUNTER}@${domain2.white.name}"/>
<t:property name="account7b.name" value="account7b.${TIME}.${COUNTER}@${domain2.white.name}"/>
<t:property name="account7c.name" value="account7c.${TIME}.${COUNTER}@${domain2.black.name}"/>
<t:property name="account7d.name" value="account7d.${TIME}.${COUNTER}@${domain2.black.name}"/>

<t:property name="account8a.name" value="account8a.${TIME}.${COUNTER}@${domain2.white.name}"/>
<t:property name="account8b.name" value="account8b.${TIME}.${COUNTER}@${domain2.white.name}"/>
<t:property name="account8c.name" value="account8c.${TIME}.${COUNTER}@${domain2.black.name}"/>
<t:property name="account8d.name" value="account8d.${TIME}.${COUNTER}@${domain2.black.name}"/>

<t:property name="account9a.name" value="account9a.${TIME}.${COUNTER}@${domain2.white.name}"/>
<t:property name="account9b.name" value="account9b.${TIME}.${COUNTER}@${domain2.white.name}"/>
<t:property name="account9c.name" value="account9c.${TIME}.${COUNTER}@${domain2.black.name}"/>
<t:property name="account9d.name" value="account9d.${TIME}.${COUNTER}@${domain2.black.name}"/>

<t:property name="account10a.name" value="account10a.${TIME}.${COUNTER}@${domain2.white.name}"/>
<t:property name="account10b.name" value="account10b.${TIME}.${COUNTER}@${domain2.white.name}"/>
<t:property name="account10c.name" value="account10c.${TIME}.${COUNTER}@${domain2.black.name}"/>
<t:property name="account10d.name" value="account10d.${TIME}.${COUNTER}@${domain2.black.name}"/>
<t:property name="account10e.name" value="account10e.${TIME}.${COUNTER}@${domain2.white.name}"/>


<t:property name="account11a.name" value="account11a.${TIME}.${COUNTER}@${domain2.white.name}"/>
<t:property name="account11b.name" value="account11b.${TIME}.${COUNTER}@${domain2.white.name}"/>

<!-- authentication -->
<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<!-- Login as the admin to get an auth token -->
<t:test_case testcaseid="acct1_setup" type="always" >
    <t:objective>create test account</t:objective>
	<t:steps>1. Login to admin.
			2. Create a test account.
	</t:steps>

    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test id="CreateDomainRequest1">
        <t:request> 
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain1.black.name}</name>
            </CreateDomainRequest>
        </t:request>
		<t:response>
			<t:select path="//admin:CreateDomainResponse"/>
		</t:response>
    </t:test>

	<t:test id="CreateDomainRequest2">
        <t:request> 
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain2.black.name}</name>
            </CreateDomainRequest>
        </t:request>
		<t:response>
			<t:select path="//admin:CreateDomainResponse"/>
		</t:response>
    </t:test>

	<t:test id="CreateDomainRequest3">
        <t:request> 
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain1.white.name}</name>
            </CreateDomainRequest>
        </t:request>
		<t:response>
			<t:select path="//admin:CreateDomainResponse"/>
		</t:response>
    </t:test>

	<t:test id="CreateDomainRequest4">
        <t:request> 
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain2.white.name}</name>
            </CreateDomainRequest>
        </t:request>
		<t:response>
			<t:select path="//admin:CreateDomainResponse"/>
		</t:response>
    </t:test>

    <t:test  required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>

    <t:test  required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>

    <t:test  required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
        </t:response>
    </t:test>

    <t:test  required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct4.server"/>
        </t:response>
    </t:test>

	<t:test  required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account5.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account5.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct5.server"/>
        </t:response>
    </t:test>

	<t:test  required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account6.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account6.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct6.server"/>
        </t:response>
    </t:test>

	<t:test  required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account7.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account7.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct7.server"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="GetWhiteBlackListRequest_Basic_01" type="bhr">
    <t:objective>Verify that GetWhiteBlackListRequest set to domain is obeyed </t:objective>
    <t:steps>
	1. Login to Account1.
	2. Set ModifyWhiteBlackListRequest (blacklist) to a domain and send message from that domain user
	3. Do a GetWhiteBlackList and check the response
    </t:steps>


<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<ModifyWhiteBlackListRequest xmlns="urn:zimbraAccount">
				<blackList>
					<addr op="+">${domain1.black.name}</addr>
				</blackList>
			</ModifyWhiteBlackListRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:ModifyWhiteBlackListResponse"/>

        </t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<GetWhiteBlackListRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
            <t:select path="//acct:GetWhiteBlackListResponse/acct:blackList/acct:addr" match="${domain1.black.name}"/>

        </t:response>
	</t:test>


</t:test_case>

<t:test_case testcaseid="GetWhiteBlackListRequest_Basic_02" type="bhr">
    <t:objective>Verify that GetWhiteBlackListRequest set to user is obeyed </t:objective>
    <t:steps>
	1. Login to Account1.
	2. Set ModifyWhiteBlackListRequest (blacklist) to a user and send message from that domain user
	3. Do a get on it and check the response
    </t:steps>


<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<ModifyWhiteBlackListRequest xmlns="urn:zimbraAccount">
				<blackList>
					<addr op="+">${account5.name}</addr>
				</blackList>
			</ModifyWhiteBlackListRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:ModifyWhiteBlackListResponse"/>

        </t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetWhiteBlackListRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetWhiteBlackListResponse/acct:blackList/acct:addr" match="${account5.name}"/>
        </t:response>
	</t:test>
	
</t:test_case>

<t:test_case testcaseid="GetWhiteBlackListRequest_Basic_03" type="bhr">
    <t:objective>Verify that GetWhiteBlackListRequest set to user  + domain is obeyed </t:objective>
    <t:steps>
	1. Login to Account1.
	2. Set ModifyWhiteBlackListRequest (blacklist) to a user and domain
	3. Do a get on it and check the response
    </t:steps>


<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<ModifyWhiteBlackListRequest xmlns="urn:zimbraAccount">
				<blackList>
					<addr op="+">${account5.name}</addr>
					<addr op="+">${domain1.black.name}</addr>
				</blackList>
			</ModifyWhiteBlackListRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:ModifyWhiteBlackListResponse"/>

        </t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetWhiteBlackListRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetWhiteBlackListResponse/acct:blackList/acct:addr" match="${account5.name}"/>
			<t:select path="//acct:GetWhiteBlackListResponse/acct:blackList/acct:addr" match="${domain1.black.name}"/>
        </t:response>
	</t:test>
	
</t:test_case>

<t:test_case testcaseid="GetWhiteBlackListRequest_Basic_04" type="bhr">
    <t:objective>Verify that GetWhiteBlackListRequest set to domain is obeyed </t:objective>
    <t:steps>
	1. Login to Account1.
	2. Set ModifyWhiteBlackListRequest (whitelist) to a domain and send message from that domain user
	3. Get the WhiteBlackList and check the response
    </t:steps>


<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<ModifyWhiteBlackListRequest xmlns="urn:zimbraAccount">
				<whiteList>
					<addr op="+">${domain1.white.name}</addr>
				</whiteList>
			</ModifyWhiteBlackListRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:ModifyWhiteBlackListResponse"/>

        </t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetWhiteBlackListRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetWhiteBlackListResponse/acct:whiteList/acct:addr" match="${domain1.white.name}"/>
        </t:response>
	</t:test>
	
</t:test_case>

<t:test_case testcaseid="GetWhiteBlackListRequest_Basic_05" type="bhr">
    <t:objective>Verify that GetWhiteBlackListRequest set to user and domain is obeyed </t:objective>
    <t:steps>
	1. Login to Account1.
	2. Set ModifyWhiteBlackListRequest (whitelist) to a user and send message from that domain user
	3. Do a get on whiteblacklist and check the response
    </t:steps>


<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<ModifyWhiteBlackListRequest xmlns="urn:zimbraAccount">
				<whiteList>
					<addr op="+">${account7.name}</addr>
				</whiteList>
			</ModifyWhiteBlackListRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:ModifyWhiteBlackListResponse"/>

        </t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetWhiteBlackListRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetWhiteBlackListResponse/acct:whiteList/acct:addr" match="${account7.name}"/>
        </t:response>
	</t:test>
	
</t:test_case>

<t:test_case testcaseid="GetWhiteBlackListRequest_Basic_06" type="bhr">
    <t:objective>Verify that GetWhiteBlackListRequest set to user and domain is obeyed </t:objective>
    <t:steps>
	1. Login to Account1.
	2. Set ModifyWhiteBlackListRequest (whitelist) + (blacklist) to a user and send message from that domain user
	3. Do a get on whiteblacklist and check the response
    </t:steps>


<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<ModifyWhiteBlackListRequest xmlns="urn:zimbraAccount">
				<whiteList>
					<addr op="+">${account7.name}</addr>
					<addr op="+">${domain2.white.name}</addr>
				</whiteList>
				<blackList>
					<addr op="+">${account6.name}</addr>
					<addr op="+">${domain2.black.name}</addr>
				</blackList>
			</ModifyWhiteBlackListRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:ModifyWhiteBlackListResponse"/>

        </t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<GetWhiteBlackListRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetWhiteBlackListResponse">
				<t:select path="//acct:whiteList/acct:addr" match="${account7.name}"/>
				<t:select path="//acct:whiteList/acct:addr" match="${domain2.white.name}"/>
				<t:select path="//acct:blackList/acct:addr" match="${account6.name}"/>
				<t:select path="//acct:blackList/acct:addr" match="${domain2.black.name}"/>
			</t:select>
        </t:response>
	</t:test>
</t:test_case>

<t:test_case testcaseid="GetWhiteBlackListRequest_Basic_07" type="bhr">
    <t:objective>Remove all records from whitelist and black list. </t:objective>
    <t:steps>
	1. Login to Account1.
	2. Add 2 records in whitelist and black list using ModifyWhiteBlackListRequest
	2. Set ModifyWhiteBlackListRequest with nothing.
	3. Verify all records removed from whitelist and black list.
    </t:steps>


<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>



    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<ModifyWhiteBlackListRequest xmlns="urn:zimbraAccount">
				<whiteList>
					<addr op="+">${account7a.name}</addr>
					<addr op="+">${account7b.name}</addr>
				</whiteList>
				<blackList>
					<addr op="+">${account7c.name}</addr>
					<addr op="+">${account7d.name}</addr>
				</blackList>
			</ModifyWhiteBlackListRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:ModifyWhiteBlackListResponse"/>
        </t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<GetWhiteBlackListRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetWhiteBlackListResponse">
				<t:select path="//acct:whiteList/acct:addr" match="${account7a.name}"/>
				<t:select path="//acct:whiteList/acct:addr" match="${account7b.name}"/>
				<t:select path="//acct:blackList/acct:addr" match="${account7c.name}"/>
				<t:select path="//acct:blackList/acct:addr" match="${account7d.name}"/>
			</t:select>
        </t:response>
	</t:test>
	<t:test>
		<t:request>
			<ModifyWhiteBlackListRequest xmlns="urn:zimbraAccount">
				<whiteList>
				</whiteList>
				<blackList>
				</blackList>
			</ModifyWhiteBlackListRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:ModifyWhiteBlackListResponse"/>
        </t:response>
	</t:test>
	<t:test>
		<t:request>
			<GetWhiteBlackListRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetWhiteBlackListResponse">
				<t:select path="//acct:whiteList/acct:addr" emptyset="1"/>
				<t:select path="//acct:blackList/acct:addr" emptyset="1"/>
			</t:select>
        </t:response>
	</t:test>		


</t:test_case>

<t:test_case testcaseid="GetWhiteBlackListRequest_Basic_08" type="bhr">
    <t:objective>Remove all records only from whitelist </t:objective>
    <t:steps>
	1. Login to Account1.
	2. Add 2 records in whitelist and black list using ModifyWhiteBlackListRequest
	2. Set ModifyWhiteBlackListRequest with nothing in Whitelist.
	3. Verify all records removed from whitelist and none from black list.
    </t:steps>


<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>



    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<ModifyWhiteBlackListRequest xmlns="urn:zimbraAccount">
				<whiteList>
					<addr op="+">${account8a.name}</addr>
					<addr op="+">${account8b.name}</addr>
				</whiteList>
				<blackList>
					<addr op="+">${account8c.name}</addr>
					<addr op="+">${account8d.name}</addr>
				</blackList>
			</ModifyWhiteBlackListRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:ModifyWhiteBlackListResponse"/>
        </t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<GetWhiteBlackListRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetWhiteBlackListResponse">
				<t:select path="//acct:whiteList/acct:addr" match="${account8a.name}"/>
				<t:select path="//acct:whiteList/acct:addr" match="${account8b.name}"/>
				<t:select path="//acct:blackList/acct:addr" match="${account8c.name}"/>
				<t:select path="//acct:blackList/acct:addr" match="${account8d.name}"/>
			</t:select>
        </t:response>
	</t:test>
	<t:test>
		<t:request>
			<ModifyWhiteBlackListRequest xmlns="urn:zimbraAccount">
				<whiteList>
				</whiteList>
			</ModifyWhiteBlackListRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:ModifyWhiteBlackListResponse"/>
        </t:response>
	</t:test>
	<t:test>
		<t:request>
			<GetWhiteBlackListRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetWhiteBlackListResponse">
				<t:select path="//acct:whiteList/acct:addr" emptyset="1"/>
				<t:select path="//acct:blackList/acct:addr" match="${account8c.name}"/>
				<t:select path="//acct:blackList/acct:addr" match="${account8d.name}"/>
			</t:select>
        </t:response>
	</t:test>		


</t:test_case>

<t:test_case testcaseid="GetWhiteBlackListRequest_Basic_09" type="bhr">
    <t:objective>Remove all records only from blacklist </t:objective>
    <t:steps>
	1. Login to Account1.
	2. Add 2 records in whitelist and black list using ModifyWhiteBlackListRequest
	2. Set ModifyWhiteBlackListRequest with nothing in Blacklist.
	3. Verify all records removed from blacklist and none from white list.
    </t:steps>


<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>



    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<ModifyWhiteBlackListRequest xmlns="urn:zimbraAccount">
				<whiteList>
					<addr op="+">${account9a.name}</addr>
					<addr op="+">${account9b.name}</addr>
				</whiteList>
				<blackList>
					<addr op="+">${account9c.name}</addr>
					<addr op="+">${account9d.name}</addr>
				</blackList>
			</ModifyWhiteBlackListRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:ModifyWhiteBlackListResponse"/>
        </t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<GetWhiteBlackListRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetWhiteBlackListResponse">
				<t:select path="//acct:whiteList/acct:addr" match="${account9a.name}"/>
				<t:select path="//acct:whiteList/acct:addr" match="${account9b.name}"/>
				<t:select path="//acct:blackList/acct:addr" match="${account9c.name}"/>
				<t:select path="//acct:blackList/acct:addr" match="${account9d.name}"/>
			</t:select>
        </t:response>
	</t:test>
	<t:test>
		<t:request>
			<ModifyWhiteBlackListRequest xmlns="urn:zimbraAccount">
				<blackList>
				</blackList>
			</ModifyWhiteBlackListRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:ModifyWhiteBlackListResponse"/>
        </t:response>
	</t:test>
	<t:test>
		<t:request>
			<GetWhiteBlackListRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetWhiteBlackListResponse">
				<t:select path="//acct:whiteList/acct:addr" match="${account9a.name}"/>
				<t:select path="//acct:whiteList/acct:addr" match="${account9b.name}"/>
				<t:select path="//acct:blackList/acct:addr" emptyset="1"/>
			</t:select>
        </t:response>
	</t:test>		


</t:test_case>

<t:test_case testcaseid="GetWhiteBlackListRequest_Basic_10" type="bhr">
    <t:objective>Add and remove whitelist and black list in same request </t:objective>
    <t:steps>
	1. Login to Account1.
	2. Add 2 records in whitelist and black list using ModifyWhiteBlackListRequest
	2. Again ModifyWhiteBlackListRequest with remove one record from black list and add a record in whitelist.
	3. Verify all records removed from blacklist and none from white list.
    </t:steps>


<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>


    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<ModifyWhiteBlackListRequest xmlns="urn:zimbraAccount">
				<whiteList>
					<addr op="+">${account10a.name}</addr>
					<addr op="+">${account10b.name}</addr>
				</whiteList>
				<blackList>
					<addr op="+">${account10c.name}</addr>
					<addr op="+">${account10d.name}</addr>
				</blackList>
			</ModifyWhiteBlackListRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:ModifyWhiteBlackListResponse"/>
        </t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<GetWhiteBlackListRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetWhiteBlackListResponse">
				<t:select path="//acct:whiteList/acct:addr" match="${account10a.name}"/>
				<t:select path="//acct:whiteList/acct:addr" match="${account10b.name}"/>
				<t:select path="//acct:blackList/acct:addr" match="${account10c.name}"/>
				<t:select path="//acct:blackList/acct:addr" match="${account10d.name}"/>
			</t:select>
        </t:response>
	</t:test>
	<t:test>
		<t:request>
			<ModifyWhiteBlackListRequest xmlns="urn:zimbraAccount">
				<whiteList>
					<addr op="+">${account10e.name}</addr>
				</whiteList>
				<blackList>
					<addr op="-">${account10d.name}</addr>
				</blackList>
			</ModifyWhiteBlackListRequest>
		</t:request>
		<t:response>
            <t:select path="//acct:ModifyWhiteBlackListResponse"/>
        </t:response>
	</t:test>
	<t:test>
		<t:request>
			<GetWhiteBlackListRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetWhiteBlackListResponse">
				<t:select path="//acct:whiteList/acct:addr" match="${account10a.name}"/>
				<t:select path="//acct:whiteList/acct:addr" match="${account10b.name}"/>
				<t:select path="//acct:blackList/acct:addr" match="${account10c.name}"/>
				<t:select path="//acct:blackList/acct:addr" match="${account10d.name}" emptyset="1"/>
				<t:select path="//acct:whiteList/acct:addr" match="${account10e.name}"/>
			</t:select>
        </t:response>
	</t:test>		


</t:test_case>

<t:test_case testcaseid="GetWhiteBlackListRequest_Basic_11" type="bhr">
    <t:objective>Add same record to whitelist and blacklist. </t:objective>
    <t:steps>
	1. Login to Account1.
	2. Add same record to whitelist and blacklist. 
	3. It should give error.

    </t:steps>


<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>


    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<ModifyWhiteBlackListRequest xmlns="urn:zimbraAccount">
				<whiteList>
					<addr op="+">${account11a.name}</addr>
					<addr>${account11b.name}</addr>
				</whiteList>
			</ModifyWhiteBlackListRequest>
		</t:request>
		<t:response>
            <t:select path="//zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
	</t:test>

</t:test_case>
</t:tests>