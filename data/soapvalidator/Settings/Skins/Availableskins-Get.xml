<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="skins${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="skins${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="COS.name" value="skincos${TIME}${COUNTER}"/>

<t:property name="skin1" value="harvest"/>

<t:property name="blank" value=""/>
<t:property name="space" value="             "/>
<t:property name="spchar" value=":''&lt;//\\"/>
<t:property name="sometext" value="some text"/>
<t:property name="negative" value="-1"/>



<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="test_acct1.server" value="NOT_DEFINED"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct1_setup" type="always" >
    <t:objective>create test account</t:objective>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  


</t:test_case>


<t:test_case testcaseid="availableskins_get01" type="smoke" >
    <t:objective>Basic test of GetAvailableSkinsRequest</t:objective>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>
    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetAvailableSkinsRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetAvailableSkinsResponse/acct:skin" />
		</t:response>
	</t:test>  

</t:test_case>


<t:test_case testcaseid="availableskins_get02" type="functional" bugids="8613" >
    <t:objective>Verify that the skin selected in the cos is displayed for the account.</t:objective>
	<t:steps>
		1. Login into admin.
		2. Create COS with zimbraPrefSkin=harvest
		3. Create an account with the above COS.
		4. Login into the account.
		5. Check the skin.
	</t:steps>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test id = "CreateCosRequest1a" depends="admin_login">
        <t:request>
            <CreateCosRequest xmlns="urn:zimbraAdmin">
                <name>${COS.name}</name>
				<a n="zimbraPrefSkin">${skin1}</a>
            </CreateCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos.id"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraCOSId">${cos.id}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="accountid.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>  

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
				<prefs><pref name="zimbraPrefSkin"/></prefs>
            </AuthRequest>
            </t:request>
        <t:response>
			<t:select path="//acct:AuthResponse/acct:prefs/acct:pref[@name='zimbraPrefSkin']" match="${skin1}" />
        </t:response>
    </t:test>

</t:test_case>


</t:tests>