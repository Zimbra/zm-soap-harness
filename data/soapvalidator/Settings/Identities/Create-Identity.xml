<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account5.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="accountnonexist.name" value="test${TIME}.${COUNTER}@abcd.com"/>

<t:property name="DisplayFrom1.name" value="newdisplayname1${TIME}.${COUNTER}"/>

<t:property name="Identity1.name" value="identity1${TIME}.${COUNTER}"/>
<t:property name="Identity2.name" value="identity2${TIME}.${COUNTER}"/>
<t:property name="Identity3.name" value="identity3${TIME}.${COUNTER}"/>
<t:property name="Identity4.name" value="identity4${TIME}.${COUNTER}"/>
<t:property name="Identity5.name" value="identity5${TIME}.${COUNTER}"/>
<t:property name="Identity6.name" value="identity6${TIME}.${COUNTER}"/>
<t:property name="Identity7.name" value="identity7${TIME}.${COUNTER}"/>
<t:property name="Identity8.name" value="identity8${TIME}.${COUNTER}"/>
<t:property name="Identity9.name" value="identity9${TIME}.${COUNTER}"/>
<t:property name="Identity10.name" value="identity10${TIME}.${COUNTER}"/>
<t:property name="Identity11.name" value="identity11${TIME}.${COUNTER}"/>
<t:property name="Identity12.name" value="identity12${TIME}.${COUNTER}"/>
<t:property name="Identity13.name" value="identity13${TIME}.${COUNTER}"/>
<t:property name="Identity14.name" value="identity14${TIME}.${COUNTER}"/>
<t:property name="Identity15.name" value="identity15${TIME}.${COUNTER}"/>
<t:property name="Identity16.name" value="identity16${TIME}.${COUNTER}"/>
<t:property name="Identity17.name" value="identity17${TIME}.${COUNTER}"/>
<t:property name="Identity18.name" value="identity18${TIME}.${COUNTER}"/>
<t:property name="Identity19.name" value="identity19${TIME}.${COUNTER}"/>
<t:property name="Identity20.name" value="identity20${TIME}.${COUNTER}"/>
<t:property name="Identity21.name" value="identity21${TIME}.${COUNTER}"/>
<t:property name="Identity22.name" value="identity22${TIME}.${COUNTER}"/>
<t:property name="Identity23.name" value="identity23${TIME}.${COUNTER}"/>
<t:property name="Identity24.name" value="identity24${TIME}.${COUNTER}"/>
<t:property name="Identity25.name" value="identity25${TIME}.${COUNTER}"/>
<t:property name="Identity26.name" value="identity26${TIME}.${COUNTER}"/>
<t:property name="Identity27.name" value="identity27${TIME}.${COUNTER}"/>
<t:property name="Identity28.name" value="identity28${TIME}.${COUNTER}"/>
<t:property name="Identity28New.name" value="identity28New${TIME}.${COUNTER}"/>
<t:property name="Identity29.name" value="identity29${TIME}.${COUNTER}"/>
<t:property name="Identity30.name" value="identity30${TIME}.${COUNTER}"/>
<t:property name="Identity31.name" value="identity31${TIME}.${COUNTER}"/>
<t:property name="Identity32.name" value="identity32${TIME}.${COUNTER}"/>
<t:property name="Identity33.name" value="identity33${TIME}.${COUNTER}"/>

<t:property name="PrefIdentityName" value="ABCD"/>
<t:property name="Signature" value="Thanks and Regards, Automated SOAP Results."/>

<t:property name="compose.subject" value="Subject is testing IDENTITY"/>
<t:property name="compose.content" value="Content in the message is contents..."/>

<t:property name="blank" value=""/>
<t:property name="space" value="             "/>
<t:property name="spchar" value=":''&lt;//\\"/>
<t:property name="spchar1" value=":''&lt;//\\//"/>
<t:property name="sometext" value="some text"/>
<t:property name="negative" value="-1"/>
<t:property name="zero" value="0"/>
<t:property name="largenumber" value="12345678901234567890"/>

<t:property name="sometext1" value="abc def"/>
<t:property name="negative1" value="-11"/>
<t:property name="zero1" value="00"/>
<t:property name="largenumber1" value="123456789012345678901234567890"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="create_identity_acctsetup1" type="always" >
    <t:objective>create test account</t:objective>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server1"/>
        </t:response>
    </t:test>

    <t:test required="true" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server2"/>
        </t:response>
    </t:test>

    <t:test required="true" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server3"/>
        </t:response>
    </t:test>

    <t:test required="true" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server4"/>
        </t:response>
    </t:test>

    <t:test required="true" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account5.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account5.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server5"/>
        </t:response>
    </t:test>
</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct.server1}"/>

<t:test_case testcaseid="create_identity01" type="smoke" >
    <t:objective>Verify that a new identity is created with min attributes.</t:objective>
	<t:steps>
		1. login into the account.
		2. Add a new identity.
	</t:steps>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity1.name}">
					<a name="zimbraPrefIdentityName">${Identity1.name}</a>
					<a name="zimbraPrefFromDisplay">${DisplayFrom1.name}</a>
					<a name="zimbraPrefFromAddress">${account1.name}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse/acct:identity/acct:a[@ name='zimbraPrefFromAddress']" match="${account1.name}"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="create_identity02" type="functional" >
    <t:objective>Verify that duplicate identities cannot be created.</t:objective>

    <t:test required="true">
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity1.name}">
					<a name="zimbraPrefIdentityName">${Identity1.name}</a>
					<a name="zimbraPrefFromDisplay">${DisplayFrom1.name}</a>
					<a name="zimbraPrefFromAddress">${account1.name}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.IDENTITY_EXISTS"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="create_identity03" type="smoke" >
    <t:objective>Verify that a new identity is created with all the attributes.</t:objective>

    <t:test required="true">
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity2.name}">
					<a name="zimbraPrefIdentityName">${Identity2.name}</a>
					<a name="zimbraPrefFromDisplay">${DisplayFrom1.name}</a>
					<a name="zimbraPrefFromAddress">${account1.name}</a>
					<a name="zimbraPrefReplyToEnabled">${globals.false}</a>
					<a name="zimbraPrefWhenSentToEnabled">${globals.false}</a>
					<a name="zimbraPrefWhenInFoldersEnabled">${globals.false}</a>
					<a name="zimbraPrefForwardReplyFormat">text</a>
					<a name="zimbraPrefForwardReplyPrefixChar">></a>
					<a name="zimbraPrefForwardIncludeOriginalText">includeBodyWithPrefix</a>
					<a name="zimbraPrefReplyIncludeOriginalText">includeBodyWithPrefix</a>
					<a name="zimbraPrefMailSignatureStyle">internet</a>
					<a name="zimbraPrefMailSignatureEnabled">${globals.false}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse/acct:identity" attr="name" match="${Identity2.name}"/>
			<t:select path="//acct:CreateIdentityResponse/acct:identity/acct:a[@ name='zimbraPrefFromAddress']" match="${account1.name}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="create_identity04" type="negative" bugids="45003">
    <t:objective>Verify the new identity created with name as spaces/blank/spchar/sometext/negative/zero/largenumber.</t:objective>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${blank}">
					<a name="zimbraPrefIdentityName">${blank}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="ldap.LDAP_ERROR"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${space}">
					<a name="zimbraPrefIdentityName">${space}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${spchar}">
					<a name="zimbraPrefIdentityName">${spchar}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${sometext}">
					<a name="zimbraPrefIdentityName">${sometext}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${negative}">
					<a name="zimbraPrefIdentityName">${negative}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${zero}">
					<a name="zimbraPrefIdentityName">${zero}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${largenumber}">
					<a name="zimbraPrefIdentityName">${largenumber}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="create_identity05" type="functional" >
    <t:objective>Verify that a new identity with name different then zimbraPrefIdentityName is not created.</t:objective>

    <t:test required="true">
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity2.name}">
					<a name="zimbraPrefIdentityName">${PrefIdentityName}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="ldap.LDAP_ERROR"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="create_identity06" type="negative" bugids="45003">
    <t:objective>Verify that a new identity is created with zimbraPrefFromDisplay as spaces/blank/spchar/sometext/negative/zero/largenumber.</t:objective>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${blank}">
					<a name="zimbraPrefFromDisplay">${blank}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="ldap.LDAP_ERROR"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${space}${space}a">
					<a name="zimbraPrefFromDisplay">${space}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
       <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${spchar1}">
					<a name="zimbraPrefFromDisplay">${spchar}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${sometext1}">
					<a name="zimbraPrefFromDisplay">${sometext1}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${negative1}">
					<a name="zimbraPrefFromDisplay">${negative1}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${zero1}">
					<a name="zimbraPrefFromDisplay">${zero1}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${largenumber1}">
					<a name="zimbraPrefFromDisplay">${largenumber1}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="create_identity07" type="functional" >
    <t:objective>Verify that a identity zimbraPrefFromAddress cannot be existing address Or non-existing address</t:objective>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity4.name}">
					<a name="zimbraPrefFromAddress">${account2.name}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse/acct:identity/acct:a[@ name='zimbraPrefFromAddress']" match="${account2.name}"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity5.name}">
					<a name="zimbraPrefFromAddress">${accountnonexist.name}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse/acct:identity/acct:a[@ name='zimbraPrefFromAddress']" match="${accountnonexist.name}"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="create_identity08" type="functional" >
    <t:objective>Verify that zimbraPrefReplyToEnabled can be made true/false</t:objective>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity6.name}">
					<a name="zimbraPrefReplyToEnabled">${globals.false}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity7.name}">
					<a name="zimbraPrefReplyToEnabled">${globals.true}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="create_identity09" type="negative" bugids="45003">
    <t:objective>Verify that zimbraPrefReplyToEnabled cannot be made to spaces/blank/spchar/sometext/negative/zero/largenumber.</t:objective>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account5.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity8.name}">
					<a name="zimbraPrefReplyToEnabled">${space}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
         <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity8.name}a">
					<a name="zimbraPrefReplyToEnabled">${blank}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
         <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>


    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity8.name}">
					<a name="zimbraPrefReplyToEnabled">${spchar}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity8.name}">
					<a name="zimbraPrefReplyToEnabled">${sometext}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity8.name}">
					<a name="zimbraPrefReplyToEnabled">${negative}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity8.name}">
					<a name="zimbraPrefReplyToEnabled">${zero}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>


    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity8.name}">
					<a name="zimbraPrefReplyToEnabled">${largenumber}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="create_identity10" type="functional" >
    <t:objective>Verify that zimbraPrefWhenSentToEnabled can be made true/false</t:objective>


	<t:test required="true">
	        <t:request>
	            <AuthRequest xmlns="urn:zimbraAccount">
	                <account by="name">${account3.name}</account>
	                <password>${defaultpassword.value}</password>
	            </AuthRequest>
	        </t:request>
	        <t:response>
	            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
	            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
	
	        </t:response>
    </t:test>


    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity9.name}">
					<a name="zimbraPrefWhenSentToEnabled">${globals.false}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity10.name}">
					<a name="zimbraPrefWhenSentToEnabled">${globals.true}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="create_identity11" type="negative" bugids="45908" >
    <t:objective>Verify that zimbraPrefWhenSentToEnabled cannot be made to spchar/sometext/negative/zero/largenumber.</t:objective>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account5.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<!-- Commented out the test cases as per bug 45908 blank and space are valid inputs. -->
    <!--  t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity11.name}">
					<a name="zimbraPrefWhenSentToEnabled">${space}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity11.name}a">
					<a name="zimbraPrefWhenSentToEnabled">${blank}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test-->


    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity11.name}b">
					<a name="zimbraPrefWhenSentToEnabled">${spchar}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity11.name}c">
					<a name="zimbraPrefWhenSentToEnabled">${sometext}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity11.name}d">
					<a name="zimbraPrefWhenSentToEnabled">${negative}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity11.name}e">
					<a name="zimbraPrefWhenSentToEnabled">${zero}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>


    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity11.name}f">
					<a name="zimbraPrefWhenSentToEnabled">${largenumber}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="create_identity12" type="functional" >
    <t:objective>Verify that zimbraPrefWhenInFoldersEnabled can be made true/false</t:objective>
	<t:steps>
		1. login into the account2.
		2. Add a new identity.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${test_acct.server2}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity12.name}">
					<a name="zimbraPrefWhenInFoldersEnabled">${globals.false}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity13.name}">
					<a name="zimbraPrefWhenInFoldersEnabled">${globals.true}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="create_identity13" type="negative" bugids="45908" >
    <t:objective>Verify that zimbraPrefWhenInFoldersEnabled cannot be made to spaces/blank/spchar/sometext/negative/zero/largenumber.</t:objective>
	<t:steps>
		1. login into the account2.
		2. Add a new identity.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${test_acct.server2}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
	<!-- Commented out the test cases as per bug 45908 blank and space are valid inputs. -->
    <!--  t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity14.name}">
					<a name="zimbraPrefWhenInFoldersEnabled">${space}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity14.name}">
					<a name="zimbraPrefWhenInFoldersEnabled">${blank}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test-->


    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity14.name}a">
					<a name="zimbraPrefWhenInFoldersEnabled">${spchar}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity14.name}b">
					<a name="zimbraPrefWhenInFoldersEnabled">${sometext}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity14.name}c">
					<a name="zimbraPrefWhenInFoldersEnabled">${negative}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity14.name}d">
					<a name="zimbraPrefWhenInFoldersEnabled">${zero}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>


    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity14.name}e">
					<a name="zimbraPrefWhenInFoldersEnabled">${largenumber}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="create_identity14" type="functional" >
    <t:objective>Verify that zimbraPrefMailSignatureEnabled can be made true/false</t:objective>
	<t:steps>
		1. login into the account2.
		2. Add a new identity.
	</t:steps>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity15.name}">
					<a name="zimbraPrefMailSignatureEnabled">${globals.false}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity16.name}">
					<a name="zimbraPrefMailSignatureEnabled">${globals.true}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="create_identity15" type="negative" bugids="45908">
    <t:objective>Verify that zimbraPrefMailSignatureEnabled cannot be made to spaces/blank/spchar/sometext/negative/zero/largenumber.</t:objective>
	<!-- Commented out the test cases as per bug 45908 blank and space are valid inputs. -->
    <!-- t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity17.name}">
					<a name="zimbraPrefMailSignatureEnabled">${space}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity17.name}">
					<a name="zimbraPrefMailSignatureEnabled">${blank}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test-->

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity17.name}a">
					<a name="zimbraPrefMailSignatureEnabled">${spchar}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity17.name}">
					<a name="zimbraPrefMailSignatureEnabled">${sometext}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity17.name}">
					<a name="zimbraPrefMailSignatureEnabled">${negative}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity17.name}">
					<a name="zimbraPrefMailSignatureEnabled">${zero}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity17.name}">
					<a name="zimbraPrefMailSignatureEnabled">${largenumber}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="create_identity16" type="functional" >
    <t:objective>Verify that zimbraPrefForwardReplyFormat can be text/HTML/Format of the original message</t:objective>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity18.name}">
					<a name="zimbraPrefForwardReplyFormat">html</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity19.name}">
					<a name="zimbraPrefForwardReplyFormat">same</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity20.name}">
					<a name="zimbraPrefForwardReplyFormat">text</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="create_identity17" type="negative" bugids="45908" >
    <t:objective>Verify that zimbraPrefForwardReplyFormat cannot be spaces/blank/spchar/sometext/negative/zero/largenumber</t:objective>
	<!-- Commented out the test cases as per bug 45908 blank and space are valid inputs. -->
    <!--  t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity21.name}">
					<a name="zimbraPrefForwardReplyFormat">${space}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity21.name}">
					<a name="zimbraPrefForwardReplyFormat">${blank}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test-->

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity21.name}">
					<a name="zimbraPrefForwardReplyFormat">${spchar}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="create_identity19" type="negative"  bugids="45908">
    <t:objective>Verify that zimbraPrefForwardReplyPrefixChar cannot be spaces/blank/spchar/sometext/negative/zero/largenumber</t:objective>
	<!-- Commented out the test cases as per bug 45908 blank and space are valid inputs. -->
    <!--  t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity23.name}">
					<a name="zimbraPrefForwardReplyPrefixChar">${space}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity23.name}">
					<a name="zimbraPrefForwardReplyPrefixChar">${blank}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.IDENTITY_EXISTS"/>
        </t:response>
    </t:test-->

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity23.name}">
					<a name="zimbraPrefForwardReplyPrefixChar">${spchar}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>


    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity23.name}">
					<a name="zimbraPrefForwardReplyPrefixChar">${sometext}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity23.name}">
					<a name="zimbraPrefForwardReplyPrefixChar">${negative}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity23.name}">
					<a name="zimbraPrefForwardReplyPrefixChar">${zero}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity23.name}">
					<a name="zimbraPrefForwardReplyPrefixChar">${largenumber}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="create_identity20" type="functional" >
    <t:objective>Verify that zimbraPrefForwardIncludeOriginalText can be includeBody, includeAsAttachment,includeBodyWithPrefi</t:objective>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity24.name}">
					<a name="zimbraPrefForwardIncludeOriginalText">includeBody</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity26.name}">
					<a name="zimbraPrefForwardIncludeOriginalText">includeAsAttachment</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity27.name}">
					<a name="zimbraPrefForwardIncludeOriginalText">includeBodyWithPrefix</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="create_identity21" type="negative" bugids="45908" >
    <t:objective>Verify that zimbraPrefForwardIncludeOriginalText cannot be spaces/blank/spchar/negative/zero</t:objective>
	<!-- Commented out the test cases as per bug 45908 blank and space are valid inputs. -->
    <!-- t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity28.name}">
					<a name="zimbraPrefForwardIncludeOriginalText">${space}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity28.name}">
					<a name="zimbraPrefForwardIncludeOriginalText">${blank}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test-->

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity28.name}">
					<a name="zimbraPrefForwardIncludeOriginalText">${spchar}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>


    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity28.name}">
					<a name="zimbraPrefForwardIncludeOriginalText">${zero}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity28.name}">
					<a name="zimbraPrefForwardIncludeOriginalText">${negative}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="create_identity22" type="functional" >
    <t:objective>Verify that zimbraPrefReplyIncludeOriginalText can be includeBody,includesmart, includeNone,includeAsAttachment,includeBodyWithPrefi</t:objective>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account5.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity28New.name}">
					<a name="zimbraPrefReplyIncludeOriginalText">includeBody</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity29.name}">
					<a name="zimbraPrefReplyIncludeOriginalText">includeSmart</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity30.name}">
					<a name="zimbraPrefReplyIncludeOriginalText">includeAsAttachment</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity31.name}">
					<a name="zimbraPrefReplyIncludeOriginalText">includeBodyWithPrefix</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity32.name}">
					<a name="zimbraPrefReplyIncludeOriginalText">includeNone</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="create_identity23" type="negative" bugids="45908" >
    <t:objective>Verify that zimbraPrefReplyIncludeOriginalText cannot be spaces/blank/spchar/negative/zero</t:objective>
	<!-- Commented out the test cases as per bug 45908 blank and space are valid inputs. -->
    <!--  t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity33.name}">
					<a name="zimbraPrefReplyIncludeOriginalText">${space}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity33.name}">
					<a name="zimbraPrefReplyIncludeOriginalText">${blank}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test-->

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity33.name}">
					<a name="zimbraPrefReplyIncludeOriginalText">${spchar}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>


    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity33.name}">
					<a name="zimbraPrefReplyIncludeOriginalText">${zero}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity33.name}">
					<a name="zimbraPrefReplyIncludeOriginalText">${negative}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="create_identity24" type="functional" >
    <t:objective>Verify the new identity is displayed when a mail is sent.</t:objective>
	<t:steps>
		1. login into the account3.
		2. Add a new identity with signature.
		3. Send mail to account4.
		4. Login into account4. 
		5. Check the contents of the mail, it should have account3's signature.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${test_acct.server3}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity2.name}">
					<a name="zimbraPrefIdentityName">${Identity2.name}</a>
					<a name="zimbraPrefFromDisplay">${DisplayFrom1.name}</a>
					<a name="zimbraPrefFromAddress">${account3.name}</a>
					<a name="zimbraPrefReplyToEnabled">${globals.false}</a>
					<a name="zimbraPrefWhenSentToEnabled">${globals.false}</a>
					<a name="zimbraPrefWhenInFoldersEnabled">${globals.false}</a>
					<a name="zimbraPrefForwardReplyFormat">text</a>
					<a name="zimbraPrefForwardReplyPrefixChar">></a>
					<a name="zimbraPrefForwardIncludeOriginalText">includeBodyWithPrefix</a>
					<a name="zimbraPrefReplyIncludeOriginalText">includeBodyWithPrefix</a>
					<a name="zimbraPrefMailSignatureStyle">outlook</a>
					<a name="zimbraPrefMailSignatureEnabled">${globals.true}</a>
					<a name="zimbraPrefMailSignature">${Signature}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse/acct:identity" attr="name" match="${Identity2.name}"/>
			<t:select path="//acct:CreateIdentityResponse/acct:identity/acct:a[@ name='zimbraPrefFromAddress']" match="${account3.name}"/>
        </t:response>
    </t:test>

	<t:test >
	  <t:request>
		<SendMsgRequest xmlns="urn:zimbraMail">
		  <m>
			<e t="t" a='${account4.name}'/>
			<su>${compose.subject}</su>
			<mp ct="text/plain">
				<content>${Signature}</content>
			</mp>
		 </m>
		</SendMsgRequest>
	  </t:request>
	  <t:response>
			 <t:select path="//mail:SendMsgResponse"/>
	   </t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${test_acct.server4}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test >
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail">
				<query>in:inbox</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:c" attr="su" match="${compose.subject}"/>
  			<t:select path="//mail:SearchResponse/mail:c" attr="fr" match="${Signature}"/>
 		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="create_identity25" type="functional" >
    <t:objective>Verify that identity with the same name can be created after deleting the previous identity.</t:objective>
	<t:steps>
		1. login into the account3.
		2. Add a new identity with name as Identity3.name.
		3. Delete the identity.
		4. Try and create a new identity with same name as Identity3.name. 
	</t:steps>

	<t:property name="server.zimbraAccount" value="${test_acct.server3}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity3.name}">
					<a name="zimbraPrefIdentityName">${Identity3.name}</a>
					<a name="zimbraPrefFromAddress">${account3.name}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse/acct:identity" attr="name" match="${Identity3.name}"/>
			<t:select path="//acct:CreateIdentityResponse/acct:identity/acct:a[@ name='zimbraPrefFromAddress']" match="${account3.name}"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
			<DeleteIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity3.name}"/>
			</DeleteIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:DeleteIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity3.name}">
					<a name="zimbraPrefIdentityName">${Identity3.name}</a>
					<a name="zimbraPrefFromAddress">${account3.name}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse/acct:identity" attr="name" match="${Identity3.name}"/>
			<t:select path="//acct:CreateIdentityResponse/acct:identity/acct:a[@ name='zimbraPrefFromAddress']" match="${account3.name}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="create_identity26" type="functional" >
    <t:objective>Verify that zimbraPrefMailSignatureStyle can be outlook / internet</t:objective>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity4.name}">
					<a name="zimbraPrefMailSignatureStyle">outlook</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity5.name}">
					<a name="zimbraPrefMailSignatureStyle">internet</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//acct:CreateIdentityResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="create_identity27" type="negative" bugids="45908">
    <t:objective>Verify that zimbraPrefMailSignatureStyle cannot be spaces/blank/spchar/sometext/negative/zero/largenumber</t:objective>
	<!-- Commented out the test cases as per bug 45908 blank and space are valid inputs. -->
    <!--  t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity4.name}">
					<a name="zimbraPrefMailSignatureStyle">${blank}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity5.name}">
					<a name="zimbraPrefMailSignatureStyle">${space}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test-->

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity6.name}">
					<a name="zimbraPrefMailSignatureStyle">${spchar}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity7.name}">
					<a name="zimbraPrefMailSignatureStyle">${sometext}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity4.name}">
					<a name="zimbraPrefMailSignatureStyle">${negative}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity5.name}">
					<a name="zimbraPrefMailSignatureStyle">${zero}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<CreateIdentityRequest xmlns="urn:zimbraAccount">
				<identity name="${Identity6.name}">
					<a name="zimbraPrefMailSignatureStyle">${largenumber}</a>
				</identity>
			</CreateIdentityRequest>
        </t:request>
        <t:response>
			<t:select path="//zimbra:Code" match="account.INVALID_ATTR_VALUE"/>
        </t:response>
    </t:test>

</t:test_case>


</t:tests>