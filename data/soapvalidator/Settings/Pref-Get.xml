
<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account1.password" value="${defaultpassword.value}"/>
<t:property name="validpref.name" value="zimbraPrefSaveToSent"/>
<t:property name="validpref.value" value="TRUE"/>
<t:property name="validpref.value2" value="FALSE"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="test_acct.server" value="NOT_DEFINED"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="acct1_setup" type="always">
    <t:objective>create test account</t:objective>

<!-- Login as the admin to get an auth token -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>


    <t:test id="create_acct1" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account1.password}</password>
                <!-- 
                <a n="zimbraMailHost">${LOCALHOST}</a> 	
                <a n="zimbraMailDeliveryAddress">${test_account1.name}</a> 
                <a n="zimbraPasswordMinAge">7</a>
                Commenting out the optional attributes and sending the request with minimal requirement
                 -->
            </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server"/>
            </t:response>
    </t:test>

</t:test_case> <!-- acct_setup -->


<t:property name="server.zimbraAccount" value="${test_acct.server}"/>

<t:test_case testcaseid="acct_login" type="always" >
    <t:objective>login as test account</t:objective>

    <t:test id="auth_acct1" required="true" depends="create_acct1">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account1.password}</password>
                <!--<prefs/>-->
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="GetPrefsRequest1" type="smoke">
    <t:objective>Verify that GetPrefsRequest receives a response (default request)</t:objective>
     <t:steps>
        1. Send GetPrefsRequest without preference element
        2. Receive GetPrefsResponse
     </t:steps>

    <t:test >
        <t:request>
            <GetPrefsRequest xmlns="urn:zimbraAccount"/>
        </t:request>
        <t:response>
            <t:select path="//acct:GetPrefsResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="GetPrefsRequest2" type="bhr">
    <t:objective>Verify that GetPrefsRequest can specify a preference element </t:objective>
    <t:steps>
        1. Send GetPrefsRequest with a preference element
        2. Receive GetPrefsResponse for that preference element
    </t:steps>

    <t:test >
        <t:request>
            <GetPrefsRequest xmlns="urn:zimbraAccount">
                <pref name="${validpref.name}"/>
            </GetPrefsRequest >
        </t:request>
        <t:response>
            <t:select path="//acct:GetPrefsResponse">
            <t:select path="acct:pref[@name='${validpref.name}']">
            <t:match>${validpref.value}</t:match>
            </t:select>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>

</t:tests>
