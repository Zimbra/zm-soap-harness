<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="acctYahooImport.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.datasource1.name" value="datasource${TIME}${COUNTER}"/>
<t:property name="account1.folder1.name" value="folder${TIME}${COUNTER}"/>
<t:property name="account2.name" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="IMAP.Yahoo.defaultMailSubject" value="subject.*"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>Basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="ImapImportYahoo_CreateAccount" type="always" >
    <t:objective>Create a test account </t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="account1.server"/>
        </t:response>
    </t:test>
    
    <t:test id="create_test_account2" required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>
    

</t:test_case>


<t:test_case testcaseid="DataSource_From_address" type="bhr" bugids="38813">
    <t:objective>Check that data source's email address is used as from address if that is present</t:objective>
	<t:steps>
		1. Login as account1
	    2. Test the datasource 
		3. Create a new data source (configure yahoo imap account) 
		4. Send an email using data source email as from address 
		5. Verify messages has appropriate from and sender address
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test required="true" >
        <t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>              
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="inboxFolder.id"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder1.name}" l="${inboxFolder.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse">
            	<t:select path="//mail:folder" attr="id" set="account1.folder1.id"/>
        	</t:select>
        </t:response>
	</t:test>

    <t:test>
        <t:request>
            <TestDataSourceRequest xmlns="urn:zimbraMail">
                <imap host="${IMAP.Yahoo.hostname}" port="${IMAP.Yahoo.ssl.port}" username="${IMAP.Yahoo.username}" password="${IMAP.Yahoo.password}" connectionType="ssl"/>
            </TestDataSourceRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:TestDataSourceResponse"/>
            <t:select path="//mail:TestDataSourceResponse/mail:imap" attr="success" match="1" />
        </t:response>
	</t:test>

    <t:test>
        <t:request>
			<CreateDataSourceRequest xmlns="urn:zimbraMail">
				<imap name="${IMAP.Yahoo.username}" isEnabled="true" 
					emailAddress="${IMAP.Yahoo.username}" host="${IMAP.Yahoo.hostname}" 
					port="${IMAP.Yahoo.ssl.port}" username="${IMAP.Yahoo.username}" password="${IMAP.Yahoo.password}"
					l="${account1.folder1.id}" connectionType="ssl" pollingInterval="0" 
					leaveOnServer="true" fromAddress="${account1.name}"/>
			 </CreateDataSourceRequest>
        </t:request>
        <t:response>              
            <t:select path="//mail:CreateDataSourceResponse">
            	<t:select path="mail:imap" attr="id" set="datasource1.id"/>
            </t:select>
        </t:response>
    </t:test>
      

 <t:property name="compose.subject" value="Subject of the message is testing"/>
 <t:property name="compose.content" value="Content in the message is contents..."/>
 
    <t:test>
	 <t:request>
	    <SendMsgRequest xmlns="urn:zimbraMail">
		<m>		 
		  <e t="t" a="${account2.name}"/>
          <e t="f" a="${IMAP.Yahoo.username}"/>
          <e t="s" a="${account1.name}"/>
	   	  <su>${compose.subject}</su>
		  <mp ct="text/plain">
		      <content> ${compose.content} </content>
		  </mp>
		</m>
	   </SendMsgRequest>
	 </t:request>
	 <t:response>
	       <t:select path="//mail:SendMsgResponse/mail:m"/>
	 </t:response>
	</t:test>
	
	<t:delay sec="10"/>
	
	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
	<t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id="modifyprefsrequest1">
        <t:request>
            <ModifyPrefsRequest xmlns="urn:zimbraAccount">
                <pref name="zimbraPrefIncludeSpamInSearch">TRUE</pref>
            </ModifyPrefsRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:ModifyPrefsResponse"/>
        </t:response>
    </t:test>
        
   <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${compose.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
        	<t:select path="//mail:SearchResponse/mail:m" attr="id" set="account2_msg.id"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${compose.subject}"/>           
        </t:response>
    </t:test>
    	
    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account2_msg.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            	<t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account2_msg.id}"/>
            	<t:select path="//mail:GetMsgResponse/mail:m" attr="su" match="${compose.subject}"/> 
                <t:select path='//mail:GetMsgResponse/mail:m/mail:e[@t="f"]' attr="a" match="${IMAP.Yahoo.username}"/>
                <t:select path='//mail:GetMsgResponse/mail:m/mail:e[@t="s"]' attr="a" match="${account1.name}"/>  
        </t:response>
    </t:test>    

</t:test_case>

</t:tests>