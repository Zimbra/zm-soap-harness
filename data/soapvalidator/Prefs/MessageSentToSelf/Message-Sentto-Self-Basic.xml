<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>    
    
<t:property name="message.subject1" value="Subject${TIME}.${COUNTER}"/>
<t:property name="message.content1" value="content of the message${TIME}.${COUNTER}"/>
<t:property name="message.subject2" value="Subject${TIME}.${COUNTER}"/>
<t:property name="message.content2" value="content of the message${TIME}.${COUNTER}"/>
<t:property name="message.subject3" value="Subject${TIME}.${COUNTER}"/>
<t:property name="message.content3" value="content of the message${TIME}.${COUNTER}"/>
<t:property name="message.subject4" value="Subject${TIME}.${COUNTER}"/>
<t:property name="message.content4" value="content of the message${TIME}.${COUNTER}"/>
<t:property name="message.subject5" value="Subject${TIME}.${COUNTER}"/>
<t:property name="message.content5" value="content of the message${TIME}.${COUNTER}"/>
<t:property name="message.subject6" value="Subject${TIME}.${COUNTER}"/>
<t:property name="message.content6" value="content of the message${TIME}.${COUNTER}"/>
<t:property name="message.subject7" value="Subject${TIME}.${COUNTER}"/>
<t:property name="message.content7" value="content of the message${TIME}.${COUNTER}"/>
<t:property name="message.subject8" value="Subject${TIME}.${COUNTER}"/>
<t:property name="message.content8" value="content of the message${TIME}.${COUNTER}"/>
<t:property name="message.subject9" value="Subject${TIME}.${COUNTER}"/>
<t:property name="message.content9" value="content of the message${TIME}.${COUNTER}"/>

<t:property name="prefs.blank" value=""/>
<t:property name="prefs.space" value="         "/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="test_acct.server" value="NOT_DEFINED"/>

<!-- authentication -->
<t:test_case testcaseid="Ping" type="always">
    <t:objective>Basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acctSetup1_MessagesSentToSelf" type="always">
    <t:objective>Create the accounts for testing</t:objective>
    <t:steps>1. Login to admin.
             2. Create test account
             3. Login to test account
             4. Get id of inbox folder
    </t:steps>

    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test  required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server"/>
        </t:response>
    </t:test>

    <t:test  required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct.server}"/>
       
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
               <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="folder.inbox"/>            
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="MessagesSentToSelf1" type="bhr">
    <t:objective>Verify sending a mail to self when preference is set to receive messages sent to self as normal</t:objective>
    <t:steps> 
        1. Set preference for receiving messages sent to self as normal       
        2. Send a message with own address in To field
        3. Verify that the message is received normally
    </t:steps>
    
    <t:test id="MessagesSentToSelf1a">
        <t:request>
            <ModifyPrefsRequest xmlns="urn:zimbraAccount">
                <pref name="zimbraPrefDedupeMessagesSentToSelf">dedupeNone</pref>
            </ModifyPrefsRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:ModifyPrefsResponse"/>
        </t:response>
    </t:test>

    <t:test id="MessagesSentToSelf1b">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${account1.name}'/>
                    <su> ${message.subject1}</su>
                    <mp ct="text/plain">
                        <content> ${message.content1}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m"/>
        </t:response>
    </t:test>

    <t:test id="MessagesSentToSelf1c" depends="MessagesSentToSelf1a,MessagesSentToSelf1b">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message" sortBy="dateDesc">
                <query>subject:${message.subject1}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="l" match="${folder.inbox}"/>
        </t:response>
    </t:test>

</t:test_case> 

    
<t:test_case testcaseid="MessagesSentToSelf2" type="sanity">
    <t:objective>Own address in CC field with preference set to receive messages sent to self as normal</t:objective>
    <t:steps>        
        1. Send a message with own address in CC field
        2. Verify that the message is received normally
    </t:steps>

    <t:test id="MessagesSentToSelf2a">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${account2.name}'/>
                    <e t="c" a='${account1.name}'/>
                    <su> ${message.subject2}</su>
                    <mp ct="text/plain">
                        <content> ${message.content2}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m"/>
        </t:response>
    </t:test>

    <t:test id="MessagesSentToSelf2b" depends="MessagesSentToSelf1a,MessagesSentToSelf2a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message" sortBy="dateDesc">
                <query>subject:${message.subject2}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="l" match="${folder.inbox}"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="MessagesSentToSelf3" type="sanity">
    <t:objective>Own address in BCC field with preference set to receive messages sent to self as normal</t:objective>
    <t:steps>        
        1. Send a message with own address in BCC field
        2. Verify that the message is received normally
    </t:steps>

    <t:test id="MessagesSentToSelf3a">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${account2.name}'/>
                    <e t="b" a='${account1.name}'/>
                    <su> ${message.subject3}</su>
                    <mp ct="text/plain">
                        <content> ${message.content3}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m"/>
        </t:response>
    </t:test>

    <t:test id="MessagesSentToSelf3b" depends="MessagesSentToSelf1a,MessagesSentToSelf3a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message" sortBy="dateDesc">
                <query>subject:${message.subject3}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="l" match="${folder.inbox}"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="MessagesSentToSelf4" type="bhr">
    <t:objective>Own address in To field with preference set to receive messages sent to self only when address is in To/CC field</t:objective>
    <t:steps> 
        1. Set preference for receiving messages sent to self only when address is in To/CC field      
        2. Send a message with own address in To field
        3. Verify that the message is received normally
    </t:steps>
    
    <t:test id="MessagesSentToSelf4a">
        <t:request>
            <ModifyPrefsRequest xmlns="urn:zimbraAccount">
                <pref name="zimbraPrefDedupeMessagesSentToSelf">secondCopyifOnToOrCC</pref>
            </ModifyPrefsRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:ModifyPrefsResponse"/>
        </t:response>
    </t:test>

    <t:test id="MessagesSentToSelf4b">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${account1.name}'/>
                    <su> ${message.subject4}</su>
                    <mp ct="text/plain">
                        <content> ${message.content4}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m"/>
        </t:response>
    </t:test>

    <t:test id="MessagesSentToSelf4c" depends="MessagesSentToSelf4a,MessagesSentToSelf4b">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message" sortBy="dateDesc">
                <query>subject:${message.subject4}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="l" match="${folder.inbox}"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="MessagesSentToSelf5" type="sanity">
    <t:objective>Own address in CC field with preference set to receive messages sent to self only when address is in To/CC field</t:objective>
    <t:steps> 
        1. Send a message with own address in CC field
        2. Verify that the message is received normally
    </t:steps>
    
    <t:test id="MessagesSentToSelf5a">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${account2.name}'/>
                    <e t="c" a='${account1.name}'/>
                    <su> ${message.subject5}</su>
                    <mp ct="text/plain">
                        <content> ${message.content5}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m"/>
        </t:response>
    </t:test>

    <t:test id="MessagesSentToSelf5b" depends="MessagesSentToSelf4a,MessagesSentToSelf5a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message" sortBy="dateDesc">
                <query>subject:${message.subject5}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="l" match="${folder.inbox}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="MessagesSentToSelf6" type="sanity">
    <t:objective>Own address in BCC field with preference set to receive messages sent to self only when address is in To/CC field</t:objective>
    <t:steps>
        1. Send a message with own address in BCC field
        2. Verify that the message is not received
    </t:steps>

    <t:test id="MessagesSentToSelf6a">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${account2.name}'/>
                    <e t="b" a='${account1.name}'/>
                    <su> ${message.subject6}</su>
                    <mp ct="text/plain">
                        <content> ${message.content6}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m"/>
        </t:response>
    </t:test>

    <t:test id="MessagesSentToSelf6b" depends="MessagesSentToSelf4a,MessagesSentToSelf6a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message" sortBy="dateDesc">
                <query>subject:${message.subject6}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="l" match="${folder.inbox}" emptyset="1"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="MessagesSentToSelf7" type="bhr">
    <t:objective>Own address in To field with preference set to not receive messages sent to self</t:objective>
    <t:steps> 
        1. Set preference for not receiving messages sent to self        
        2. Send a message with own address in To field
        3. Verify that the message is not received
    </t:steps>
    
    <t:test id="MessagesSentToSelf7a" required="true">
        <t:request>
            <ModifyPrefsRequest xmlns="urn:zimbraAccount">
                <pref name="zimbraPrefDedupeMessagesSentToSelf">dedupeAll</pref>
            </ModifyPrefsRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:ModifyPrefsResponse"/>
        </t:response>
    </t:test>

    <t:test id="MessagesSentToSelf7b">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${account1.name}'/>
                    <su> ${message.subject7}</su>
                    <mp ct="text/plain">
                        <content> ${message.content7}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m"/>
        </t:response>
    </t:test>

    <t:test id="MessagesSentToSelf7c" depends="MessagesSentToSelf7a,MessagesSentToSelf7b">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message" sortBy="dateDesc">
                <query>subject:${message.subject7}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="l" match="${folder.inbox}" emptyset="1"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="MessagesSentToSelf8" type="sanity">
    <t:objective>Own address in CC field with preference set to not receive messages sent to self</t:objective>
    <t:steps> 
        1. Send a message with own address in CC field
        2. Verify that the message is not received 
    </t:steps>
    
    <t:test id="MessagesSentToSelf8a">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${account2.name}'/>
                    <e t="c" a='${account1.name}'/>
                    <su> ${message.subject8}</su>
                    <mp ct="text/plain">
                        <content> ${message.content8}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m"/>
        </t:response>
    </t:test>

    <t:test id="MessagesSentToSelf8b" depends="MessagesSentToSelf7a,MessagesSentToSelf8a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message" sortBy="dateDesc">
                <query>subject:${message.subject8}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="l" match="${folder.inbox}" emptyset="1"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="MessagesSentToSelf9" type="sanity">
    <t:objective>Own address in BCC field with preference set to not receive messages sent to self</t:objective>
    <t:steps> 
        1. Send a message with own address in BCC field
        2. Verify that the message is not received
    </t:steps>
    
    <t:test id="MessagesSentToSelf9a">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${account2.name}'/>
                    <e t="b" a='${account1.name}'/>
                    <su> ${message.subject9}</su>
                    <mp ct="text/plain">
                        <content> ${message.content9}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m"/>
        </t:response>
    </t:test>

    <t:test id="MessagesSentToSelf9b" depends="MessagesSentToSelf7a,MessagesSentToSelf9a">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message" sortBy="dateDesc">
                <query>subject:${message.subject9}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="l" match="${folder.inbox}" emptyset="1"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="MessagesSentToSelf10" type="functional">
    <t:objective>Verify that when preference is set to blank, it attains its default value of receiving messages normally</t:objective>
    <t:steps> 
        1. Set preference messages sent to self to blank
        2. Verify that preference is set to receive messages normally
    </t:steps>
    
    <t:test id="MessagesSentToSelf10a">
        <t:request>
            <ModifyPrefsRequest xmlns="urn:zimbraAccount">
                <pref name="zimbraPrefDedupeMessagesSentToSelf">${prefs.blank}</pref>
            </ModifyPrefsRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:ModifyPrefsResponse"/>
        </t:response>
    </t:test>

    <t:test depends="MessagesSentToSelf10a">
        <t:request>
            <GetPrefsRequest xmlns="urn:zimbraAccount"/>
        </t:request>
        <t:response>
            <t:select path="//acct:GetPrefsResponse/acct:pref[@name='zimbraPrefDedupeMessagesSentToSelf']" match="dedupeNone"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="MessagesSentToSelf11" type="functional">
    <t:objective>Verify that when preference is set to spaces, it attains its default value of receiving messages normally</t:objective>
    <t:steps> 
        1. Set preference messages sent to self to space
        2. Verify that preference is set to receive messages normally
    </t:steps>
    
    <t:test id="MessagesSentToSelf11a">
        <t:request>
            <ModifyPrefsRequest xmlns="urn:zimbraAccount">
                <pref name="zimbraPrefDedupeMessagesSentToSelf">${prefs.space}</pref>
            </ModifyPrefsRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:ModifyPrefsResponse"/>
        </t:response>
    </t:test>

    <t:test depends="MessagesSentToSelf11a">
        <t:request>
            <GetPrefsRequest xmlns="urn:zimbraAccount"/>
        </t:request>
        <t:response>
            <t:select path="//acct:GetPrefsResponse/acct:pref[@name='zimbraPrefDedupeMessagesSentToSelf']" match="dedupeNone"/>
        </t:response>
    </t:test>

</t:test_case> 

</t:tests>