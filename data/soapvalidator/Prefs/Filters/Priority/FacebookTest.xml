<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:test_case testcaseid="AcctSetup1_facebookTest" type="always" >
    <t:objective>create test accounts</t:objective>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
	    <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
                <a n="zimbraPrefTimeZoneId">UTC</a>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
	    </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
	    </t:response>
    </t:test>    
    
</t:test_case>

<t:test_case testcaseid="facebookTest_01" type="bhr" bugids="42185">

    <t:objective>Filter the mail which has X-Facebook-Notify: friend_confirmed header</t:objective>
    
    <t:steps> 
    		  1. Create a filter with facebookTest for account1 to flag
			  2. Inject a message for friend confirmation 
			  3. Verify that the message gets flagged.
    </t:steps>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="filter_facebook.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter_facebook1.subject" value="filter${TIME}${COUNTER}"/>
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter_facebook.name}" active="1">
						<filterTests condition="anyof">
							<facebookTest/>
						</filterTests>
						<filterActions>
							 <actionFlag flagName="flagged" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>
   
	<t:property name="facebook_msg01.file" value="${testMailRaw.root}/bug42185/facebook-confirm-gmail.txt" />

	<t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${facebook_msg01.file}</filename>
			<to>${account1.name}</to>
			<from>notification+kr4mwaer4r4x@facebookmail.com</from>
			<server>${account1.server}</server>	
			<modify>
				<header a="To">${account1.name}</header>
                <header a="Subject">${filter_facebook1.subject}</header>
            </modify>		
        </t:lmtpInjectRequest>
    </t:mailinjecttest>	
   
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${filter_facebook1.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${filter_facebook1.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="f" match=".*f.*"/>
        </t:response>
    </t:test>      

</t:test_case>

<t:test_case testcaseid="facebookTest_02" type="bhr" bugids="42185" >
    <t:objective>Filter the mail which has X-Facebook-Notify: photo_tagged_by_non_owner</t:objective>
    
    <t:steps> 
    		  1. Create a filter with facebookTest for account1 to flag
			  2. Inject a message for phototagging(containing X-Facebook-Notify: photo_tagged_by_non_owner)
			  3. Verify that the message gets flagged.
    </t:steps>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="filter_facebook.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter_facebook2.subject" value="filter${TIME}${COUNTER}"/>
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter_facebook.name}" active="1">
						<filterTests condition="anyof">
							<facebookTest/>
						</filterTests>
						<filterActions>
							 <actionFlag flagName="flagged" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>
   
	<t:property name="facebook_msg02.file" value="${testMailRaw.root}/bug42185/facebook-photo-tag.txt" />
    
    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${facebook_msg02.file}</filename>
			<to>${account1.name}</to>
			<from>update+kr4mwaer4r4x@facebookmail.com</from>
			<server>${account1.server}</server>	
			<modify>
				<header a="To">${account1.name}</header>
                <header a="Subject">${filter_facebook2.subject}</header>
            </modify>		
        </t:lmtpInjectRequest>
    </t:mailinjecttest>	
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${filter_facebook2.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${filter_facebook2.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="f" match=".*f.*"/>
        </t:response>
    </t:test>	   

</t:test_case>

<t:test_case testcaseid="facebookTest_03" type="bhr" bugids="42185" >
    <t:objective>Filter the mail which has X-Facebook-Notify: wall</t:objective>
    
    <t:steps> 1. Create a filter with facebookTest for account1 to flag
			  2. Inject a wall message notification from facebook(containing X-Facebook-Notify: wall)
			  3. Verify that the message gets flagged.
    </t:steps>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="filter_facebook.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter_facebook3.subject" value="filter${TIME}${COUNTER}"/>
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter_facebook.name}" active="1">
						<filterTests condition="anyof">
							<facebookTest/>
						</filterTests>
						<filterActions>
							 <actionFlag flagName="flagged" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>
   
	<t:property name="facebook_msg03.file" value="${testMailRaw.root}/bug42185/facebook-wall-gmail.txt" />
    
    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${facebook_msg03.file}</filename>
			<to>${account1.name}</to>
			<from>notification+kr4mwaer4r4x@facebookmail.com</from>
			<server>${account1.server}</server>	
			<modify>
				<header a="To">${account1.name}</header>
                <header a="Subject">${filter_facebook3.subject}</header>
            </modify>		
        </t:lmtpInjectRequest>
    </t:mailinjecttest>	
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${filter_facebook3.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${filter_facebook3.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="f" match=".*f.*"/>
        </t:response>
    </t:test>	   

</t:test_case>

<t:test_case testcaseid="facebookTest_04" type="bhr" bugids="42185" >
    <t:objective>Filter the mail which has X-Facebook-Notify: msg</t:objective>
    
    <t:steps> 1. Create a filter with facebookTest for account1 to flag
			  2. Inject a direct message from facebook(containing X-Facebook-Notify: msg)
			  3. Verify that the message gets flagged.
    </t:steps>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="filter_facebook.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter_facebook4.subject" value="filter${TIME}${COUNTER}"/>
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter_facebook.name}" active="1">
						<filterTests condition="anyof">
							<facebookTest/>
						</filterTests>
						<filterActions>
							 <actionFlag flagName="flagged" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>
   
	<t:property name="facebook_msg04.file" value="${testMailRaw.root}/bug42185/facebook-direct-msg.txt" />
    
    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${facebook_msg04.file}</filename>
			<to>${account1.name}</to>
			<from>notification+kr4mwaer4r4x@facebookmail.com</from>
			<server>${account1.server}</server>	
			<modify>
				<header a="To">${account1.name}</header>
                <header a="Subject">${filter_facebook4.subject}</header>
            </modify>		
        </t:lmtpInjectRequest>
    </t:mailinjecttest>	
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${filter_facebook4.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${filter_facebook4.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="f" match=".*f.*"/>
        </t:response>
    </t:test>	   

</t:test_case>

<t:test_case testcaseid="facebookTest_05" type="bhr" bugids="42185" >
    <t:objective>Filter the mail which has X-Facebook-Notify: friend request</t:objective>
    
    <t:steps> 1. Create a filter with facebookTest for account1 to flag
			  2. Inject a friend request message notification from facebook(containing X-Facebook-Notify: friend)
			  3. Verify that the message gets flagged.
    </t:steps>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="filter_facebook.name" value="filter${TIME}${COUNTER}"/>
	<t:property name="filter_facebook5.subject" value="filter${TIME}${COUNTER}"/>
	
	<t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter_facebook.name}" active="1">
						<filterTests condition="anyof">
							<facebookTest/>
						</filterTests>
						<filterActions>
							 <actionFlag flagName="flagged" />
							<actionStop />
						</filterActions>
					</filterRule>                                  
				</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>
   
	<t:property name="facebook_msg05.file" value="${testMailRaw.root}/bug42185/facebook-friend-request.txt" />
    
    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${facebook_msg05.file}</filename>
			<to>${account1.name}</to>
			<from>notification+kr4mwaer4r4x@facebookmail.com</from>
			<server>${account1.server}</server>	
			<modify>
				<header a="To">${account1.name}</header>
                <header a="Subject">${filter_facebook5.subject}</header>
            </modify>		
        </t:lmtpInjectRequest>
    </t:mailinjecttest>	
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${filter_facebook5.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${filter_facebook5.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="f" match=".*f.*"/>
        </t:response>
    </t:test>	   

</t:test_case>

</t:tests>