<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test1${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
         <t:response>
             <t:select path="//admin:PingResponse"/>
         </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="AcctSetup1_bug64611" type="always" >
    <t:objective>create test accounts</t:objective>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
	    <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>               
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
	    </t:response>
    </t:test>

</t:test_case>


<t:property name="folder1.name" value="Activity Streams"/>

<t:test_case testcaseid="Bug64611_priorityFlag" type="bhr" bugids="64611" >
    <t:objective>Check Activity Stream filter don't process a message if the message has priority flag.</t:objective>
    <t:steps>
	    1. Login as user1
	    2. Create Activity Streams filter for massage send not to me
	    3. inject mime having socialcast  broadcase message 
	    4. verify message was moved to Activity stream folder.
	    5. Create priority filter for soacial cast
	    6. inject mime having socialcast  broadcase message 
	    7. verify message stays in inbox folder instead of Activity streams folder and has priority flag.    
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder l="1" name="${folder1.name}"/>  	 
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder1.id"/>			
        </t:response>
    </t:test>
    

	<t:property name="filter1.name" value="Activity Streams"/>
	<t:property name="filter1.subject" value="subject${TIME}${COUNTER}"/>
	
	
    <t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter1.name}" active="1">
						<filterTests condition="anyof">
							  <meTest  header="To" negative="1" />
						</filterTests>
						<filterActions>
							<actionFileInto folderPath="${folder1.name}" />
							<actionStop />
						</filterActions> 
						</filterRule>                           
					</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test>
    
   
    <t:property name="msg01.file" value="${testMailRaw.root}/bug42185/socialcast-broadcast-message.txt" />

	<t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
			<to>${account1.name}</to>
			<from>filter@testfilter.com</from>
			<server>${account1.server}</server>
			<modify>
                <header a="Subject">${filter1.subject}</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>	

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>in:"${folder1.name}"</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${filter1.subject}"/>            
        </t:response>
    </t:test>	   
    
    
    <t:property name="filter2.name" value="Mark as Priority"/>
	<t:property name="filter2.subject" value="subject${TIME}${COUNTER}"/>
	
	
    <t:test>
		<t:request>
			<ModifyFilterRulesRequest xmlns="urn:zimbraMail">
				<filterRules>
					<filterRule name="${filter2.name}" active="1">
						<filterTests condition="anyof">
							  <socialcastTest/>
						</filterTests>
						<filterActions>
							 <actionFlag flagName="priority" />
							<actionStop />
						</filterActions> 
						</filterRule>                           
					</filterRules>
            </ModifyFilterRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyFilterRulesResponse"/>
        </t:response>
    </t:test> 

	<t:property name="msg02.file" value="${testMailRaw.root}/bug64611/socialcast-broadcast-message1.txt" />

	<t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg02.file}</filename>
			<to>${account1.name}</to>
			<from>filter@testfilter.com</from>
			<server>${account1.server}</server>
			<modify>
                <header a="Subject">${filter2.subject}</header>
            </modify>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>	

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${filter2.subject})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${filter2.subject}"/> 
            <t:select path="//mail:SearchResponse/mail:m" attr="f" match="u\+" />             
        </t:response>
    </t:test>	   
</t:test_case>

</t:tests>

