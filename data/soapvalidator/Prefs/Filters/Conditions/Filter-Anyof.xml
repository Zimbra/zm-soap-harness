<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="folder.pname" value="1"/> <!-- Folder's parent ID -->
<t:property name="folder.name" value="folder.${TIME}.${COUNTER}"/>
<t:property name="tag1.name" value="tag.${TIME}.${COUNTER}"/>
<t:property name="tag.colorvalid" value="4" />

<t:property name="test_account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account2.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>

<t:property name="test_account1.password" value="${defaultpassword.value}"/>

<t:property name="filter1.name" value="filter1.${TIME}.${COUNTER}"/>
<t:property name="filter2.name" value="filter2.${TIME}.${COUNTER}"/>
<t:property name="filter3.name" value="filter3.${TIME}.${COUNTER}"/>
<t:property name="filter4.name" value="filter4.${TIME}.${COUNTER}"/>
<t:property name="filter5.name" value="filter5.${TIME}.${COUNTER}"/>
<t:property name="filter6.name" value="filter6.${TIME}.${COUNTER}"/>

<t:property name="subject1" value="Subject 1"/>
<t:property name="subject2" value="Subject 2"/>
<t:property name="subject3" value="Subject 3"/>
<t:property name="subject4" value="Subject 4"/>
<t:property name="subject5" value="Subject 5"/>
<t:property name="subject6" value="Subject 6"/>

<t:property name="compose.content" value="Content in the message is contents..."/>
<t:property name="test_acct1.server" value="NOT_DEFINED"/>
<t:property name="test_acct2.server" value="NOT_DEFINED"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
         <t:response>
             <t:select path="//admin:PingResponse"/>
         </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct1_setup_saverule" type="always" >
    <t:objective>create test account</t:objective>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
	    <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account1.password}</password>
            </CreateAccountRequest>
        </t:request>
	    <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
	    </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${test_account1.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>

</t:test_case>


<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

<t:test_case testcaseid="acctsetup2_rules_save_subject" type="always" >
    <t:objective>login as the test account and Create a folder/tag with valid name</t:objective>
	    <t:steps> 
			  1. Login to test account 1
			  2. Create a folder with valid name
              3. Create a Tag with valid name
        </t:steps>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
	   
	<t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder.name}" l="${folder.pname}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder.id"/>
        </t:response>
	</t:test>
	
	<t:test>
        <t:request>
            <CreateTagRequest xmlns="urn:zimbraMail">
                <tag name="${tag1.name}" color="${tag.colorvalid}" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTagResponse/mail:tag">
            <t:select attr="id" set="tag1.id" />
            <t:select attr="name" match="${tag1.name}" />
            <t:select attr="color" match="${tag.colorvalid}" />
            </t:select>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="From_is_SaveRulesRequest1" type="sanity" >
    <t:objective>  Create Rules with different Actions </t:objective>
    <t:steps> 1. Rule with action "keep"
              2. Rule with action "fileinto"
              3. Rule with action "discard"
              4. Rule with action "flag/read"
              5. Rule with action "flag/flagged"
              6. Rule with action "tag"
    </t:steps>

    <t:test>
        <t:request>
            <SaveRulesRequest xmlns="urn:zimbraMail">
                <rules>
                    <r name="${filter1.name}" active="1">
                        <g op="anyof">
                            <c name="header" k0="subject" op=":is" k1="${subject1}"/>
			            </g>
                        <action name="keep"/>
                    </r>
					
					<r name="${filter2.name}" active="1">
                        <g op="anyof">
                        <c name="header" k0="subject" op=":is" k1="${subject2}"/>
                        </g>
                        <action name="fileinto">
                            <arg>/${folder.name}</arg>
                        </action>
                    </r>

					<r name="${filter3.name}" active="1">
                        <g op="anyof">
                            <c name="header" k0="subject" op=":is" k1="${subject3}"/>
                        </g>
                        <action name="discard"/>
                    </r>

                    <r name="${filter4.name}" active="1">
                        <g op="anyof">
                            <c name="header" k0="subject" op=":is" k1="${subject5}"/>
                        </g>
                        <action name="flag">
                            <arg>read</arg>
                        </action>
                    </r>

                    <r name="${filter5.name}" active="1">
                        <g op="anyof">
                            <c name="header" k0="subject" op=":is" k1="${subject6}"/>
                        </g>
                        <action name="flag">
                            <arg>flagged</arg>
                        </action>
                    </r>

                    <r name="${filter6.name}" active="1">
                        <g op="anyof">
                            <c name="header" k0="subject" op=":is" k1="${subject6}"/>
                        </g>
                        <action name="tag">
                            <arg>${tag1.name}</arg>
                        </action>
                    </r>
                 </rules>
            </SaveRulesRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveRulesResponse"/>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
            <GetRulesRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
            <t:select path="//mail:GetRulesResponse/mail:rules/mail:r[@name='${filter1.name}']"/>
			<t:select path="//mail:GetRulesResponse/mail:rules/mail:r[@name='${filter2.name}']"/>
			<t:select path="//mail:GetRulesResponse/mail:rules/mail:r[@name='${filter3.name}']"/>
			<t:select path="//mail:GetRulesResponse/mail:rules/mail:r[@name='${filter4.name}']"/>
			<t:select path="//mail:GetRulesResponse/mail:rules/mail:r[@name='${filter5.name}']"/>
			<t:select path="//mail:GetRulesResponse/mail:rules/mail:r[@name='${filter6.name}']"/>
        </t:response>
	</t:test>

</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>

<t:test_case testcaseid="acct_setup" type="sanity">
    <t:objective>login as the test_account2 and send message with different subject to test_account1 </t:objective>
 
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account2.name}</account>
                <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
             <m>
              <e t="t" a='${test_account1.name}'/>
               <su>${subject1}</su>
                <mp ct="text/plain">
                    <content> ${compose.content} </content>
                </mp>
              </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message.id1"/>            
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${test_account1.name}'/>
                    <su>${subject2}</su>
                    <mp ct="text/plain">
                        <content> ${compose.content} </content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message.id2"/>            
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
             <m>
                <e t="t" a='${test_account1.name}'/>
                <su>${subject3}</su>
                    <mp ct="text/plain">
                        <content> ${compose.content} </content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message.id3"/>            
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
             <m>
                <e t="t" a='${test_account1.name}'/>
                <su>${subject4}</su>
                <mp ct="text/plain">
                    <content> ${compose.content} </content>
                </mp>
              </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message.id4"/>            
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
             <m>
                <e t="t" a='${test_account1.name}'/>
                <su>${subject5}</su>
                <mp ct="text/plain">
                    <content> ${compose.content} </content>
                </mp>
              </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message.id5"/>            
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
             <m>
                <e t="t" a='${test_account1.name}'/>
                <su>${subject6}</su>
                <mp ct="text/plain">
                    <content> ${compose.content} </content>
                </mp>
              </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message.id6"/>            
        </t:response>
    </t:test>

</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

<t:test_case testcaseid="acct_setup2" type="sanity">
 <t:objective>login to test_account1 and get the message id </t:objective>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>


    <t:test id="searchRequest1" delay="50000">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${subject1})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${subject1}$"/>
            <t:select attr="id" set="message.id1"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test id="searchRequest2">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${subject2})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${subject2}$"/>
            <t:select attr="id" set="message.id2"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test id="searchRequest3">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${subject3})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${subject3}" emptyset="1"/>
            
        </t:response>
    </t:test>

    <t:test id="searchRequest4">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${subject4})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${subject4}$"/>
            <t:select attr="id" set="message.id4"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test id="searchRequest5">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${subject5})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${subject5}$"/>
            <t:select attr="id" set="message.id5"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test id="searchRequest6">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query>subject:(${subject6})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${subject6}$"/>
            <t:select attr="id" set="message.id6"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="subject_is_SaveRuleRequest1" type="sanity" >
    <t:objective> Verify rule subject: is: keep is working </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" sortBy="dateDesc" offset="0" limit="25" types="message">
                <query>in:${globals.inbox}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id1}']"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="subject_is_SaveRuleRequest2" type="sanity" bugids="6027" >
    <t:objective> Verify rule subject: is: fileinto is working     </t:objective>

	<t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" sortBy="dateDesc" offset="0" limit="25" types="message">
                <query>in:"${folder.name}"</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${subject2}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="subject_is_SaveRuleRequest3" type="sanity" bugids="2723">
    <t:objective> Verify rule subject: is: discard  is working  </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" sortBy="dateDesc" offset="0" limit="25" types="message">
                <query>subject:(${subject3})</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m[@su='${subject3}']" emptyset="1"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="subject_is_SaveRuleRequest4" type="sanity" bugids="2723">
    <t:objective> Verify rule subject: is: flag (read) is working </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" sortBy="dateDesc" offset="0" limit="25" types="message">
                <query>is:read</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id5}']"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="subject_is_SaveRuleRequest5" type="sanity" bugids="2723" >
    <t:objective> Verify rule subject: is: flag (flagged) is working  </t:objective>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" sortBy="dateDesc" offset="0" limit="25" types="message">
                <query>is:flagged</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message.id6}']"/>
        </t:response>
    </t:test>

</t:test_case>

</t:tests>

