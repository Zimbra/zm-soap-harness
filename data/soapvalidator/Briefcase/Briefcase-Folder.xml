<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="domain2.name" value="domain2.${TIME}.${COUNTER}.${defaultdomain.name}"/>
<t:property name="folder1.name" value="Briefcase.${TIME}.${COUNTER}"/>
<t:property name="folder2.name" value="Briefcase.${TIME}.${COUNTER}"/>
<t:property name="folder3.name" value="Briefcase.${TIME}.${COUNTER}"/>
<t:property name="folder4.name" value="Briefcase.${TIME}.${COUNTER}"/>
<t:property name="folder5.name" value="Briefcase.${TIME}.${COUNTER}"/>
<t:property name="folder2.name.new" value="Briefcase.${TIME}.${COUNTER}"/>

<t:property name="account1.name" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="account2.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account1.document.textfile" value="${testMailRaw.root}/Contact/contact1.txt"/>

<t:property name="grant.usr"		value="usr"/>
<t:property name="op.grant"			value="grant"/>

<t:test_case testcaseid="Briefcase_Folder_Setup" type="always" >
    <t:objective>basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>

 </t:test_case>

 <t:test_case testcaseid="Briefcase_Folder_01" type="smoke">
    <t:objective>Create briefcase folder </t:objective>

    <t:steps>
	    1. Login to account1
	    2. Create a Briefcase folder
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder l="1" name="${folder1.name}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder1.id"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="Briefcase_Folder_Duplicate_02" type="functional">
    <t:objective>Try to create duplicate briefcase folder </t:objective>

    <t:steps>
	    1. Login to account1
	    2. Create a Briefcase folder
	    3. Try to create duplicate folder
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder l="1" name="${folder1.name}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder1.id"/>
        </t:response>
    </t:test>

     <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder l="1" name="${folder1.name}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^mail.ALREADY_EXISTS"/>
	    </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="Briefcase_Folder_Rename_03" type="bhr">
    <t:objective>Rename briefcase folder </t:objective>

    <t:steps>
	    1. Login to account1
	    2. Create a Briefcase folder
	    3. Rename the folder
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder l="1" name="${folder2.name}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder2.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
             	<action op="rename" id="${folder2.id}" name="${folder2.name.new}"/>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action[@id='${folder2.id}']" attr="op" match="rename"/>
        </t:response>
    </t:test>

 </t:test_case>

 <t:test_case testcaseid="Briefcase_Folder_Delete_04" type="smoke">
    <t:objective>Delete briefcase folder </t:objective>

    <t:steps>
	    1. Login to account1
	    2. Create two Briefcase folder
	    3. Trash a folder
	    4. Delete the other folder
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder l="1" name="${folder3.name}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder3.id"/>
        </t:response>
    </t:test>

     <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder l="1" name="${folder4.name}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder4.id"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
             	<action op="trash" id="${folder3.id}"/>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action[@id='${folder3.id}']" attr="op" match="trash"/>
        </t:response>
    </t:test>

     <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
             	<action op="delete" id="${folder4.id}"/>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action[@id='${folder4.id}']" attr="op" match="delete"/>
        </t:response>
    </t:test>

 </t:test_case>

<t:test_case testcaseid="Briefcase_ShareFolder_05" type="smoke">
    <t:objective>Share briefcase folder</t:objective>

   <t:steps>
	    1. Login to account1
	    2. Create a Briefcase folder
	    3. Save documents to the newly created folder
	    4. Share the folder with account2
	    5. Login to account2
	    6. Mount the shared folder and verify the documents inside of the folders.
	    7. Login as account1 and delete the shared folder
	    8. Login as account2 and check for shared documents
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder l="1" name="${folder5.name}"  view="document" />
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.briefcase.folder.id"/>
        </t:response>
    </t:test>

    <t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account1.briefcase.folder.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse/mail:doc" attr="id" set="account1.document1.id"/>
        </t:response>
    </t:test>

    <!--  Share the Briefcase folder with Account2 -->
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.briefcase.folder.id}">
					<grant gt="${grant.usr}" d="${account2.name}" perm="r"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

   <t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

     <t:test required="true">
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="account2.folder.root"/>
        </t:response>
    </t:test>

   <t:property name="shared.folder.name" value="Briefcase.${TIME}.${COUNTER}"/>
    <t:test required="true">
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account2.folder.root}" name="${shared.folder.name}" rid="${account1.briefcase.folder.id}" zid="${account1.id}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account2.briefcase.delegated.id"/>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="owner" match="${account1.name}"/>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account2.shared.folder.id"/>
        </t:response>
    </t:test>

     <!-- Do GetShareInfoRequest -->
    <t:test>
        <t:request>
            <GetShareInfoRequest xmlns="urn:zimbraAccount">
				<grantee type="usr" />
				<owner by="name">${account1.name}</owner>
            </GetShareInfoRequest>
        </t:request>
        <t:response>
              <t:select path="//acct:GetShareInfoResponse">
					<t:select path="acct:share" attr="mid" match="${account2.shared.folder.id}" />
              </t:select>
        </t:response>
    </t:test>

    <!-- Do SearchRequest for shared document -->
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="document">
             <query> in:(${shared.folder.name}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
              <t:select path="//mail:SearchResponse">
					<t:select path="mail:doc" attr="id" match="${account1.id}:${account1.document1.id}" />
              </t:select>
        </t:response>
    </t:test>

    <t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
             <action op="delete" id="${account1.briefcase.folder.id}"/>
            </FolderActionRequest>
        </t:request>
        <t:response>
             <t:select path="//mail:FolderActionResponse/mail:action[@id='${account1.briefcase.folder.id}']" attr="op" match="delete"/>
        </t:response>
    </t:test>

     <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="document">
             <query> in:(${shared.folder.name}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
              <t:select path="//mail:SearchResponse">
					<t:select path="mail:doc" attr="id" match="${account1.id}:${account1.document1.id}" emptyset="1" />
              </t:select>
        </t:response>
    </t:test>
   </t:test_case>

</t:tests>