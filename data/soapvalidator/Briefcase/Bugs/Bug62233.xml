<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.document.textfile" value="${testMailRaw.root}/Contact/contact1.txt"/>
<t:property name="account1.document.htmlfile" value="${testMailRaw.root}/wiki01/basic.html"/>

<t:property name="uploadFile.name" value="${testMailRaw.root}/email01/msg01.txt"/>
<t:property name="uploadFile.subject" value="email01A"/>
<t:property name="uploadFile.fragment" value="simple text string in the body"/>
<t:property name="uploadFile.content" value="simple text string in the body.*"/>

<t:property name="account1.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.folder1.name" value="folder.${TIME}.${COUNTER}"/>

<t:property name="account2.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.server" value="NOT_DEFINED"/>
<t:property name="account2.folder.shared.name" value="share.${TIME}.${COUNTER}"/>



<t:property name="op.grant"			value="grant"/>
<t:property name="op.read"			value="read"/>
<t:property name="op.flag"			value="flag"/>
<t:property name="op.tag"			value="tag"/>
<t:property name="op.delete"		value="delete"/>

<t:property name="grant.usr"			value="usr"/>
<t:property name="grant.grp"			value="grp"/>


<t:property name="rights.none"			value=""/>
<t:property name="rights.read"			value="r"/>
<t:property name="rights.write"			value="w"/>
<t:property name="rights.insert"		value="i"/>
<t:property name="rights.delete"		value="d"/>
<t:property name="rights.administer"	value="a"/>
<t:property name="rights.workflow"		value="x"/>
<t:property name="rights.manager"		value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}"/>



<t:test_case testcaseid="BriefcaseFoldersSharingBasic_AccountSetup" type="always" >
    <t:objective>Create accounts needed for the all testcases for this file</t:objective>

    <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account1" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account1.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account2" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account2.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="bug62233" type="bhr" bugids="62233" >
    <t:objective>Verify that sharing  briefcase folders with read access allows document to be viewed, but not added,  deleted, or reshared</t:objective>
	<t:steps>
		1. Login as account1
		2. Add a briefcase folder, share the folder with account2 (permissions=read)
		3. Login as account2
		4. Mount the drive, success.	
		5. SearchRequest Text file.  Success.
		5. SearchRequest HTML file.  Success.
		
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account1.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder1.name}" l="${account1.folder.briefcase.id}" />
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder1.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account1.folder1.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse"/>           
        </t:response>
    </t:test>
    
    	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.htmlfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.htmlfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
		<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account1.folder1.id}">
			    <upload id="${document.htmlfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse"/>           
        </t:response>
    </t:test>
    
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder1.id}">
					<grant gt="${grant.usr}" d="${account2.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	<t:property name="account2.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account2.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account2.folder.briefcase.id}" name="${account2.folder.shared.name}" zid="${account1.id}" rid="${account1.folder1.id}" view="document"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account2.folder.shared.id"/>
        </t:response>
    </t:test>	

 	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="document">
				<query>(is:remote OR is:local) and filename:txt and Business </query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:doc" attr="name" match="contact1.txt"/>

		</t:response>
	</t:test>
	
	 	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="document">
				<query>(is:remote OR is:local) and filename:html and Now </query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:doc" attr="name" match="basic.html"/>
		</t:response>
	</t:test>
</t:test_case>

</t:tests>
