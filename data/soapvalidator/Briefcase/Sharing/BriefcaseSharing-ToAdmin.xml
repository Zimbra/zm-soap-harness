<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.document.textfile" value="${testMailRaw.root}/contact/contact1.txt"/>
<t:property name="account1.file.name" value="contact1.txt"/>

<t:property name="admin1.name" value="admin1.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account1.name" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="account2.${TIME}.${COUNTER}@${defaultdomain.name}"/>


<t:property name="op.grant" value="grant"/>
<t:property name="op.delete" value="delete"/>

<t:property name="grant.usr" value="usr"/>

<t:property name="rights.none" value=""/>
<t:property name="rights.read" value="r"/>
<t:property name="rights.write" value="w"/>
<t:property name="rights.insert" value="i"/>
<t:property name="rights.delete" value="d"/>
<t:property name="rights.administer" value="a"/>
<t:property name="rights.workflow" value="x"/>
<t:property name="rights.manager" value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}"/>
<t:property name="view.document" value="document"/>



<t:test_case testcaseid="SharingFoldersToAdmin_AccountSetup" type="always" >
    <t:objective>Create test accounts</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>    
   

    <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
	        <CreateAccountRequest xmlns="urn:zimbraAdmin">
	            <name>${admin1.name}</name>
	            <password>${defaultpassword.value}</password>
	            <a n="zimbraIsDomainAdminAccount">${globals.false}</a>
				<a n="zimbraIsAdminAccount">${globals.true}</a>
	        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="admin1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="admin1.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
	        <CreateAccountRequest xmlns="urn:zimbraAdmin">
	            <name>${account1.name}</name>
	            <password>${defaultpassword.value}</password>
	        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
	        <CreateAccountRequest xmlns="urn:zimbraAdmin">
	            <name>${account2.name}</name>
	            <password>${defaultpassword.value}</password>
	        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>



</t:test_case>


<t:test_case testcaseid="BriefcaseSharingFoldersToAdmin_01" type="bhr">
    <t:objective>Verify an admin user only has user rights, if logged into the user interface</t:objective>
	<t:steps>
		1. Login as account1
		2. Add a briefcase folder, share the folder with admin1 (permissions = read)
		3. Login as admin1 to the account interface (not the admin interface)
		4. Mount the drive, success.
		5. Run a  search.  Success.
		6. GetItemRequest.  Success.
		7. Try add a document.  PERM_DENIED.
		8. ItemActionRequest (op=read).  PERM_DENIED.
		9. IemActionRequest (op=delete).  PERM_DENIED.
		10. FolderActionRequest(grant).  PERM_DENIED.	
		11. Create a subfolder in the folder.  PERM_DENIED.
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="message1.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="account1.folder1.name" value="folder${TIME}${COUNTER}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account1.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder1.name}" l="${account1.folder.briefcase.id}" f="i"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder1.id"/>
        </t:response>
    </t:test >
    
    <t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account1.folder1.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>           
            <t:select path="//mail:SaveDocumentResponse/mail:doc" attr="id" set="account1.document.id"/>        
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder1.id}">
					<grant gt="${grant.usr}" d="${admin1.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${admin1.server}"/>
	<t:property name="admin1.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${admin1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="admin1.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${admin1.folder.briefcase.id}" name="${admin1.folder.shared.name}" zid="${account1.id}" rid="${account1.folder1.id}" view="${view.document}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="admin1.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${admin1.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFolderResponse"/>
        </t:response>
    </t:test>

 	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="document">
				<query>in:"${globals.briefcase}/${admin1.folder.shared.name}"</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:doc" attr="name" match="${account1.file.name}"/>
			<t:select path="//mail:SearchResponse/mail:doc" attr="id" set="account1.file.id"/>
		</t:response>
	</t:test>
	
    <t:test >
        <t:request>
            <GetItemRequest xmlns="urn:zimbraMail">
                <item id="${account1.file.id}" />
            </GetItemRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetItemResponse/mail:doc" attr="id" match="${account1.file.id}"/>            
        </t:response>
    </t:test>

 	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${admin1.folder.shared.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>           
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>      
        </t:response>
    </t:test>
   
    <t:test >
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.file.id}" op="${op.delete}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${admin1.folder.shared.id}">
					<grant gt="${grant.usr}" d="${account2.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test> 

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="NewSubFolder" l="${admin1.folder.shared.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test >
    
</t:test_case>

<t:test_case testcaseid="BriefcaseSharingFoldersToAdmin_02" type="bhr">
    <t:objective>Verify an admin user has admin rights, if logged into the admin interface</t:objective>
	<t:steps>
		1. Login as account1
		2. Add a briefcase folder, share folder with admin1 (permissions = read)
		3. Login as admin1 to the account interface (not the admin interface)
		4. Mount the drive, success.
		5. Run a  search.  Success.
		6. GetItemRequest.  Success.		
		7. ItemActionRequest (op=read).  Success.
		8. ItemActionRequest (op=delete).  Success.
		9. Try to add a document.  Success.
		10. FolderActionRequest(grant).  Success.	
		12. Create a subfolder in the folder.  Success.
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="message1.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="account1.folder1.name" value="folder${TIME}${COUNTER}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account1.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder1.name}" l="${account1.folder.briefcase.id}" f="i"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder1.id"/>
        </t:response>
    </t:test >
    
    <t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account1.folder1.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>           
            <t:select path="//mail:SaveDocumentResponse/mail:doc" attr="id" set="account1.document2.id"/>        
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder1.id}">
					<grant gt="${grant.usr}" d="${admin1.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${admin1.server}"/>
	<t:property name="admin1.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="admin1.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${admin1.folder.briefcase.id}" name="${admin1.folder.shared.name}" zid="${account1.id}" rid="${account1.folder1.id}" view="${view.document}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="admin1.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${admin1.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFolderResponse"/>
        </t:response>
    </t:test>

 	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="document">
				<query>in:"${globals.briefcase}/${admin1.folder.shared.name}" </query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:doc" attr="id" set="admin1.document.id"/>
		</t:response>
	</t:test>
	
    <t:test >
        <t:request>
            <GetItemRequest xmlns="urn:zimbraMail">
                <item id="${admin1.document.id}" />
            </GetItemRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetItemResponse/mail:doc" attr="id" match="${admin1.document.id}"/>          
        </t:response>
    </t:test>  
    
    <t:test >
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${admin1.document.id}" op="${op.delete}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ItemActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
     <t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${admin1.folder.shared.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>           
            <t:select path="//mail:SaveDocumentResponse/mail:doc" attr="id" set="admin1.document1.id"/>        
        </t:response>
    </t:test>
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${admin1.folder.shared.id}">
					<grant gt="${grant.usr}" d="${account2.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test> 

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="NewSubFolder" l="${admin1.folder.shared.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder"/>
        </t:response>
    </t:test >
    
</t:test_case>


</t:tests>
