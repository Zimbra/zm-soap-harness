<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.document.textfile" value="${testMailRaw.root}/Contact/contact1.txt"/>
<t:property name="account11.document.htmlfile" value="${testMailRaw.root}/wiki01/basic.html"/>


<t:property name="account1.name" value="combined1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.server" value="NOT_DEFINED"/>
<t:property name="account1.folder1.name" value="folder.${TIME}.${COUNTER}"/>
<t:property name="account1.folder2.name" value="folder.${TIME}.${COUNTER}"/>
<t:property name="account1.folder3.name" value="folder.${TIME}.${COUNTER}"/>
<t:property name="account1.folder4.name" value="folder.${TIME}.${COUNTER}"/>
<t:property name="account1.folder5.name" value="folder.${TIME}.${COUNTER}"/>
<t:property name="account1.folder6.name" value="folder.${TIME}.${COUNTER}"/>
<t:property name="account1.folder7.name" value="folder.${TIME}.${COUNTER}"/>
<t:property name="account1.folder8.name" value="folder.${TIME}.${COUNTER}"/>


<t:property name="account2.name" value="combined2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.server" value="NOT_DEFINED"/>
<t:property name="account2.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="acl2.name" value="combined.acl2.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="domain3.name" value="combined3.${TIME}.${COUNTER}.com"/>
<t:property name="account3.name" value="combined3.${TIME}.${COUNTER}@${domain3.name}"/>
<t:property name="account3.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="cos4.name" value="cos${TIME}${COUNTER}"/>
<t:property name="account4.name" value="combined4.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.server" value="NOT_DEFINED"/>
<t:property name="account4.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="account5.name" value="combined5.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account5.server" value="NOT_DEFINED"/>
<t:property name="account5.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="account1.folder5.name" value="folder5.${TIME}.${COUNTER}"/>

<t:property name="account6.name" value="combined6.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account6.server" value="NOT_DEFINED"/>
<t:property name="account6.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="account1.folder6.name" value="folder6.${TIME}.${COUNTER}"/>

<t:property name="account7.name" value="combined7.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account7.server" value="NOT_DEFINED"/>
<t:property name="account7.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="account1.folder7.name" value="folder7.${TIME}.${COUNTER}"/>

<t:property name="account8.name" value="combined8.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account8.server" value="NOT_DEFINED"/>
<t:property name="account8.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="account11.name" value="combined11.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account11.server" value="NOT_DEFINED"/>
<t:property name="account11.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="acl11.name" value="combined.acl11.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account12.name" value="combined12.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account12.server" value="NOT_DEFINED"/>
<t:property name="account12.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="acl12.name" value="combined.acl12.${TIME}.${COUNTER}@${defaultdomain.name}"/>



<t:property name="op.grant"			value="grant"/>

<t:property name="op.move"			value="move"/>
<t:property name="op.delete"		value="delete"/>

<t:property name="grant.usr"			value="usr"/>
<t:property name="grant.grp"			value="grp"/>
<t:property name="grant.dom"			value="dom"/>
<t:property name="grant.cos"			value="cos"/>
<t:property name="grant.all"			value="all"/>
<t:property name="grant.pub"			value="pub"/>
<t:property name="grant.guest"			value="guest"/>

<t:property name="rights.none"			value=""/>
<t:property name="rights.read"			value="r"/>
<t:property name="rights.write"			value="w"/>
<t:property name="rights.insert"		value="i"/>
<t:property name="rights.delete"		value="d"/>
<t:property name="rights.administer"	value="a"/>
<t:property name="rights.workflow"		value="x"/>
<t:property name="rights.manager"		value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}"/>
<t:property name="view.document"	    value="document"/>



<t:test_case testcaseid="BriefcaseFoldersSharingCombineBasic_AccountSetup" type="always" >
    <t:objective>Create test accounts</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
 
    <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>


    <t:test  id="create_test_account1" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account1.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>



    <t:test  id="create_test_account2" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account2.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${acl2.name}</name>
                <a n="description">An Access Control List</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="acl2.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${acl2.id}</id>
                <dlm>${account2.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain3.name}</name>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain0.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account3.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>


    <t:test >
        <t:request>
            <CreateCosRequest xmlns="urn:zimbraAdmin">
                <name >${cos4.name}</name>        
            </CreateCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos4.id"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account4" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account4.name}</name>
            <password>${defaultpassword.value}</password>
            <a xmlns="" n="zimbraCOSId">${cos4.id}</a>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account5" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account5.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account5.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account5.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account6" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account6.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account6.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account6.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account7" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account7.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account7.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account7.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account8" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account8.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account8.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account8.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account11" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account11.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account11.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account11.server"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${acl11.name}</name>
                <a n="description">An Access Control List</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="acl11.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${acl11.id}</id>
                <dlm>${account11.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account12" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account12.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account12.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account12.server"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${acl12.name}</name>
                <a n="description">An Access Control List</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="acl12.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${acl12.id}</id>
                <dlm>${account12.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account1.folder.inbox.id"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="BriefcaseFoldersSharingCombineBasic_01" type="bhr" >
    <t:objective>Verify that rights combine when a folder is shared with an account (read) and a group (delete)</t:objective>
	<t:steps>
		1. Login as account1
		2. Share briefcase (which contains document1) with account2
		3. Share briefcase with acl2 (which contains account2) as delete
		4. Login as account2
		5. Mount the drive, success.
		6. Get document1 (success)
		7. Delete document1 (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account1.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder1.name}" l="${account1.folder.briefcase.id}" />
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder1.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account1.folder1.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse/mail:doc" attr="id" set="account1.document1.id"/>           
        </t:response>
    </t:test>
    

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder1.id}">
					<grant gt="${grant.usr}" d="${account2.name}" perm="${rights.read}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder1.id}">
					<grant gt="${grant.grp}" d="${acl2.name}" perm="${rights.delete}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account2.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account2.folder.briefcase.id}" name="${account2.folder.shared.name}" zid="${account1.id}" rid="${account1.folder1.id}" view="${view.document}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account2.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetItemRequest xmlns="urn:zimbraMail">
                <item id="${account1.id}:${account1.document1.id}" />
            </GetItemRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetItemResponse/mail:doc"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.id}:${account1.document1.id}" op="${op.delete}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ItemActionResponse/mail:action"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="BriefcaseFoldersSharingCombineBasic_02" type="bhr" >
    <t:objective>Verify that rights combine when a folder is shared with an account (read) and a domain (delete)</t:objective>
	<t:steps>
		1. Login as account1
		2. Share a briefcase folder (which contains document2) with account3 as read
		2. Share the briefcase folder with domain3.com (which contains account3) as delete
		3. Login as account3
		4. Mount the drive, success.
		5. Get document2 (success)
		5. Delete document2 (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account1.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder2.name}" l="${account1.folder.briefcase.id}" />
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder2.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account1.folder2.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse/mail:doc" attr="id" set="account1.document2.id"/>           
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder2.id}">
					<grant gt="${grant.usr}" d="${account3.name}" perm="${rights.read}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder2.id}">
					<grant gt="${grant.dom}" d="${domain3.name}" perm="${rights.delete}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account3.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account3.folder.briefcase.id}" name="${account3.folder.shared.name}" zid="${account1.id}" rid="${account1.folder2.id}" view="${view.document}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account3.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetItemRequest xmlns="urn:zimbraMail">
                <item id="${account1.id}:${account1.document2.id}" />
            </GetItemRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetItemResponse/mail:doc"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.id}:${account1.document2.id}" op="${op.delete}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ItemActionResponse/mail:action"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="BriefcaseFoldersSharingCombineBasic_03" type="bhr" >
    <t:objective>Verify that rights combine when a folder is shared with an account (read) and a COS (delete)</t:objective>
	<t:steps>
		1. Login as account1
		2. Share a brifcase folder (which contains document3) with account4 as read
		2. Share the briefcase folder with cos4 (which contains account4) as delete
		3. Login as account4
		4. Mount the drive, success.
		5. Get document3 (success)
		5. Delete document3 (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account1.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder3.name}" l="${account1.folder.briefcase.id}" />
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder3.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account1.folder3.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse/mail:doc" attr="id" set="account1.document3.id"/>           
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder3.id}">
					<grant gt="${grant.usr}" d="${account4.name}" perm="${rights.read}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder3.id}">
					<grant gt="${grant.cos}" d="${cos4.name}" perm="${rights.delete}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${account4.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account4.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account4.folder.briefcase.id}" name="${account4.folder.shared.name}" zid="${account1.id}" rid="${account1.folder3.id}" view="${view.document}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account4.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetItemRequest xmlns="urn:zimbraMail">
                <item id="${account1.id}:${account1.document3.id}" />
            </GetItemRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetItemResponse/mail:doc"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.id}:${account1.document3.id}" op="${op.delete}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ItemActionResponse/mail:action"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="BriefcaseFoldersSharingCombineBasic_04" type="bhr" >
    <t:objective>Verify that rights combine when a folder is shared with an account (read) and all (delete)</t:objective>
	<t:steps>
		1. Login as account1
		2. Share a brifcase folder (which contains document4) with account5 as read
		3. Share the briefcase folder with all (which contains account5) as delete
		4. Login as accoun5
		5. Mount the drive, success.
		6. Get document4 (success)
		7. Delete document4 (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account1.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder4.name}" l="${account1.folder.briefcase.id}" />
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder4.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account1.folder4.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse/mail:doc" attr="id" set="account1.document4.id"/>           
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder4.id}">
					<grant gt="${grant.usr}" d="${account5.name}" perm="${rights.read}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder4.id}">
					<grant gt="${grant.all}" perm="${rights.delete}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${account5.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account5.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account5.folder.briefcase.id}" name="${account5.folder.shared.name}" zid="${account1.id}" rid="${account1.folder4.id}" view="${view.document}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account5.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetItemRequest xmlns="urn:zimbraMail">
                <item id="${account1.id}:${account1.document4.id}" />
            </GetItemRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetItemResponse/mail:doc"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.id}:${account1.document4.id}" op="${op.delete}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ItemActionResponse/mail:action"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="BriefcaseFoldersSharingCombineBasic_05" type="bhr" >
    <t:objective>Verify that rights combine when a folder is shared with an account (read) and a pub (delete)</t:objective>
	<t:steps>
		1. Login as account1
		2. Share a brifcase folder (which contains document5) with account6 as read
		2. Share the briefcase folder with pub (which contains account6) as delete
		3. Login as account6
		4. Mount the drive, success.
		5. Get document5 (success)
		5. Delete document5 (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
       <t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account1.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder5.name}" l="${account1.folder.briefcase.id}" />
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder5.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account1.folder5.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse/mail:doc" attr="id" set="account1.document5.id"/>           
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder5.id}">
					<grant gt="${grant.usr}" d="${account6.name}" perm="${rights.read}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder5.id}">
					<grant gt="${grant.pub}" perm="${rights.delete}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${account6.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account6.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account6.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account6.folder.briefcase.id}" name="${account6.folder.shared.name}" zid="${account1.id}" rid="${account1.folder5.id}" view="${view.document}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account6.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetItemRequest xmlns="urn:zimbraMail">
                <item id="${account1.id}:${account1.document5.id}" />
            </GetItemRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetItemResponse/mail:doc"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.id}:${account1.document5.id}" op="${op.delete}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ItemActionResponse/mail:action"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="BriefcaseFoldersSharingCombineBasic_06" type="sanity" >
    <t:objective>Verify that rights combine when a folder is shared with an account (read) and a guest (delete)</t:objective>
	<t:steps>
		1. Login as account1
		2. Share a briefcase folder with guest (foo@foo.com/test123) as read
		3. Share the briefcase folder (which contains document6) with account7 as delete
		4. Login as account7
		5. Mount the drive, success.
		6. Get document6 (PERM_DENIED - requires password?)
		7. Delete document6 (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account1.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder6.name}" l="${account1.folder.briefcase.id}" />
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder6.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account1.folder6.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse/mail:doc" attr="id" set="account1.document6.id"/>           
        </t:response>
    </t:test>    

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder6.id}">
					<grant gt="${grant.usr}" d="${account7.name}" perm="${rights.delete}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder6.id}">
					<grant gt="${grant.guest}" perm="${rights.read}" d="${defaultdestination.email}" args="${defaultpassword.value}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${account7.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account7.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account7.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account7.folder.briefcase.id}" name="${account7.folder.shared.name}" zid="${account1.id}" rid="${account1.folder6.id}" view="${view.document}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.PERM_DENIED$"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetItemRequest xmlns="urn:zimbraMail">
                <item id="${account1.id}:${account1.document6.id}" />
            </GetItemRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.PERM_DENIED$"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.id}:${account1.document6.id}" op="${op.delete}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
        	<!-- Should authentication be required here? -->
            <t:select path="//mail:ItemActionResponse/mail:action"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="BriefcaseFoldersSharingCombineBasic_07" type="bhr" >
    <t:objective>Verify that different combinations of rights can be combined (read + insert)</t:objective>
	<t:steps>
		1. Login as account1
		2. Share a briefcase folder (which contains document7) with account11 as read
		3. Share the briefcase folder with acl11 (which contains account11) as insert
		4. Login as account11
		5. Mount the drive, success.
		6. Get document7 (success)
		7. Add a new document7 (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account1.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder7.name}" l="${account1.folder.briefcase.id}" />
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder7.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account1.folder7.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse/mail:doc" attr="id" set="account1.document7.id"/>           
        </t:response>
    </t:test>
    

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder7.id}">
					<grant gt="${grant.usr}" d="${account11.name}" perm="${rights.read}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder7.id}">
					<grant gt="${grant.grp}" d="${acl11.name}" perm="${rights.insert}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>



	<t:property name="server.zimbraAccount" value="${account11.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account11.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account11.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account11.folder.briefcase.id}" name="${account11.folder.shared.name}" zid="${account1.id}" rid="${account1.folder7.id}" view="${view.document}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account11.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetItemRequest xmlns="urn:zimbraMail">
                <item id="${account1.id}:${account1.document7.id}" />
            </GetItemRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetItemResponse/mail:doc"/>
        </t:response>
    </t:test>
    
    <t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account11.document.htmlfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.htmlfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account11.folder.shared.id}">
			    <upload id="${document.htmlfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse/mail:doc" attr="id" set="account2.document7.id"/>           
        </t:response>
    </t:test>
    

</t:test_case>



<t:test_case testcaseid="BriefcaseFoldersSharingCombineBasic_08" type="sanity" >
    <t:objective>Verify the specific rights read and none are combined: both should be applied meaning read access allowed</t:objective>
	<t:steps>
		1. Login as account1
		2. Share a briefcase folder (which contains document8) with account12 as read
		3. Share the briefcase folder with acl12 (which contains account12) as read
		4. Share the briefcase folder with acl12 (which contains account12) as none ("")
		5. Login as account12
		6. Mount the drive (success)
		7. Get document8 (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
       <t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account1.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder8.name}" l="${account1.folder.briefcase.id}" />
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder8.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account1.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account1.folder8.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse/mail:doc" attr="id" set="account1.document8.id"/>           
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder8.id}">
					<grant gt="${grant.usr}" d="${account12.name}" perm="${rights.read}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder8.id}">
					<grant gt="${grant.grp}" d="${acl12.name}" perm="${rights.read}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder8.id}">
					<grant gt="${grant.grp}" d="${acl12.name}" perm="${rights.none}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>



	<t:property name="server.zimbraAccount" value="${account12.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account12.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account12.folder.briefcase.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account12.folder.briefcase.id}" name="${account12.folder.shared.name}" zid="${account1.id}" rid="${account1.folder8.id}" view="${view.document}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account12.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetItemRequest xmlns="urn:zimbraMail">
                <item id="${account1.id}:${account1.document8.id}" />
            </GetItemRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetItemResponse/mail:doc"/>
        </t:response>
    </t:test>

</t:test_case>

</t:tests>
