<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="domain2.name" value="domain2.${TIME}.${COUNTER}.${defaultdomain.name}"/>
<t:property name="domain2.zimbraPublicServiceHostname" value="public.${domain2.name}"/>

<t:property name="account1.name" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="account2.${TIME}.${COUNTER}@${domain2.name}"/>


<t:test_case testcaseid="Briefcase_GetFolder_AccountBackup_Setup" type="always" >
    <t:objective>basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>	
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account1.folder.briefcase.id"/>
		</t:response>
	</t:test>
	

</t:test_case>


<t:test_case testcaseid="Briefcase_GetFolder_01" type="bhr" bugids="22365" >
    <t:objective>Create a briefcase folder.  GetFolderRequest to verify the settings</t:objective>
    <t:steps>
    1. Login to account1
    2. Create a briefcase folder
    3. Verify GetFolderResponse and verify the settings
    </t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>


	
	<t:property name="account1.briefcase1.folder.name" value="briefcase1.${TIME}.${COUNTER}"/>
	
	<t:test id="WikiFolderRequest1a">
		<t:request>
			<CreateFolderRequest xmlns="urn:zimbraMail">
				<folder name="${account1.briefcase1.folder.name}" l="${account1.folder.briefcase.id}" view="document"/>
			</CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.briefcase1.folder.id"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@id='${account1.briefcase1.folder.id}']">
					<t:select attr="name" match="${account1.briefcase1.folder.name}"/>
					<t:select attr="view" match="document"/>
					<t:select attr="l" match="${account1.folder.briefcase.id}"/>
					<!-- Bug 22637: rest attribute no longer returned -->
					<t:select attr="rest" emptyset="1"/>
				</t:select>
			</t:select>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="Briefcase_GetFolder_02" type="deprecated" bugids="22365">
    <t:objective>Create a briefcase folder in an account with a different PublicServiceHostname - verify the REST URL</t:objective>
    <t:steps>
    1. Login to account1
    2. Create a briefcase folder
    3. Verify GetFolderResponse and verify the settings
    </t:steps>


	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>	

    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain2.name}</name>
                <a n="zimbraPublicServiceHostname">${domain2.zimbraPublicServiceHostname}</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain2.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetInfoRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetInfoResponse">
				<t:select path="//acct:rest" match=".*${domain2.zimbraPublicServiceHostname}.*"/>
			</t:select>
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account2.folder.briefcase.id"/>
		</t:response>
	</t:test>
	
	
	<t:property name="account2.briefcase1.folder.name" value="briefcase1.${TIME}.${COUNTER}"/>
	
	<t:test id="WikiFolderRequest1a">
		<t:request>
			<CreateFolderRequest xmlns="urn:zimbraMail">
				<folder name="${account2.briefcase1.folder.name}" l="${account2.folder.briefcase.id}" view="document"/>
			</CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account2.briefcase1.folder.id"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@id='${account2.briefcase1.folder.id}']">
					<t:select attr="rest" match=".*${domain2.zimbraPublicServiceHostname}.*"/>
				</t:select>
			</t:select>
		</t:response>
	</t:test>


</t:test_case>



</t:tests>

