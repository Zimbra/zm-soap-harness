<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="msg01.file" value="${testMailRaw.root}/rest01/rest01.txt"/>
<t:property name="msg01.part1.file" value="${testMailRaw.root}/rest01/rest01_attachment.doc"/>

<t:property name="msg02A.file" value="${testMailRaw.root}/rest01/rest02A.txt"/>
<t:property name="msg02B.file" value="${testMailRaw.root}/rest01/rest02B.txt"/>
<t:property name="msg02C.file" value="${testMailRaw.root}/rest01/rest02C.txt"/>
<t:property name="msg02.content" value="^MessageContent "/>

<t:property name="msg03A.file" value="${testMailRaw.root}/rest01/rest03.txt"/>
<t:property name="msg03.part1.file" value="${testMailRaw.root}/rest01/rest03_attachment.txt"/>


<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.password" value="${defaultpassword.value}"/>

<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.password" value="${defaultpassword.value}"/>
<t:property name="account3.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.password" value="${defaultpassword.value}"/>
<t:property name="account4.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.password" value="${defaultpassword.value}"/>

<t:property name="message1.content" value="content${TIME}.${COUNTER}"/>
<t:property name="message1.subject" value="subject${TIME}.${COUNTER}"/>


<t:property name="root"				value="${soapxml.root}/MailClient/Mail/lmtp/MimeBasic/"/>
<t:property name="message2.file"	value="${root}/lmtp_basic01.txt"/>
<t:property name="message2.subject"	value="subject${TIME}.${COUNTER}"/>



<t:test_case testcaseid="RestServlet_Message_Account_Setup" type="always" >
	<t:objective>setup accounts</t:objective>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>	
	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${account1.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
                     <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
				<password>${account2.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
                     <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account3.name}</name>
				<password>${account3.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
                     <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account4.name}</name>
				<password>${account4.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
                     <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
		</t:response>
	</t:test>
	
</t:test_case>





<t:test_case testcaseid="RestServlet_GetMessagePart_01" type="smoke" >
	<t:objective>Rest Servlet - get a message part (binary attachment) and verify that it is valid</t:objective>
	<t:steps>
	1. Inject a mime message with a word doc attachment
	2. Use the rest servlet to download the attachment and compare it to the 'golden' file
	</t:steps>

    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
            <to>${account1.name}</to>
            <from>${nonZimbraUser.name}</from>
            <server>${account1.server}</server>
         </t:lmtpInjectRequest>
    </t:mailinjecttest>    
	

<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account1.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>subject:(rest01A)</query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message1.id"/>
	 </t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message1.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp[@ct='multipart/mixed']">
            	<t:select path="mail:mp[@ct='application/msword']" attr="part" set="message1.part1.id"/>
            </t:select>
        </t:response>
    </t:test>

<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<id>${message1.id}</id>
			<part>${message1.part1.id}</part>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

</t:test_case>



<t:test_case testcaseid="RestServlet_GetMessagePart_02" type="functional" bugids="7610">
	<t:objective>Verify bug 7871 - server must downcast Content-Type</t:objective>
	<t:steps>
	1. Inject a mime message with TEXT/PLAIN, TEXT/HTML, MULTIPART/ALTERNATIVE
	2. Verify all parts are available
	</t:steps>

    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${msg02A.file}</filename>
            <to>${account2.name}</to>
            <from>${nonZimbraUser.name}</from>
            <server>${account2.server}</server>
         </t:lmtpInjectRequest>
    </t:mailinjecttest>    
	
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${msg02B.file}</filename>
            <to>${account2.name}</to>
            <from>${nonZimbraUser.name}</from>
            <server>${account2.server}</server>
         </t:lmtpInjectRequest>
    </t:mailinjecttest>    
	
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${msg02C.file}</filename>
            <to>${account2.name}</to>
            <from>${nonZimbraUser.name}</from>
            <server>${account2.server}</server>
         </t:lmtpInjectRequest>
    </t:mailinjecttest>    
	

<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${account2.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>in:inbox</query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse"/>
	 </t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>subject:(rest02A)</query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message2.id"/>
	 </t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message2.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp[@ct='multipart/alternative']">
            	<t:select path="mail:mp[@ct='text/plain']" attr="part" set="message2.part1.id"/>
            </t:select>
        </t:response>
    </t:test>

<t:property name="server.restServlet" value="${account2.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<id>${message2.id}</id>
			<part>${message2.part1.id}</part>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>subject:(rest02B)</query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message2.id"/>
	 </t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message2.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp[@ct='multipart/alternative']">
            	<t:select path="mail:mp[@ct='text/plain']" attr="part" set="message2.part1.id"/>
            </t:select>
        </t:response>
    </t:test>

<t:property name="server.restServlet" value="${account2.server}"/>
	<t:resttest>
		<t:restServletRequest>
			<id>${message2.id}</id>
			<part>${message2.part1.id}</part>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>subject:(rest02C)</query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message2.id"/>
	 </t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message2.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp[@ct='multipart/alternative']">
            	<t:select path="mail:mp[@ct='text/plain']" attr="part" set="message2.part1.id"/>
            </t:select>
        </t:response>
    </t:test>

<t:property name="server.restServlet" value="${account2.server}"/>
	<t:resttest>
		<t:restServletRequest>
			<id>${message2.id}</id>
			<part>${message2.part1.id}</part>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>


</t:test_case>


<t:test_case testcaseid="RestServlet_GetMessagePart_03" type="functional" >
	<t:objective>Get a multi-lined text part</t:objective>
	<t:steps>
	1. Inject a mime message with text/plain, multiple lined
	2. Verify the harness can read the text part
	</t:steps>

    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${msg03A.file}</filename>
            <to>${account3.name}</to>
            <from>${nonZimbraUser.name}</from>
            <server>${account3.server}</server>
         </t:lmtpInjectRequest>
    </t:mailinjecttest>    
	
<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${account3.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>subject:(rest03A)</query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message3.id"/>
	 </t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message3.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp/mail:mp/mail:mp[@ct='text/plain']" attr="part" set="message3.part1.id"/>
        </t:response>
    </t:test>

<t:property name="server.restServlet" value="${account3.server}"/>
	<t:resttest>
		<t:restServletRequest>
			<id>${message3.id}</id>
			<part>${message3.part1.id}</part>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		</t:restServletResponse>
	</t:resttest>


</t:test_case>



</t:tests>
