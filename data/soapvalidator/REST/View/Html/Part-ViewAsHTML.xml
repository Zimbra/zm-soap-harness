<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="msg01.file" value="${testMailRaw.root}/rest02/message01A.txt"/>
<t:property name="msg01.part1.file.doc" value="${testMailRaw.root}/rest02/message01A.txt_attachment.doc"/>
<t:property name="msg01.part1.file.html" value="${testMailRaw.root}/rest02/message01A.txt_attachment.html"/>
<t:property name="msg01.part1.html.content" value=".*&lt;b>Now&lt;/b> is the time for all &lt;i>good&lt;/i> men to come to the aid of &lt;u>their&lt;/u> country.*"/>

<t:property name="msg02.file" value="${testMailRaw.root}/Bugs/8761/msg01.txt"/>
<t:property name="msg02.part1.html.content" value=".*&lt;b>Now&lt;/b> is the time for all &lt;i>good&lt;/i> men to come to the aid of &lt;u>their&lt;/u> country.*"/>



<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.password" value="${defaultpassword.value}"/>

<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.password" value="${defaultpassword.value}"/>
<t:property name="account3.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.password" value="${defaultpassword.value}"/>
<t:property name="account4.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.password" value="${defaultpassword.value}"/>



<t:property name="root"				value="${soapxml.root}/MailClient/Mail/lmtp/MimeBasic/"/>
<t:property name="message2.file"	value="${root}/lmtp_basic01.txt"/>
<t:property name="message2.subject"	value="subject${TIME}.${COUNTER}"/>



<t:test_case testcaseid="RestServlet_Message_Account_Setup" type="always" >
	<t:objective>setup accounts</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${account1.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
                     <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
				<password>${account2.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
                     <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account3.name}</name>
				<password>${account3.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
                     <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account4.name}</name>
				<password>${account4.password}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
                     <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
		</t:response>
	</t:test>
	
</t:test_case>





<t:test_case testcaseid="RestServlet_partViewAsHTML_01" type="smoke" areas="verity">
	<t:objective>Rest Servlet - get a message part (word doc) and verify that it can be opened as html (view=html)</t:objective>
	<t:steps>
	1. Inject a mime message with a word doc attachment
	2. Use the rest servlet to download with fmt=html
	3. Verify the HTML to the 'golden' file
	</t:steps>

    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
            <to>${account1.name}</to>
            <from>${nonZimbraUser.name}</from>
            <server>${account1.server}</server>
         </t:lmtpInjectRequest>
    </t:mailinjecttest>    
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${account1.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>subject:(message01A)</query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg01.id"/>
	 </t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${msg01.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp[@ct='multipart/mixed']">
            	<t:select path="mail:mp[@ct='application/msword']" attr="part" set="msg01.part1.id"/>
            </t:select>
        </t:response>
    </t:test>

	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<id>${msg01.id}</id>
			<part>${msg01.part1.id}</part>
			<view>html</view>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
		<!--	<t:content match="${msg01.part1.html.content}"/> -->
		<t:select attr="Content-Type" match="application/pdf"/>
		</t:restServletResponse>
	</t:resttest>

</t:test_case>



<t:test_case testcaseid="RestServlet_partViewAsHTML_02" type="functional" areas="verity" bugids="8761">
	<t:objective>Bug 8761: 'View as html' a zip file attachment.. throws 'conversion error'</t:objective>
	<t:steps>
	1. Inject a mime message with a zip attachment
	2. Use the rest servlet to download with fmt=html
	3. Verify the HTML
	</t:steps>

    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${msg02.file}</filename>
            <to>${account2.name}</to>
            <from>${nonZimbraUser.name}</from>
            <server>${account2.server}</server>
         </t:lmtpInjectRequest>
    </t:mailinjecttest>    
	
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${account2.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>subject:(bug8761)</query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m" attr="id" set="msg02.id"/>
	 </t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${msg02.id}"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:mp[@ct='multipart/mixed']">
            <t:select path="mail:mp[@filename='Res1.zip']" attr="ct" match="application/binary"/>            
            </t:select>
        </t:response>
    </t:test>

</t:test_case>


</t:tests>
