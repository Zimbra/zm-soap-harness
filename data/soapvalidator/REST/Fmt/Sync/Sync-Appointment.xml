<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>


<t:property name="message1.content" value="content${TIME}.${COUNTER}"/>
<t:property name="message1.subject" value="subject${TIME}.${COUNTER}"/>





<t:test_case testcaseid="RestServlet_Fmt_Appointment_AccountSetup" type="always" >
	<t:objective>setup accounts</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
		</t:response>
	</t:test>

</t:test_case>






<t:test_case testcaseid="RestServlet_fmt_appointment_01" type="smoke" >
	<t:objective>Verification of Rest Servlet - ask for fmt=sync for an appointment (i.e. 280-281)</t:objective>
	<t:steps>
	1. Use the rest servlet with fmt=sync to retrieve zimbra headers
	</t:steps>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:property name="appointment.start" value="${TIME}"/>
	<t:property name="message.subject" value="MessageSubject.${TIME}.${COUNTER}"/>
	<t:property name="appointment.subject" value="AppointmentSubject.${TIME}.${COUNTER}"/>
    
    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" loc="AppoitnmentLocation">
                        <s d="${ICALTIME[${appointment.start}]}"/>  
                        <e d="${ICALTIME(+2h)[${appointment.start}]}"/>  
                        <or a="${account1.name}"/>
                    </inv>
                    <mp content-type="text/plain">
                        <content>AppointmentContent</content>
                    </mp>
                    <su>${message.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse" attr="invId" set="appointment.invId"/>
        </t:response>
    </t:test>


	<t:resttest>
		<t:restServletRequest>
			<id>${appointment.invId}</id>
			<fmt>sync</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="Subject" match="${appointment.subject}"/>
		</t:restServletResponse>
	</t:resttest>

</t:test_case>



<t:test_case testcaseid="RestServlet_fmt_appointment_02" type="smoke" bugids="8655">
	<t:objective>Verification of Rest Servlet - ask for fmt=sync for an appointment</t:objective>
	<t:steps>
	1. Use the rest servlet with fmt=sync on an appointment
	2. Verify the content-length is returned
	</t:steps>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:property name="appointment.start" value="${TIME}"/>
	<t:property name="appointment.subject" value="AppointmentSubject.${TIME}.${COUNTER}"/>
    
    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" loc="AppoitnmentLocation">
                        <s d="${ICALTIME[${appointment.start}]}"/>  
                        <e d="${ICALTIME(+2h)[${appointment.start}]}"/>  
                        <or a="${account1.name}"/>
                    </inv>
                    <mp content-type="text/plain">
                        <content>AppointmentContent</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse" attr="invId" set="appointment.invId"/>
        </t:response>
    </t:test>


	<t:resttest>
		<t:restServletRequest>
			<id>${appointment.invId}</id>
			<fmt>sync</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="Content-Length" match="^\d+$"/>
		</t:restServletResponse>
	</t:resttest>

</t:test_case>


<t:test_case testcaseid="RestServlet_fmt_appointment_03" type="functional" bugids="8655">
	<t:objective>Verification of Rest Servlet - ask for fmt=sync for an appointment with TNEF attachment</t:objective>
	<t:steps>
	1. Use the rest servlet with fmt=syncon an appointment
	2. Verify the content-length is returned
	</t:steps>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="server.restServlet" value="${account1.server}"/>
<t:property name="uploadServletServer" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:property name="appointment.filename" value="${testMailRaw.root}/bug8655/msg01.txt"/>
    <t:property name="appointment.start" value="${TIME}"/>
	<t:property name="appointment.subject" value="AppointmentSubject.${TIME}.${COUNTER}"/>
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${appointment.filename}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="message1.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

    <t:test >
        <t:request>
            <SetAppointmentRequest xmlns="urn:zimbraMail" bugid="7619">
                <default needsReply="0" ptst="AC">
                    <m aid="${message1.aid}"/>
                </default>
            </SetAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SetAppointmentResponse" attr="apptId" set="appointment.apptId"/>
        </t:response>
    </t:test>

    <t:test depends="GetAppointmentRequest1a">
        <t:request> 
            <GetAppointmentRequest xmlns="urn:zimbraMail" id="${appointment.apptId}"/>
        </t:request>
        <t:response>
            <t:select path="//mail:GetAppointmentResponse/mail:appt/mail:inv" attr="id" set="appointment.inv.id"/>
        </t:response>
    </t:test>

	<t:property name="appointment.id" value="${appointment.apptId}-${appointment.inv.id}"/>

	<t:resttest>
		<t:restServletRequest>
			<id>${appointment.id}</id>
			<fmt>sync</fmt>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="Content-Length" match="^\d+$"/>
		</t:restServletResponse>
	</t:resttest>

</t:test_case>








</t:tests>
