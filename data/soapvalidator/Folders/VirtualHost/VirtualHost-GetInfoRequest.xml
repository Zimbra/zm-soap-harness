<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain1.name" value="domain.${TIME}.${COUNTER}.com"/>
<t:property name="domain1.virtual.name" value="virtual.${domain1.name}"/>

<t:property name="account1.user" value="user.${TIME}.${COUNTER}"/>
<t:property name="account1.name" value="${account1.user}@${domain1.name}"/>
<t:property name="account2.name" value="user.${TIME}.${COUNTER}@${defaultdomain.name}"/>


<t:test_case testcaseid="VirtualHost_AuthBasic_Setup" type="always" >
	<t:objective>basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain1.name}</name>
                <a n="zimbraVirtualHostname">${domain1.virtual.name}</a>
                <a n="zimbraPublicServiceHostname">${domain1.virtual.name}</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain1.id"/>
        </t:response>
    </t:test>

	<t:test required="true" >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
				<virtualHost>${domain1.virtual.name}</virtualHost>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetInfoRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetInfoResponse"/> 
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse">
				<t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="account1.folder.inbox.id"/>
				<t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="account1.folder.calendar.id"/>
				<t:select path="//mail:folder[@name='${globals.contacts}']" attr="id" set="account1.folder.contacts.id"/>
				<t:select path="//mail:folder[@name='${globals.emailed}']" attr="id" set="account1.folder.emailed.id"/>
				<t:select path="//mail:folder[@name='${globals.notebook}']" emptyset="1"/>
				<t:select path="//mail:folder[@name='${globals.tasks}']" attr="id" set="account1.folder.tasks.id"/>
			</t:select>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="VirtualHost_GetInfoRequest_01" type="smoke" >
	<t:objective>Verify the URL for GetInfoRequest uses the virtual host name</t:objective>
	<t:steps>
	1. Login to the virtual domain, using full email address
	2. Execute GetInfoRequest
	3. Verify the rest and soapURL attributes in the GetFolderResponse
	</t:steps>
	
	

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
				<virtualHost>${domain1.virtual.name}</virtualHost>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetInfoRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetInfoResponse">
				<t:select path="//acct:rest" match=".*${domain1.virtual.name}.*"/>
				<t:select path="//acct:soapURL" match=".*${domain1.virtual.name}.*"/>
			</t:select> 
		</t:response>
	</t:test>


</t:test_case>
<t:finally>

    <!-- Remove virtual host from all domains because if it could not resolved then nginx proxy failed to restart -->
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
   	<t:test >
        <t:request>
            <ModifyDomainRequest xmlns="urn:zimbraAdmin">
				<id>${domain1.id}</id>
				<a n="zimbraVirtualHostname"></a>
            </ModifyDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyDomainResponse/admin:domain"/>
        </t:response>
    </t:test>    



	
</t:finally>

</t:tests>
