<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="uploadFile.name" value="${testMailRaw.root}/email01/msg01.txt"/>
<t:property name="uploadFile.subject" value="email01A"/>
<t:property name="uploadFile.fragment" value="simple text string in the body"/>
<t:property name="uploadFile.content" value="simple text string in the body.*"/>

<t:property name="account1.name" value="combined1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.server" value="NOT_DEFINED"/>

<t:property name="account2.name" value="combined2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.server" value="NOT_DEFINED"/>
<t:property name="account2.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="acl2.name" value="combined.acl2.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="domain3.name" value="combined3.${TIME}.${COUNTER}.com"/>
<t:property name="account3.name" value="combined3.${TIME}.${COUNTER}@${domain3.name}"/>
<t:property name="account3.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="cos4.name" value="cos${TIME}${COUNTER}"/>
<t:property name="account4.name" value="combined4.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.server" value="NOT_DEFINED"/>
<t:property name="account4.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="account5.name" value="combined5.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account5.server" value="NOT_DEFINED"/>
<t:property name="account5.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="account1.folder5.name" value="folder5.${TIME}.${COUNTER}"/>

<t:property name="account6.name" value="combined6.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account6.server" value="NOT_DEFINED"/>
<t:property name="account6.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="account1.folder6.name" value="folder6.${TIME}.${COUNTER}"/>

<t:property name="account7.name" value="combined7.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account7.server" value="NOT_DEFINED"/>
<t:property name="account7.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="account1.folder7.name" value="folder7.${TIME}.${COUNTER}"/>

<t:property name="account8.name" value="combined8.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account8.server" value="NOT_DEFINED"/>
<t:property name="account8.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="account11.name" value="combined11.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account11.server" value="NOT_DEFINED"/>
<t:property name="account11.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="acl11.name" value="combined.acl11.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account12.name" value="combined12.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account12.server" value="NOT_DEFINED"/>
<t:property name="account12.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="acl12.name" value="combined.acl12.${TIME}.${COUNTER}@${defaultdomain.name}"/>



<t:property name="op.grant"			value="grant"/>
<t:property name="op.read"			value="read"/>
<t:property name="op.unread"		value="!read"/>
<t:property name="op.flag"			value="flag"/>
<t:property name="op.unflag"		value="!flag"/>
<t:property name="op.tag"			value="tag"/>
<t:property name="op.untag"			value="!tag"/>
<t:property name="op.move"			value="move"/>
<t:property name="op.delete"		value="delete"/>

<t:property name="grant.usr"			value="usr"/>
<t:property name="grant.grp"			value="grp"/>
<t:property name="grant.dom"			value="dom"/>
<t:property name="grant.cos"			value="cos"/>
<t:property name="grant.all"			value="all"/>
<t:property name="grant.pub"			value="pub"/>
<t:property name="grant.guest"			value="guest"/>

<t:property name="rights.none"			value=""/>
<t:property name="rights.read"			value="r"/>
<t:property name="rights.write"			value="w"/>
<t:property name="rights.insert"		value="i"/>
<t:property name="rights.delete"		value="d"/>
<t:property name="rights.administer"	value="a"/>
<t:property name="rights.workflow"		value="x"/>
<t:property name="rights.manager"		value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}"/>
<t:property name="view.conversation"	value="conversation"/>
<t:property name="view.message"			value="message"/>
<t:property name="view.contact"			value="contact"/>
<t:property name="view.appointment"		value="appointment"/>
<t:property name="view.note"			value="note"/>



<t:test_case testcaseid="SharingFoldersCombineBasic_AccountSetup" type="always" >
    <t:objective>basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    
    <t:test  id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>



    <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>



    <t:test  id="create_test_account1" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account1.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>



    <t:test  id="create_test_account2" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account2.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${acl2.name}</name>
                <a n="description">An Access Control List</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="acl2.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${acl2.id}</id>
                <dlm>${account2.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>



    <t:test >
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain3.name}</name>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain0.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account3.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>



    <t:test >
        <t:request>
            <CreateCosRequest xmlns="urn:zimbraAdmin">
                <name >${cos4.name}</name>        
            </CreateCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos4.id"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account4" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account4.name}</name>
            <password>${defaultpassword.value}</password>
            <a xmlns="" n="zimbraCOSId">${cos4.id}</a>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>



    <t:test  id="create_test_account5" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account5.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account5.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account5.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account6" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account6.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account6.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account6.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account7" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account7.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account7.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account7.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account8" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account8.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account8.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account8.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account11" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account11.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account11.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account11.server"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${acl11.name}</name>
                <a n="description">An Access Control List</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="acl11.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${acl11.id}</id>
                <dlm>${account11.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account12" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account12.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account12.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account12.server"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${acl12.name}</name>
                <a n="description">An Access Control List</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="acl12.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${acl12.id}</id>
                <dlm>${account12.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>



	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account1.folder.inbox.id"/>
		</t:response>
	</t:test>
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="account1.message2.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account1.folder.inbox.id}" aid="${account1.message2.aid}"/>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account1.message2.id"/>
        </t:response>
    </t:test>

	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="account1.message3.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account1.folder.inbox.id}" aid="${account1.message3.aid}"/>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account1.message3.id"/>
        </t:response>
    </t:test>

	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="account1.message4.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account1.folder.inbox.id}" aid="${account1.message4.aid}"/>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account1.message4.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder5.name}" l="${account1.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder5.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="account1.message5.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account1.folder5.id}" aid="${account1.message5.aid}"/>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account1.message5.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder6.name}" l="${account1.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder6.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="account1.message6.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account1.folder6.id}" aid="${account1.message6.aid}"/>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account1.message6.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder7.name}" l="${account1.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder7.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="account1.message7.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account1.folder7.id}" aid="${account1.message7.aid}"/>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account1.message7.id"/>
        </t:response>
    </t:test>

	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="account1.message8.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account1.folder.inbox.id}" aid="${account1.message8.aid}"/>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account1.message8.id"/>
        </t:response>
    </t:test>

	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="account1.message11.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account1.folder.inbox.id}" aid="${account1.message11.aid}"/>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account1.message11.id"/>
        </t:response>
    </t:test>

	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="account1.message12.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account1.folder.inbox.id}" aid="${account1.message12.aid}"/>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account1.message12.id"/>
        </t:response>
    </t:test>


</t:test_case>


<t:test_case testcaseid="SharingFoldersCombineBasic_01" type="bhr">
    <t:objective>Verify that rights combine when a folder is shared with an account (read) and a group (delete)</t:objective>
	<t:steps>
	1. Login as account1
	2. Share Inbox (which contains message01) with account2 as read
	2. Share Inbox with acl2 (which contains account2) as delete
	3. Login as account2
	4. Mount the drive, success.
	5. Get message01 (success)
	5. Delete message01 (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.inbox.id}">
					<grant gt="${grant.usr}" d="${account2.name}" perm="${rights.read}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.inbox.id}">
					<grant gt="${grant.grp}" d="${acl2.name}" perm="${rights.delete}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>



	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account2.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account2.folder.inbox.id}" name="${account2.folder.shared.name}" zid="${account1.id}" rid="${account1.folder.inbox.id}" view="${view.message}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account2.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.id}:${account1.message2.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.id}:${account1.message2.id}" op="${op.delete}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="SharingFoldersCombineBasic_02" type="bhr">
    <t:objective>Verify that rights combine when a folder is shared with an account (read) and a domain (delete)</t:objective>
	<t:steps>
	1. Login as account1
	2. Share Inbox (which contains message01) with account3 as read
	2. Share Inbox with domain3.com (which contains account3) as delete
	3. Login as account3
	4. Mount the drive, success.
	5. Get message01 (success)
	5. Delete message01 (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.inbox.id}">
					<grant gt="${grant.usr}" d="${account3.name}" perm="${rights.read}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.inbox.id}">
					<grant gt="${grant.dom}" d="${domain3.name}" perm="${rights.delete}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${account3.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account3.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account3.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account3.folder.inbox.id}" name="${account3.folder.shared.name}" zid="${account1.id}" rid="${account1.folder.inbox.id}" view="${view.message}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account3.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.id}:${account1.message3.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.id}:${account1.message3.id}" op="${op.delete}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="SharingFoldersCombineBasic_03" type="bhr">
    <t:objective>Verify that rights combine when a folder is shared with an account (read) and a COS (delete)</t:objective>
	<t:steps>
	1. Login as account1
	2. Share Inbox (which contains message01) with account4 as read
	2. Share Inbox with cos4 (which contains account4) as delete
	3. Login as account4
	4. Mount the drive, success.
	5. Get message01 (success)
	5. Delete message01 (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.inbox.id}">
					<grant gt="${grant.usr}" d="${account4.name}" perm="${rights.read}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.inbox.id}">
					<grant gt="${grant.cos}" d="${cos4.name}" perm="${rights.delete}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${account4.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account4.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account4.folder.inbox.id}" name="${account4.folder.shared.name}" zid="${account1.id}" rid="${account1.folder.inbox.id}" view="${view.message}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account4.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.id}:${account1.message4.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.id}:${account1.message4.id}" op="${op.delete}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="SharingFoldersCombineBasic_04" type="bhr">
    <t:objective>Verify that rights combine when a folder is shared with an account (read) and all (delete)</t:objective>
	<t:steps>
	1. Login as account1
	2. Share Inbox (which contains message01) with account5 as read
	2. Share Inbox with all (which contains account5) as delete
	3. Login as accoun5
	4. Mount the drive, success.
	5. Get message01 (success)
	5. Delete message01 (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder5.id}">
					<grant gt="${grant.usr}" d="${account5.name}" perm="${rights.read}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder5.id}">
					<grant gt="${grant.all}" perm="${rights.delete}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${account5.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account5.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account5.folder.inbox.id}" name="${account5.folder.shared.name}" zid="${account1.id}" rid="${account1.folder5.id}" view="${view.message}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account5.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.id}:${account1.message5.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.id}:${account1.message5.id}" op="${op.delete}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="SharingFoldersCombineBasic_05" type="bhr">
    <t:objective>Verify that rights combine when a folder is shared with an account (read) and a pub (delete)</t:objective>
	<t:steps>
	1. Login as account1
	2. Share Inbox (which contains message01) with account6 as read
	2. Share Inbox with pub (which contains account6) as delete
	3. Login as account6
	4. Mount the drive, success.
	5. Get message01 (success)
	5. Delete message01 (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder6.id}">
					<grant gt="${grant.usr}" d="${account6.name}" perm="${rights.read}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder6.id}">
					<grant gt="${grant.pub}" perm="${rights.delete}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${account6.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account6.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account6.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account6.folder.inbox.id}" name="${account6.folder.shared.name}" zid="${account1.id}" rid="${account1.folder6.id}" view="${view.message}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account6.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.id}:${account1.message6.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.id}:${account1.message6.id}" op="${op.delete}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="SharingFoldersCombineBasic_06" type="sanity" >
    <t:objective>Verify that rights combine when a folder is shared with an account (read) and a guest (delete)</t:objective>
	<t:steps>
	1. Login as account1
	2. Share Inbox with guest (foo@foo.com/test123) as read
	3. Share Inbox (which contains message01) with account7 as delete
	4. Login as account7
	5. Mount the drive, success.
	6. Get message01 (PERM_DENIED - requires password?)
	7. Delete message01 (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder7.id}">
					<grant gt="${grant.usr}" d="${account7.name}" perm="${rights.delete}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder7.id}">
					<grant gt="${grant.guest}" perm="${rights.read}" d="${defaultdestination.email}" args="${defaultpassword.value}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${account7.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account7.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account7.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account7.folder.inbox.id}" name="${account7.folder.shared.name}" zid="${account1.id}" rid="${account1.folder7.id}" view="${view.message}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.PERM_DENIED$"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.id}:${account1.message7.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.PERM_DENIED$"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.id}:${account1.message7.id}" op="${op.delete}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
        	<!-- Should authentication be required here? -->
            <t:select path="//mail:MsgActionResponse/mail:action"/>
        </t:response>
    </t:test>

</t:test_case>



<!-- Deprecated: Sending a second grant to the same ID clears the first grant settings -->
<t:test_case testcaseid="SharingFoldersCombineBasic_07" type="deprecated" >
    <t:objective>Verify that rights combine when a folder is shared with an account (read) and the same account (delete)</t:objective>
	<t:steps>
	1. Login as account1
	2. Share Inbox (which contains message01) with account8 as read
	3. Share Inbox (which contains message01) with account8 as delete
	3. Login as account8
	4. Mount the drive, success.
	5. Get message01 (success)
	5. Delete message01 (requires password?)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.inbox.id}">
					<grant gt="${grant.usr}" d="${account8.name}" perm="${rights.read}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.inbox.id}">
					<grant gt="${grant.usr}" d="${account8.name}" perm="${rights.delete}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${account8.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account8.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account8.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account8.folder.inbox.id}" name="${account8.folder.shared.name}" zid="${account1.id}" rid="${account1.folder.inbox.id}" view="${view.message}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account8.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.id}:${account1.message8.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.id}:${account1.message8.id}" op="${op.delete}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="SharingFoldersCombineBasic_11" type="bhr">
    <t:objective>Verify that different combinations of rights can be combined (read + insert)</t:objective>
	<t:steps>
	1. Login as account1
	2. Share Inbox (which contains message01) with account11 as read
	2. Share Inbox with acl11 (which contains account11) as insert
	3. Login as account11
	4. Mount the drive, success.
	5. Get message01 (success)
	5. Add a new message (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.inbox.id}">
					<grant gt="${grant.usr}" d="${account11.name}" perm="${rights.read}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.inbox.id}">
					<grant gt="${grant.grp}" d="${acl11.name}" perm="${rights.insert}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>



	<t:property name="server.zimbraAccount" value="${account11.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account11.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account11.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account11.folder.inbox.id}" name="${account11.folder.shared.name}" zid="${account1.id}" rid="${account1.folder.inbox.id}" view="${view.message}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account11.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.id}:${account1.message11.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m"/>
        </t:response>
    </t:test>

	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="account11.message1.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account11.folder.shared.id}" aid="${account11.message1.aid}"/>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account11.message1.id"/>
        </t:response>
    </t:test>


</t:test_case>



<t:test_case testcaseid="SharingFoldersCombineBasic_12" type="sanity" bugids="9246">
    <t:objective>Verify the specific rights read and none are combined: both should be applied meaning read access allowed</t:objective>
	<t:steps>
	1. Login as account1
	2. Share Inbox (which contains message01) with account12 as read
	3. Share Inbox with acl12 (which contains account12) as read
	4. Share Inbox with acl12 (which contains account12) as none ("")
	5. Login as account12
	6. Mount the drive (success)
	7. Get message01 (success)
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.inbox.id}">
					<grant gt="${grant.usr}" d="${account12.name}" perm="${rights.read}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.inbox.id}">
					<grant gt="${grant.grp}" d="${acl12.name}" perm="${rights.read}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder.inbox.id}">
					<grant gt="${grant.grp}" d="${acl12.name}" perm="${rights.none}" />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>



	<t:property name="server.zimbraAccount" value="${account12.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account12.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account12.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account12.folder.inbox.id}" name="${account12.folder.shared.name}" zid="${account1.id}" rid="${account1.folder.inbox.id}" view="${view.message}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account12.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.id}:${account1.message12.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m"/>
        </t:response>
    </t:test>

</t:test_case>




</t:tests>
