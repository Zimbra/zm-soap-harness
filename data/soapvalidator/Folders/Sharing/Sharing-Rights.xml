<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="uploadFile.name" value="${testMailRaw.root}/email01/msg01.txt"/>
<t:property name="uploadFile.subject" value="email01A"/>
<t:property name="uploadFile.fragment" value="simple text string in the body"/>
<t:property name="uploadFile.content" value="simple text string in the body.*"/>

<t:property name="account1.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.server" value="NOT_DEFINED"/>
<t:property name="account1.folder1.name" value="folder.${TIME}.${COUNTER}"/>

<t:property name="account2.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.server" value="NOT_DEFINED"/>
<t:property name="account2.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="account2.message1.content" value="content.${TIME}.${COUNTER}"/>

<t:property name="account3.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account4.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.server" value="NOT_DEFINED"/>
<t:property name="account4.folder1.name" value="folder.${TIME}.${COUNTER}"/>

<t:property name="account5.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account5.server" value="NOT_DEFINED"/>
<t:property name="account5.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="account5.message2.content" value="content.${TIME}.${COUNTER}"/>

<t:property name="account6.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account6.server" value="NOT_DEFINED"/>
<t:property name="account6.folder1.name" value="folder.${TIME}.${COUNTER}"/>

<t:property name="account7.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account7.server" value="NOT_DEFINED"/>
<t:property name="account7.folder.shared.name" value="share.${TIME}.${COUNTER}"/>
<t:property name="account7.message2.content" value="content.${TIME}.${COUNTER}"/>

<t:property name="account8.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account8.server" value="NOT_DEFINED"/>
<t:property name="account8.folder1.name" value="folder.${TIME}.${COUNTER}"/>

<t:property name="account9.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account9.server" value="NOT_DEFINED"/>
<t:property name="account9.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="account10.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account10.server" value="NOT_DEFINED"/>
<t:property name="account10.folder1.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="account11.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account11.server" value="NOT_DEFINED"/>
<t:property name="account11.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="account12.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account12.server" value="NOT_DEFINED"/>
<t:property name="account12.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

<t:property name="account13.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account14.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account13.folder1.name" value="account13.folder1.${TIME}.${COUNTER}"/>
<t:property name="account14.mountpoint1.name" value="mountpoint1.${account13.folder1.name}"/>
<t:property name="account15.folder1.name" value="account15.folder1.${TIME}.${COUNTER}"/>
<t:property name="account15.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account16.name" value="sharing.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="op.grant"			value="grant"/>
<t:property name="op.read"			value="read"/>
<t:property name="op.unread"		value="!read"/>
<t:property name="op.flag"			value="flag"/>
<t:property name="op.unflag"		value="!flag"/>
<t:property name="op.tag"			value="tag"/>
<t:property name="op.untag"			value="!tag"/>
<t:property name="op.move"			value="move"/>
<t:property name="op.delete"		value="delete"/>

<t:property name="grant.usr"			value="usr"/>
<t:property name="grant.grp"			value="grp"/>
<t:property name="grant.dom"			value="dom"/>
<t:property name="grant.cos"			value="cos"/>
<t:property name="grant.all"			value="all"/>
<t:property name="grant.pub"			value="pub"/>
<t:property name="grant.guest"			value="guest"/>

<t:property name="rights.none"			value=""/>
<t:property name="rights.read"			value="r"/>
<t:property name="rights.write"			value="w"/>
<t:property name="rights.insert"		value="i"/>
<t:property name="rights.delete"		value="d"/>
<t:property name="rights.administer"	value="a"/>
<t:property name="rights.workflow"		value="x"/>
<t:property name="rights.manager"		value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}"/>
<t:property name="view.conversation"	value="conversation"/>
<t:property name="view.message"			value="message"/>
<t:property name="view.contact"			value="contact"/>
<t:property name="view.appointment"		value="appointment"/>
<t:property name="view.note"			value="note"/>



<t:test_case testcaseid="SharingFoldersBasic_AccountSetup" type="always" >
    <t:objective>basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    
    <t:test  id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>


    <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account1" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account1.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account2" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account2.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account3" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account3.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account4" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account4.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account5" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account5.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account5.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account5.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account6" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account6.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account6.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account6.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account7" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account7.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account7.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account7.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account8" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account8.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account8.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account8.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account9" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account9.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account9.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account9.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account10" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account10.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account10.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account10.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account11" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account11.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account11.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account11.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account12" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account12.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account12.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account12.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account13" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account13.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account13.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account13.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account14" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account14.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account14.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account14.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account15" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account15.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account15.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account15.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account16" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account16.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account16.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account16.server"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SharingFoldersBasic_01" type="smoke" bugids="9005">
    <t:objective>Verify that sharing folders with read access allows messages to be viewed, but not added, modified, deleted, or reshared</t:objective>
	<t:steps>
	1. Login as account1
	2. Add a folder, share folder with account2 (permissions=read)
	3. Login as account2
	4. Mount the drive, success.
	5. Run a message search.  Success.
	6. GetMsgRequest.  Success.
	7. AddMsgRequest.  PERM_DENIED.
	8. MsgActionRequest (op=read).  PERM_DENIED.
	9. MsgActionRequest (op=delete).  PERM_DENIED.
	10. FolderActionRequest(grant).  PERM_DENIED.
	11. Move a Contact into the folder.  CANNOT_CONTAIN (Server does not support this)
	12. Create a subfolder in the folder.  PERM_DENIED.
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account1.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder1.name}" l="${account1.folder.inbox.id}" f="i"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder1.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="account1.message1.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account1.folder1.id}" aid="${account1.message1.aid}"/>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account1.message1.id"/>
        </t:response>
    </t:test>

    <!-- Make sure the message is unread -->
    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.message1.id}" op="${op.unread}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder1.id}">
					<grant gt="${grant.usr}" d="${account2.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	<t:property name="account2.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account2.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account2.folder.inbox.id}" name="${account2.folder.shared.name}" zid="${account1.id}" rid="${account1.folder1.id}" view="${view.message}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account2.folder.shared.id"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account2.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account2.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFolderResponse"/>
        </t:response>
    </t:test>

 	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:"${globals.inbox}/${account2.folder.shared.name}"</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="account2.message1.id"/>
		</t:response>
	</t:test>
	
    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account2.message1.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account2.message1.id}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='f']" attr="a" match="foo@foo.com"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='t']" attr="a" match="foo@foo.com"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:su" match="${uploadFile.subject}"/>
			<t:select path="//mail:GetMsgResponse/mail:m/mail:mp[@ct='text/plain']/mail:content"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account2.folder.shared.id}">
                    <content>"${account2.message1.content}"</content>
                </m>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account2.message1.id}" op="${op.read}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account2.message1.id}" op="${op.delete}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account2.folder.shared.id}">
					<grant gt="${grant.usr}" d="${account3.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test> 

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="NewSubFolder" l="${account2.folder.shared.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test >
    
</t:test_case>


<t:test_case testcaseid="SharingFoldersBasic_02" type="smoke" >
    <t:objective>Verify that sharing folders with manager (rwidx) access allows messages to be viewed, added, modified, and deleted, but not reshared</t:objective>
	<t:steps>
	1. Login as account4
	2. Add a folder, share folder with account5 (permissions=rwidx)
	3. Login as account5
	4. Mount the drive, success.
	5. Run a message search.  Success.
	6. GetMsgRequest.  Success.
	7. AddMsgRequest.  Success.
	8. MsgActionRequest(op=read).  Success.
	9. MsgActionRequest(op=delete).  Success.
	10. FolderActionRequest(grant).  PERM_DENIED.
	11. Move a Contact into the folder.  CANNOT_CONTAIN (Server does not support this)
	12. Create a subfolder in the folder-->  allowed( r + i permission grants c permission) .
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account4.server}"/>
	<t:property name="uploadServletServer" value="${account4.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account4.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account4.folder1.name}" l="${account4.folder.inbox.id}" f="i"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account4.folder1.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="account4.message1.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account4.folder1.id}" aid="${account4.message1.aid}"/>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account4.message1.id"/>
        </t:response>
    </t:test>

    <!-- Make sure the message is unread -->
    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account4.message1.id}" op="${op.unread}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account4.folder1.id}">
					<grant gt="${grant.usr}" d="${account5.name}" perm="${rights.manager}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account5.server}"/>
	<t:property name="account5.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account5.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account5.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account5.folder.inbox.id}" name="${account5.folder.shared.name}" zid="${account4.id}" rid="${account4.folder1.id}" view="${view.message}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account5.folder.shared.id"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account5.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account5.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFolderResponse"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:"${globals.inbox}/${account5.folder.shared.name}"</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="account5.message1.id"/>
		</t:response>
	</t:test>
	
    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account5.message1.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account5.message1.id}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='f']" attr="a" match="foo@foo.com"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='t']" attr="a" match="foo@foo.com"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:su" match="${uploadFile.subject}"/>
			<t:select path="//mail:GetMsgResponse/mail:m/mail:mp[@ct='text/plain']/mail:content"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account5.folder.shared.id}">
                    <content>"${account5.message2.content}"</content>
                </m>
            </AddMsgRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account05.message2.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account5.message1.id}" op="${op.read}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:MsgActionResponse/mail:action">
				<t:select attr="op" match="${op.read}"/>
				<t:select attr="id" match="${account5.message1.id}"/>
			</t:select>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account5.message1.id}" op="${op.delete}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
			<t:select path="//mail:MsgActionResponse/mail:action">
				<t:select attr="op" match="${op.delete}"/>
				<t:select attr="id" match="${account5.message1.id}"/>
			</t:select>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account5.folder.shared.id}">
					<grant gt="${grant.usr}" d="${account3.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="NewSubFolder" l="${account5.folder.shared.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="newfolder.id"/>
        </t:response>
    </t:test >
    
</t:test_case>


<t:test_case testcaseid="SharingFoldersBasic_03" type="smoke" bugids="8491, 8890">
    <t:objective>Verify that sharing contacts with "none" access does not grant access to the contact information</t:objective>
	<t:steps>
	1. Login as account6
	2. Add a folder, share folder with account7 (permissions=none)
	3. Login as account7
	4. Mount the drive, success (?).
	Poonam: Date: 23 June 2007: CreateMountPoint is giving perm_denied now.

	5. Run a folder search.  No results.
	6. GetMsgRequest.  PERM_DENIED.
	7. AddMsgRequest.  PERM_DENIED.
	8. MsgActionRequest(op=read).  PERM_DENIED. 
	9. MsgActionRequest(op=delete).  PERM_DENIED. 
	10. FolderActionRequest(grant).  PERM_DENIED.
	11. Move a Contact into the folder.  CANNOT_CONTAIN (Server does not support this)
	12. Create a subfolder in the folder.  PERM_DENIED.
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account6.server}"/>
	<t:property name="uploadServletServer" value="${account6.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account6.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account6.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account6.folder1.name}" l="${account6.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account6.folder1.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="account6.message1.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account6.folder1.id}" aid="${account6.message1.aid}"/>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account6.message1.id"/>
        </t:response>
    </t:test>

    <!-- Make sure the message is unread -->
    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account6.message1.id}" op="${op.unread}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account6.folder1.id}">
					<grant gt="${grant.usr}" d="${account7.name}" perm="${rights.none}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account7.server}"/>
	<t:property name="account7.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account7.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account7.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account7.folder.inbox.id}" name="${account7.folder.shared.name}" zid="${account6.id}" rid="${account6.folder1.id}" view="${view.message}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>

	<!--t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account7.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account7.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:"${globals.inbox}/${account7.folder.shared.name}"</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" emptyset="1"/>
		</t:response>
	</t:test>
	

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account7.folder.shared.id}">
                    <content>"${account7.message2.content}"</content>
                </m>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account6.id}:${account6.message1.id}" op="${op.read}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account6.id}:${account6.message1.id}" op="${op.delete}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account7.folder.shared.id}">
					<grant gt="${grant.usr}" d="${account3.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="NewSubFolder" l="${account7.folder.shared.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test -->
    



</t:test_case>



<t:test_case testcaseid="SharingFoldersBasic_11" type="functional" bugids="8491">
    <t:objective>Verify that a folder shared with none permissions cannot be searched</t:objective>
	<t:steps>
	1. Login as account8
	2. Add a folder, share folder with account9 (permissions=none)
	3. Login as account9, mount the drive
	4. GetFolderRequest should return PERM_DENIED
	5. Run a message search.  The messages MUST NOT be shown.
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account8.server}"/>
	<t:property name="uploadServletServer" value="${account8.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account8.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account8.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account8.folder1.name}" l="${account8.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account8.folder1.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="account8.message1.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account8.folder1.id}" aid="${account8.message1.aid}"/>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account8.message1.id"/>
        </t:response>
    </t:test>

    <!-- Make sure the message is unread -->
    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account8.message1.id}" op="${op.unread}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account8.folder1.id}">
					<grant gt="${grant.usr}" d="${account9.name}" perm="${rights.none}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account9.server}"/>
	<t:property name="account9.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account9.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account9.folder.inbox.id"/>
		</t:response>
	</t:test>

<!--	Poonam: Date: 23 June 2007: CreateMountPoint is giving perm_denied now. -->
    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account9.folder.inbox.id}" name="${account9.folder.shared.name}" zid="${account8.id}" rid="${account8.folder1.id}" view="${view.message}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>

	<!--t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${account9.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:"${globals.inbox}/${account9.folder.shared.name}"</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" emptyset="1"/>
		</t:response>
	</t:test-->
	



</t:test_case>


<t:test_case testcaseid="SharingFoldersBasic_12" type="functional" bugids="4413">
    <t:objective>Verify a grantee with "ra" rights can share the folder again to another user</t:objective>
	<t:steps>
	1. Login as account10
	2. Add a folder, share folder with account11 (permissions=ra)
	3. Login as account11
	4. Mount the drive, share the folder with account12 (permissions=r)
	5. Login as account12.
	6. Verify that account10's contents can be viewed.
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account10.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account10.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account10.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account10.folder1.name}" l="${account10.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account10.folder1.id"/>
        </t:response>
    </t:test >
    
    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account10.folder1.id}">
                    <content>Date: Wed, 28 Nov 2007 05:15:48 -0800 (PST)
From: foo@example.com
To: bar@example.com
Subject: subject${TIME}${COUNTER}
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit

C'mon, stop being such a goody two-shoes. Everybody's 
doing it. Well, maybe not everyone, but according to 
a recent Harris Interactive survey, more than half of 
us admit to regifting -- that is, passing off unwanted 
gifts as if they were being bestowed for the very 
first time.


                    </content>
                </m>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account10.message1.id"/>
        </t:response>
    </t:test>



    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account10.folder1.id}">
					<grant gt="${grant.usr}" d="${account11.name}" perm="${rights.read}${rights.administer}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account11.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account11.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account11.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account11.folder.inbox.id}" name="${account11.folder.shared.name}" zid="${account10.id}" rid="${account10.folder1.id}" view="${view.message}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account11.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account11.folder.shared.id}">
					<grant gt="${grant.usr}" d="${account12.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account12.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account12.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account10.id}:${account10.message1.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse">
            	<t:select path="//mail:m[@id='${account10.id}:${account10.message1.id}']"/>
            </t:select>
        </t:response>
    </t:test>
    

	



</t:test_case>

<t:test_case testcaseid="SharingFoldersBasic_13" type="functional" bugids="23317">
    <t:objective>Verify tagging a shared message does not apply</t:objective>
	<t:steps>
	1. Login as account13
	2. Add a folder, share folder with account14 (permissions=manager), add a message
	3. Login as account14
	4. Apply a tag to the message - PERM_DENIED (or other error)
	5. Login as account13
	6. Verify that the tag does not appear
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account13.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account13.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateTagRequest xmlns="urn:zimbraMail">
                <tag name="tag.${TIME}.${COUNTER}" color="1" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTagResponse/mail:tag" attr="id" set="account13.tag1.id"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account13.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account13.folder1.name}" l="${account13.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account13.folder1.id"/>
        </t:response>
    </t:test >
    
    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account13.folder1.id}">
                    <content>Date: Wed, 28 Nov 2007 05:15:48 -0800 (PST)
From: foo@example.com
To: bar@example.com
Subject: subject${TIME}${COUNTER}


Residents of Minneapolis and Seattle are the most bookish 
and well-read, according to results from a new survey released 
today of the most literate American cities.



                    </content>
                </m>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account13.message1.id"/>
        </t:response>
    </t:test>



    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account13.folder1.id}">
					<grant gt="${grant.usr}" d="${account14.name}" perm="${rights.manager}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account14.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account14.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateTagRequest xmlns="urn:zimbraMail">
                <tag name="tag.${TIME}.${COUNTER}" color="1" />
            </CreateTagRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateTagResponse/mail:tag" attr="id" set="account14.tag1.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account13.id}:${account13.message1.id}" op="${op.tag}" tag="${account14.tag1.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <!-- This may return a different zimbra:Code instead -->
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account13.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account13.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account13.message1.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse">
            	<t:select path="//mail:m" attr="t" match="${account14.tag1.id}" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SharingFoldersBasic_14" type="functional" bugids="23904">
    <t:objective>Verify flagging a shared message </t:objective>
	<t:steps>
	1. Login as account15
	2. Add a folder, add a message and share folder with account16 (permissions=manager)
	3. Login as account16
	4. Flag that shared message.(should allow)
	5. Login as account15
	6. Verify that the message got flagged
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account15.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account15.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account15.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account15.folder1.name}" l="${account15.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account15.folder1.id"/>
        </t:response>
    </t:test >
    
    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account15.folder1.id}">
                    <content>Date: Wed, 28 Nov 2007 05:15:48 -0800 (PST)
From: foo@example.com
To: bar@example.com
Subject: subject${TIME}${COUNTER}


Residents of Minneapolis and Seattle are the most bookish 
and well-read, according to results from a new survey released 
today of the most literate American cities.



                    </content>
                </m>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account15.message1.id"/>
        </t:response>
    </t:test>



    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account15.folder1.id}">
					<grant gt="${grant.usr}" d="${account16.name}" perm="${rights.manager}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account16.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account16.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account15.id}:${account15.message1.id}" op="flag"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse"/>
		</t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account15.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account15.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account15.message1.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse">
            	<t:select path="//mail:m" attr="f" match="f"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>

</t:tests>
