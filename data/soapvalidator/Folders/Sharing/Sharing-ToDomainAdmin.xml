<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain1.name" value="domain.${TIME}.${COUNTER}.${defaultdomain.name}"/>

<t:property name="admin1.name" value="admin1.${TIME}.${COUNTER}@${domain1.name}"/>

<t:property name="account1.name" value="account1.${TIME}.${COUNTER}@${domain1.name}"/>
<t:property name="account2.name" value="account2.${TIME}.${COUNTER}@${domain1.name}"/>



<t:property name="op.grant"			value="grant"/>
<t:property name="op.read"			value="read"/>
<t:property name="op.unread"		value="!read"/>
<t:property name="op.flag"			value="flag"/>
<t:property name="op.unflag"		value="!flag"/>
<t:property name="op.tag"			value="tag"/>
<t:property name="op.untag"			value="!tag"/>
<t:property name="op.move"			value="move"/>
<t:property name="op.delete"		value="delete"/>

<t:property name="grant.usr"			value="usr"/>
<t:property name="grant.grp"			value="grp"/>
<t:property name="grant.dom"			value="dom"/>
<t:property name="grant.cos"			value="cos"/>
<t:property name="grant.all"			value="all"/>
<t:property name="grant.pub"			value="pub"/>
<t:property name="grant.guest"			value="guest"/>

<t:property name="rights.none"			value=""/>
<t:property name="rights.read"			value="r"/>
<t:property name="rights.write"			value="w"/>
<t:property name="rights.insert"		value="i"/>
<t:property name="rights.delete"		value="d"/>
<t:property name="rights.administer"	value="a"/>
<t:property name="rights.workflow"		value="x"/>
<t:property name="rights.manager"		value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}"/>
<t:property name="view.conversation"	value="conversation"/>
<t:property name="view.message"			value="message"/>
<t:property name="view.contact"			value="contact"/>
<t:property name="view.appointment"		value="appointment"/>
<t:property name="view.note"			value="note"/>



<t:test_case testcaseid="SharingFoldersToDomainAdmin_AccountSetup" type="always" >
    <t:objective>basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    
    <t:test  id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>


    <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id="CreateDomainRequest0a">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain1.name}</name>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain1.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
	        <CreateAccountRequest xmlns="urn:zimbraAdmin">
	            <name>${admin1.name}</name>
	            <password>${defaultpassword.value}</password>
	            <a n="zimbraIsDomainAdminAccount">${globals.true}</a>
				<a n="zimbraIsAdminAccount">${globals.false}</a>
	        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="admin1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="admin1.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
	        <CreateAccountRequest xmlns="urn:zimbraAdmin">
	            <name>${account1.name}</name>
	            <password>${defaultpassword.value}</password>
	        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
	        <CreateAccountRequest xmlns="urn:zimbraAdmin">
	            <name>${account2.name}</name>
	            <password>${defaultpassword.value}</password>
	        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>



</t:test_case>


<t:test_case testcaseid="SharingFoldersToDomainAdmin_01" type="smoke" bugids="7425">
    <t:objective>Verify an admin user only has user rights, if logged into the user interface</t:objective>
	<t:steps>
	1. Login as account1
	2. Add a folder, share folder with admin1 (permissions = read)
	3. Login as admin1 to the account interface (not the admin interface)
	4. Mount the drive, success.
	5. Run a message search.  Success.
	6. GetMsgRequest.  Success.
	7. AddMsgRequest.  PERM_DENIED.
	8. MsgActionRequest (op=read).  PERM_DENIED.
	9. MsgActionRequest (op=delete).  PERM_DENIED.
	10. FolderActionRequest(grant).  PERM_DENIED.
	11. Move a Contact into the folder.  CANNOT_CONTAIN (Server does not support this)
	12. Create a subfolder in the folder.  PERM_DENIED.
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="message1.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="account1.folder1.name" value="folder${TIME}${COUNTER}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account1.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder1.name}" l="${account1.folder.inbox.id}" f="i"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder1.id"/>
        </t:response>
    </t:test >
    
    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account1.folder1.id}">
                    <content>To: foo@example.com
From: bar@example.com
Subject: ${message1.subject}
Date: Thu, 9 Aug 2007 09:26:25 -0700 (PDT)
MIME-Version: 1.0

Message Content

                 	</content>
                </m>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account1.message1.id"/>
        </t:response>
    </t:test>

    <!-- Make sure the message is unread -->
    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.message1.id}" op="${op.unread}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder1.id}">
					<grant gt="${grant.usr}" d="${admin1.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${admin1.server}"/>
	<t:property name="admin1.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${admin1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="admin1.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${admin1.folder.inbox.id}" name="${admin1.folder.shared.name}" zid="${account1.id}" rid="${account1.folder1.id}" view="${view.message}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="admin1.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${admin1.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFolderResponse"/>
        </t:response>
    </t:test>

 	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:"${globals.inbox}/${admin1.folder.shared.name}" is:remote</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="admin1.message1.id"/>
		</t:response>
	</t:test>
	
    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${admin1.message1.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${admin1.message1.id}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='f']" attr="a" match="bar@example.com"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='t']" attr="a" match="foo@example.com"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:su" match="${message1.subject}"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${admin1.folder.shared.id}">
                    <content>To: foo@example.com
From: bar@example.com
Subject: ${message1.subject}
Date: Thu, 9 Aug 2007 09:26:25 -0700 (PDT)
MIME-Version: 1.0

Message Content

                 	</content>
                </m>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${admin1.message1.id}" op="${op.read}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${admin1.message1.id}" op="${op.delete}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${admin1.folder.shared.id}">
					<grant gt="${grant.usr}" d="${account2.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test> 

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="NewSubFolder" l="${admin1.folder.shared.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
    </t:test >
    
</t:test_case>

<t:test_case testcaseid="SharingFoldersToDomainAdmin_02" type="smoke" bugids="7425">
    <t:objective>Verify an admin user has admin rights, if logged into the admin interface</t:objective>
	<t:steps>
	1. Login as account1
	2. Add a folder, share folder with admin1 (permissions = read)
	3. Login as admin1 to the account interface (not the admin interface)
	4. Mount the drive, success.
	5. Run a message search.  Success.
	6. GetMsgRequest.  Success.
	7. AddMsgRequest.  PERM_DENIED.
	8. MsgActionRequest (op=read).  PERM_DENIED.
	9. MsgActionRequest (op=delete).  PERM_DENIED.
	10. FolderActionRequest(grant).  PERM_DENIED.
	11. Move a Contact into the folder.  CANNOT_CONTAIN (Server does not support this)
	12. Create a subfolder in the folder.  PERM_DENIED.
	</t:steps>
	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="message1.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="account1.folder1.name" value="folder${TIME}${COUNTER}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account1.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder1.name}" l="${account1.folder.inbox.id}" f="i"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder1.id"/>
        </t:response>
    </t:test >
    
    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account1.folder1.id}">
                    <content>To: foo@example.com
From: bar@example.com
Subject: ${message1.subject}
Date: Thu, 9 Aug 2007 09:26:25 -0700 (PDT)
MIME-Version: 1.0

Message Content

                 	</content>
                </m>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account1.message1.id"/>
        </t:response>
    </t:test>

    <!-- Make sure the message is unread -->
    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.message1.id}" op="${op.unread}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder1.id}">
					<grant gt="${grant.usr}" d="${admin1.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${admin1.server}"/>
	<t:property name="admin1.folder.shared.name" value="share.${TIME}.${COUNTER}"/>

    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="admin1.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${admin1.folder.inbox.id}" name="${admin1.folder.shared.name}" zid="${account1.id}" rid="${account1.folder1.id}" view="${view.message}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="admin1.folder.shared.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail">
                <folder l="${admin1.folder.shared.id}"/>
			</GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFolderResponse"/>
        </t:response>
    </t:test>

 	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>in:"${globals.inbox}/${admin1.folder.shared.name}" is:remote</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="admin1.message1.id"/>
		</t:response>
	</t:test>
	
    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${admin1.message1.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${admin1.message1.id}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='f']" attr="a" match="bar@example.com"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='t']" attr="a" match="foo@example.com"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:su" match="${message1.subject}"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${admin1.folder.shared.id}">
                    <content>To: foo@example.com
From: bar@example.com
Subject: ${message1.subject}
Date: Thu, 9 Aug 2007 09:26:25 -0700 (PDT)
MIME-Version: 1.0

Message Content

                 	</content>
                </m>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${admin1.message1.id}" op="${op.read}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action id="${admin1.message1.id}" op="${op.delete}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${admin1.folder.shared.id}">
					<grant gt="${grant.usr}" d="${account2.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test> 

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="NewSubFolder" l="${admin1.folder.shared.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder"/>
        </t:response>
    </t:test >
    
</t:test_case>


</t:tests>
