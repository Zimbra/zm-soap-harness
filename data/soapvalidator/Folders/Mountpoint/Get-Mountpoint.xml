<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="acct1.name" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="acct2.name" value="other.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acctSetup1_CreateMountpoint" type="always">
    <t:objective>create test account</t:objective>
    <t:steps>
            1. Login to admin.
            2. Create two accounts.
            3. Get those accounts.
            4. Get auth token of the 2 accounts created.
    </t:steps>
   
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
     
    <t:property name="admin.authToken" value="${authToken}"/>  
    
    <t:test  id="create_test_account1" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${acct1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="acct1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="acct1.server"/>
        </t:response>
    </t:test>
    
    <t:test  id="create_test_account2" required="true" depends="admin_login" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${acct2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="acct2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="acct2.server"/>
        </t:response>
    </t:test>
     
      
	<t:property name="server.zimbraAccount" value="${acct1.server}"/>

    <t:test depends="create_test_account1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${acct1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test id="getFolderRequest" required="true">
        <t:request>
             <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="acct1.folder.inbox"/>
            <t:select path="//mail:folder[@name='${globals.trash}']" attr="id" set="acct1.folder.trash"/>
            <t:select path="//mail:folder[@name='${globals.sent}']" attr="id" set="acct1.folder.sent"/>
            <t:select path="//mail:folder[@name='${globals.spam}']" attr="id" set="acct1.folder.spam"/> 
            <t:select path="//mail:folder[@name='${globals.drafts}']" attr="id" set="acct1.folder.drafts"/> 
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="acct1.folder.root"/>
        </t:response>
    </t:test>

    <t:property name="acct1.authToken" value="${authToken}"/>  

	<t:property name="server.zimbraAccount" value="${acct2.server}"/>
     
    
    <t:test depends="create_test_account2" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${acct2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
 
    <t:property name="acct2.authToken" value="${authToken}"/>  

 
    <t:test id="getFolderRequest" required="true">
        <t:request>
             <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="acct2.folder.inbox"/>
            <t:select path="//mail:folder[@name='${globals.trash}']" attr="id" set="acct2.folder.trash"/>
            <t:select path="//mail:folder[@name='${globals.sent}']" attr="id" set="acct2.folder.sent"/>
            <t:select path="//mail:folder[@name='${globals.spam}']" attr="id" set="acct2.folder.spam"/> 
            <t:select path="//mail:folder[@name='${globals.drafts}']" attr="id" set="acct2.folder.drafts"/> 
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="acct2.folder.root"/>
        </t:response>
    </t:test>
    
</t:test_case>
  

<t:test_case testcaseid="acctSetup2_CreateMountpoint" type="always">
    <t:objective>Create a folder, give read permissions.</t:objective>
    <t:steps>
            1. Login to first account.
            2. Create a folder.
            3. Give permissions.
    </t:steps>
     
	<t:property name="server.zimbraAccount" value="${acct1.server}"/>

    <t:property name="authToken" value="${acct1.authToken}"/>  

    
    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder l="${acct1.folder.root}" name="folder${COUNTER}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder1.id"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${folder1.id}" op="grant">
                    <grant d="${acct2.name}" gt="usr" perm="rwidax"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
</t:test_case>
  

<t:test_case testcaseid="Get_MountFolder01" type="sanity" bugids="26306">
    <t:objective>Verify GetFolder by path of the shared folder works </t:objective>
    <t:steps>
            1. Login to second account.
            2. Give CreateMountpointRequest to mount the delegated folder .
			3. Get that mounted folder
    </t:steps>

	<t:property name="server.zimbraAccount" value="${acct2.server}"/>

    <t:property name="authToken" value="${acct2.authToken}"/>  

   
    <t:test>
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="1" name="user1's folder ${COUNTER}"  rid="${folder1.id}" zid="${acct1.id}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="mount1.id"/>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="name" set="mount1.name"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
             <GetFolderRequest xmlns = "urn:zimbraMail">
			     <folder path="${mount1.name}"/>
			 </GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFolderResponse"/>
        </t:response>
    </t:test>

</t:test_case>
   
<t:test_case testcaseid="Get_MountFolder02" type="sanity" bugids="26306">
    <t:objective>Verify GetFolder by path of the shared sub-folder works </t:objective>
    <t:steps>
            1. Login to first account.
            2. Create a sub-folder of Inbox.
			3. Share that Inbox
            4. Create mountpoint
            5. Fire GetFolder for the mounted sub-folder
    </t:steps>

	<t:property name="server.zimbraAccount" value="${acct1.server}"/>
    <t:property name="authToken" value="${acct1.authToken}"/>  

    
    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder l="${acct1.folder.inbox}" name="folder${COUNTER}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="name" set="sub-folder.name"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${acct1.folder.inbox}" op="grant">
                    <grant d="${acct2.name}" gt="usr" perm="rwidax"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${acct2.server}"/>
    <t:property name="authToken" value="${acct2.authToken}"/>  


    <t:test>
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="1" name="acct2.inbox"  rid="${acct1.folder.inbox}" zid="${acct1.id}"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="mount2.id"/>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="name" set="mount12.name"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
             <GetFolderRequest xmlns = "urn:zimbraMail">
			     <folder path="acct2.inbox/${sub-folder.name}"/>
			 </GetFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFolderResponse"/>
        </t:response>
    </t:test>

</t:test_case>

</t:tests>