<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account2.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account3.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="folder1.name" value="folder.${TIME}.${COUNTER}"/>
<t:property name="folder2.name" value="folder.${TIME}.${COUNTER}"/>
<t:property name="folder3.name" value="folder.${TIME}.${COUNTER}"/>
<t:property name="folder4.name" value="folder.${TIME}.${COUNTER}"/>
<t:property name="folder5.name" value="folder.${TIME}.${COUNTER}"/>
<t:property name="folder6.name" value="folder.${TIME}.${COUNTER}"/>

<t:property name="pop3account1.name" value="pop3name${TIME}${COUNTER}"/>
<t:property name="pop3account2.name" value="pop3name${TIME}${COUNTER}"/>
<t:property name="pop3account3.name" value="pop3name${TIME}${COUNTER}"/>
<t:property name="pop3account4.name" value="pop3name${TIME}${COUNTER}"/>
<t:property name="pop3account5.name" value="pop3name${TIME}${COUNTER}"/>
<t:property name="pop3account6.name" value="pop3name${TIME}${COUNTER}"/>

<t:property name="pop3account1.id" value="pop3id${TIME}${COUNTER}"/>
<t:property name="pop3account2.id" value="pop3id${TIME}${COUNTER}"/>
<t:property name="pop3account3.id" value="pop3id${TIME}${COUNTER}"/>
<t:property name="pop3account4.id" value="pop3id${TIME}${COUNTER}"/>
<t:property name="pop3account5.id" value="pop3id${TIME}${COUNTER}"/>
<t:property name="pop3account6.id" value="pop3id${TIME}${COUNTER}"/>

<t:property name="pop3.true" value="true"/>
<t:property name="pop3.false" value="false"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:test_case testcaseid="CreateDataSourceRequest_01" type="sanity" >
    <t:objective>Sanity test for CreateDataSourceRequest</t:objective>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="parentfolder.id"/>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder1.name}" l="${parentfolder.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder1.id"/>
        </t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateDataSourceRequest xmlns="urn:zimbraMail">
				<pop3 id="${pop3account1.id}" name="${pop3account1.name}" isEnabled="${pop3.true}" host="${POP3.gmail.host}" port="${POP3.gmail.port}" username="${POP3.gmail.username}" password="${POP3.gmail.password}" l="${folder1.id}" connectionType="${POP3.gmail.connectionType}" leaveOnServer="${pop3.true}"/>
			</CreateDataSourceRequest>
		</t:request>
		<t:response>
            <t:select path="//mail:CreateDataSourceResponse/mail:pop3" />
		</t:response>
	</t:test>	
	
</t:test_case>

<t:test_case testcaseid="GetDataSourcesRequest_01" type="sanity" >
    <t:objective>Sanity test for GetDataSourcesRequest</t:objective>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_accountid1.id"/>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="account1.server"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="parentfolder.id"/>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder2.name}" l="${parentfolder.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder2.id"/>
        </t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateDataSourceRequest xmlns="urn:zimbraMail">
				<pop3 id="${pop3account2.id}" name="${pop3account2.name}" isEnabled="${pop3.true}" host="${POP3.gmail.host}" port="${POP3.gmail.port}" username="${POP3.gmail.username}" password="${POP3.gmail.password}" l="${folder2.id}" connectionType="${POP3.gmail.connectionType}" leaveOnServer="${pop3.true}"/>
			</CreateDataSourceRequest>
		</t:request>
		<t:response>
            <t:select path="//mail:CreateDataSourceResponse/mail:pop3" attr="id" set="pop3_account2.id"/>
		</t:response>
	</t:test>
	
	<t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<GetDataSourcesRequest xmlns="urn:zimbraAdmin">
				<id>${test_accountid1.id}</id>
			</GetDataSourcesRequest>
		</t:request>
		<t:response>
			<!-- Validation for pop3 account2  -->
            <t:select path="//admin:GetDataSourcesResponse/admin:dataSource[@name='${pop3account2.name}']" attr="id"  match="${pop3_account2.id}"/>	
		</t:response>	
	</t:test>
	
</t:test_case>

<t:test_case testcaseid="ModifyDataSourceRequest_01" type="sanity" >
    <t:objective>Sanity test for ModifyDataSourceRequest</t:objective>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_accountid2.id"/>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="account2.server"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="parentfolder.id"/>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder3.name}" l="${parentfolder.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder3.id"/>
        </t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateDataSourceRequest xmlns="urn:zimbraMail">
				<pop3 id="${pop3account3.id}" name="${pop3account3.name}" isEnabled="${pop3.true}" host="${POP3.gmail.host}" port="${POP3.gmail.port}" username="${POP3.gmail.username}" password="${POP3.gmail.password}" l="${folder3.id}" connectionType="${POP3.gmail.connectionType}" leaveOnServer="${pop3.true}"/>
			</CreateDataSourceRequest>
		</t:request>
		<t:response>
            <t:select path="//mail:CreateDataSourceResponse/mail:pop3" attr="id" set="pop3_account3.id"/>
		</t:response>
	</t:test>
	
	<t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<ModifyDataSourceRequest xmlns="urn:zimbraAdmin">
				<id>${test_accountid2.id}</id>
				<dataSource id="${pop3_account3.id}">
					<a n="zimbraDataSourceLeaveOnServer">FALSE</a>
				</dataSource>
			</ModifyDataSourceRequest>
		</t:request>
		<t:response>			
            <t:select path="//admin:ModifyDataSourceResponse" />	
		</t:response>	
	</t:test>
	
</t:test_case>

<t:test_case testcaseid="DeleteDataSourceRequest_01" type="sanity" >
    <t:objective>Sanity test for DeleteDataSourceRequest</t:objective>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_accountid3.id"/>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']"  set="account3.server"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account3.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="parentfolder.id"/>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder4.name}" l="${parentfolder.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder4.id"/>
        </t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateDataSourceRequest xmlns="urn:zimbraMail">
				<pop3 id="${pop3account4.id}" name="${pop3account4.name}" isEnabled="${pop3.true}" host="${POP3.gmail.host}" port="${POP3.gmail.port}" username="${POP3.gmail.username}" password="${POP3.gmail.password}" l="${folder4.id}" connectionType="${POP3.gmail.connectionType}" leaveOnServer="${pop3.true}"/>
			</CreateDataSourceRequest>
		</t:request>
		<t:response>
            <t:select path="//mail:CreateDataSourceResponse/mail:pop3" attr="id" set="pop3_account4.id"/>
		</t:response>
	</t:test>
	
	<t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<DeleteDataSourceRequest xmlns="urn:zimbraAdmin">
				<id>${test_accountid3.id}</id>
				<dataSource id="${pop3_account4.id}">
				</dataSource>
			</DeleteDataSourceRequest>
		</t:request>
		<t:response>
            <t:select path="//admin:DeleteDataSourceResponse" />	
		</t:response>	
	</t:test>
	
</t:test_case>

<t:test_case testcaseid="GetImportStatusRequest_01" type="sanity" >
    <t:objective>Sanity test for GetImportStatusRequest</t:objective>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="parentfolder.id"/>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder5.name}" l="${parentfolder.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder5.id"/>
        </t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateDataSourceRequest xmlns="urn:zimbraMail">
				<pop3 id="${pop3account5.id}" name="${pop3account5.name}" isEnabled="${pop3.true}" host="${POP3.gmail.host}" port="${POP3.gmail.port}" username="${POP3.gmail.username}" password="${POP3.gmail.password}" l="${folder5.id}" connectionType="${POP3.gmail.connectionType}" leaveOnServer="${pop3.true}"/>
			</CreateDataSourceRequest>
		</t:request>
		<t:response>
            <t:select path="//mail:CreateDataSourceResponse/mail:pop3" attr="id" set="pop3_account5.id" />
		</t:response>
	</t:test>
	
	<t:test id="importDataReq">
   		<t:request>	   
	   		<ImportDataRequest xmlns="urn:zimbraMail">
				<pop id="${pop3_account5.id}"/>
			</ImportDataRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:ImportDataResponse" />
		</t:response>		
	</t:test>	
		
	<t:delay msec="1000"/>
	<t:test >
		<t:request>
			<GetImportStatusRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetImportStatusResponse" />
		</t:response>
	</t:test>
	
</t:test_case>

<t:test_case testcaseid="TestDataSourceRequest_01" type="sanity" >
    <t:objective>Sanity test for TestDataSourceRequest</t:objective>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="parentfolder.id"/>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder6.name}" l="${parentfolder.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder6.id"/>
        </t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateDataSourceRequest xmlns="urn:zimbraMail">
				<pop3 id="${pop3account6.id}" name="${pop3account6.name}" isEnabled="${pop3.true}" host="${POP3.gmail.host}" port="${POP3.gmail.port}" username="${POP3.gmail.username}" password="${POP3.gmail.password}" l="${folder6.id}" connectionType="${POP3.gmail.connectionType}" leaveOnServer="${pop3.true}"/>
			</CreateDataSourceRequest>
		</t:request>
		<t:response>
            <t:select path="//mail:CreateDataSourceResponse/mail:pop3" attr="id" set="pop3_account6.id" />
		</t:response>
	</t:test>
	
	 <t:test>
		<t:request>
			<TestDataSourceRequest xmlns="urn:zimbraMail">
				<pop3 isEnabled="${pop3.true}" host="${POP3.gmail.host}" port="${POP3.gmail.port}" username="${POP3.gmail.username}" password="${POP3.gmail.password}" l="${folder6.id}" connectionType="${POP3.gmail.connectionType}" leaveOnServer="${pop3.true}"/>
			</TestDataSourceRequest>
		</t:request>
		<t:response>
			 <t:select path="//mail:TestDataSourceResponse/mail:pop3" attr="success" match="1"/>
		</t:response>
	</t:test>
		
</t:test_case>

</t:tests>