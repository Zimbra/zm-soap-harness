<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="rights.none"			value=""/>
<t:property name="rights.read"			value="r"/>

<t:property name="op.tag"				value="tag"/>
<t:property name="op.move"				value="move"/>
<t:property name="op.delete"			value="delete"/>

<t:property name="tag.colorvalid" value="4" />

<t:property name="tz" value="(GMT-08.00) Pacific Time (US &amp; Canada) / Tijuana"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/> 

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SyncRequest_Sharing_Appointments_AccountSetup" type="always">
    <t:objective>create test account</t:objective>
    <t:steps> 1. Login to Admin
              2. Create test accounts
    </t:steps>
    
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>        
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>        
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>        
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test id="getFolderRequest" required="true">
        <t:request>
             <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="account1.folder.inbox.id"/>
            <t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="account1.folder.calendar.id"/>
            <t:select path="//mail:folder[@name='${globals.trash}']" attr="id" set="account1.folder.trash.id"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${account1.folder.calendar.id}" op="grant">
                    <grant d="${account2.name}" gt="usr" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test id="syncRequest1a">
        <t:request>
            <SyncRequest l="${account1.id}:${account1.folder.calendar.id}" xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response> 
            <t:select path="//mail:SyncResponse"  attr="token" set="account2.token.id"/>            
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SyncRequest_Sharing_Appointments_01" type="smoke">
    <t:objective>Verify that a new appointment in a shared folder is listed in the SyncResponse</t:objective>
    <t:steps>
    1. Login to the delegator
    2. Share the inbox with delegatee
    3. Login to the delegatee, get the Sync Token
    4. Login to the delegator, add a new appointment
    5. Login to the delegatee, send SyncRequest, verify the new contact id appears in the response
    </t:steps>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:property name="appt1.uid" value="${TIME}${COUNTER}"/>
	<t:property name="appt1.subject" value="subject.${TIME}.${COUNTER}"/>
	<t:property name="appt1.start.gmt" value="1263830400000"/>
	<t:property name="appt1.start.pst" value="${TIME(-8h)[${appt1.start.gmt}]}"/>
	
    <t:test >
        <t:request>
            <SetAppointmentRequest xmlns="urn:zimbraMail" >
                <default needsReply="0" ptst="AC">
                    <m>
                        <inv uid="${appt1.uid}" method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appt1.subject}" >
                            <s d="${ICALTIME[${appt1.start.pst}]}" tz="${tz}"/>  
                            <e d="${ICALTIME(+1h)[${appt1.start.pst}]}" tz="${tz}"/>  
                            <or a="${account1.name}"/>
                        </inv>
						<mp ct="multipart/alternative">
							<mp ct="text/plain"><content/></mp>
							<mp ct="text/html"><content><html><body></body></html></content></mp>
						</mp>
                        <su>${appt1.subject}</su>
                    </m>
                </default>
            </SetAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SetAppointmentResponse" attr="apptId" set="account1.appt1.apptId"/>
            <t:select path="//mail:SetAppointmentResponse/mail:default" attr="id" set="account1.appt1.id"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SyncRequest l="${account1.id}:${account1.folder.calendar.id}" token="${account2.token.id}" xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response> 
            <t:select path="//mail:SyncResponse" attr="token" set="${account2.token.id}"/>
            <t:select path="//mail:SyncResponse">
            	<t:select path="//mail:appt" attr="id" match="${account1.id}:${account1.appt1.apptId}"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SyncRequest_Sharing_Appointments_02" type="sanity" bugids="16710">
    <t:objective>Verify that a deleted calendar in a shared folder is listed in the SyncResponse</t:objective>
    <t:steps>
    1. Login to the delegator
    2. Share the inbox with delegatee
    3. Login to the delegatee, get the Sync Token
    4. Login to the delegator, add a new appointment
    3. Login to the delegatee, get the Sync Token
    4. Login to the delegator, delete the new appointment
    5. Login to the delegatee, send SyncRequest, verify the contact id appears in the response
    </t:steps>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:property name="appt2.uid" value="${TIME}${COUNTER}"/>
	<t:property name="appt2.subject" value="subject.${TIME}.${COUNTER}"/>
	<t:property name="appt2.start.gmt" value="1266508800000"/> <!-- Thu, 18 Feb 2010 16:00:00 GMT -->
	<t:property name="appt2.start.pst" value="${TIME(-8h)[${appt2.start.gmt}]}"/>
	
    <t:test >
        <t:request>
            <SetAppointmentRequest xmlns="urn:zimbraMail" >
                <default needsReply="0" ptst="AC">
                    <m>
                        <inv uid="${appt2.uid}" method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appt2.subject}" >
                            <s d="${ICALTIME[${appt2.start.pst}]}" tz="${tz}"/>  
                            <e d="${ICALTIME(+1h)[${appt2.start.pst}]}" tz="${tz}"/>  
                            <or a="${account1.name}"/>
                        </inv>
						<mp ct="multipart/alternative">
							<mp ct="text/plain"><content/></mp>
							<mp ct="text/html"><content><html><body></body></html></content></mp>
						</mp>
                        <su>${appt2.subject}</su>
                    </m>
                </default>
            </SetAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SetAppointmentResponse" attr="apptId" set="account1.appt2.apptId"/>
            <t:select path="//mail:SetAppointmentResponse/mail:default" attr="id" set="account1.appt2.id"/>
        </t:response>
    </t:test>


	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test id="syncRequest1a">
        <t:request>
            <SyncRequest l="${account1.id}:${account1.folder.calendar.id}" xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response> 
            <t:select path="//mail:SyncResponse"  attr="token" set="account2.token.id"/>            
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test id="contactaction1b" depends="contactaction1a">
        <t:request>
            <CancelAppointmentRequest xmlns="urn:zimbraMail" id="${account1.appt2.apptId}" comp="0"/>
        </t:request>
        <t:response>
		    <t:select path="//mail:CancelAppointmentResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SyncRequest l="${account1.id}:${account1.folder.calendar.id}" token="${account2.token.id}" xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response> 
            <t:select path="//mail:SyncResponse" attr="token" set="${account2.token.id}"/>
            <t:select path="//mail:SyncResponse">
            	<t:select path="//mail:deleted" attr="ids" match="${account1.id}:${account1.appt2.id}"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SyncRequest_Sharing_Appointments_03" type="sanity">
    <t:objective>Verify that a new contact (moved) in a shared folder is listed in the SyncResponse</t:objective>
    <t:steps>
    1. Login to the delegator
    2. Share the inbox with delegatee
    3. Login to the delegatee, get the Sync Token
    4. Login to the delegator, add a new contact to the Trash folder
    3. Login to the delegatee, get the Sync Token
    4. Login to the delegator, move the new contact to the Contacts folder
    5. Login to the delegatee, send SyncRequest, verify the new contact appears in the response
    </t:steps>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:property name="appt3.uid" value="${TIME}${COUNTER}"/>
	<t:property name="appt3.subject" value="subject.${TIME}.${COUNTER}"/>
	<t:property name="appt3.start.gmt" value="1268928000000"/> <!-- Thu, 18 Mar 2010 16:00:00 GMT -->
	<t:property name="appt3.start.pst" value="${TIME(-7h)[${appt3.start.gmt}]}"/>
	
    <t:test >
        <t:request>
            <SetAppointmentRequest xmlns="urn:zimbraMail" l="${account1.folder.trash.id}">
                <default needsReply="0" ptst="AC">
                    <m>
                        <inv uid="${appt3.uid}" method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appt3.subject}" >
                            <s d="${ICALTIME[${appt3.start.pst}]}" tz="${tz}"/>  
                            <e d="${ICALTIME(+1h)[${appt3.start.pst}]}" tz="${tz}"/>  
                            <or a="${account1.name}"/>
                        </inv>
						<mp ct="multipart/alternative">
							<mp ct="text/plain"><content/></mp>
							<mp ct="text/html"><content><html><body></body></html></content></mp>
						</mp>
                        <su>${appt3.subject}</su>
                    </m>
                </default>
            </SetAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SetAppointmentResponse" attr="apptId" set="account1.appt3.apptId"/>
            <t:select path="//mail:SetAppointmentResponse/mail:default" attr="id" set="account1.appt3.id"/>
        </t:response>
    </t:test>



	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test id="syncRequest1a">
        <t:request>
            <SyncRequest l="${account1.id}:${account1.folder.calendar.id}" xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response> 
            <t:select path="//mail:SyncResponse"  attr="token" set="account2.token.id"/>            
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test id="itemActionRequest1b" depends="itemActionRequest1a">
        <t:request>
            <ItemActionRequest xmlns="urn:zimbraMail">
                <action op="${op.move}" id="${account1.appt3.apptId}" l="${account1.folder.calendar.id}"/>
            </ItemActionRequest>
        </t:request>
        <t:response>
                <t:select path="//mail:ItemActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SyncRequest l="${account1.id}:${account1.folder.calendar.id}" token="${account2.token.id}" xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response> 
            <t:select path="//mail:SyncResponse" attr="token" set="${account2.token.id}"/>
            <t:select path="//mail:SyncResponse">
            	<t:select path="//mail:appt" attr="id" match="${account1.id}:${account1.appt3.apptId}"/>
            </t:select>
        </t:response>
    </t:test>


</t:test_case>


<t:test_case testcaseid="SyncRequest_Sharing_Appointments_04" type="sanity">
    <t:objective>Verify that a modified appointments (start/end time) in a shared folder is listed in the SyncResponse</t:objective>
    <t:steps>
    1. Login to the delegator
    2. Share the inbox with delegatee
    3. Login to the delegatee, get the Sync Token
    4. Login to the delegator, add a new appointment
    3. Login to the delegatee, get the Sync Token
    4. Login to the delegator, modify the appointment start and end time
    5. Login to the delegatee, send SyncRequest, verify the modified appointment appears in the response
    </t:steps>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:property name="appt4.uid" value="${TIME}${COUNTER}"/>
	<t:property name="appt4.subject" value="subject.${TIME}.${COUNTER}"/>
	<t:property name="appt4.start.gmt" value="1271606400000"/> <!-- Sun, 18 Apr 2010 16:00:00 GMT -->
	<t:property name="appt4.start.pst" value="${TIME(-7h)[${appt4.start.gmt}]}"/>
	
    <t:test >
        <t:request>
            <SetAppointmentRequest xmlns="urn:zimbraMail" >
                <default needsReply="0" ptst="AC">
                    <m>
                        <inv uid="${appt4.uid}" method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appt4.subject}" >
                            <s d="${ICALTIME[${appt4.start.pst}]}" tz="${tz}"/>  
                            <e d="${ICALTIME(+1h)[${appt4.start.pst}]}" tz="${tz}"/>  
                            <or a="${account1.name}"/>
                        </inv>
						<mp ct="multipart/alternative">
							<mp ct="text/plain"><content/></mp>
							<mp ct="text/html"><content><html><body></body></html></content></mp>
						</mp>
                        <su>${appt4.subject}</su>
                    </m>
                </default>
            </SetAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SetAppointmentResponse" attr="apptId" set="account1.appt4.apptId"/>
            <t:select path="//mail:SetAppointmentResponse/mail:default" attr="id" set="account1.appt4.id"/>
        </t:response>
    </t:test>



	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test id="syncRequest1a">
        <t:request>
            <SyncRequest l="${account1.id}:${account1.folder.calendar.id}" xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response> 
            <t:select path="//mail:SyncResponse"  attr="token" set="account2.token.id"/>            
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:property name="appt4.start.gmt" value="1274198400000"/> <!-- New Date: Tue, 18 May 2010 16:00:00 GMT -->
	<t:property name="appt4.start.pst" value="${TIME(-7h)[${appt4.start.gmt}]}"/>
	
    <t:test >
        <t:request>
            <SetAppointmentRequest xmlns="urn:zimbraMail" >
                <default needsReply="0" ptst="AC">
                    <m>
                        <inv uid="${appt4.uid}" method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appt4.subject}" >
                            <s d="${ICALTIME[${appt4.start.pst}]}" tz="${tz}"/>  
                            <e d="${ICALTIME(+1h)[${appt4.start.pst}]}" tz="${tz}"/>  
                            <or a="${account1.name}"/>
                        </inv>
						<mp ct="multipart/alternative">
							<mp ct="text/plain"><content/></mp>
							<mp ct="text/html"><content><html><body></body></html></content></mp>
						</mp>
                        <su>${appt4.subject}</su>
                    </m>
                </default>
            </SetAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SetAppointmentResponse" attr="apptId" set="account1.appt4.apptId"/>
            <t:select path="//mail:SetAppointmentResponse/mail:default" attr="id" set="account1.appt4.id"/>
        </t:response>
    </t:test>

    

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SyncRequest l="${account1.id}:${account1.folder.calendar.id}" token="${account2.token.id}" xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response> 
            <t:select path="//mail:SyncResponse" attr="token" set="${account2.token.id}"/>
            <t:select path="//mail:SyncResponse">
            	<t:select path="//mail:appt" attr="id" match="${account1.id}:${account1.appt4.apptId}"/>
            </t:select>
        </t:response>
    </t:test>

	<t:test >
		<t:request>
			<GetAppointmentRequest xmlns="urn:zimbraMail" id="${account1.id}:${account1.appt4.apptId}" />
		</t:request>
		<t:response>
			<t:select path="//mail:GetAppointmentResponse">
				<t:select path="//mail:s" attr="d" match="${ICALTIME[${appt4.start.pst}]}"/>
				<t:select path="//mail:e" attr="d" match="${ICALTIME(+1h)[${appt4.start.pst}]}"/>
			</t:select>
		</t:response>
	</t:test>


</t:test_case>

<t:test_case testcaseid="SyncRequest_Sharing_Appointments_05" type="sanity">
    <t:objective>Verify that a modified appointment (details) in a shared folder is listed in the SyncResponse</t:objective>
    <t:steps>
    1. Login to the delegator
    2. Share the inbox with delegatee
    3. Login to the delegatee, get the Sync Token
    4. Login to the delegator, add a new appointment
    3. Login to the delegatee, get the Sync Token
    4. Login to the delegator, modify the appointment details
    5. Login to the delegatee, send SyncRequest, verify the modified appointment appears in the response
    </t:steps>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:property name="appt5.uid" value="${TIME}${COUNTER}"/>
	<t:property name="appt5.subject" value="subject.${TIME}.${COUNTER}"/>
	<t:property name="appt5.content" value="content.${TIME}.${COUNTER}"/>
	<t:property name="appt5.start.gmt" value="1276876800000"/> <!-- Sun, 18 Jun 2010 16:00:00 GMT -->
	<t:property name="appt5.start.pst" value="${TIME(-7h)[${appt5.start.gmt}]}"/>
	
    <t:test >
        <t:request>
            <SetAppointmentRequest xmlns="urn:zimbraMail" >
                <default needsReply="0" ptst="AC">
                    <m>
                        <inv uid="${appt5.uid}" method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appt5.subject}" >
                            <s d="${ICALTIME[${appt5.start.pst}]}" tz="${tz}"/>  
                            <e d="${ICALTIME(+1h)[${appt5.start.pst}]}" tz="${tz}"/>  
                            <or a="${account1.name}"/>
                        </inv>
						<mp ct="multipart/alternative">
							<mp ct="text/plain"><content>${appt5.content}</content></mp>
							<mp ct="text/html"><content><html><body>${appt5.content}</body></html></content></mp>
						</mp>
                        <su>${appt5.subject}</su>
                    </m>
                </default>
            </SetAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SetAppointmentResponse" attr="apptId" set="account1.appt5.apptId"/>
            <t:select path="//mail:SetAppointmentResponse/mail:default" attr="id" set="account1.appt5.id"/>
        </t:response>
    </t:test>



	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test id="syncRequest1a">
        <t:request>
            <SyncRequest l="${account1.id}:${account1.folder.calendar.id}" xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response> 
            <t:select path="//mail:SyncResponse"  attr="token" set="account2.token.id"/>            
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:property name="appt5.content" value="content.${TIME}.${COUNTER}"/>
	
    <t:test >
        <t:request>
            <SetAppointmentRequest xmlns="urn:zimbraMail" >
                <default needsReply="0" ptst="AC">
                    <m>
                        <inv uid="${appt5.uid}" method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appt5.subject}" >
                            <s d="${ICALTIME[${appt5.start.pst}]}" tz="${tz}"/>  
                            <e d="${ICALTIME(+1h)[${appt5.start.pst}]}" tz="${tz}"/>  
                            <or a="${account1.name}"/>
                        </inv>
						<mp ct="multipart/alternative">
							<mp ct="text/plain"><content>${appt5.content}</content></mp>
							<mp ct="text/html"><content><html><body>${appt5.content}</body></html></content></mp>
						</mp>
                        <su>${appt5.subject}</su>
                    </m>
                </default>
            </SetAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SetAppointmentResponse" attr="apptId" set="account1.appt5.apptId"/>
            <t:select path="//mail:SetAppointmentResponse/mail:default" attr="id" set="account1.appt5.id"/>
        </t:response>
    </t:test>

    

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SyncRequest l="${account1.id}:${account1.folder.calendar.id}" token="${account2.token.id}" xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response> 
            <t:select path="//mail:SyncResponse" attr="token" set="${account2.token.id}"/>
            <t:select path="//mail:SyncResponse">
            	<t:select path="//mail:appt" attr="id" match="${account1.id}:${account1.appt5.apptId}"/>
            </t:select>
        </t:response>
    </t:test>

	<t:test >
		<t:request>
			<GetAppointmentRequest xmlns="urn:zimbraMail" id="${account1.id}:${account1.appt5.apptId}" />
		</t:request>
		<t:response>
			<t:select path="//mail:GetAppointmentResponse">
				<t:select path="//mail:inv" attr="id" set="account2.account1.appt5.inv.id"/>
			</t:select>
		</t:response>
	</t:test>

	<!-- Use account1's server, since that is where the message is -->
	<t:property name="server.restServlet" value="${account1.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<id>${account1.id}:${account1.appt5.apptId}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
			<t:select attr="DESCRIPTION" match="${appt5.content}"/>
		</t:restServletResponse>
	</t:resttest>

</t:test_case>


</t:tests>
