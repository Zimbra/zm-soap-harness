<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain.name" value="outlook.icaldomain.com"/>

<t:property name="account1.name" value="outlook_acct3@${domain.name}"/>
<t:property name="account2.name" value="outlook_acct@${domain.name}"/>

<t:property name="search.start1" value="1121336254170"/>
<t:property name="search.end1" value="1138616254170"/>

<t:property name="mail1.subject" value="outlook_ical_recur1"/>
<t:property name="mail2.subject" value="outlook_ical_recur2"/>
<t:property name="mail3.subject" value="outlook_ical_recur3"/>
<t:property name="mail4.subject" value="outlook_ical_recur4"/>
<t:property name="mail5.subject" value="outlook_ical_recur5"/>
<t:property name="mail6.subject" value="outlook_ical_recur6"/>
<t:property name="mail7.subject" value="outlook_ical_recur7"/>
<t:property name="mail8.subject" value="outlook_ical_recur8"/>
<t:property name="mail9.subject" value="outlook_ical_recur9"/>
<t:property name="mail10.subject" value="outlook_ical_recur10"/>
<t:property name="mail11.subject" value="outlook_ical_recur11"/>
<t:property name="mail12.subject" value="outlook_ical_recur12"/>
<t:property name="mail13.subject" value="outlook_ical_recur13"/>
<t:property name="mail14.subject" value="outlook_ical_recur14"/>
<t:property name="mail15.subject" value="outlook_ical_recur15"/>
<t:property name="mail16.subject" value="outlook_ical_recur16"/>
<t:property name="mail17.subject" value="outlook_ical_recur17"/>

<t:property name="root" value="${soapxml.root}/MailClient/iCal/MS_Outlook_2003/Recurrence"/>    
<t:property name="appt1.file" value="${root}/outlook_ical_recur1.txt"/>
<t:property name="appt2.file" value="${root}/outlook_ical_recur2.txt"/>
<t:property name="appt3.file" value="${root}/outlook_ical_recur3.txt"/>
<t:property name="appt4.file" value="${root}/outlook_ical_recur4.txt"/>
<t:property name="appt5.file" value="${root}/outlook_ical_recur5.txt"/>
<t:property name="appt6.file" value="${root}/outlook_ical_recur6.txt"/>
<t:property name="appt7.file" value="${root}/outlook_ical_recur7.txt"/>
<t:property name="appt8.file" value="${root}/outlook_ical_recur8.txt"/>
<t:property name="appt9.file" value="${root}/outlook_ical_recur9.txt"/>
<t:property name="appt10.file" value="${root}/outlook_ical_recur10.txt"/>
<t:property name="appt11.file" value="${root}/outlook_ical_recur11.txt"/>
<t:property name="appt12.file" value="${root}/outlook_ical_recur12.txt"/>
<t:property name="appt13.file" value="${root}/outlook_ical_recur13.txt"/>
<t:property name="appt14.file" value="${root}/outlook_ical_recur14.txt"/>
<t:property name="appt15.file" value="${root}/outlook_ical_recur15.txt"/>
<t:property name="appt16.file" value="${root}/outlook_ical_recur16.txt"/>
<t:property name="appt17.file" value="${root}/outlook_ical_recur17.txt"/>

<t:property name="appt1.summary" value="outlook_ical_recur1"/>
<t:property name="appt2.summary" value="outlook_ical_recur2"/>
<t:property name="appt3.summary" value="outlook_ical_recur3"/>
<t:property name="appt4.summary" value="outlook_ical_recur4"/>
<t:property name="appt5.summary" value="outlook_ical_recur5"/>
<t:property name="appt6.summary" value="outlook_ical_recur6"/>
<t:property name="appt7.summary" value="outlook_ical_recur7"/>
<t:property name="appt8.summary" value="outlook_ical_recur8"/>
<t:property name="appt9.summary" value="outlook_ical_recur9"/>
<t:property name="appt10.summary" value="outlook_ical_recur10"/>
<t:property name="appt11.summary" value="outlook_ical_recur11"/>
<t:property name="appt12.summary" value="outlook_ical_recur12"/>
<t:property name="appt13.summary" value="outlook_ical_recur13"/>
<t:property name="appt14.summary" value="outlook_ical_recur14"/>
<t:property name="appt15.summary" value="outlook_ical_recur15"/>
<t:property name="appt16.summary" value="outlook_ical_recur16"/>
<t:property name="appt17.summary" value="outlook_ical_recur17"/>

<t:property name="appt.location" value="sindhu"/>
<t:property name="appt.invitee1" value="${account1.name}"/>
<t:property name="appt.organizer" value="${account2.name}"/>

<t:property name="appt.start" value="20051120T180000"/>
<t:property name="appt1.end" value="20051020T070000Z"/>
<t:property name="appt5.start" value="20051025T000000Z"/>
<t:property name="appt5.end" value="20051025T010000Z"/>

<t:property name="appt.busy" value="O"/>
<t:property name="appt9.otherthanbusy" value="T"/>
<t:property name="Time1" value="${ICALTIME}"/>
<t:property name="Time2" value="${ICALTIME(+30d)}"/>
<t:property name="Time3" value="20051120T000000Z"/>
<t:property name="Time4" value="20060120T000000Z"/>
<t:property name="Time5" value="20070129T000000Z"/>
<t:property name="Time6" value="20081028T000000Z"/>
<t:property name="Time7" value="20150129T000000Z"/>
<t:property name="Time8" value="20051220T000000Z"/>
<t:property name="appt6.allday" value="1"/>
<t:property name="test_acct1.server" value="NOT_DEFINED"/>
<t:property name="test_acct2.server" value="NOT_DEFINED"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acctSetup1_outlook_ical_recur" type="always">
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain.name}</name>
            </CreateDomainRequest>
        </t:request>
    </t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
    </t:test>    
    
    <t:test>
        <t:request>
            <GetAccountRequest xmlns="urn:zimbraAdmin">
                <account by="name">${account1.name}</account>
            </GetAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAccountResponse/admin:account" attr="id" set="account1.id"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <GetAccountRequest xmlns="urn:zimbraAdmin">
                <account by="name">${account2.name}</account>
            </GetAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAccountResponse/admin:account" attr="id" set="account2.id"/>
        </t:response>
    </t:test>    
    
    <t:test>
        <t:request>
            <DeleteMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${account1.id}"/>
            </DeleteMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteMailboxResponse"/>
        </t:response>
    </t:test> 
    
    <t:test>
        <t:request>
            <DeleteMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${account2.id}"/>
            </DeleteMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteMailboxResponse"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${account1.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteAccountResponse"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${account2.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteAccountResponse"/>
        </t:response>
    </t:test>   
    
    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
    </t:test>   
    
    <t:test>
        <t:request>
            <GetAccountRequest xmlns="urn:zimbraAdmin">
                <account by="name">${account1.name}</account>
            </GetAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAccountResponse/admin:account" attr="id" set="newaccount1.id"/>
            <t:select path='//admin:GetAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <GetAccountRequest xmlns="urn:zimbraAdmin">
                <account by="name">${account2.name}</account>
            </GetAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAccountResponse/admin:account" attr="id" set="newaccount2.id"/>
            <t:select path='//admin:GetAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>   
    
</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
 
<t:test_case testcaseid="outlook_ical_recur01" type="smoke">
    <t:objective>Verify the  iCal format invitation for an appointment of half an hour repeating daily and never ending.</t:objective>
    <t:steps>
              1. Use lmtp inject to inject the message
              2. Login as the invitee
              3. SearchRequest , verify message is for half an hour repeating daily and never ending. 
              4. GetApptSummaries, verify the appointment is created.
    </t:steps>
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${appt1.file}</filename>
            <to>${account1.name}</to>
            <from>${account2.name}</from>
            <server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment">
                  <query>subject:${mail1.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail1.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="transp" match="${appt.busy}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="loc" match="${appt.location}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="name" match="${appt1.summary}"/> 
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule" attr="freq" match="DAI"/>           
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:interval" attr="ival" match="1"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:at" attr="url" match="${appt.invitee1}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e" attr="a" match="${appt.organizer}"/>    
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${search.start1}" calExpandInstEnd="${search.end1}">
				<query>${mail1.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="mail1.id"/>
        </t:response>
    </t:test>

</t:test_case>

 
<t:test_case testcaseid="outlook_ical_recur02" type="sanity">
    <t:objective>Verify the ical format invitation for a daily appointment every 3 days ending after 10 occurrences</t:objective>
    <t:steps>
              1. Use lmtp inject to inject the message
              2. Login as the invitee
              3. SearchRequest , verify message is for every 3 days ending after 10 occurrences
              4. GetApptSummaries, verify the appointment is created.
    </t:steps>
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${appt2.file}</filename>
            <to>${account1.name}</to>
            <from>${account2.name}</from>
            <server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment">
                  <query>subject:${mail2.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail2.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e" attr="a" match="${appt.organizer}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="transp" match="${appt.busy}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="loc" match="${appt.location}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="name" match="${appt2.summary}"/> 
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule" attr="freq" match="DAI"/>           
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:interval" attr="ival" match="3"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:count" attr="num" match="10"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:at" attr="url" match="${appt.invitee1}"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${search.start1}" calExpandInstEnd="${search.end1}">
				<query>${mail2.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="mail2.id"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="outlook_ical_recur03" type="sanity">
    <t:objective>Verify the ical format invitation for an appointment repeating daily every 5 days ending after 1 month</t:objective>
    <t:steps>
              1. Use lmtp inject to inject the message
              2. Login as the invitee
              3. SearchRequest , verify message is for every 5 days ending after 1 month
              4. GetApptSummaries, verify the appointment is created
    </t:steps>
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${appt3.file}</filename>
            <to>${account1.name}</to>
            <from>${account2.name}</from>
            <server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <!-- do a simple verification of the mail -->
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment">
                  <query>subject:${mail3.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail3.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e" attr="a" match="${appt.organizer}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="transp" match="${appt.busy}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="loc" match="${appt.location}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="name" match="${appt3.summary}"/> 
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule" attr="freq" match="DAI"/>           
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:interval" attr="ival" match="5"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:until" attr="d" match="${Time3}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:at" attr="url" match="${appt.invitee1}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:or" attr="url" match="${appt.organizer}"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${search.start1}" calExpandInstEnd="${search.end1}">
				<query>${mail3.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="mail3.id"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="outlook_ical_recur04" type="sanity">
    <t:objective>Verify the ical format invitation for an daily  appointment every weekday never ending</t:objective>
    <t:steps>
              1. Use lmtp inject to inject the message
              2. Login as the invitee
              3. SearchRequest , verify message is for every weekday never ending 
              3. GetApptSummaries, verify the appointment is created
    </t:steps>
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${appt4.file}</filename>
            <to>${account1.name}</to>
            <from>${account2.name}</from>
            <server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <!-- do a simple verification of the mail -->
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment">
                  <query>subject:${mail4.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail4.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e" attr="a" match="${appt.organizer}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="transp" match="${appt.busy}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="loc" match="${appt.location}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="name" match="${appt4.summary}"/> 
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule" attr="freq" match="DAI"/>           
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:interval" attr="ival" match="1"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='MO']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='TU']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='WE']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='TH']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='FR']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:at" attr="url" match="${appt.invitee1}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:or" attr="url" match="${appt.organizer}"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${search.start1}" calExpandInstEnd="${search.end1}">
				<query>${mail4.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="mail4.id"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="outlook_ical_recur05" type="sanity">
    <t:objective>Verify the ical format invitation for an appointment every weekday ending after 10 occurrences.</t:objective>
    <t:steps>
              1. Use lmtp inject to inject the message
              2. Login as the invitee
              3. SearchRequest , verify message is for every weekdays days ending after 10 occurrences
              4. GetApptSummaries, verify the appointment is created properly 
    </t:steps>
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${appt5.file}</filename>
            <to>${account1.name}</to>
            <from>${account2.name}</from>
            <server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

            
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment">
                  <query>subject:${mail5.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail5.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e" attr="a" match="${appt.organizer}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="transp" match="${appt.busy}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="loc" match="${appt.location}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="name" match="${appt5.summary}"/> 
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule" attr="freq" match="DAI"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:count" attr="num" match="10"/>           
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:interval" attr="ival" match="1"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='MO']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='TU']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='WE']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='TH']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='FR']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:at" attr="url" match="${appt.invitee1}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:or" attr="url" match="${appt.organizer}"/>
        
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${search.start1}" calExpandInstEnd="${search.end1}">
				<query>${mail5.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="mail5.id"/>
        </t:response>
    </t:test>  
    
</t:test_case>


<t:test_case testcaseid="outlook_ical_recur06" type="sanity">
    <t:objective>Verify the ical format invitation for an appointment every weekday ending after 1 month.</t:objective>
    <t:steps>
              1. Use lmtp inject to inject the message
              2. Login as the invitee
              3. SearchRequest , verify message is for every weekdays days ending after 1 month
              4. GetApptSummaries, verify the appointment is created properly
    </t:steps>
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${appt6.file}</filename>
            <to>${account1.name}</to>
            <from>${account2.name}</from>
            <server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment">
                  <query>subject:${mail6.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail6.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e" attr="a" match="${appt.organizer}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="transp" match="${appt.busy}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="loc" match="${appt.location}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="name" match="${appt6.summary}"/> 
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule" attr="freq" match="DAI"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:until" attr="d" match="${Time3}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:interval" attr="ival" match="1"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='MO']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='TU']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='WE']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='TH']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='FR']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:at" attr="url" match="${appt.invitee1}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:or" attr="url" match="${appt.organizer}"/>    
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${search.start1}" calExpandInstEnd="${search.end1}">
				<query>${mail6.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="mail6.id"/>
        </t:response>
    </t:test>    
    
</t:test_case>


<t:test_case testcaseid="outlook_ical_recur07" type="sanity">
    <t:objective>Verify the ical format invitation for an repeating every 1 week on Thursday never ending.</t:objective>
    <t:steps>
              1. Use lmtp inject to inject the message
              2. Login as the invitee
              3. SearchRequest , verify message is for repeating every 1 week on Thursday never ending
              4. GetApptSummaries, verify the appointment is created properly  
    </t:steps>
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${appt7.file}</filename>
            <to>${account1.name}</to>
            <from>${account2.name}</from>
            <server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment">
                  <query>subject:${mail7.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail7.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e" attr="a" match="${appt.organizer}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="transp" match="${appt.busy}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="loc" match="^$"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="name" match="${appt7.summary}"/> 
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule" attr="freq" match="WEE"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:interval" attr="ival" match="1"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='TH']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:at" attr="url" match="${appt.invitee1}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:or" attr="url" match="${appt.organizer}"/>
        </t:response>        
    </t:test>
    
	<t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${search.start1}" calExpandInstEnd="${search.end1}">
				<query>${mail7.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="mail7.id"/>
        </t:response>
    </t:test>  
    
</t:test_case>   


<t:test_case testcaseid="outlook_ical_recur08" type="sanity">
    <t:objective>Verify the ical format invitation for weekly appointment repeating every 2 weeks on Thursday ending after 10 occurrences.</t:objective>
    <t:steps>
              1. Use lmtp inject to inject the message
              2. Login as the invitee
              3. SearchRequest , verify message is for every 2 weeks on Thursday ending after 10 occurrences
              4. GetApptSummaries, verify the appointment is created properly
    </t:steps>
               
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${appt8.file}</filename>
            <to>${account1.name}</to>
            <from>${account2.name}</from>
            <server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment">
                  <query>subject:${mail8.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail8.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e" attr="a" match="${appt.organizer}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="transp" match="${appt.busy}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="loc" match="^$"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="name" match="${appt8.summary}"/> 
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule" attr="freq" match="WEE"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:interval" attr="ival" match="2"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:count" attr="num" match="10"/>  
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='TH']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:at" attr="url" match="${appt.invitee1}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:or" attr="url" match="${appt.organizer}"/>      
        </t:response>   
    </t:test>
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${search.start1}" calExpandInstEnd="${search.end1}">
				<query>${mail8.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="mail8.id"/>
        </t:response>
    </t:test>    

</t:test_case> 


<t:test_case testcaseid="outlook_ical_recur09" type="sanity">
    <t:objective>Verify the ical format invitation for weekly appointment repeating every 2 weeks on Thursday ending by 20th january 2006.</t:objective>
    <t:steps>
              1. Use lmtp inject to inject the message
              2. Login as the invitee
              3. SearchRequest , verify message is for "every 2 weeks on Thursday ending by 20th january 2006"
              4. GetApptSummaries, verify the appointment is created properly.
    </t:steps>
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${appt9.file}</filename>
            <to>${account1.name}</to>
            <from>${account2.name}</from>
            <server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment">
                  <query>subject:${mail9.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail9.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e" attr="a" match="${appt.organizer}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="transp" match="${appt.busy}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="loc" match="${appt.location}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="name" match="${appt9.summary}"/> 
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule" attr="freq" match="WEE"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:until" attr="d" match="${Time4}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:interval" attr="ival" match="2"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='TH']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:at" attr="url" match="${appt.invitee1}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:or" attr="url" match="${appt.organizer}"/>
        </t:response>   
    </t:test>
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${search.start1}" calExpandInstEnd="${search.end1}">
				<query>${mail9.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="mail9.id"/>
        </t:response>
    </t:test>    

</t:test_case>  
      
 
<t:test_case testcaseid="outlook_ical_recur10" type="sanity">
    <t:objective>Verify the ical format invitation for monthly appointment repeating on every 15th day of a month never ending .</t:objective>
    <t:steps>
              1. Use lmtp inject to inject the message
              2. Login as the invitee
              3. SearchRequest , verify message is for "every 15th day of a month never ending"
              4. GetApptSummaries, verify the appointment is created properly. 
    </t:steps>
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${appt10.file}</filename>
            <to>${account1.name}</to>
            <from>${account2.name}</from>
            <server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment">
                  <query>subject:${mail10.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail10.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e" attr="a" match="${appt.organizer}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="transp" match="${appt.busy}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="loc" match="^$"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="name" match="${appt10.summary}"/> 
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule" attr="freq" match="MON"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:interval" attr="ival" match="1"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:bymonthday" attr="modaylist" match="15"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:at" attr="url" match="${appt.invitee1}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:or" attr="url" match="${appt.organizer}"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${search.start1}" calExpandInstEnd="${search.end1}">
				<query>${mail10.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="mail10.id"/>
        </t:response>
    </t:test>    
    
</t:test_case>


<t:test_case testcaseid="outlook_ical_recur11" type="sanity">
    <t:objective>Verify the ical format invitation for monthly appointment repeating on every 15th day of a month ending after 15 occurrences  .</t:objective>
    <t:steps>
              1. Use lmtp inject to inject the message
              2. Login as the invitee
              3. SearchRequest , verify message is for "every 15th day of a month ending after 15 occurrences".
              4. GetApptSummaries, verify the appointment is created properly. 
    </t:steps>
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${appt11.file}</filename>
            <to>${account1.name}</to>
            <from>${account2.name}</from>
            <server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment">
                  <query>subject:${mail11.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail11.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e" attr="a" match="${appt.organizer}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="transp" match="${appt.busy}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="loc" match="^$"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="name" match="${appt11.summary}"/> 
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule" attr="freq" match="MON"/>            
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:count" attr="num" match="15"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:interval" attr="ival" match="1"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:bymonthday" attr="modaylist" match="15"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:at" attr="url" match="${appt.invitee1}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:or" attr="url" match="${appt.organizer}"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${search.start1}" calExpandInstEnd="${search.end1}">
				<query>${mail11.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="mail11.id"/>
        </t:response>
    </t:test>    
    
</t:test_case>


<t:test_case testcaseid="outlook_ical_recur12" type="sanity">
    <t:objective>Verify the ical format invitation for monthly appointment repeating on every 15ht day of a month ending by 20th nov 2005(after 1 month).</t:objective>
    <t:steps>
              1. Use lmtp inject to inject the message
              2. Login as the invitee
              3. SearchRequest , verify message is for "monthly appointment repeating on every 15ht day of a month ending by 20th nov 2005(after 1 month)"
              4. GetApptSummaries, verify the appointment is created properly  
    </t:steps>
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${appt12.file}</filename>
            <to>${account1.name}</to>
            <from>${account2.name}</from>
            <server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

            
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment">
                  <query>subject:${mail12.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail12.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e" attr="a" match="${appt.organizer}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="transp" match="${appt.busy}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="loc" match="^$"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="name" match="${appt12.summary}"/> 
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule" attr="freq" match="MON"/>            
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:until" attr="d" match="${Time3}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:interval" attr="ival" match="1"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:bymonthday" attr="modaylist" match="15"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:at" attr="url" match="${appt.invitee1}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:or" attr="url" match="${appt.organizer}"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${search.start1}" calExpandInstEnd="${search.end1}">
				<query>${mail12.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="mail12.id"/>
        </t:response>
    </t:test>    
    
</t:test_case>

<t:test_case testcaseid="outlook_ical_recur13" type="sanity">
    <t:objective>Verify the ical format invitation for monthly appointment repeating on the second Monday of every 1 months never ending.</t:objective>
    <t:steps>
              1. Use lmtp inject to inject the message
              2. Login as the invitee
              3. SearchRequest , verify message is for "monthly appointment repeating on the second Monday of every 1 months never ending"
              4. GetApptSummaries, verify the appointment is created properly
    </t:steps>
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${appt13.file}</filename>
            <to>${account1.name}</to>
            <from>${account2.name}</from>
            <server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment">
                  <query>subject:${mail13.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail13.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e" attr="a" match="${appt.organizer}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="transp" match="${appt.busy}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="loc" match="^$"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="name" match="${appt13.summary}"/> 
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule" attr="freq" match="MON"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:interval" attr="ival" match="1"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday[@day='MO']"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:bysetpos" attr="poslist" match="2"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:at" attr="url" match="${appt.invitee1}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:or" attr="url" match="${appt.organizer}"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${search.start1}" calExpandInstEnd="${search.end1}">
				<query>${mail13.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="mail13.id"/>
        </t:response>
    </t:test>    
    
</t:test_case>


<t:test_case testcaseid="outlook_ical_recur14" type="sanity">
    <t:objective>Verify the ical format invitation for monthly appointment repeating on the second monday of every 1 months ending after 5 occurrences.</t:objective>
    <t:steps>
              1. Use lmtp inject to inject the message
              2. Login as the invitee
              3. SearchRequest , verify message is for "monthly appointment repeating on the second monday of every 1 months ending after 5 occurrences"
              4. GetApptSummaries, verify the appointment is created properly
    </t:steps>
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${appt14.file}</filename>
            <to>${account1.name}</to>
            <from>${account2.name}</from>
            <server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment">
                  <query>subject:${mail14.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail14.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e" attr="a" match="${appt.organizer}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="transp" match="${appt.busy}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="loc" match="^$"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="name" match="${appt14.summary}"/> 
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule" attr="freq" match="MON"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:count" attr="num" match="5"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:interval" attr="ival" match="1"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday" attr="day" match="MO"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:bysetpos" attr="poslist" match="2"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:at" attr="url" match="${appt.invitee1}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:or" attr="url" match="${appt.organizer}"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${search.start1}" calExpandInstEnd="${search.end1}">
				<query>${mail14.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="mail14.id"/>
        </t:response>
    </t:test>  
    
</t:test_case>


<t:test_case testcaseid="outlook_ical_recur15" type="sanity">
    <t:objective>Verify the ical format invitation for monthly appointment repeating on the second Monday of every 1 month ending by 29th january 2007.</t:objective>
    <t:steps>
              1. Use lmtp inject to inject the message
              2. Login as the invitee
              3. SearchRequest , verify message is for "monthly appointment repeating on the second Monday of every 1 month ending by 29th january 2007"
              4. GetApptSummaries, verify the appointment is created properly
    </t:steps>
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${appt15.file}</filename>
            <to>${account1.name}</to>
            <from>${account2.name}</from>
            <server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment">
                  <query>subject:${mail15.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail15.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e" attr="a" match="${appt.organizer}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="transp" match="${appt.busy}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="loc" match="^$"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="name" match="${appt15.summary}"/> 
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule" attr="freq" match="MON"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:until" attr="d" match="${Time5}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:interval" attr="ival" match="1"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday" attr="day" match="MO"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:bysetpos" attr="poslist" match="2"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:at" attr="url" match="${appt.invitee1}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:or" attr="url" match="${appt.organizer}"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${search.start1}" calExpandInstEnd="${search.end1}">
				<query>${mail15.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="mail15.id"/>
        </t:response>
    </t:test>   
    
</t:test_case>
 
 
<t:test_case testcaseid="outlook_ical_recur16" type="sanity">
    <t:objective>Verify the ical format invitation for  yearly appointment repeating on the fourth Wednesday of january ending by 29th jan 2015.</t:objective>
    <t:steps>
              1. Use lmtp inject to inject the message
              2. Login as the invitee
              3. SearchRequest , verify message is for "yearly yearly appointment repeating on the fourth Wednesday of january ending by 29th jan 2015"
              4. GetApptSummaries, verify the appointment is created properly
    </t:steps>
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${appt16.file}</filename>
            <to>${account1.name}</to>
            <from>${account2.name}</from>
            <server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment">
                  <query>subject:${mail16.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail16.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e" attr="a" match="${appt.organizer}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="transp" match="${appt.busy}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="loc" match="^$"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="name" match="${appt16.summary}"/> 
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule" attr="freq" match="YEA"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:until" attr="d" match="${Time7}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:interval" attr="ival" match="1"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:byday/mail:wkday" attr="day" match="WE"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:bymonth" attr="molist" match="1"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:bysetpos" attr="poslist" match="4"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:at" attr="url" match="${appt.invitee1}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:or" attr="url" match="${appt.organizer}"/>            
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${search.start1}" calExpandInstEnd="${search.end1}">
				<query>${mail16.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="mail16.id"/>
        </t:response>
    </t:test> 
    
</t:test_case> 


<t:test_case testcaseid="outlook_ical_recur17" type="sanity">
    <t:objective>Verify the ical format invitation for  daily appointment every 1 day starting on 20th november 2005 and ending on 20th december 2005.</t:objective>
    <t:steps>
              1. Use lmtp inject to inject the message
              2. Login as the invitee
              3. SearchRequest , verify message is for "daily appointment every 1 day starting on 20th november 2005 and ending on 20th december 2005"
              4. GetApptSummaries, verify the appointment is created properly
    </t:steps>
    
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${appt17.file}</filename>
            <to>${account1.name}</to>
            <from>${account2.name}</from>
            <server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message,appointment">
                  <query>subject:${mail17.subject}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail17.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:e" attr="a" match="${appt.organizer}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="transp" match="${appt.busy}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="loc" match="^$"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp" attr="name" match="${appt17.summary}"/> 
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule" attr="freq" match="DAI"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:until" attr="d" match="${Time8}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:recur/mail:add/mail:rule/mail:interval" attr="ival" match="1"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:s" attr="d" match="${appt.start}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:at" attr="url" match="${appt.invitee1}"/>
            <t:select path="//mail:SearchResponse/mail:m/mail:inv/mail:comp/mail:or" attr="url" match="${appt.organizer}"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="appointment" calExpandInstStart="${search.start1}" calExpandInstEnd="${search.end1}">
				<query>${mail17.subject}</query>
			</SearchRequest>
        </t:request>
        <t:response>
           <t:select path="//mail:SearchResponse/mail:appt" attr="invId" set="mail17.id"/>
        </t:response>
    </t:test>  
    
</t:test_case>  


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="acctSetup2_outlook_ical_recur" type="deprecated">
    <t:objective>Delete test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <DeleteMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${newaccount1.id}"/>
            </DeleteMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteMailboxResponse"/>
        </t:response>
    </t:test> 
    
<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>

    <t:test>
        <t:request>
            <DeleteMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${newaccount2.id}"/>
            </DeleteMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteMailboxResponse"/>
        </t:response>
    </t:test>
    
<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${newaccount1.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteAccountResponse"/>
        </t:response>
    </t:test>
    
<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>

    <t:test>
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${newaccount2.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteAccountResponse"/>
        </t:response>
    </t:test>
   
</t:test_case>
  
       
</t:tests>
