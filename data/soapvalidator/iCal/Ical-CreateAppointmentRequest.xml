<t:tests xmlns:t="urn:zimbraTestHarness">



<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>


<t:property name="appt1.subject" value="appt1.subject"/>
<t:property name="appt1.invitee" value="${account2.name}"/>
<t:property name="appt1.location" value="appt1.location"/>
<t:property name="appt1.content" value="appt1.content"/>
<t:property name="appt1.start" value="${ICALTIME(+1h)}"/>
<t:property name="appt1.end" value="${ICALTIME(+2h)}"/>

<t:property name="appt2.subject" value="appt2.subject"/>
<t:property name="appt2.invitee" value="${account2.name}"/>
<t:property name="appt2.location" value="appt2.location"/>
<t:property name="appt2.content" value="appt2.content"/>
<t:property name="appt2.start" value="${ICALTIME(+4h)}"/>
<t:property name="appt2.end" value="${ICALTIME(+5h)}"/>

<t:property name="search.start" value="${TIME(-2d)}"/>
<t:property name="search.end" value="${TIME(+2d)}"/>

<t:property name="test_acct1.server" value="NOT_DEFINED"/>
<t:property name="test_acct2.server" value="NOT_DEFINED"/>



<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>

    <t:test id="create_account2" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>

</t:test_case>





<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

<t:test_case testcaseid="iCalBasicFormat_CreateAppointmentRequest1" type="smoke">
	<t:objective>Verify the basic iCal format when CreateAppointmentRequest is used to inject the iCal
	</t:objective>
	<t:steps>
		1. Add the iCal using CreateAppointmentRequest
		2. Login to the second account to get the iCal
		3. Parse the iCal for correctness
	</t:steps>
    
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    
    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appt1.subject}" loc="${appt1.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${account2.name}"/>
                        <s d="${appt1.start}"/>  
                        <e d="${appt1.end}"/>  
                        <or a="${account1.name}"/>
                    </inv>
                    <e a="${account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appt1.content}</content>
                    </mp>
                    <su>${appt1.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse"/>
        </t:response>
    </t:test>




    <t:test >
        <t:request >
            <GetICalRequest xmlns="urn:zimbraMail" s="${TIME(-2d)}" e="${TIME(+2d)}"/>
        </t:request>
        <t:response>
			<t:select path="//mail:GetICalResponse" attr="ical" set="ics.string"/>
        </t:response>
    </t:test>

    <t:test>
	<t:iCalParse ical="${ics.string}">
	</t:iCalParse>
    </t:test>



</t:test_case>



<t:test_case testcaseid="iCalBasicFormat_CreateAppointmentRequest2" type="sanity" bugids="8015">
	<t:objective>Verify that only one timezone is specified when using tz="Hawaii"</t:objective>
	<t:steps>
		1. Add the iCal using CreateAppointmentRequest, with tz="(GMT-10.00) Hawaii" 
		2. Get the iCal
		3. Parse the iCal for correctness
	</t:steps>
    
    <t:test id="auth1" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    
    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appt2.subject}" loc="${appt2.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${account2.name}"/>
                        <s d="${appt2.start}" tz="(GMT-10.00) Hawaii"/>  
                        <e d="${appt2.end}" tz="(GMT-10.00) Hawaii"/>  
                        <or a="${account1.name}"/>
                    </inv>
                    <e a="${account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appt2.content}</content>
                    </mp>
                    <su>${appt2.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse" attr="invId" set="appt2.invId"/>
        </t:response>
    </t:test>




    <t:test >
        <t:request >
            <GetICalRequest xmlns="urn:zimbraMail" id="${appt2.invId}"/>
        </t:request>
        <t:response>
			<t:select path="//mail:GetICalResponse"/>
        </t:response>
    </t:test>



</t:test_case>



</t:tests>

