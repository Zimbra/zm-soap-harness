<t:tests xmlns:t = "urn:zimbraTestHarness">

<t:property name = "domain.name" value = "domain${TIME}${COUNTER}.com"/>

<t:property name = "test_account.name1" value = "test.${TIME}.${COUNTER}@${domain.name}"/>
<t:property name = "test_account.name2" value = "test.${TIME}.${COUNTER}@${domain.name}"/>


<t:property name="alias1.name" value="Alias.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="alias2.name" value="Alias.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="search.validquery3" value="(|(zimbraMailAlias=*.*)(zimbraMailDeliveryAddress=*.*))"/>
<t:property name="search.validquery2" value="(|(zimbraMailDeliveryAddress=*.*))"/>
<t:property name="search.validquery1" value="(|(zimbraMailAlias=*.*))"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>Basic system check</t:objective>

	<t:test required="true">
	    <t:request>
	        <PingRequest xmlns="urn:zimbraAdmin"/>
	    </t:request>
	    <t:response>
		    <t:select path="//admin:PingResponse"/>
	    </t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="acctSetup_bug68964" type="always" >
    <t:objective>Login as the admin, create new Domain and accounts</t:objective>
    <t:steps>
            1. Login as admin 
            2. Create a new Domain and accounts 
            3. Add alias to 2 accounts
    </t:steps>
    
	<t:test required="true" >
	    <t:request>
	        <AuthRequest xmlns="urn:zimbraAdmin">
	            <name>${admin.user}</name>
	            <password>${admin.password}</password>
	        </AuthRequest>
	    </t:request>
	    <t:response>
	        <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
	    </t:response>
	</t:test>
	
	<t:test required="true" >
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain.name}</name>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="name" match="${domain.name}"/>
        </t:response>
    </t:test>
    
    <t:test_loop count="5">
        <t:test id="account_loop1a" timeframeMax="3000">
            <t:request>
	            <CreateAccountRequest xmlns="urn:zimbraAdmin">
		            <name>test.${TIME}.${COUNTER}@${domain.name}</name>
		            <password>${defaultpassword.value}</password>
	            </CreateAccountRequest>
            </t:request>
            <t:response>
	            <t:select path="//admin:CreateAccountResponse/admin:account"/>
            </t:response>
        </t:test>
    </t:test_loop>
    
    <t:test required="true" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account.name1}</name>
                <password>${defaultpassword.value}</password>
             </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test> 
    
    <t:test required="true" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account.name2}</name>
                <password>${defaultpassword.value}</password>
             </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account1.id}</id>
                <alias>${alias1.name}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account2.id}</id>
                <alias>${alias2.name}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test>      

</t:test_case>


<t:test_case testcaseid="bug68964_searchDirectory1" type="smoke" >
    <t:objective>Verify that SearchDirectoryRequest return accounts for zimbraMailAlias=*.* </t:objective>
    <t:steps> 
              1. Search for this accounts with zimbraMailAlias=*.* for the particular domain
              2. Verify that search total is 2 for that domain because 2 accounts have alias in this domain
    </t:steps>    
     
    <t:test>
        <t:request>
        	<SearchDirectoryRequest domain="${domain.name}"     xmlns="urn:zimbraAdmin">
  				<query>${search.validquery1}</query>
			</SearchDirectoryRequest>           
        </t:request>
        <t:response>
            <t:select path="//admin:SearchDirectoryResponse" attr="searchTotal" match="2"/>    
        </t:response>
    </t:test>    

</t:test_case>
    
<t:test_case testcaseid="bug68964_searchDirectory2" type="smoke" >
    <t:objective>Verify that SearchDirectoryRequest return accounts for zimbraMailDeliveryAddress=*.* </t:objective>
    <t:steps> 
              1. Search for this accounts with zimbraMailDeliveryAddress=*.* for the particular domain
              2. Verify that search total is 7 for that domain because 7 accounts are created in this domain
    </t:steps>    
     
    <t:test>
        <t:request>
        	<SearchDirectoryRequest domain="${domain.name}"     xmlns="urn:zimbraAdmin">
  				<query>${search.validquery2}</query>
			</SearchDirectoryRequest>           
        </t:request>
        <t:response>
            <t:select path="//admin:SearchDirectoryResponse" attr="searchTotal" match="7"/>    
        </t:response>
    </t:test>    

</t:test_case>

<t:test_case testcaseid="bug68964_searchDirectory3" type="smoke" >
    <t:objective>Verify that SearchDirectoryRequest return accounts for zimbraMailAddress=*.* and zimbraMailDeliveryAddress=*.* </t:objective>
    <t:steps> 
              1. Search for this accounts with zimbraMailAddress=*.* and zimbraMailDeliveryAddress=*.* for the particular domain
              2. Verify that search total is 7 for that domain because 7 accounts are created in this domain
    </t:steps>    
     
    <t:test>
        <t:request>
        	<SearchDirectoryRequest domain="${domain.name}"     xmlns="urn:zimbraAdmin">
  				<query>${search.validquery3}</query>
			</SearchDirectoryRequest>           
        </t:request>
        <t:response>
            <t:select path="//admin:SearchDirectoryResponse" attr="searchTotal" match="7"/>    
        </t:response>
    </t:test>    

</t:test_case>
    
</t:tests>
