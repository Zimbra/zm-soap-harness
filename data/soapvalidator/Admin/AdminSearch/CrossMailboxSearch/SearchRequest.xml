<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_acct1.server" value="NOT_DEFINED"/>
<t:property name="test_acct2.server" value="NOT_DEFINED"/>
<t:property name="test_acct3.server" value="NOT_DEFINED"/>
<t:property name="test_acct4.server" value="NOT_DEFINED"/>

<t:property name="test_account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account2.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account3.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account4.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="email_subject" value="subject.${TIME}.${COUNTER}"/>
<t:property name="id_spchar" value="!@^*()_+"/>
<t:property name="id_alpha" value="abcd"/>
<t:property name="id_number" value="1234"/>
<t:property name="id_negative" value="-2"/>
<t:property name="id_zero" value="0"/>
<t:property name="id_blank" value=""/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>

    <t:test required="true">
     <t:request>
       <PingRequest xmlns="urn:zimbraAdmin"/>
     </t:request>
      <t:response>
        <t:select path="//admin:PingResponse"/>
     </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="admin_auth" type="always" >
 <t:objective>login as the admin</t:objective>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account1.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<GetMailboxRequest xmlns="urn:zimbraAdmin">
				<mbox id="${test_account1.id}"/>
			</GetMailboxRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetMailboxResponse/admin:mbox" attr="mbxid"  set="test_account1.mbxid"/>
		</t:response>
	</t:test>


	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account2.name}</name>
				<password>${defaultpassword.value}</password>
        		<a n="zimbraMailHost">${test_acct1.server}</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account3.name}</name>
				<password>${defaultpassword.value}</password>
        		<a n="zimbraMailHost">${test_acct1.server}</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account3.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account4.name}</name>
				<password>${defaultpassword.value}</password>
        		<a n="zimbraMailHost">${test_acct1.server}</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account4.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct4.server"/>
		</t:response>
	</t:test>


	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${test_account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test id = "Send_mail" required="true">
		<t:request>
			<SendMsgRequest xmlns = "urn:zimbraMail">
				<m>
				<e t = "t" a = "${test_account4.name}"/>
				<su>${email_subject}</su>
				<mp ct = "text/plain">
				<content>Hi how r u</content>
				</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path = "//mail:SendMsgResponse/mail:m" attr = "id" set = "message.id1"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${test_account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test id = "Send_mail" required="true">
		<t:request>
			<SendMsgRequest xmlns = "urn:zimbraMail">
				<m>
				<e t = "t" a = "${test_account4.name}"/>
				<su>${email_subject}</su>
				<mp ct = "text/plain">
				<content>Hi how r u. Waiting for the kind reply</content>
				</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path = "//mail:SendMsgResponse/mail:m" attr = "id" set = "message.id2"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="SearchMultiMailboxRequest04" type="deprecated" bugids="5540" areas="crossMailboxSearch">
<t:objective> SearchMultiMailboxRequest with invalid values in the id with type="message"(alpha/spchar/negative/zero/blank)  </t:objective>

	<t:test>
		<t:request>
			<SearchMultiMailboxRequest xmlns="urn:zimbraAdmin" types="message">
				<mbx id="${id_alpha}" />
				<query>subject:(${email_subject})</query>
			</SearchMultiMailboxRequest>
		</t:request>
		<t:response>
			<t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="account.NO_SUCH_ACCOUNT"/>                 
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<SearchMultiMailboxRequest xmlns="urn:zimbraAdmin" types="message">
				<mbx id="${id_spchar}" />
				<query>subject:(${email_subject})</query>
			</SearchMultiMailboxRequest>
		</t:request>
		<t:response>
			<t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="account.NO_SUCH_ACCOUNT"/>               
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<SearchMultiMailboxRequest xmlns="urn:zimbraAdmin" types="message">
				<mbx id="${id_negative}" />
				<query>subject:(${email_subject})</query>
			</SearchMultiMailboxRequest>
		</t:request>
		<t:response>
			<t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="account.NO_SUCH_ACCOUNT"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<SearchMultiMailboxRequest xmlns="urn:zimbraAdmin" types="message">
				<mbx id="${id_zero}" />
				<query>subject:(${email_subject})</query>
			</SearchMultiMailboxRequest>
		</t:request>
		<t:response>
			<t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="mail.NO_SUCH_MBOX"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<SearchMultiMailboxRequest xmlns="urn:zimbraAdmin" types="message">
				<mbx id="${id_blank}" />
				<query>subject:(${email_subject})</query>
			</SearchMultiMailboxRequest>
		</t:request>
		<t:response>
			<t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="account.NO_SUCH_ACCOUNT"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="SearchMultiMailboxRequest05" type="deprecated" bugids="5540" areas="crossMailboxSearch">
 <t:objective> SearchMultiMailboxRequest with invalid values in the id with type="conversation"(alpha/spchar/negative/zero/blank)  </t:objective>

	<t:test>
		<t:request>
			<SearchMultiMailboxRequest xmlns="urn:zimbraAdmin" types="conversation">
				<mbx id="${id_alpha}" />
				<query>subject:(${email_subject})</query>
			</SearchMultiMailboxRequest>
		</t:request>
		<t:response>
			<t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="account.NO_SUCH_ACCOUNT"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<SearchMultiMailboxRequest xmlns="urn:zimbraAdmin" types="conversation">
				<mbx id="${id_spchar}" />
				<query>subject:(${email_subject})</query>
			</SearchMultiMailboxRequest>
		</t:request>
		<t:response>
			<t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="account.NO_SUCH_ACCOUNT"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<SearchMultiMailboxRequest xmlns="urn:zimbraAdmin" types="conversation">
				<mbx id="${id_negative}" />
				<query>subject:(${email_subject})</query>
			</SearchMultiMailboxRequest>
		</t:request>
		<t:response>
			<t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="account.NO_SUCH_ACCOUNT"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<SearchMultiMailboxRequest xmlns="urn:zimbraAdmin" types="conversation">
				<mbx id="${id_zero}" />
				<query>subject:(${email_subject})</query>
			</SearchMultiMailboxRequest>
		</t:request>
		<t:response>
			<t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="mail.NO_SUCH_MBOX"/>  
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<SearchMultiMailboxRequest xmlns="urn:zimbraAdmin" types="conversation">
				<mbx id="${id_blank}" />
				<query>subject:(${email_subject})</query>
			</SearchMultiMailboxRequest>
		</t:request>
		<t:response>
			<t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="account.NO_SUCH_ACCOUNT"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="SearchMultiMailboxRequest06" type="negative" areas="crossMailboxSearch">
	<t:objective> SearchMultiMailboxRequest without type attribute  </t:objective>

	<t:test>
		<t:request>
			<SearchMultiMailboxRequest xmlns="urn:zimbraAdmin">
				<mbx id="${test_account1.mbxid}" />
				<query>subject:(${email_subject})</query>
			</SearchMultiMailboxRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:SearchMultiMailboxResponse/admin:m" attr="su" match="^${email_subject}$" />
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="SearchMultiMailboxRequest07" type="negative" areas="crossMailboxSearch">
	<t:objective> SearchMultiMailboxRequest without query attribute  </t:objective>

	<t:test>
		<t:request>
			<SearchMultiMailboxRequest xmlns="urn:zimbraAdmin">
				<mbx id="${test_account1.mbxid}" />
			</SearchMultiMailboxRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:SearchMultiMailboxResponse"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="SearchMultiMailboxRequest08" type="negative" bugids="5546" areas="crossMailboxSearch">
	<t:objective> SearchMultiMailboxRequest with blank query </t:objective>

	<t:test>
		<t:request>
			<SearchMultiMailboxRequest xmlns="urn:zimbraAdmin">
				<mbx id="${test_account1.id}" />
				<mbx id="${test_account2.id}" />
				<query></query>
			</SearchMultiMailboxRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="mail.QUERY_PARSE_ERROR"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="SearchMultiMailboxRequest09" type="negative" bugids="5546" areas="crossMailboxSearch">
 <t:objective> SearchMultiMailboxRequest with invalid query </t:objective>
 <t:steps>
	1. Login to admin
	2. Run SearchMultiMailboxRequest against account1 and account2 with invalid query (for type=message,conversation)
	3. The response should contain the correct email from both the accounts
 </t:steps>

	<t:test>
		<t:request>
			<SearchMultiMailboxRequest xmlns="urn:zimbraAdmin" types="message">
				<mbx id="${test_account1.id}" />
				<mbx id="${test_account2.id}" />
				<query>"${id_spchar}"</query>
			</SearchMultiMailboxRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:SearchMultiMailboxResponse"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<SearchMultiMailboxRequest xmlns="urn:zimbraAdmin" types="conversation">
				<mbx id="${test_account1.id}" />
				<mbx id="${test_account2.id}" />
				<query>"${id_spchar}"</query>
			</SearchMultiMailboxRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:SearchMultiMailboxResponse"/> 
		</t:response>
	</t:test>

</t:test_case>


</t:tests>

