<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account1.password" value="test123"/>
<t:property name = "password.new" value = "test1234"/>
<t:property name = "password.spchar" value = ":''&lt;//\\"/>
<t:property name = "password.long" value = "a1234567890123456789012345678901234567890123456789012345678901234567890"/>
<t:property name = "password.short" value = "a"/>
<t:property name = "invalid.id" value = "123${TIME}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="admin_login" type="always" >
    <t:objective> Create a test account</t:objective>
    <t:steps> 1. Login to an admin account
              2. Create a test account and set the value of zimbraId
    </t:steps>   

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account1.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraId']" set="account.zimbraId"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "SetPasswordRequest1" type="smoke" areas="dev_sanity">
    <t:objective> SetPasswordRequest with valid new password </t:objective>

    <t:test xmlns="urn:zimbraAdmin">
        <t:request>
            <SetPasswordRequest>
                <id>${account.zimbraId}</id>
                <newPassword>${password.new}</newPassword>
            </SetPasswordRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:SetPasswordResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "SetPasswordRequest2" type="bhr">
    <t:objective> Set newpassword to same as the old password </t:objective>

    <t:test xmlns="urn:zimbraAdmin">
        <t:request>
         <SetPasswordRequest>
                <id>${account.zimbraId}</id>
                <newPassword>${password.new}</newPassword>
            </SetPasswordRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:SetPasswordResponse"/>
        </t:response>
    </t:test>

    <t:test xmlns="urn:zimbraAdmin">
        <t:request>
         <SetPasswordRequest>
                <id>${account.zimbraId}</id>
                <newPassword>${password.new}</newPassword>
            </SetPasswordRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:SetPasswordResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "SetPasswordRequest3" type="functional">
    <t:objective> SetPassword of an account to some special character </t:objective>

        <t:test xmlns="urn:zimbraAdmin">
            <t:request>
                <SetPasswordRequest>
                    <id>${account.zimbraId}</id>
                    <newPassword>${password.spchar}</newPassword>
                </SetPasswordRequest>
            </t:request>
           <t:response>
                <t:select path = "//admin:SetPasswordResponse"/>
           </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "SetPasswordRequest3" type="functional" bugids="9606">
    <t:objective> SetPassword of an account to blank </t:objective>

    <t:test xmlns="urn:zimbraAdmin">
        <t:request>
            <SetPasswordRequest>
                <id>${account.zimbraId}</id>
                <newPassword></newPassword>
            </SetPasswordRequest>
        </t:request>
        <t:response>
                <t:select path = "//admin:SetPasswordResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "SetPasswordRequest4" type="functional" bugids="9606">
    <t:objective> Set newpassword to very long value </t:objective>

    <t:test xmlns="urn:zimbraAdmin">
        <t:request>
             <SetPasswordRequest>
                 <id>${account.zimbraId}</id>
                <newPassword>${password.long}</newPassword>
            </SetPasswordRequest>
        </t:request>
        <t:response>
                <t:select path = "//admin:SetPasswordResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "SetPasswordRequest5" type="functional" bugids="9606">
    <t:objective> Set newpassword to very short value</t:objective>

    <t:test xmlns="urn:zimbraAdmin">
        <t:request>
         <SetPasswordRequest>
                <id>${account.zimbraId}</id>
                <newPassword>${password.short}</newPassword>
           </SetPasswordRequest>
        </t:request>
        <t:response>
                <t:select path = "//admin:SetPasswordResponse"/>
         </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "SetPasswordRequest6" type="functional">
    <t:objective> Set newpassword with spaces in between </t:objective>

    <t:test xmlns="urn:zimbraAdmin">
        <t:request>
         <SetPasswordRequest>
                <id>${account.zimbraId}</id>
                <newPassword>${TIME}         ${COUNTER}                   123</newPassword>
            </SetPasswordRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:SetPasswordResponse"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid = "SetPasswordRequest7" type="functional">
    <t:objective> Set newpassword with invalid "id" </t:objective>

    <t:test xmlns="urn:zimbraAdmin">
        <t:request>
         <SetPasswordRequest>
                <id>${invalid.id}</id>
                <newPassword>${password.new}</newPassword>
            </SetPasswordRequest>
        </t:request>
        <t:response>
            <t:select path = "//zimbra:Code" match = "^account.NO_SUCH_ACCOUNT$"/>
        </t:response>
    </t:test>

</t:test_case>


</t:tests>
