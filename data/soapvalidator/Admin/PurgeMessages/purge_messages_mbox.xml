<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="default_zimbraMailMessageLifetime" value="0"/>
<t:property name="default_zimbraMailTrashLifetime" value="6d"/>
<t:property name="default_zimbraMailSpamLifetime" value="6d"/>

<t:property name="domain01" value="testpurge${TIME}${COUNTER}.com"/>
<t:property name="account1.name" value="account1.${TIME}.${COUNTER}@${domain01}"/>
<t:property name="purge01.user" value="purge.${TIME}.${COUNTER}@${domain01}"/>
<t:property name="purge02.user" value="purge.${TIME}.${COUNTER}@${domain01}"/>
<t:property name="purge03.user" value="purge.${TIME}.${COUNTER}@${domain01}"/>
<t:property name="purge04.user" value="purge.${TIME}.${COUNTER}@${domain01}"/>
<t:property name="purge05.user" value="purge.${TIME}.${COUNTER}@${domain01}"/>
<t:property name="purge06.user" value="purge.${TIME}.${COUNTER}@${domain01}"/>
<t:property name="purge07.user" value="purge.${TIME}.${COUNTER}@${domain01}"/>
<t:property name="test_acct1.server" value="NOT_DEFINED"/>

<!--
 Below is a poor man's check to see if messages were deleted.
 The same mail is injected over and over, the size of that mail is 312 bytes.
 So, if one message was deleted, the mbox size should be reduced by 312 bytes.
-->

<t:property name="messages1.size" value="312"/>
<t:property name="messages2.size" value="624"/>
<t:property name="messages3.size" value="926"/>
<t:property name="messages4.size" value="1248"/>
<t:property name="messages5.size" value="1560"/>
<t:property name="messages6.size" value="1872"/>

<t:property name="mail01A.subject" value="purge01A"/>
<t:property name="mail01B.subject" value="purge01B"/>
<t:property name="mail01C.subject" value="purge01C"/>
<t:property name="mail01D.subject" value="purge01D"/>
<t:property name="mail01E.subject" value="purge01E"/>
<t:property name="mail01F.subject" value="purge01F"/>

<t:property name="trash.id" value="3"/>
<t:property name="spam.id" value="4"/>



<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>

    <t:test required="true">
     <t:request>
       <PingRequest xmlns="urn:zimbraAdmin"/>
     </t:request>
      <t:response>
        <t:select path="//admin:PingResponse"/>
     </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="admin_auth" type="always" >
 <t:objective>login as the admin</t:objective>

    <t:test required="true" >
     <t:request>
      <AuthRequest xmlns="urn:zimbraAdmin">
        <name>${admin.user}</name>
        <password>${admin.password}</password>
      </AuthRequest>
     </t:request>
     <t:response>
        <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
     </t:response>
    </t:test>

	<!-- Remember the admin auth token because we will be switching between
		the admin account and user accouns
	-->
	<t:property name="admin.authToken" value="${authToken}"/>

	<!-- Create the domain for the test accounts -->
	
    <t:test id="CreateDomainRequest0a">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain01}</name>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain0.id"/>
        </t:response>
    </t:test>


    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${purge01.user}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${purge02.user}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${purge03.user}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${purge04.user}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct4.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${purge05.user}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct5.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${purge06.user}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct6.server"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${purge07.user}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="purge07.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct7.server"/>
        </t:response>
    </t:test>






<t:mailinjecttest>
        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01A</filename>
                <to>${purge02.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct2.server}</server>
                <modify>
                        <header a="To">${purge02.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-1d)}</header>
                </modify>
        </t:lmtpInjectRequest>
</t:mailinjecttest>



<t:mailinjecttest>
        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01A</filename>
                <to>${purge03.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct3.server}</server>
                <modify>
                        <header a="To">${purge03.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-6d)}</header>
                </modify>
        </t:lmtpInjectRequest>
</t:mailinjecttest>

<t:mailinjecttest>
        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01C</filename>
                <to>${purge03.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct3.server}</server>
                <modify>
                        <header a="To">${purge03.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-1d)}</header>
                </modify>
        </t:lmtpInjectRequest>
</t:mailinjecttest>

<t:mailinjecttest>
        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01E</filename>
                <to>${purge03.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct3.server}</server>
                <modify>
                        <header a="To">${purge03.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-1d)}</header>
                </modify>
        </t:lmtpInjectRequest>
</t:mailinjecttest>



<t:mailinjecttest>
        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01A</filename>
                <to>${purge04.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct4.server}</server>
                <modify>
                        <header a="To">${purge04.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-30d)}</header>
                </modify>
        </t:lmtpInjectRequest>
</t:mailinjecttest>

<t:mailinjecttest>
        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01B</filename>
                <to>${purge04.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct4.server}</server>
                <modify>
                        <header a="To">${purge04.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-32d)}</header>
                </modify>
        </t:lmtpInjectRequest>
</t:mailinjecttest>

<t:mailinjecttest>

        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01C</filename>
                <to>${purge04.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct4.server}</server>
                <modify>
                        <header a="To">${purge04.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-6d)}</header>
                </modify>
        </t:lmtpInjectRequest>

</t:mailinjecttest>

<t:mailinjecttest>
        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01D</filename>
                <to>${purge04.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct4.server}</server>
                <modify>
                        <header a="To">${purge04.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-8d)}</header>
                </modify>
        </t:lmtpInjectRequest>
</t:mailinjecttest>

<t:mailinjecttest>

        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01E</filename>
                <to>${purge04.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct4.server}</server>
                <modify>
                        <header a="To">${purge04.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-8d)}</header>
                </modify>
        </t:lmtpInjectRequest>
</t:mailinjecttest>

<t:mailinjecttest>

        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01F</filename>
                <to>${purge04.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct4.server}</server>
                <modify>
                        <header a="To">${purge04.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-8d)}</header>
                </modify>
        </t:lmtpInjectRequest>
</t:mailinjecttest>

<t:mailinjecttest>


        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01A</filename>
                <to>${purge05.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct5.server}</server>
                <modify>
                        <header a="To">${purge05.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-30d)}</header>
                </modify>
        </t:lmtpInjectRequest>
</t:mailinjecttest>

<t:mailinjecttest>

        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01B</filename>
                <to>${purge05.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct5.server}</server>
                <modify>
                        <header a="To">${purge05.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-32d)}</header>
                </modify>
        </t:lmtpInjectRequest>
</t:mailinjecttest>

<t:mailinjecttest>

        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01C</filename>
                <to>${purge05.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct5.server}</server>
                <modify>
                        <header a="To">${purge05.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-6d)}</header>
                </modify>
        </t:lmtpInjectRequest>
</t:mailinjecttest>

<t:mailinjecttest>

        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01D</filename>
                <to>${purge05.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct5.server}</server>
                <modify>
                        <header a="To">${purge05.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-8d)}</header>
                </modify>
        </t:lmtpInjectRequest>
</t:mailinjecttest>

<t:mailinjecttest>

        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01E</filename>
                <to>${purge05.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct5.server}</server>
                <modify>
                        <header a="To">${purge05.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-6d)}</header>
                </modify>
        </t:lmtpInjectRequest>
</t:mailinjecttest>

<t:mailinjecttest>

        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01F</filename>
                <to>${purge05.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct5.server}</server>
                <modify>
                        <header a="To">${purge05.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-8d)}</header>
                </modify>
        </t:lmtpInjectRequest>
</t:mailinjecttest>

<t:mailinjecttest>


        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01B</filename>
                <to>${purge06.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct6.server}</server>
                <modify>
                        <header a="To">${purge06.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-32d)}</header>
                </modify>
        </t:lmtpInjectRequest>

</t:mailinjecttest>

<t:mailinjecttest>
        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01D</filename>
                <to>${purge06.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct6.server}</server>
                <modify>
                        <header a="To">${purge06.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-8d)}</header>
                </modify>
        </t:lmtpInjectRequest>
</t:mailinjecttest>

<t:mailinjecttest>

        <t:lmtpInjectRequest>
                <filename>${testMailRaw.root}/purge/purge01F</filename>
                <to>${purge06.user}</to>
                <from>${account1.name}</from>
                <server>${test_acct6.server}</server>
                <modify>
                        <header a="To">${purge06.user}</header>
                        <header a="From">${account1.name}</header>
                        <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-8d)}</header>
                </modify>
        </t:lmtpInjectRequest>
</t:mailinjecttest>


</t:test_case>




<t:test_case testcaseid="PurgeMessagesRequest1" type="functional" >
 <t:objective>Purge messages for a single account with an empty mailbox</t:objective>
 <t:steps>
 	GetAccountRequest to get the account ID;
 	GetMailboxRequest to get the mailbox ID;
 	PurgeMessagesRequest with the account ID.
    GetMailboxRequest to make sure the mailbox is empty
 	Expect the PurgeMessgesResponse with the correct mbxid.  Mailbox should remain empty
 </t:steps>


    <t:test >
        <t:request>
            <GetAccountRequest xmlns="urn:zimbraAdmin">
                <account by="name">${purge01.user}</account>
            </GetAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAccountResponse/admin:account" attr="id" set="purge01.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${purge01.id}</id>
                <a n = "zimbraMailMessageLifetime">${default_zimbraMailMessageLifetime}</a>
                <a n = "zimbraMailTrashLifetime">${default_zimbraMailTrashLifetime}</a>
                <a n = "zimbraMailSpamLifetime">${default_zimbraMailSpamLifetime}</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
    <t:test >
        <t:request>
            <GetMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${purge01.id}"/>
            </GetMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetMailboxResponse/admin:mbox" attr="mbxid"  set="purge01.mbxid"/>
            <t:select path="//admin:GetMailboxResponse/admin:mbox" attr="s"  match="^0$"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
            <PurgeMessagesRequest xmlns="urn:zimbraAdmin">
                <mbox id="${purge01.id}"/>
            </PurgeMessagesRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:PurgeMessagesResponse/admin:mbox" attr="mbxid" match="^${purge01.mbxid}$"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <GetMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${purge01.id}"/>
            </GetMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetMailboxResponse/admin:mbox" attr="mbxid"  match="^${purge01.mbxid}$"/>
            <t:select path="//admin:GetMailboxResponse/admin:mbox" attr="s"  match="^0$"/>
        </t:response>
    </t:test>  

</t:test_case>







<t:test_case testcaseid="PurgeMessagesRequest2" type="functional" >
 <t:objective>
	Purge messages for a single account with one
	message that is not purged
 </t:objective>

<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
    <t:test>
        <t:request>
            <GetAccountRequest xmlns="urn:zimbraAdmin">
                <account by="name">${purge02.user}</account>
            </GetAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAccountResponse/admin:account" attr="id" set="purge02.id"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${purge02.id}</id>
                <a n = "zimbraMailMessageLifetime">${default_zimbraMailMessageLifetime}</a>
                <a n = "zimbraMailTrashLifetime">${default_zimbraMailTrashLifetime}</a>
                <a n = "zimbraMailSpamLifetime">${default_zimbraMailSpamLifetime}</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <GetMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${purge02.id}"/>
            </GetMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetMailboxResponse/admin:mbox" attr="mbxid"  set="purge02.mbxid"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:requestContext>
	    <authToken>${admin.authToken}</authToken>
	    <account by="id">${purge02.id}</account>
        </t:requestContext>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> is:anywhere </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="^${mail01A.subject}$"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="^${mail01B.subject}$" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="^${mail01C.subject}$" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="^${mail01D.subject}$" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="^${mail01E.subject}$" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="^${mail01F.subject}$" emptyset="1"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <PurgeMessagesRequest xmlns="urn:zimbraAdmin">
                <mbox id="${purge02.id}"/>
            </PurgeMessagesRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:PurgeMessagesResponse/admin:mbox" attr="mbxid" match="^${purge02.mbxid}$"/>
        </t:response>
    </t:test>  

<!-- TODO: This should work without the requestContext but simply using the SearchRequest:mbox parameter.
                <mbx id="${purge02.id}"/>
-->
    <t:test>
        <t:requestContext>
	    <authToken>${admin.authToken}</authToken>
	    <account by="id">${purge02.id}</account>
        </t:requestContext>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> is:anywhere </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="^${mail01A.subject}$"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="^${mail01B.subject}$" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="^${mail01C.subject}$" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="^${mail01D.subject}$" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="^${mail01E.subject}$" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="^${mail01F.subject}$" emptyset="1"/>
        </t:response>
    </t:test>


      
</t:test_case>





<t:test_case testcaseid="PurgeMessagesRequest3" type="functional" >
 <t:objective>
	Purge messages for a single account with one message
	in inbox, trash, spam that are not purged
 </t:objective>
 <t:steps>
	1. Login to the account to move the messages to Trash and Spam
	2. Login to the admin account to send purge messages request
	3. Check that the mailbox still contains the three messages
 </t:steps>
   
<t:property name="server.zimbraAccount" value="${test_acct3.server}"/>
    <t:test >
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by="name">${purge03.user}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail01C.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail01C.subject}$"/>
            <t:select attr="id" set="mail01C.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action op="move" id="${mail01C.id}" l="${trash.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action" attr="id" match="^${mail01C.id}$"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail01E.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail01E.subject}$"/>
            <t:select attr="id" set="mail01E.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action op="move" id="${mail01E.id}" l="${spam.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action" attr="id" match="^${mail01E.id}$"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:property name="authToken" value="${admin.authToken}"/>

    <t:test>
        <t:request>
            <GetAccountRequest xmlns="urn:zimbraAdmin">
                <account by="name">${purge03.user}</account>
            </GetAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAccountResponse/admin:account" attr="id" set="purge03.id"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${purge03.id}</id>
                <a n = "zimbraMailMessageLifetime">${default_zimbraMailMessageLifetime}</a>
                <a n = "zimbraMailTrashLifetime">${default_zimbraMailTrashLifetime}</a>
                <a n = "zimbraMailSpamLifetime">${default_zimbraMailSpamLifetime}</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct3.server}"/>
    <t:test>
        <t:request>
            <GetMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${purge03.id}"/>
            </GetMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetMailboxResponse/admin:mbox" attr="mbxid"  set="purge03.mbxid"/>
        </t:response>
    </t:test>  

<t:property name="server.zimbraAccount" value="${test_acct3.server}"/>
    <t:test>
        <t:requestContext>
	    <authToken>${admin.authToken}</authToken>
	    <account by="id">${purge03.id}</account>
        </t:requestContext>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> is:anywhere </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01A.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01B.subject}" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01C.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01D.subject}" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01E.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01F.subject}" emptyset="1"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <PurgeMessagesRequest xmlns="urn:zimbraAdmin">
                <mbox id="${purge03.id}"/>
            </PurgeMessagesRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:PurgeMessagesResponse/admin:mbox" attr="mbxid" match="^${purge03.mbxid}$"/>
        </t:response>
    </t:test>  


    <t:test>
        <t:requestContext>
	    <authToken>${admin.authToken}</authToken>
	    <account by="id">${purge03.id}</account>
        </t:requestContext>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> is:anywhere </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01A.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01B.subject}" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01C.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01D.subject}" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01E.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01F.subject}" emptyset="1"/>
        </t:response>
    </t:test>



</t:test_case>



<t:test_case testcaseid="PurgeMessagesRequest4" type="functional" bugids="46613">
  <t:objective>
	Purge messages for a single account with default
	settings.  One message in Trash and Spam is purged
  </t:objective>
  <t:steps>
	Login as purge04;
	Move two emails into trash;
	Move two emails into Spam;
	Purge messages
	One email in trash and one email in spam should be deleted
  </t:steps>

   
<t:property name="server.zimbraAccount" value="${test_acct4.server}"/>
    <t:test >
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by="name">${purge04.user}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail01C.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail01C.subject}$"/>
            <t:select attr="id" set="mail01C.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action op="move" id="${mail01C.id}" l="${trash.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action" attr="id" match="^${mail01C.id}$"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail01D.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail01D.subject}$"/>
            <t:select attr="id" set="mail01D.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action op="move" id="${mail01D.id}" l="${trash.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action" attr="id" match="^${mail01D.id}$"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail01E.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail01E.subject}$"/>
            <t:select attr="id" set="mail01E.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action op="move" id="${mail01E.id}" l="${spam.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action" attr="id" match="^${mail01E.id}$"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail01F.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail01F.subject}$"/>
            <t:select attr="id" set="mail01F.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action op="move" id="${mail01F.id}" l="${spam.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action" attr="id" match="^${mail01F.id}$"/>
        </t:response>
    </t:test>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:property name="authToken" value="${admin.authToken}"/>


    <t:test>
        <t:request>
            <GetAccountRequest xmlns="urn:zimbraAdmin">
                <account by="name">${purge04.user}</account>
            </GetAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAccountResponse/admin:account" attr="id" set="purge04.id"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${purge04.id}</id>
                <a n = "zimbraMailMessageLifetime">${default_zimbraMailMessageLifetime}</a>
                <a n = "zimbraMailTrashLifetime">${default_zimbraMailTrashLifetime}</a>
                <a n = "zimbraMailSpamLifetime">${default_zimbraMailSpamLifetime}</a>
                <a n= "zimbraMailPurgeUseChangeDateForTrash">${globals.false}</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct4.server}"/>
    <t:test>
        <t:request>
            <GetMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${purge04.id}"/>
            </GetMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetMailboxResponse/admin:mbox" attr="mbxid"  set="purge04.mbxid"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:requestContext>
	    <authToken>${admin.authToken}</authToken>
	    <account by="id">${purge04.id}</account>
        </t:requestContext>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> is:anywhere </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01A.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01B.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01C.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01D.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01E.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01F.subject}"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <PurgeMessagesRequest xmlns="urn:zimbraAdmin">
                <mbox id="${purge04.id}"/>
            </PurgeMessagesRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:PurgeMessagesResponse/admin:mbox" attr="mbxid" match="^${purge04.mbxid}$"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:requestContext>
	    <authToken>${admin.authToken}</authToken>
	    <account by="id">${purge04.id}</account>
        </t:requestContext>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> is:anywhere </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01A.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01B.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01D.subject}" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01F.subject}"/>
        </t:response>
    </t:test>



</t:test_case> 


<t:test_case testcaseid="PurgeMessagesRequest5" type="functional" bugids="46613" >
  <t:objective>
	Purge messages from a single inbox when inbox lifetime is 7 days
 </t:objective>
   

   
<t:property name="server.zimbraAccount" value="${test_acct5.server}"/>
    <t:test >
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by="name">${purge05.user}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail01C.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail01C.subject}$"/>
            <t:select attr="id" set="mail01C.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action op="move" id="${mail01C.id}" l="${trash.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action" attr="id" match="^${mail01C.id}$"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail01D.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail01D.subject}$"/>
            <t:select attr="id" set="mail01D.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action op="move" id="${mail01D.id}" l="${trash.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action" attr="id" match="^${mail01D.id}$"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail01E.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail01E.subject}$"/>
            <t:select attr="id" set="mail01E.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action op="move" id="${mail01E.id}" l="${spam.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action" attr="id" match="^${mail01E.id}$"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail01F.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail01F.subject}$"/>
            <t:select attr="id" set="mail01F.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action op="move" id="${mail01F.id}" l="${spam.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action" attr="id" match="^${mail01F.id}$"/>
        </t:response>
    </t:test>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:property name="authToken" value="${admin.authToken}"/>

    <t:test>
        <t:request>
            <GetAccountRequest xmlns="urn:zimbraAdmin">
                <account by="name">${purge05.user}</account>
            </GetAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAccountResponse/admin:account" attr="id" set="purge05.id"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${purge05.id}</id>
                <a n = "zimbraMailMessageLifetime">31d</a>
                <a n = "zimbraMailTrashLifetime">${default_zimbraMailTrashLifetime}</a>
                <a n = "zimbraMailSpamLifetime">${default_zimbraMailSpamLifetime}</a>
                <a n= "zimbraMailPurgeUseChangeDateForTrash">${globals.false}</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct5.server}"/>
    <t:test>
        <t:request>
            <GetMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${purge05.id}"/>
            </GetMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetMailboxResponse/admin:mbox" attr="mbxid"  set="purge05.mbxid"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:requestContext>
	    <authToken>${admin.authToken}</authToken>
	    <account by="id">${purge05.id}</account>
        </t:requestContext>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> is:anywhere </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01A.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01B.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01C.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01D.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01E.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01F.subject}"/>
        </t:response>
    </t:test>


    <t:test>
        <t:request>
            <PurgeMessagesRequest xmlns="urn:zimbraAdmin">
                <mbox id="${purge05.id}"/>
            </PurgeMessagesRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:PurgeMessagesResponse/admin:mbox" attr="mbxid" match="^${purge05.mbxid}$"/>
        </t:response>
    </t:test>  

<!-- TODO: This should work without the requestContext but simply using the SearchRequest:mbox parameter.
                <mbx id="${purge02.id}"/>
-->
    <t:test>
        <t:requestContext>
	    <authToken>${admin.authToken}</authToken>
	    <account by="id">${purge05.id}</account>
        </t:requestContext>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> is:anywhere </query>
            </SearchRequest>
        </t:request>
        <t:response>
		<!-- TODO:  Need to implment in the SOAP Core to do
			multiple element matching
		-->
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01A.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01B.subject}" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01D.subject}" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01F.subject}"/>
        </t:response>
    </t:test>



</t:test_case>

<t:test_case testcaseid="PurgeMessagesRequest6" type="functional" bugids="46613">
 <t:objective>
	Purge messages from a single inbox where all messages are purged
 </t:objective>
   
<t:property name="server.zimbraAccount" value="${test_acct6.server}"/>
    <t:test >
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by="name">${purge06.user}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail01D.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail01D.subject}$"/>
            <t:select attr="id" set="mail01D.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action op="move" id="${mail01D.id}" l="${trash.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action" attr="id" match="^${mail01D.id}$"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> subject:(${mail01F.subject}) </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m">
            <t:select attr="su" match="^${mail01F.subject}$"/>
            <t:select attr="id" set="mail01F.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <MsgActionRequest xmlns="urn:zimbraMail">
                <action op="move" id="${mail01F.id}" l="${spam.id}"/>
            </MsgActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:MsgActionResponse/mail:action" attr="id" match="^${mail01F.id}$"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:property name="authToken" value="${admin.authToken}"/>

    <t:test >
        <t:request>
            <GetAccountRequest xmlns="urn:zimbraAdmin">
                <account by="name">${purge06.user}</account>
            </GetAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAccountResponse/admin:account" attr="id" set="purge06.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${purge06.id}</id>
                <a n = "zimbraMailMessageLifetime">31d</a>
                <a n = "zimbraMailTrashLifetime">${default_zimbraMailTrashLifetime}</a>
                <a n = "zimbraMailSpamLifetime">${default_zimbraMailSpamLifetime}</a>
                <a n= "zimbraMailPurgeUseChangeDateForTrash">${globals.false}</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct6.server}"/>

    <t:test>
        <t:request>
            <GetMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${purge06.id}"/>
            </GetMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetMailboxResponse/admin:mbox" attr="mbxid"  set="purge06.mbxid"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:requestContext>
	    <authToken>${admin.authToken}</authToken>
	    <account by="id">${purge06.id}</account>
        </t:requestContext>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> is:anywhere </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01A.subject}" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01B.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01C.subject}" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01D.subject}"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01E.subject}" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01F.subject}"/>
        </t:response>
    </t:test>


    <t:test >
        <t:request>
            <PurgeMessagesRequest xmlns="urn:zimbraAdmin">
                <mbox id="${purge06.id}"/>
            </PurgeMessagesRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:PurgeMessagesResponse/admin:mbox" attr="mbxid" match="^${purge06.mbxid}$"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:requestContext>
	    <authToken>${admin.authToken}</authToken>
	    <account by="id">${purge06.id}</account>
        </t:requestContext>
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message">
                <query> is:anywhere </query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01A.subject}" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01B.subject}" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01C.subject}" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01D.subject}" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01E.subject}" emptyset="1"/>
            <t:select path="//mail:SearchResponse/mail:m" attr="su" match="${mail01F.subject}"/>
        </t:response>
    </t:test>




</t:test_case>



<t:test_case testcaseid="PurgeMessagesRequest7" type="functional" >
 <t:objective>Purge messages for a single account whose mailbox was never created</t:objective>
 <t:steps>
	1. Create an account (do not log into it.  do not run GetMailboxRequest against it.)
	2. PurgeMessagesRequest with the account ID.
 </t:steps>



    <t:test >
        <t:request>
            <PurgeMessagesRequest xmlns="urn:zimbraAdmin">
                <mbox id="${purge07.id}"/>
            </PurgeMessagesRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:PurgeMessagesResponse/admin:mbox" attr="s" match="^0$"/>
            <t:select path="//admin:PurgeMessagesResponse/admin:mbox" attr="mbxid" set="purge07.mbxid"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <GetMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${purge07.id}"/>
            </GetMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetMailboxResponse/admin:mbox" attr="mbxid" match="${purge07.mbxid}"/>
            <t:select path="//admin:GetMailboxResponse/admin:mbox" attr="s" match="^0$"/>
        </t:response>
    </t:test>  

</t:test_case>




</t:tests>

