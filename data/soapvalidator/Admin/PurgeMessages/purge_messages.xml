<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="test_account1.name" value="test1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account2.name" value="test2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account3.name" value="test3.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account1.password" value="${defaultpassword.value}"/>
<t:property name="test_account2.password" value="${defaultpassword.value}"/>

<t:property name="mailbox.blank" value=""/>
<t:property name="mailbox.space" value="             "/>
<t:property name="mailbox.spchar" value=":''&lt;//\\"/>
<t:property name="mailbox.sometext" value="some text abcdss"/>
<t:property name="mailbox.negative" value="-1"/>

<t:property name="root"				value="${soapxml.root}/MailClient/Mail/lmtp/MimeBasic/"/>
<t:property name="msg01.file"		value="${root}/lmtp_basic01.txt"/>
<t:property name="msg01.subject"	value="test injecting of a mail at desired time"/>

<t:property name="CurrentTime" value="${GENTIME}"/>
<t:property name="Time1" value="${ICALTIME(-30m)}"/>
<t:property name="Time3" value="${GENTIME(-1h)}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="test_acct.server" value="NOT_DEFINED"/>

<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>

    <t:test required="true">
     <t:request>
       <PingRequest xmlns="urn:zimbraAdmin"/>
     </t:request>
      <t:response>
        <t:select path="//admin:PingResponse"/>
     </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="admin_auth" type="always" >
 <t:objective>login as the admin</t:objective>

    <t:test required="true" >
     <t:request>
      <AuthRequest xmlns="urn:zimbraAdmin">
        <name>${admin.user}</name>
        <password>${admin.password}</password>
      </AuthRequest>
     </t:request>
     <t:response>
        <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
     </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="PurgeMessagesRequest1" type="smoke" bugids="32190">
 <t:objective>Send a PurgeMessagesRequest for a particular account</t:objective>

    <t:test id="purgemessagesrequest1a">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account1.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
<t:property name="server.zimbraAdmin" value="${test_acct1.server}"/>
    <t:test id="purgemessagesrequest1b" depends="purgemessagesrequest1a">
        <t:request>
            <GetMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${test_account1.id}"/>
            </GetMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetMailboxResponse/admin:mbox" attr="mbxid"  set="test_account1.mbxid"/>
            <t:select path="//admin:GetMailboxResponse"/>
        </t:response>
    </t:test>  

    <t:test depends="purgemessagesrequest1b">
        <t:request>
            <PurgeMessagesRequest xmlns="urn:zimbraAdmin">
                <mbox id="${test_account1.id}"/>
            </PurgeMessagesRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:PurgeMessagesResponse/admin:mbox" attr="mbxid" match="^${test_account1.mbxid}$"/>
                
        </t:response>
    </t:test>  

</t:test_case>


<!--
***
Can't run this test - other test cases will fail because mails will be purged
See ZimbraQA/data/manual/SOAP/Admin/PurgeMessages manual test case
***

<t:test_case testcaseid="PurgeMessagesRequest2" type="smoke" bugids="2098">
 <t:objective>Send a PurgeMessagesRequest for all accounts</t:objective>

    <t:test>
        <t:request>
            <PurgeMessagesRequest xmlns="urn:zimbraAdmin">
            </PurgeMessagesRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:PurgeMessagesResponse"/>
        </t:response>
    </t:test>  

</t:test_case>
-->


<t:test_case testcaseid="PurgeMessagesRequest3" type="negative">
    <t:objective> PurgeMessagesRequest with leading space in account id </t:objective>
   
    <t:test depends="purgemessagesrequest1a">
        <t:request>
            <PurgeMessagesRequest xmlns="urn:zimbraAdmin">
                <mbox id="       ${test_account1.id}"/>
            </PurgeMessagesRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:PurgeMessagesResponse/admin:mbox"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="PurgeMessagesRequest4" type="negative">
    <t:objective> PurgeMessagesRequest with trailing space at account id </t:objective>
   
    <t:test>
        <t:request>
            <PurgeMessagesRequest xmlns="urn:zimbraAdmin">
                <mbox id="${test_account1.id}       "/>
            </PurgeMessagesRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:PurgeMessagesResponse/admin:mbox"/>
        </t:response>
    </t:test>

</t:test_case> 


<t:test_case testcaseid="PurgeMessagesRequest5" type="negative" bugids="8609">
    <t:objective> PurgeMessagesRequest with blank account id </t:objective>
   
    <t:test>
        <t:request>
            <PurgeMessagesRequest xmlns="urn:zimbraAdmin">
                <mbox id="${mailbox.blank}"/>
            </PurgeMessagesRequest>
        </t:request>
        <t:response>
            <!--  t:select path="//admin:PurgeMessagesResponse">
            	<t:select path="//admin:mbox" emptyset="1"/>
            </t:select-->
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_ACCOUNT"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="PurgeMessagesRequest6" type="negative" bugids="8609">
    <t:objective> PurgeMessagesRequest with sometext in account id </t:objective>
   
    <t:test>
        <t:request>
            <PurgeMessagesRequest xmlns="urn:zimbraAdmin">
                <mbox id="${mailbox.sometext}"/>
            </PurgeMessagesRequest>
        </t:request>
        <t:response>
            <!--  t:select path="//admin:PurgeMessagesResponse">
            	<t:select path="//admin:mbox" emptyset="1"/>
            </t:select-->
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_ACCOUNT"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="PurgeMessagesRequest7" type="negative" bugids="8609">
    <t:objective> PurgeMessagesRequest with special character in account id </t:objective>
   
    <t:test>
        <t:request>
            <PurgeMessagesRequest xmlns="urn:zimbraAdmin">
                <mbox id="${mailbox.spchar}"/>
            </PurgeMessagesRequest>
        </t:request>
        <t:response>
            <!--  t:select path="//admin:PurgeMessagesResponse">
            	<t:select path="//admin:mbox" emptyset="1"/>
            </t:select-->
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_ACCOUNT"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="PurgeMessagesRequest8" type="negative" bugids="2053,8609">
    <t:objective> PurgeMessagesRequest with deleted account-id </t:objective>
    <t:steps>1. Create an account.
        2. Delete the existing account.
            3. Get Mailbox of deleted account. 
    </t:steps>
    
    <t:test id="purgemessagesrequest1a">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${test_account2.password}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
    <t:test id="purgemessagesrequest8a" depends="purgemessagesrequest1a">
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${test_account2.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteAccountResponse"/>
        </t:response>
    </t:test>
    
    <t:test id="purgemessagesrequest8b" depends="purgemessagesrequest8a">
        <t:request>
            <PurgeMessagesRequest xmlns="urn:zimbraAdmin">
                <mbox id="${test_account2.id}"/>
            </PurgeMessagesRequest>
        </t:request>
        <t:response>
            <!--  t:select path="//admin:PurgeMessagesResponse">
            	<t:select path="//admin:mbox" emptyset="1"/>
            </t:select-->
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_ACCOUNT"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="PurgeMessagesRequest9" type="negative">
    <t:objective> PurgeMessagesRequest with no id attribute</t:objective>
   
    <t:test>
        <t:request>
            <PurgeMessagesRequest xmlns="urn:zimbraAdmin">
                <mbox/>
            </PurgeMessagesRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="PurgeMessagesRequest10" type = "functional" bugids="8609">
    <t:objective>Verify the PurgeMessagesRequest with deleted account-id and the account having some emails. </t:objective>
    <t:steps>
			1. Create a account.
			2. Inject a basic mime message using LMTP.
			3. Get its mailbox id.
			4. Delete the account.
	</t:steps>

    <t:test id="purgemessagesrequest10a">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
        </t:response>
    </t:test>

    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
			<to>${test_account3.name}</to>
			<from>${nonZimbraUser.name}</from>
			<server>${test_acct3.server}</server>
             <modify>
				<header a="To">${test_account3.name}</header>
                <header a="Subject">${msg01.subject}</header>
				<header a="From">${nonZimbraUser.name}</header>
                <header a="X-Zimbra-Received">${XZIMBRARECEIVED(-3600s)}</header>
            </modify> 
        </t:lmtpInjectRequest>
    </t:mailinjecttest>


<t:property name="server.zimbraAccount" value="${test_acct3.server}"/>
    <t:test id="purgemessagesrequest10b" depends="purgemessagesrequest10a">
        <t:request>
            <GetMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${test_account3.id}"/>
            </GetMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetMailboxResponse/admin:mbox" attr="mbxid"  set="test_account3.mbxid"/>
            <t:select path="//admin:GetMailboxResponse"/>
        </t:response>
    </t:test>  

<t:property name="server.zimbraAccount" value="${test_acct3.server}"/>
    <t:test>
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${test_account3.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteAccountResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <PurgeMessagesRequest xmlns="urn:zimbraAdmin">
                <mbox id="${test_account3.mbxid}"/>
            </PurgeMessagesRequest>
        </t:request>
        <t:response>
            <!--  t:select path="//admin:PurgeMessagesResponse">
            	<t:select path="//admin:mbox" emptyset="1"/>
            </t:select-->
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_ACCOUNT"/>
         </t:response>
    </t:test>  

</t:test_case>


</t:tests>

