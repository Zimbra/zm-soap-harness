<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="GetMailQueueInfoRequest_01" type="bhr" >
    <t:objective>Sanity test for GetMailQueueInfoReques</t:objective>


    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="name">${admin.user}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
	        <t:select path='//admin:GetAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="admin.server"/>
		</t:response>
    </t:test>

    <t:test>
		<t:request>
			<GetServerRequest xmlns="urn:zimbraAdmin">
				<server by="name">${admin.server}</server>
			</GetServerRequest>
		</t:request>
		<t:response>
	                <t:select path='//admin:GetServerResponse/admin:server/admin:a[@n="zimbraSmtpHostname"]' set="mta.server"/>
		</t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <GetMailQueueInfoRequest xmlns="urn:zimbraAdmin">
                <server name="${mta.server}"/>
            </GetMailQueueInfoRequest>
        </t:request>
		<t:response>
			<t:select path="//admin:GetMailQueueInfoResponse/admin:server" attr="name"  match="${mta.server}"/>
		</t:response>
    </t:test>  

</t:test_case>

<t:test_case testcaseid="GetMailQueueRequest_01" type="bhr" >
    <t:objective>Sanity test for GetMailQueueRequest</t:objective>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="name">${admin.user}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
	        <t:select path='//admin:GetAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="admin.server"/>
		</t:response>
    </t:test>

    <t:test>
		<t:request>
			<GetServerRequest xmlns="urn:zimbraAdmin">
				<server by="name">${admin.server}</server>
			</GetServerRequest>
		</t:request>
		<t:response>
	            <t:select path='//admin:GetServerResponse/admin:server/admin:a[@n="zimbraSmtpHostname"]' set="mta.server"/>
		</t:response>
    </t:test>
   
<t:property name="server.zimbraAccount" value="${admin.server}"/> 

    <t:test >
        <t:request>
            <GetMailQueueRequest xmlns="urn:zimbraAdmin">
                <server name="${mta.server}">
	                <queue name="deferred" scan="1" wait="60">
							<query offset="0" limit="25"/>
					</queue>
				</server>
            </GetMailQueueRequest>
        </t:request>
		<t:response>
			<t:select path="//admin:GetMailQueueResponse/admin:server" attr="name"  match="${mta.server}"/>
		</t:response>
    </t:test >  

</t:test_case>

<t:test_case testcaseid="MailQueueActionRequest_01" type="bhr" >
    <t:objective>Sanity test for MailQueueActionRequest</t:objective>
   
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <MailQueueActionRequest  xmlns="urn:zimbraAdmin">
                <server name="${zimbraServer.name}">
                	<queue name="deferred">
                		<action op="delete" by="id">ALL</action>
            		</queue>
                </server>
            </MailQueueActionRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:MailQueueActionResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="MailQueueFlushRequest_01" type="bhr" >
    <t:objective>Sanity test for MailQueueFlushRequest</t:objective>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
	<t:request>
		<GetAccountRequest xmlns="urn:zimbraAdmin">
			<account by="name">${admin.user}</account>
		</GetAccountRequest>
	</t:request>
	<t:response>
        <t:select path='//admin:GetAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="admin.server"/>
	</t:response>
    </t:test>

    <t:test>
		<t:request>
			<GetServerRequest xmlns="urn:zimbraAdmin">
				<server by="name">${admin.server}</server>
			</GetServerRequest>
		</t:request>
		<t:response>
	            <t:select path='//admin:GetServerResponse/admin:server/admin:a[@n="zimbraSmtpHostname"]' set="mta.server"/>
		</t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <MailQueueFlushRequest xmlns="urn:zimbraAdmin">
                <server name="${mta.server}"/>
            </MailQueueFlushRequest>
        </t:request>
		<t:response>
			<t:select path="//admin:MailQueueFlushResponse" />
		</t:response>
    </t:test >  

</t:test_case>

</t:tests>
