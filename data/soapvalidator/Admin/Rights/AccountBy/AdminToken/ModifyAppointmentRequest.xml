<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account0.name" value="right${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.name" value="right${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="right${TIME}${COUNTER}@${defaultdomain.name}"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>

	<t:test required="true">
	 <t:request>
	   <PingRequest xmlns="urn:zimbraAdmin"/>
	 </t:request>
	  <t:response>
		<t:select path="//admin:PingResponse"/>
	 </t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="acct1_setup_AccountBy" type="always" >
 <t:objective>create test accounts</t:objective>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<!-- Remember these values for later -->
	<t:property name="authToken.admin" value="${authToken}"/>

	

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account1.server"/>
        </t:response>
    </t:test>  

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account2.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account2.server"/>
        </t:response>
    </t:test>  

	<!-- account1 creates an appointment -->
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:property name="appointment1.start" value="1162468800000"/>
	<t:property name="appointment1.subject" value="1162468800000"/>

	<t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail" >
                <m >
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment1.subject}" >
                        <at role="OPT" ptst="NE" rsvp="1" a="${account2.name}"/>
                        <s d="${ICALTIME[${appointment1.start}]}"/>  
                        <e d="${ICALTIME(+1h)[${appointment1.start}]}"/>  
                        <or a="${account1.name}"/>
                    </inv>
                    <e a="${account2.name}" t="t"/>
                    <mp content-type="text/plain">
                        <content>Appointment Content ${TIME} ${COUNTER}</content>
                    </mp>
                    <su>${appointment1.subject}</su>
                </m>
            </CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateAppointmentResponse" attr="invId" set="appointment1.id"/>
        </t:response>
	</t:test>


</t:test_case>


<t:test_case testcaseid="AccountBy_Admin_ModifyAppointmentRequest_Basic01" type="bhr" >
    <t:objective>Use an admin token with accountby to ModifyAppointmentRequest</t:objective>
    <t:steps>
    1. Use admin authtoken with accountby=account1 to ModifyAppointmentRequest - Success
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test id="SetAppointment">
		<t:requestContext>
			<authToken>${authToken.admin}</authToken>

			<account by="id">${account1.id}</account>
		</t:requestContext>
        <t:request>
	        <ModifyAppointmentRequest xmlns="urn:zimbraMail" id="${appointment1.id}" comp="0">
	            <m>
	                <inv method="REQUEST" type="event" fb="B" transp="O" status="CONF" allDay="0" name="${appointment1.subject}">
	                    <at role="OPT" ptst="NE" rsvp="1" a="${account2.name}"/>
	                    <s d="${ICALTIME[${appointment1.start}]}"/>
	                    <e d="${ICALTIME(+1h)[${appointment1.start}]}"/>
	                    <or a="${account1.name}"/>
	                </inv>
	                <e a="${account2.name}" t="t"/>
	                <mp content-type="text/plain">
	                    <content>New Appointment Content ${TIME} ${COUNTER}</content>
	                </mp>
	                <su>${appointment1.subject}</su>
	            </m>
	        </ModifyAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:ModifyAppointmentResponse">
            	<t:select attr="calItemId" match="^${account1.id}:[0-9\-]+$"/>
            	<t:select attr="apptId" match="^${account1.id}:[0-9\-]+$"/>
            	<t:select attr="invId" match="^${account1.id}:[0-9\-]+$"/>
            </t:select>
        </t:response>
    </t:test>


</t:test_case>



</t:tests>