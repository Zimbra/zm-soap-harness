<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="COS.name1" value="cos1${TIME}${COUNTER}"/>
<t:property name="COS.name2" value="cos2${TIME}${COUNTER}"/>
<t:property name="COS.name3" value="cos3${TIME}${COUNTER}"/>
<t:property name="COS.name4" value="cos4${TIME}${COUNTER}"/>
<t:property name="invalid.type" value="type${TIME}${COUNTER}"/>
<t:property name="invalid.name" value="attribute${TIME}${COUNTER}"/>
<t:property name="blank.value" value=""/>

<t:test_case testcaseid="Ping" type="always" >
	<t:objective>basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="GetDelegatedAdminConstraintsRequest_01" type="smoke" >
    <t:objective>Test for GetDelegatedAdminConstraintsRequest to get modified proper values.</t:objective>
     <t:steps>
    1. Login as admin
	2. Create COS
	3. send ModifyDelegatedAdminConstraintsRequest to modify COS - min and max value for zimbraMailQuota.
	4. Send GetDelegatedAdminConstraintsRequest to get modified proper values.
	</t:steps>

	<t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateCosRequest xmlns="urn:zimbraAdmin">
                <name xmlns="">${COS.name1}</name>        
            </CreateCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="Cos1.id"/>
        </t:response>
    </t:test>
 
	<t:test>
        <t:request>
            <ModifyDelegatedAdminConstraintsRequest xmlns="urn:zimbraAdmin" type="cos" name="${COS.name1}">
	            <a name="zimbraMailQuota">
				    <constraint>
				      <max>524288000</max>
				      <min>20971520</min>
				    </constraint>      
				</a>         	
            </ModifyDelegatedAdminConstraintsRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyDelegatedAdminConstraintsResponse"/>            
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <GetDelegatedAdminConstraintsRequest xmlns="urn:zimbraAdmin" type="cos" name="${COS.name1}" id="${Cos1.id}">
            	<a name="zimbraMailQuota"/>      	
            </GetDelegatedAdminConstraintsRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetDelegatedAdminConstraintsResponse/admin:a/admin:constraint" attr="min" match="20971520" />   
             <t:select path="//admin:GetDelegatedAdminConstraintsResponse/admin:a/admin:constraint" attr="max" match="524288000" />         
        </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="GetDelegatedAdminConstraintsRequest_02" type="smoke" >
    <t:objective>Test for GetDelegatedAdminConstraintsRequest to get modified proper values.</t:objective>
     <t:steps>
    1. Login as admin
	2. send ModifyDelegatedAdminConstraintsRequest to modify Config - min and max value for zimbraMailQuota.
	3. Send GetDelegatedAdminConstraintsRequest to get modified proper values.
	</t:steps>

	<t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <ModifyDelegatedAdminConstraintsRequest xmlns="urn:zimbraAdmin" type="config">
	            <a name="zimbraMailQuota">
				    <constraint>
				      <max>624288000</max>
				      <min>30971520</min>
				    </constraint>      
				</a>         	
            </ModifyDelegatedAdminConstraintsRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyDelegatedAdminConstraintsResponse"/>            
        </t:response>
    </t:test>
    
    
    <t:test>
        <t:request>
            <GetDelegatedAdminConstraintsRequest xmlns="urn:zimbraAdmin" type="config">
            	<a name="zimbraMailQuota"/>      	
            </GetDelegatedAdminConstraintsRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetDelegatedAdminConstraintsResponse/admin:a/admin:constraint" attr="min" match="30971520" />   
             <t:select path="//admin:GetDelegatedAdminConstraintsResponse/admin:a/admin:constraint" attr="max" match="624288000" />         
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="GetDelegatedAdminConstraintsRequest_03" type="smoke" >
    <t:objective>Test for GetDelegatedAdminConstraintsRequest with invalid "type"</t:objective>
     <t:steps>
    1. Login as admin
	2. Create COS
	3. send ModifyDelegatedAdminConstraintsRequest to modify COS - min and max value for zimbraMailQuota.
	4. Send GetDelegatedAdminConstraintsRequest with invalid "type" - service.INVALID_REQUEST
	</t:steps>

	<t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateCosRequest xmlns="urn:zimbraAdmin">
                <name xmlns="">${COS.name2}</name>        
            </CreateCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="Cos2.id"/>
        </t:response>
    </t:test>
 
	<t:test>
        <t:request>
            <ModifyDelegatedAdminConstraintsRequest xmlns="urn:zimbraAdmin" type="cos" name="${COS.name2}">
	            <a name="zimbraMailQuota">
				    <constraint>
				      <max>524288000</max>
				      <min>20971520</min>
				    </constraint>      
				</a>         	
            </ModifyDelegatedAdminConstraintsRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyDelegatedAdminConstraintsResponse"/>            
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <GetDelegatedAdminConstraintsRequest xmlns="urn:zimbraAdmin" type="invalid.type" name="${COS.name2}" id="${Cos2.id}">
            	<a name="zimbraMailQuota"/>      	
            </GetDelegatedAdminConstraintsRequest>
        </t:request>
        <t:response>
               <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="GetDelegatedAdminConstraintsRequest_04" type="smoke" >
    <t:objective>Test for GetDelegatedAdminConstraintsRequest with invalid "name"</t:objective>
     <t:steps>
    1. Login as admin
	2. Create COS
	4. Send GetDelegatedAdminConstraintsRequest with invalid "name" - service.INVALID_REQUEST
	</t:steps>

	<t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateCosRequest xmlns="urn:zimbraAdmin">
                <name xmlns="">${COS.name3}</name>        
            </CreateCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="Cos3.id"/>
        </t:response>
    </t:test>
 
	<t:test>
        <t:request>
            <ModifyDelegatedAdminConstraintsRequest xmlns="urn:zimbraAdmin" type="cos" name="${COS.name3}">
	            <a name="zimbraMailQuota">
				    <constraint>
				      <max>524288000</max>
				      <min>20971520</min>
				    </constraint>      
				</a>         	
            </ModifyDelegatedAdminConstraintsRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyDelegatedAdminConstraintsResponse"/>            
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <GetDelegatedAdminConstraintsRequest xmlns="urn:zimbraAdmin" type="cos" name="${invalid.name}" id="${Cos3.id}">
            	<a name="zimbraMailQuota"/>      	
            </GetDelegatedAdminConstraintsRequest>
        </t:request>
        <t:response>
               <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="GetDelegatedAdminConstraintsRequest_05" type="smoke" >
    <t:objective>Test for GetDelegatedAdminConstraintsRequest with invalid "id"</t:objective>
     <t:steps>
    1. Login as admin
	2. Create COS
	4. Send GetDelegatedAdminConstraintsRequest with invalid "id" - account.NO_SUCH_COS
	</t:steps>

	<t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateCosRequest xmlns="urn:zimbraAdmin">
                <name xmlns="">${COS.name4}</name>        
            </CreateCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="Cos4.id"/>
        </t:response>
    </t:test>
 
	<t:test>
        <t:request>
            <ModifyDelegatedAdminConstraintsRequest xmlns="urn:zimbraAdmin" type="cos" name="${COS.name4}">
	            <a name="zimbraMailQuota">
				    <constraint>
				      <max>524288000</max>
				      <min>20971520</min>
				    </constraint>      
				</a>         	
            </ModifyDelegatedAdminConstraintsRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyDelegatedAdminConstraintsResponse"/>            
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <GetDelegatedAdminConstraintsRequest xmlns="urn:zimbraAdmin" type="cos" name="${COS.name4}" id="invalid.id">
            	<a name="zimbraMailQuota"/>      	
            </GetDelegatedAdminConstraintsRequest>
        </t:request>
        <t:response>
               <t:select path="//zimbra:Code" match="^account.NO_SUCH_COS"/>
        </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="GetDelegatedAdminConstraintsRequest_06" type="smoke" >
    <t:objective>Test for GetDelegatedAdminConstraintsRequest with blank "type"</t:objective>
     <t:steps>
    1. Login as admin
	2. send ModifyDelegatedAdminConstraintsRequest to modify Config - min and max value for zimbraMailQuota.
	4. Send GetDelegatedAdminConstraintsRequest with blank "type" - service.INVALID_REQUEST
	</t:steps>

	<t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <ModifyDelegatedAdminConstraintsRequest xmlns="urn:zimbraAdmin" type="config">
	            <a name="zimbraMailQuota">
				    <constraint>
				      <max>624288000</max>
				      <min>30971520</min>
				    </constraint>      
				</a>         	
            </ModifyDelegatedAdminConstraintsRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyDelegatedAdminConstraintsResponse"/>            
        </t:response>
    </t:test>
    
    
    <t:test>
        <t:request>
            <GetDelegatedAdminConstraintsRequest xmlns="urn:zimbraAdmin" type="${blank.value}">
            	<a name="zimbraMailQuota"/>      	
            </GetDelegatedAdminConstraintsRequest>
        </t:request>
        <t:response>
 			 <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>      
        </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="GetDelegatedAdminConstraintsRequest_07" type="smoke" >
    <t:objective>Test for GetDelegatedAdminConstraintsRequest with blank "name"</t:objective>
     <t:steps>
    1. Login as admin
	2. send ModifyDelegatedAdminConstraintsRequest to modify Config - min and max value for zimbraMailQuota.
	4. Send GetDelegatedAdminConstraintsRequest with blank "name" - service.INVALID_REQUEST
	</t:steps>

	<t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <ModifyDelegatedAdminConstraintsRequest xmlns="urn:zimbraAdmin" type="config">
	            <a name="zimbraMailQuota">
				    <constraint>
				      <max>624288000</max>
				      <min>30971520</min>
				    </constraint>      
				</a>         	
            </ModifyDelegatedAdminConstraintsRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyDelegatedAdminConstraintsResponse"/>            
        </t:response>
    </t:test>
    
    
    <t:test>
        <t:request>
            <GetDelegatedAdminConstraintsRequest xmlns="urn:zimbraAdmin" type="config" name="${blank.value}">
            	<a name="zimbraMailQuota"/>      	
            </GetDelegatedAdminConstraintsRequest>
        </t:request>
        <t:response>
 			 <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>      
        </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="GetDelegatedAdminConstraintsRequest_08" type="smoke" >
    <t:objective>Test for GetDelegatedAdminConstraintsRequest with blank "ID"</t:objective>
     <t:steps>
    1. Login as admin
	2. send ModifyDelegatedAdminConstraintsRequest to modify Config - min and max value for zimbraMailQuota.
	4. Send GetDelegatedAdminConstraintsRequest with blank "ID" - service.INVALID_REQUEST
	</t:steps>

	<t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <ModifyDelegatedAdminConstraintsRequest xmlns="urn:zimbraAdmin" type="config">
	            <a name="zimbraMailQuota">
				    <constraint>
				      <max>624288000</max>
				      <min>30971520</min>
				    </constraint>      
				</a>         	
            </ModifyDelegatedAdminConstraintsRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyDelegatedAdminConstraintsResponse"/>            
        </t:response>
    </t:test>
    
    
    <t:test>
        <t:request>
            <GetDelegatedAdminConstraintsRequest xmlns="urn:zimbraAdmin" type="config" id="${blank.value}">
            	<a name="zimbraMailQuota"/>      	
            </GetDelegatedAdminConstraintsRequest>
        </t:request>
        <t:response>
 			 <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST"/>      
        </t:response>
    </t:test>
       
</t:test_case>


</t:tests>