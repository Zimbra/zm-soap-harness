<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account0.name" value="right${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.name" value="right${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="right${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="right${TIME}${COUNTER}@${defaultdomain.name}"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="deprecated" >
 <t:objective>basic system check</t:objective>

	<t:test required="true">
	 <t:request>
	   <PingRequest xmlns="urn:zimbraAdmin"/>
	 </t:request>
	  <t:response>
		<t:select path="//admin:PingResponse"/>
	 </t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="acct1_setup_AccountBy" type="deprecated" >
 <t:objective>create test accounts</t:objective>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account0.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account0.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account0.server"/>
        </t:response>
    </t:test>  

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="account1.server"/>
        </t:response>
    </t:test>  


	<!-- Determine the account1 Notebook folder id -->
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test>
		<t:request> 
			<GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:GetFolderResponse">
            	<t:select path="//mail:folder[@name='${globals.notebook}']" attr="id" set="account1.notebook.folder.id"/>
            </t:select>
        </t:response>
	</t:test>

	<t:test>
        <t:request>
			<SaveWikiRequest xmlns="urn:zimbraMail">
			  <w name="Wiki${TIME}${COUNTER}" l="${account1.notebook.folder.id}">
			  Now is the time for all good men to come to the aid of their country.
			  </w>
			</SaveWikiRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveWikiResponse/mail:w" attr="id" set="account1.wiki1.id"/>
            <t:select path="//mail:SaveWikiResponse/mail:w" attr="ver" set="account1.wiki1.ver"/>
        </t:response>
	</t:test>

	<!-- Determine the account0 authToken and session -->
	<t:property name="server.zimbraAccount" value="${account0.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account0.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken.account0" />
		</t:response>
	</t:test>


</t:test_case>


<t:test_case testcaseid="AuthToken_User_GetWikiRequest_Basic01" type="deprecated" >
    <t:objective>Use a user token to GetWikiRequest</t:objective>
    <t:steps>
    1. Login as user0
	2. Use user0 authtoken to GetWikiRequest - PERM_DENIED
	</t:steps>

	<t:property name="authToken" value="${authToken.account0}"/>

	
	<t:property name="server.zimbraMail" value="${account0.server}"/>

	<t:test>
        <t:request>
			<GetWikiRequest xmlns="urn:zimbraMail">
				<w id="${account1.id}:${account1.wiki1.id}" ver="${account1.wiki1.ver}"/>
			</GetWikiRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.PERM_DENIED"/>
        </t:response>
	</t:test>


</t:test_case>



</t:tests>
