<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="admin_user.name" value="admin${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="nonadmin_user.name" value="admin${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="admin_user.password" value="${defaultpassword.value}"/>

<t:property name="valid_user" value="${admin_user.name}"/>
<t:property name="valid_password" value="${defaultpassword.value}"/>

<t:property name="negative_address1" value="user1@inva(lid_domain.com"/>
<t:property name="negative_address2" value="user1@inva&lt;lid_domain,com"/>

<t:property name="negative_query_admin1" value="user1@te(stdomain.com"/>
<t:property name="negative_query_admin2" value="user1@tes)tdomain.com"/>
<t:property name="negative_query_admin3" value="user1@te|stdomain.com"/>
<t:property name="negative_query_admin4" value="user1@test&amp;domain.com"/>
<t:property name="negative_query_admin5" value="user1@t;domain.com"/>
<t:property name="negative_query_admin6" value="user1@test=domain.com"/>
<t:property name="negative_query_admin7" value="user1@test@testdomain.com"/>
<t:property name="negative_query_admin8" value="user1@tes=dom.com"/>
<t:property name="negative_query_admin9" value="user1@domain=test.com"/>
<t:property name="negative_query_admin10" value="user1@testin=dom.com"/>
<t:property name="negative_query_admin11" value="       "/>

<t:property name="negative_query_passwd1" value="tes(t123"/>
<t:property name="negative_query_passwd2" value="tes)t123"/>
<t:property name="negative_query_passwd3" value="test|123"/>
<t:property name="negative_query_passwd4" value="test&amp;123"/>
<t:property name="negative_query_passwd5" value="tes;t123"/>
<t:property name="negative_query_passwd6" value="test=123"/>
<t:property name="negative_query_passwd7" value="      "/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:test_case testcaseid="Ping" type="always" >
	<t:objective>basic system check</t:objective>

	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="acctsetup_admin_auth_negative" type="always" >
	<t:objective>create test admin account</t:objective>

	<t:test id="admin_login" required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${admin_user.name}</name>
				<password>${admin_user.password}</password>
				<a n="zimbraIsAdminAccount">TRUE</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="admin_user.id"/>
		</t:response>
	</t:test>
	
	<t:test required="true" >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${nonadmin_user.name}</name>
				<password>${admin_user.password}</password>
				<a n="zimbraIsAdminAccount">FALSE</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="nonadmin_user.id"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="admin_auth_negative01" type="bhr" >
	<t:objective>Make sure valid admin login succeeds</t:objective>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin_user.name}</name>
				<password>${admin_user.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:lifetime" emptyset="0"/>
			<t:select path="//admin:AuthResponse/admin:authToken" emptyset="0"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="admin_auth_negative02" type="functional" bugids="1725">
	<t:objective>login with a wrong domain name</t:objective>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${negative_address2}</name>
				<password>${valid_password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="admin_auth_negative03" type="functional" bugids="1725">
	<t:objective>Login with a domain with special characters.</t:objective>
	
	<!-- login with a domain with underscore-->
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${negative_address1}</name>
				<password>${valid_password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

	<!-- Login with a domain with a left parenthesis -->
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${negative_query_admin1}</name>
				<password>${valid_password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

	<!--Login with a domain with a right parenthesis-->
	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${negative_query_admin2}</name>
				<password>${valid_password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

	<!--login with a domain with a pipe-->
	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${negative_query_admin3}</name>
				<password>${valid_password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

	<!-- login with a domain with an ampersand-->
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${negative_query_admin4}</name>
				<password>${valid_password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

	<!-- login with a domain with a semicolon-->
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${negative_query_admin5}</name>
				<password>${valid_password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

	<!-- login with a domain with a equals sign-->
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${negative_query_admin6}</name>
				<password>${valid_password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

	<!-- login with a domain with two "@" signs-->
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${negative_query_admin7}</name>
				<password>${valid_password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path= "//zimbra:Code" match="^service.INVALID_REQUEST$"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="admin_auth_negative04" type="functional" bugids="2427">
	<t:objective>login with a blank user and valid password</t:objective>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${negative_query_admin11}</name>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path= "//zimbra:Code" match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="admin_auth_negative05" type="functional" bugids="2427">
	<t:objective>login with a blank user and invalid password</t:objective>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${negative_query_admin11}</name>
				<password>${negative_query_passwd1}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path= "//zimbra:Code" match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="admin_auth_negative06" type="functional" bugids="2427">
	<t:objective>login with a valid user and blank password</t:objective>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin_user.name}</name>
				<password>${negative_query_passwd7}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path= "//zimbra:Code" match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="admin_auth_negative07" type="functional" bugids="2427">
	<t:objective>login with a blank user and blank password</t:objective>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${negative_query_admin11}</name>
				<password>${negative_query_passwd7}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path= "//zimbra:Code" match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="admin_auth_negative08" type="functional" >
	<t:objective>login with a password with special characters.</t:objective>

	<!-- login with a password with a left parenthesis -->
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${valid_user}</name>
				<password>${negative_query_passwd1}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

	<!-- login with a password with a right parenthesis -->
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${valid_user}</name>
				<password>${negative_query_passwd2}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

	<!-- login with a password with a pipe-->
	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${valid_user}</name>
				<password>${negative_query_passwd3}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

	<!-- login with a password with a ampersand-->
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${valid_user}</name>
				<password>${negative_query_passwd4}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

	<!-- login with a password with a semi-colon-->
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${valid_user}</name>
				<password>${negative_query_passwd5}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

	<!-- login with a password with a equals sign-->
	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${valid_user}</name>
				<password>${negative_query_passwd6}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^account.AUTH_FAILED$"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="admin_auth_negative09" type="sanity" >
	<t:objective>make sure nonadmin account can not login as an admin</t:objective>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${nonadmin_user.name}</name>
				<password>${admin_user.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code"  match="^service.PERM_DENIED$"/>
		</t:response>
	</t:test>

</t:test_case>


</t:tests>
