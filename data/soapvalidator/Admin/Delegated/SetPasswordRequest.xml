<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="admin1.account" value="admin1.${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="target.account" value="target.${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="password.new" value="newpassword"/>

<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>

	<t:test required="true">
	 <t:request>
	   <PingRequest xmlns="urn:zimbraAdmin"/>
	 </t:request>
	  <t:response>
		<t:select path="//admin:PingResponse"/>
	 </t:response>
	</t:test>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${admin1.account}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraIsDelegatedAdminAccount">TRUE</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="admin1.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="admin1.server"/>
        </t:response>
    </t:test>  

    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${target.account}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraIsDelegatedAdminAccount">TRUE</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="target1.id"/>
			<t:select path="//admin:CreateAccountResponse/admin:account/admin:a[@n='zimbraMailHost']" set="target.server"/>
        </t:response>
    </t:test>  

</t:test_case>

<t:test_case testcaseid="delegate_SetPasswordRequest1" type="smoke" >
<t:objective> Grant "setAccountPassword" rights to admin1 and verify </t:objective>

	<t:steps>
		1. Grant setAccountPassword to admin1 on target ${target.account}
		2. Authenticate as admin1 and send setAccountPassword for account ${target.account}
	</t:steps>

	<t:test>
		<t:request>
			<GrantRightRequest xmlns="urn:zimbraAdmin">
				<target type="account" by="name">${target.account}</target>
				<grantee type="usr" by="name">${admin1.account}</grantee>
				<right>setAccountPassword</right>
			</GrantRightRequest>    
		</t:request>
		<t:response>
            <t:select path="//admin:GrantRightResponse"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<account by="name">${admin1.account}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <SetPasswordRequest xmlns="urn:zimbraAdmin">
                <id>${target1.id}</id>
                <newPassword>${password.new}</newPassword>
            </SetPasswordRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:SetPasswordResponse"/>
        </t:response>
    </t:test>


</t:test_case>

</t:tests>