<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.dl1.name" value="dl1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.dl2.name" value="dl2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.dl3.name" value="dl3.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>
    <t:test required="true">
     <t:request>
       <PingRequest xmlns="urn:zimbraAdmin"/>
     </t:request>
      <t:response>
        <t:select path="//admin:PingResponse"/>
     </t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="admin_auth" type="always" >
 <t:objective>login as the admin</t:objective>
	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
	</t:test>
	
	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
		</t:response>
	</t:test>
	
	<t:property name="server.zimbraAdmin" value="${account1.server}"/>
	<t:test required="true">
		<t:request>
			<GrantRightRequest xmlns="urn:zimbraAdmin">
				<target xmlns="" by="name" type="domain">${defaultdomain.name}</target>
				<grantee xmlns="" by="name" type="usr">${account1.name}</grantee>
				<right xmlns="">createDistList</right>
			</GrantRightRequest>
		</t:request>
		<t:response>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="ddl_externaluser01" type="smoke" bugids="74084" >
    <t:objective>Test external members are supported in DL </t:objective>    

	<t:steps>
		1. account1 login
		2. Create a  distribution list( by default dynamic)
		3. Add external and internal members
		4. check both are present in dynamic dl
    </t:steps>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 

    <t:test >
        <t:request >
            <CreateDistributionListRequest xmlns="urn:zimbraAccount" dynamic="1">
                 <name>${account1.dl1.name}</name>
          	</CreateDistributionListRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:CreateDistributionListResponse/acct:dl" attr="id" set="account1.dl1.id" />
        	<!--<t:select path="//acct:CreateDistributionListResponse/acct:dl" attr="dynamic" match="1" />  -->
    		<!-- <t:select path="//acct:CreateDistributionListResponse/acct:dl/acct:owners/acct:owner" attr="id" match="${account1.id}" /> -->	
        </t:response>
    </t:test> 
   
   <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl1.id}</dl>
                 <action op="addMembers">
                 	    <dlm>${POP3.Yahoo.username}</dlm>
                 </action>
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 
    
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl1.id}</dl>
                 <action op="addMembers">
                 	    <dlm>${account2.name}</dlm>
                 </action>
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 
    
         
    <t:test >
        <t:request >
            <GetDistributionListMembersRequest xmlns="urn:zimbraAccount">
            	<dl>${account1.dl1.name}</dl>
          	</GetDistributionListMembersRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:GetDistributionListMembersResponse/acct:dlm"  match="${POP3.Yahoo.username}" />
       		<t:select path="//acct:GetDistributionListMembersResponse/acct:dlm"  match="${account2.name}" />
        </t:response>
    </t:test> 
</t:test_case>

<t:test_case testcaseid="ddl_externaluser02" type="smoke" bugids="74084" >
    <t:objective>Test external members are supported in dynamic DL </t:objective>    

	<t:steps>
		1. account1 login
		2. Create a dynamic distribution list
		3. Add external and internal members
		4. check both are present in dynamic dl
    </t:steps>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 

    <t:test >
        <t:request >
            <CreateDistributionListRequest xmlns="urn:zimbraAccount" dynamic="1">
                 <name>${account1.dl2.name}</name>
          	</CreateDistributionListRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:CreateDistributionListResponse/acct:dl" attr="id" set="account1.dl2.id" />
        	<!--<t:select path="//acct:CreateDistributionListResponse/acct:dl" attr="dynamic" match="1" />  -->
    		<!--  <t:select path="//acct:CreateDistributionListResponse/acct:dl/acct:owners/acct:owner" attr="id" match="${account1.id}" /> -->
        </t:response>
    </t:test> 
   
   <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl2.id}</dl>
                 <action op="addMembers">
                 	    <dlm>${POP3.Yahoo.username}</dlm>
                 </action>
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 
    
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl2.id}</dl>
                 <action op="addMembers">
                 	    <dlm>${account2.name}</dlm>
                 </action>
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 
       
    <t:test >
        <t:request >
            <GetDistributionListMembersRequest xmlns="urn:zimbraAccount">
            	<dl>${account1.dl2.name}</dl>
          	</GetDistributionListMembersRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:GetDistributionListMembersResponse/acct:dlm"  match="${POP3.Yahoo.username}" />
       		<t:select path="//acct:GetDistributionListMembersResponse/acct:dlm"  match="${account2.name}" />
        </t:response>
    </t:test> 

</t:test_case>

<t:test_case testcaseid="ddl_externaluser03" type="smoke" bugids="74084" >
    <t:objective>Test external members are supported in static DL </t:objective>    

	<t:steps>
		1. account1 login
		2. Create a static distribution list
		3. Add external and internal members
		4. check both are present in dynamic dl
    </t:steps>
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 

    <t:test >
        <t:request >
            <CreateDistributionListRequest xmlns="urn:zimbraAccount" dynamic="0">
                 <name>${account1.dl3.name}</name>
          	</CreateDistributionListRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:CreateDistributionListResponse/acct:dl" attr="id" set="account1.dl3.id" />
        	<!--<t:select path="//acct:CreateDistributionListResponse/acct:dl" attr="dynamic" match="0" />  -->
    		<!--  <t:select path="//acct:CreateDistributionListResponse/acct:dl/acct:owners/acct:owner" attr="id" match="${account1.id}" /> -->
        </t:response>
    </t:test> 
   
   <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl3.id}</dl>
                 <action op="addMembers">
                 	    <dlm>${POP3.Yahoo.username}</dlm>
                 </action>
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 
    
    <t:test >
        <t:request >
            <DistributionListActionRequest xmlns="urn:zimbraAccount" >
            	<dl by="id">${account1.dl3.id}</dl>
                 <action op="addMembers">
                 	    <dlm>${account2.name}</dlm>
                 </action>
          	</DistributionListActionRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:DistributionListActionResponse" />
        </t:response>
    </t:test> 
       
    <t:test >
        <t:request >
            <GetDistributionListMembersRequest xmlns="urn:zimbraAccount">
            	<dl>${account1.dl3.name}</dl>
          	</GetDistributionListMembersRequest>
        </t:request>
        <t:response>
        	<t:select path="//acct:GetDistributionListMembersResponse/acct:dlm"  match="${POP3.Yahoo.username}" />
       		<t:select path="//acct:GetDistributionListMembersResponse/acct:dlm"  match="${account2.name}" />
        </t:response>
    </t:test> 

</t:test_case>

</t:tests>


