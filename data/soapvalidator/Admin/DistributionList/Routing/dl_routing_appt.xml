<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account0.name" value="source${COUNTER}${TIME}@${defaultdomain.name}"/>

<t:property name="list1.name" value="dl${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="list2.name" value="dl${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="list2.account1.name" value="account${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="list3.name" value="dl${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="list3.account1.name" value="account${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="list3.account2.name" value="account${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="list3.account3.name" value="account${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="list4.name" value="dl${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="list4.account1.name" value="account${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="list5.name" value="dl${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="list5.account1.name" value="account${COUNTER}${TIME}@${defaultdomain.name}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>

	<t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
    
</t:test_case>
 

<t:test_case testcaseid="DistributionList_Routing_Appt_AccountSetup" type="always">
    <t:objective>Create test Distribution List </t:objective>
    <t:steps> 1. AuthRequest as admin
              2. Create source account
    </t:steps>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account0.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account0.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account0.server"/>
        </t:response>
    </t:test>  
           

</t:test_case>


<t:test_case testcaseid="DistributionList_Routing_Appt_01" type="smoke">
    <t:objective>Send a meeting request to a DL without any members - verify a bounce message </t:objective>
    <t:steps>
    1. Create a new DL - don't add any members
    2. Login as source account
    3. Send a meeting request to the new DL
    4. Wait for 60 seconds
    5. Verify a bounce back message is returned
    </t:steps>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${list1.name}</name>
                <a n="description">An empty distribution list</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="list1.id"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account0.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account0.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
	
	<t:property name="appointment.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="appointment.start" value="1233576000000"/>	<!-- Feb 2, 2009  12:00:00 -->

	<t:test >
		<t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m >
					<inv>
						<comp status="CONF" fb="B" class="PUB" transp="O" allDay="0" name="${appointment.subject}">
						<at role="REQ" ptst="NE" rsvp="1" a="${list1.name}"/>
							<s tz="${defaultlocale.timezone}" d="${ICALTIME[${appointment.start}]}"/>
							<e tz="${defaultlocale.timezone}" d="${ICALTIME(+1h)[${appointment.start}]}"/>
						<or a="${account0.name}"/>
						</comp>
					</inv>
					<e a="${list1.name}" t="t" />
					<su>${appointment.subject}</su>
					<mp ct="text/plain">
						<content>
That's a good thing, right? Well, it can be, but don't make a quick ruling on that. It's true that vegetables are the lowest-calorie food group; the problem is that salads aren't just composed of vegetables anymore.
						</content>
					</mp>
				</m>
			</CreateAppointmentRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:CreateAppointmentResponse"/>
		</t:response>
	</t:test>

	<!--t:delay sec="60"/>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(Undelivered Mail)</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m"/>
		</t:response>
	</t:test-->

</t:test_case>

<t:test_case testcaseid="DistributionList_Routing_Appt_02" type="smoke">
    <t:objective>Send a meeting request to a DL with one member</t:objective>
    <t:steps>
    1. Create a new DL with one member
    2. Login as source account
    3. Send a meeting request to the new DL
    4. Login to the member's account
    5. Verify the appointment is received
    </t:steps>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${list2.name}</name>
                <a n="description">A distribution list with one member</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="list2.id"/>
        </t:response>
    </t:test>

	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${list2.account1.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="list2.account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="list2.account1.server"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list2.id}</id>
                <dlm>${list2.account1.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>
 
	<t:property name="server.zimbraAccount" value="${account0.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account0.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
	
	<t:property name="appointment.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="appointment.start" value="1233489600000"/>	<!-- Feb 1, 2009  12:00:00 -->

	<t:test >
		<t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m >
					<inv>
						<comp status="CONF" fb="B" class="PUB" transp="O" allDay="0" name="${appointment.subject}">
						<at role="REQ" ptst="NE" rsvp="1" a="${list2.name}"/>
							<s tz="${defaultlocale.timezone}" d="${ICALTIME[${appointment.start}]}"/>
							<e tz="${defaultlocale.timezone}" d="${ICALTIME(+1h)[${appointment.start}]}"/>
						<or a="${account0.name}"/>
						</comp>
					</inv>
					<e a="${list2.name}" t="t" />
					<su>${appointment.subject}</su>
					<mp ct="text/plain">
						<content>
That's a good thing, right? Well, it can be, but don't make a quick ruling on that. It's true that vegetables are the lowest-calorie food group; the problem is that salads aren't just composed of vegetables anymore.
						</content>
					</mp>
				</m>
			</CreateAppointmentRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:CreateAppointmentResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${list2.account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${list2.account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${appointment.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="DistributionList_Routing_Appt_03" type="smoke">
    <t:objective>Send a meeting request to a DL with multiple members</t:objective>
    <t:steps>
    1. Create a new DL with three members
    2. Login as source account
    3. Send a meeting request to the new DL
    4. Login to each member's account
    5. Verify the message is received
    </t:steps>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${list3.name}</name>
                <a n="description">A distribution list with one member</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="list3.id"/>
        </t:response>
    </t:test>

	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${list3.account1.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="list3.account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="list3.account1.server"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list3.id}</id>
                <dlm>${list3.account1.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>
 
	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${list3.account2.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="list3.account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="list3.account2.server"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list3.id}</id>
                <dlm>${list3.account2.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>
 
	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${list3.account3.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="list3.account3.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="list3.account3.server"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list3.id}</id>
                <dlm>${list3.account3.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>
 
	<t:property name="server.zimbraAccount" value="${account0.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account0.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
	
	<t:property name="appointment.subject" value="subject${TIME}${COUNTER}"/>
	<t:property name="appointment.start" value="1233489600000"/>	<!-- Feb 1, 2009  12:00:00 -->

	<t:test >
		<t:request>
			<CreateAppointmentRequest xmlns="urn:zimbraMail">
				<m >
					<inv>
						<comp status="CONF" fb="B" class="PUB" transp="O" allDay="0" name="${appointment.subject}">
						<at role="REQ" ptst="NE" rsvp="1" a="${list2.name}"/>
							<s tz="${defaultlocale.timezone}" d="${ICALTIME[${appointment.start}]}"/>
							<e tz="${defaultlocale.timezone}" d="${ICALTIME(+1h)[${appointment.start}]}"/>
						<or a="${account0.name}"/>
						</comp>
					</inv>
					<e a="${list3.name}" t="t" />
					<su>${appointment.subject}</su>
					<mp ct="text/plain">
						<content>
That's a good thing, right? Well, it can be, but don't make a quick ruling on that. It's true that vegetables are the lowest-calorie food group; the problem is that salads aren't just composed of vegetables anymore.
						</content>
					</mp>
				</m>
			</CreateAppointmentRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:CreateAppointmentResponse"/>
		</t:response>
	</t:test>


	<t:property name="server.zimbraAccount" value="${list3.account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${list3.account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${appointment.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${list3.account2.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${list3.account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${appointment.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${list3.account3.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${list3.account3.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${appointment.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m"/>
		</t:response>
	</t:test>

</t:test_case>


</t:tests>