<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="domain" value="${defaultdomain.name}"/>

<t:property name="list1" value="test${TIME}${COUNTER}@${domain}"/>

<t:property name="user1" value="user${TIME}${COUNTER}@${domain}"/>
<t:property name="user2" value="user${TIME}${COUNTER}@${domain}"/>
<t:property name="user3" value="user${TIME}${COUNTER}@${domain}"/>

<t:property name="compose.subject" value="Subject of the message is testing"/>
<t:property name="compose.content" value="Content in the message is contents..."/>
<t:property name="test_acct1.server" value="NOT_DEFINED"/>

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
    
</t:test_case>
 

<t:test_case testcaseid="acctSetup1_dlAddMember_loop" type="always">
    <t:objective>Create test domain </t:objective>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true" timeframeMax="2700">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain}</name>
                <a n="zimbraNotes">Domain for distribution list testing</a>
            </CreateDomainRequest>
        </t:request>
    </t:test>

</t:test_case>


<t:test_case testcaseid="DistributionList_addMember_loop1" type="sanity" duration="long">
    <t:objective> Creating 500 accounts in single DistributionList with valid name and password </t:objective>
    <t:steps> 1. Create a DistributionList.
              2. Create 500 accounts.
              3. Add 500 accounts to DistributionList.
    </t:steps>
    
    <t:test timeframeMax="2000">
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${list1}</name>
                <a n="description">A test distribution list</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="list1.id" />
        </t:response>
    </t:test>
    
    <t:test_loop count="500">
        <t:test timeframeMax="5000">
            <t:request>
                <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>acc${COUNTER}${user1}</name>
                    <password>${defaultpassword.value}</password>
                </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="name" set="test_accout1.name" />
            </t:response>
        </t:test>
        
        <t:test timeframeMax="1000">
            <t:request>
                <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                    <id>${list1.id}</id>
                    <dlm>${test_accout1.name}</dlm>
                </AddDistributionListMemberRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:AddDistributionListMemberResponse" />
            </t:response>               
        </t:test>    
      
    </t:test_loop>    

</t:test_case>


<t:test_case testcaseid="DistributionList_addMember_loop2" type="functional" duration="long">
    <t:objective> Remove an account from the distribution list </t:objective>
    <t:steps> 1. Create an account
              2. Add account to the distribution list
              3. Remove the same account from the distribution list
    </t:steps>
    
    <t:test id="distributionList_addMember_loop2a" timeframeMax="2000">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${user1}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="name" match="${user1}"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>  
           
    <t:test id="distributionList_addMember_loop2b" depends="distributionList_addMember_loop2a" timeframeMax="1000">
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${user1}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse" attr="id" match="${list1.id}" />
        </t:response>
    </t:test>
   
    <t:test depends="distributionList_addMember_loop2b" timeframeMax="1000">
        <t:request>
            <RemoveDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${user1}</dlm>
            </RemoveDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:RemoveDistributionListMemberResponse" attr="id" match="${list1.id}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="DistributionList_addMember_loop3" type="functional" duration="long">
    <t:objective> Verifying the accounts of Distribution list get the mail, even having 1000 accounts </t:objective>
    <t:steps> 1. Create two accounts.
              2. Add two accounts to the DistributionList.
              3. Login to first account.
              4. Send Msg to DistributionList.
              5. Login to second account.
              6. Verifying second account get Msg.  
    </t:steps>
    
    <t:test id="distributionList_addMember_loop3a" timeframeMax="2000">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${user2}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="name" match="${user2}" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>
    
    <t:test id="distributionList_addMember_loop3b" timeframeMax="2000">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${user3}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="name" match="${user3}" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
        </t:response>
    </t:test>
    
     <t:test depends="distributionList_addMember_loop3b" timeframeMax="1000">
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${user2}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse" attr="id" match="${list1.id}" />
        </t:response>               
    </t:test>  
    
     <t:test depends="distributionList_addMember_loop3b" timeframeMax="1000">
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${user3}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse" attr="id" match="${list1.id}" />
        </t:response>               
    </t:test> 
    
<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>    
    <t:test id="distributionList_addMember_loop3c" depends="distributionList_addMember_loop3a" timeframeMax="3000">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${user2}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test depends="distributionList_addMember_loop3c" timeframeMax="3000">
        <t:request>
            <SendMsgRequest xmlns="urn:zimbraMail">
                <m>
                    <e t="t" a='${list1}'/>
                    <su> ${compose.subject} </su>
                    <mp ct="text/plain">
                        <content> ${compose.content} </content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m" attr="id" set="message1.id"/>
        </t:response>
    </t:test>
    
<t:property name="server.zimbraAccount" value="${test_acct3.server}"/>    
    <!--
    	Need to give postfix more time, since 1000's of accounts will receive this mail
    	Allow 1 minute for all mails to go through the system
    -->
    <t:test depends="distributionList_addMember_loop3b" delay="60000">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${user3}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test delay="60000">
        <t:request>
            <SearchRequest xmlns="urn:zimbraMail" types="message" sortBy="dateDesc" offset="0" limit="25">
                <query>in:${globals.inbox}</query>
            </SearchRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SearchResponse/mail:m[@id='${message1.id}']" />
        </t:response>
    </t:test>     
    
</t:test_case>    

</t:tests>
