
<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain1.name" value="domain1${TIME}${COUNTER}.com"/>
<t:property name="domain1.new.name" value="domain2${TIME}${COUNTER}.com"/>

<t:property name="test_account1.name" value="test1.${TIME}.${COUNTER}@${domain1.name}"/>
<t:property name="test_account2.name" value="test2.${TIME}.${COUNTER}@${domain1.name}"/>
<t:property name="test_account3.name" value="test2.${TIME}.${COUNTER}@${domain1.name}"/>
<t:property name="test_account4.name" value="test2.${TIME}.${COUNTER}@${domain1.name}"/>

<t:property name="test_list1.name" value="testdl.${TIME}.${COUNTER}@${domain1.name}"/>
<t:property name="test_list2.name" value="testdl2.${TIME}.${COUNTER}@${domain1.name}"/>
<t:property name="test_list2_1.name" value="testdl2_1.${TIME}.${COUNTER}@${domain1.name}"/>
<t:property name="test_list3.name" value="testdl3.${TIME}.${COUNTER}@${domain1.name}"/>
<t:property name="resource1.name" value="fp.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="resource1.foreignPrincipal" value="test:${TIME}.${COUNTER}"/>
<t:property name="Resource.equipment" value="Equipment"/>
<t:property name="Resource.location" value="Location"/>
<t:property name="active" value="active"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="acct1_setup" type="always">
    <t:objective>Create test accounts and DL</t:objective>
    
    <t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    
	<!-- Login as the admin to get an auth token -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
     <t:test>
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">                
  				<name>${domain1.name}</name>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain1.id"/>
        </t:response>
    </t:test>
    
    <t:test id="create_acct1" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
            </t:response>
    </t:test>
    
    <t:test id="create_acct2" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account2.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
            </t:response>
    </t:test>
    
      <!--  Create COS -->
    <t:test>
        <t:request>
            <CreateCosRequest xmlns="urn:zimbraAdmin">
                <name xmlns="">cos${TIME}${COUNTER}</name>
            </CreateCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos1.id"/>         
        </t:response>
    </t:test>
    
      <t:property name="alias1.name" value="alias.${TIME}.${COUNTER}@${defaultdomain.name}"/>
      
      <t:test >
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account2.id}</id>
                <alias>${alias1.name}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
                <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test> 

</t:test_case> 

<t:test_case testcaseid="DynamicDistribution_rule1" type="bhr">
    <t:objective>Create dynamic distribution list with memberURL </t:objective>
    <t:steps>
			1. Login using Admin.
			2. Create dynamic distribution list with member URL -> ldap:///??sub?(mail=*@${domain1.name})
			3. Verify predefined rule which will be applied to filter accounts both new and existing.
	</t:steps>
	
	 <t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    
	<!-- Login as the admin to get an auth token -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin"  dynamic="1">
                <name>${test_list1.name}</name>
                <a n="description">A test distribution list</a>
                <a n="zimbraIsACLGroup">FALSE</a>
                <a n="memberURL">ldap:///??sub?(mail=*@${domain1.name})</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="test_list1.id"/>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="dynamic" match="1" />
        </t:response>
    </t:test>
    
   <t:test>
        <t:request>
            <GetDistributionListRequest xmlns="urn:zimbraAdmin">
                <dl by="id">${test_list1.id}</dl>
            </GetDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetDistributionListResponse/admin:dl/admin:dlm" match="${test_account1.name}"/>
            <t:select path="//admin:GetDistributionListResponse/admin:dl/admin:dlm" match="${test_account2.name}"/>
        </t:response>
    </t:test>
    
     <t:test id="create_acct1" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
            </t:request>
            <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account3.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
            </t:response>
    </t:test>
    
      <t:test>
        <t:request>
            <GetDistributionListRequest xmlns="urn:zimbraAdmin">
                <dl by="id">${test_list1.id}</dl>
            </GetDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetDistributionListResponse/admin:dl/admin:dlm" match="${test_account1.name}"/>
            <t:select path="//admin:GetDistributionListResponse/admin:dl/admin:dlm" match="${test_account2.name}"/>
            <t:select path="//admin:GetDistributionListResponse/admin:dl/admin:dlm" match="${test_account3.name}"/>
        </t:response>
    </t:test>
	
</t:test_case>

<t:test_case testcaseid="DynamicDistribution_rule2" type="bhr">
    <t:objective>Create dynamic distribution list with memberURL </t:objective>
    <t:steps>
			1. Login using Admin.
			2. Create dynamic distribution list with member URL -> ldap:///??sub?(objectClass=zimbraAccount)
			3. Verify predefined rule which will be applied to filter accounts.
	</t:steps>
	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    
	<!-- Login as the admin to get an auth token -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin"  dynamic="1">
                <name>${test_list3.name}</name>
                <a n="description">A test distribution list</a>
                <a n="zimbraIsACLGroup">FALSE</a>
                <a n="memberURL">ldap:///??sub?(objectClass=zimbraAccount)</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="test_list3.id"/>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="dynamic" match="1" />
        </t:response>
    </t:test>
    
   <t:test>
        <t:request>
            <GetDistributionListRequest xmlns="urn:zimbraAdmin">
                <dl by="id">${test_list3.id}</dl>
            </GetDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetDistributionListResponse/admin:dl/admin:dlm" match="${test_account1.name}"/>
            <t:select path="//admin:GetDistributionListResponse/admin:dl/admin:dlm" match="${test_account2.name}"/>
        </t:response>
    </t:test>
      
    <t:test >
        <t:request>
            <DeleteDistributionListRequest xmlns="urn:zimbraAdmin">
                <id>${test_list3.id}</id>
            </DeleteDistributionListRequest>	
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteDistributionListResponse"/>
        </t:response>
    </t:test>
	
</t:test_case>

<t:test_case testcaseid="DynamicDistribution_rule3" type="bhr">
    <t:objective>Create dynamic distribution list with memberURL </t:objective>
    <t:steps>
			1. Login using Admin.
			2. Create dynamic distribution list with member URL -> ldap:///??sub?(zimbraCOSId=${cos1.id})
			3. Verify predefined rule which will be applied to filter accounts.
	</t:steps>
	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    
	<!-- Login as the admin to get an auth token -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
	 <t:test>
        <t:request>
            <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                <id>${test_account1.id}</id>
                <a n="zimbraCOSId">${cos1.id}</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin"  dynamic="1">
                <name>${test_list3.name}</name>
                <a n="description">A test distribution list</a>
                <a n="zimbraIsACLGroup">FALSE</a>
                <a n="memberURL">ldap:///??sub?(zimbraCOSId=${cos1.id})</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="test_list3.id"/>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="dynamic" match="1" />
        </t:response>
    </t:test>
    
   <t:test>
        <t:request>
            <GetDistributionListRequest xmlns="urn:zimbraAdmin">
                <dl by="id">${test_list3.id}</dl>
            </GetDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetDistributionListResponse/admin:dl/admin:dlm" match="${test_account1.name}"/>
        </t:response>
    </t:test>
    
   	<t:test >
        <t:request>
            <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                <id>${test_account1.id}</id>
                <a n="zimbraCOSId"></a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
    
     <t:test>
        <t:request>
            <GetDistributionListRequest xmlns="urn:zimbraAdmin">
                <dl by="id">${test_list3.id}</dl>
            </GetDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetDistributionListResponse/admin:dl/admin:dlm" match="${test_account1.name}" emptyset="1"/>
        </t:response>
    </t:test>
      	
</t:test_case>

<t:test_case testcaseid="DynamicDistribution_rule4" type="bhr">
    <t:objective>Create dynamic distribution list with memberURL </t:objective>
    <t:steps>
			1. Login using Admin.
			2. Create dynamic distribution list with member URL -> ldap:///??sub?(objectClass=zimbraCalendarResource)
			3. Verify predefined rule which will be applied to filter accounts.
	</t:steps>
	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    
	<!-- Login as the admin to get an auth token -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
      
     <t:test >
        <t:request>
            <CreateCalendarResourceRequest xmlns="urn:zimbraAdmin">
                <name>${resource1.name}</name>
				<a n="zimbraForeignPrincipal">${resource1.foreignPrincipal}</a>
				<a n="zimbraCalResType">${Resource.equipment}</a>
				<a n="zimbraAccountStatus">${active}</a>
				<a n="displayName">${resource1.name}</a>
            </CreateCalendarResourceRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource" attr="id"  set="resource1.id"/>
        </t:response>
    </t:test> 
     
    <t:property name="test_list4.name" value="testdl4.${TIME}.${COUNTER}@${domain1.name}"/>
       
    <t:test required="true">
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin"  dynamic="1">
                <name>${test_list4.name}</name>
                <a n="description">A test distribution list</a>
                <a n="zimbraIsACLGroup">FALSE</a>
                <a n="memberURL">ldap:///??sub?(objectClass=zimbraCalendarResource)</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="test_list4.id"/>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="dynamic" match="1" />
        </t:response>
    </t:test>
    
   <t:test>
        <t:request>
            <GetDistributionListRequest xmlns="urn:zimbraAdmin">
                <dl by="id">${test_list4.id}</dl>
            </GetDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetDistributionListResponse/admin:dl/admin:dlm" match="${resource1.name}"/>
        </t:response>
    </t:test>
      	
</t:test_case>

<t:test_case testcaseid="DynamicDistribution_rule5" type="bhr">
    <t:objective>Create dynamic distribution list with memberURL </t:objective>
    <t:steps>
			1. Login using Admin.
			2. Create dynamic distribution list with member URL -> ldap:///??sub?(zimbraMailAlias=alias1.name)
			3. Verify predefined rule which will be applied to filter accounts.
	</t:steps>
	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    
	<!-- Login as the admin to get an auth token -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
           
    <t:property name="test_list5.name" value="testdl5.${TIME}.${COUNTER}@${domain1.name}"/>
       
    <t:test required="true">
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin"  dynamic="1">
                <name>${test_list5.name}</name>
                <a n="description">A test distribution list</a>
                <a n="zimbraIsACLGroup">FALSE</a>
                <a n="memberURL">ldap:///??sub?(zimbraMailAlias=${alias1.name})</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="test_list5.id"/>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="dynamic" match="1" />
        </t:response>
    </t:test>
    
   <t:test>
        <t:request>
            <GetDistributionListRequest xmlns="urn:zimbraAdmin">
                <dl by="id">${test_list5.id}</dl>
            </GetDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetDistributionListResponse/admin:dl/admin:dlm" match="${test_account2.name}"/>
        </t:response>
    </t:test>
      	
</t:test_case>

<t:test_case testcaseid="DynamicDistribution_rule6" type="bhr">
    <t:objective>Verify distribution list can not be created when zimbraIsACLGroup=TRUE for custom memberURL.</t:objective>
    <t:steps>
			1. Login using Admin.
			2. Verify error when when zimbraIsACLGroup=TRUE for custom memberURL.
			3. Verify error when memberURL=blank and zimbraIsACLGroup=FALSE
			4. memberURL=blank and zimbraIsACLGroup=TRUE result:DL will be created with default memberURL
	</t:steps>
	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    
	<!-- Login as the admin to get an auth token -->
    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin"  dynamic="1">
                <name>${test_list2.name}</name>
                <a n="description">A test distribution list</a>
                <a n="zimbraIsACLGroup">TRUE</a>
                <a n="memberURL">ldap:///??sub?(mail=*@${domain1.name})</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
           	<t:select path="//admin:CreateDistributionListResponse"/>
        </t:response>
    </t:test>
    
    <!-- Verify error when memberURL=blank and zimbraIsACLGroup=FALSE -->
     <t:test >
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin"  dynamic="1">
                <name>${test_list2.name}</name>
                <a n="description">A test distribution list</a>
                <a n="zimbraIsACLGroup">FALSE</a>
                <a n="memberURL"></a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
           	<t:select path= "//zimbra:Code" match ="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
    
    <!-- Verify memberURL=blank and zimbraIsACLGroup=TRUE result:DL will be created with default memberURL  -->
      <t:test >
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin"  dynamic="1">
                <name>${test_list2_1.name}</name>
                <a n="description">A test distribution list</a>
                <a n="zimbraIsACLGroup">TRUE</a>
                <a n="memberURL"></a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
           	<t:select path="//admin:CreateDistributionListResponse"/>
        </t:response>
    </t:test>
    
    	
</t:test_case>

</t:tests>