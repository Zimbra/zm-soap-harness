<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="domain" value="dl.example.com${COUNTER}${TIME}"/>
<t:property name="list1" value="test@${domain}"/>
<t:property name="list2" value="humor@${domain}"/>
<t:property name="list3" value="MultiUser@${domain}"/>
<t:property name="list4" value="DL4.${COUNTER}.${TIME}@${domain}"/>
<t:property name="list5" value="DL4.${COUNTER}.${TIME}@${domain}"/>
<t:property name="list6" value="MultiTypeUser@${domain}"/>

<t:property name="user1" value="user1@${domain}"/>
<t:property name="user2" value="user2@${domain}"/>
<t:property name="user3" value="user3@${domain}"/>
<t:property name="user4" value="user4@${domain}"/>
<t:property name="user5" value="user5@${domain}"/>
<t:property name="user6" value="user6@${domain}"/>
<t:property name="userA" value="userA@${domain}"/>
<t:property name="userA1" value="userA1@${domain}"/>
<t:property name="userA2" value="userA2@${domain}"/>
<t:property name="userC" value="userC@${domain}"/>
<t:property name="userL" value="userL@${domain}"/>
<t:property name="userM" value="userM@${domain}"/>

<t:property name="user.nonexisting" value="nonexisting@${domain}"/>

<t:property name="alias1.name" value="alias1.${TIME}.${COUNTER}@${domain}"/>
<t:property name="alias2.name" value="alias2.${TIME}.${COUNTER}@${domain}"/>
<t:property name="alias3.name" value="alias4.${TIME}.${COUNTER}@${domain}"/>

<t:property name="compose.subject" value="Subject of the message is testing bug 11398"/>
<t:property name="compose.content" value="Content in the message is testing bug 11398..."/>

<t:property name="appointment.subject" value="Subject of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.location" value="Location of meeting${TIME}.${COUNTER}"/>
<t:property name="appointment.content" value="Content of the message${TIME}.${COUNTER}"/>

<t:property name="Time1" value="${ICALTIME(+30m)}"/>
<t:property name="Time2" value="${ICALTIME(+1h)}"/>

<t:property name="spchar" value="!^*()_+"/>
<t:property name="sometext" value="abcd"/>
<t:property name="number" value="1234"/>
<t:property name="zero" value="0"/>
<t:property name="negative" value="-2"/>
<t:property name="decimal" value="2.4"/>
<t:property name="blank" value=""/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid = "Ping" type = "always">
    <t:objective>basic system check</t:objective>

	<t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
    
</t:test_case>
 

<t:test_case testcaseid = "acctSetup1_distributionlist_addmember" type = "always">
    <t:objective>Create test Distribution List </t:objective>
    <t:steps> 1. AuthRequest as admin
              2. Create a test domain
              3. Create two Distribution List
    </t:steps>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain}</name>
                <a n="zimbraNotes">Domain for distribution list testing</a>
            </CreateDomainRequest>
        </t:request>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${list1}</name>
                <a n="description">A test distribution list</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="list1.id"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${list2}</name>
                <a n="description">A test distribution list</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="list2.id"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "AddDistributionListMemberRequest1" type = "smoke">
    <t:objective> Add an already existing account to the distribution list </t:objective>
    <t:steps> 1. Create an account
              2. Add account to the distribution list
    </t:steps>

    <t:test id="addDistributionListMemberRequest1a">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${user1}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account1.id"/>
        </t:response>
    </t:test>  
           
    <t:test id="addDistributionListMemberRequest1b" depends="addDistributionListMemberRequest1a">
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${user1}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>
 
</t:test_case>


<t:test_case testcaseid = "AddDistributionListMemberRequest2" type = "functional" bugids="3564,7785">
    <t:objective> Try to again add same member(account) to the DL  </t:objective>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${user1}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "AddDistributionListMemberRequest3" type = "smoke">
    <t:objective> Add an alias to the distribution list with its account already added to the DL </t:objective>
    <t:steps> 1. Add an alias to the account
              2. Add alias to the distribution list
    </t:steps>

    <t:test depends="addDistributionListMemberRequest1b">
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account1.id}</id>
                <alias>${alias1.name}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test>  
       
    <t:test id="addDistributionListMemberRequest3a" depends="addDistributionListMemberRequest1a">
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${alias1.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>
   
</t:test_case>


<t:test_case testcaseid = "AddDistributionListMemberRequest4" type = "negative" bugids="3564,7785">
    <t:objective> Try to again add same member(alias) to the DL </t:objective>

    <t:test depends="addDistributionListMemberRequest3a">
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${alias1.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "AddDistributionListMemberRequest5" type = "functional">
    <t:objective> Add an alias to the distribution list with its account not added to the DL </t:objective>
    <t:steps> 1. Create an account
              2. Add alias to the account
              3. Add alias to the DL with account not in the DL
    </t:steps>

    <t:test id="addDistributionListMemberRequest5a">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${user2}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account2.id"/>
        </t:response>
    </t:test>  
     
    <t:test id="addDistributionListMemberRequest5b" depends="addDistributionListMemberRequest5a">
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account2.id}</id>
                <alias>${alias2.name}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test>  
      
    <t:test depends="addDistributionListMemberRequest5b">
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${alias2.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "AddDistributionListMemberRequest6" type ="negative">
    <t:objective> AddDistributionListMemberRequest with attribute "id" as (sometext/spchar/number/negative/decimal/blank/zero) </t:objective>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${sometext}</id>
                <dlm>${user1}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="account.NO_SUCH_DISTRIBUTION_LIST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${spchar}</id>
                <dlm>${user1}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="account.NO_SUCH_DISTRIBUTION_LIST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${number}</id>
                <dlm>${user1}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="account.NO_SUCH_DISTRIBUTION_LIST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${negative}</id>
                <dlm>${user1}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="account.NO_SUCH_DISTRIBUTION_LIST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${decimal}</id>
                <dlm>${user1}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="account.NO_SUCH_DISTRIBUTION_LIST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${blank}</id>
                <dlm>${user1}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="account.NO_SUCH_DISTRIBUTION_LIST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${zero}</id>
                <dlm>${user1}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="account.NO_SUCH_DISTRIBUTION_LIST"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "AddDistributionListMemberRequest7" type ="negative">
    <t:objective> Try to add member with dlm as (sometext/spchar/number/negative/decimal/blank/zero)
 </t:objective>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${sometext}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${spchar}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${number}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${negative}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${decimal}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${blank}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${zero}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "AddDistributionListMemberRequest8" type ="negative">
    <t:objective> AddDistributionListMemberRequest without "id" attribute  </t:objective>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <dlm>${user1}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "AddDistributionListMemberRequest9" type ="negative" bugids="7848">
    <t:objective> AddDistributionListMemberRequest without "dlm" attribute  </t:objective>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//soap:Fault/soap:Detail/zimbra:Error/zimbra:Code" match="service.INVALID_REQUEST"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "AddDistributionListMemberRequest10" type ="functional">
    <t:objective> AddDistributionListMemberRequest to add an account which is not yet created  </t:objective>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${user.nonexisting}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "AddDistributionListMemberRequest11" type = "functional" bugids="7785">
    <t:objective> Add multiple users to the distribution list </t:objective>
    <t:steps> 1. Create a DL.
              2. Add users to the DL. 
    </t:steps>

    <t:test >
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${list3}</name>
                <a n="description">A Multi Users distribution list</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="list3.id"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list3.id}</id>
                <dlm>${user4}</dlm>
                <dlm>${user5}</dlm>
            </AddDistributionListMemberRequest>

        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "AddDistributionListMemberRequest12" type = "functional" bugids="7889">
    <t:objective>AddDistributionListMemberRequest should check for loops on DL member addition</t:objective>
    <t:steps> 1. Create two DLs.
              2. Add DL1 to DL2
              3. Add DL2 to DL1 - error response should occur. 
    </t:steps>

    <t:test >
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${list4}</name>
                <a n="description">A Multi Users distribution list</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="list4.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${list5}</name>
                <a n="description">A Multi Users distribution list</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="list5.id"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list4.id}</id>
                <dlm>${list5}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list5.id}</id>
                <dlm>${list4}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "AddDistributionListMemberRequest13" type = "functional" bugids="11398">
    <t:objective>Verify that on sending mail /calendar appt to a dl having all types of Accounts(Active, Closed, Maintenance and Locked ) doesnot return a bounce mail.</t:objective>
    <t:steps> 1. Create a DL.
				   2. Create Accounts whose zimbraAccountStatus is Active, Closed, Maintenance and Locked.
				   3. Add users to the DL. 
				   4. Login into userA.
				   5. Send a mail  to the dl and check for bounce mail. <!-- Should not appear -->
				   6. Login into userA2.
				   7. Send an Appt to the dl and check for bounce mail.<!-- Should not appear -->
    </t:steps>

    <t:test >
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${list6}</name>
                <a n="description">A Multi Users distribution list having all types of Accounts(Active, Closed, Maintenance and Locked)</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="list6.id"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${userA}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraAccountStatus">active</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account7.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="userA.server"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${userA1}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraAccountStatus">active</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account8.id"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${userA2}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraAccountStatus">active</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account12.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="userA2.server"/>
        </t:response>
    </t:test>  

	 <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${userC}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraAccountStatus">closed</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account9.id"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${userL}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraAccountStatus">locked</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account10.id"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${userM}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraAccountStatus">maintenance</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account11.id"/>
        </t:response>
    </t:test>  

   <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list6.id}</id>
                <dlm>${userA1}</dlm>
                <dlm>${userC}</dlm>
                <dlm>${userL}</dlm>
                <dlm>${userM}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${userA.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
			<account by="name">${userA}</account>
			<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
				<e t="t" a='${list6}'/>
				<su> ${compose.subject} </su>
				<mp ct="text/plain">
				<content> ${compose.content} </content>
				</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse"/>
		</t:response>
	</t:test>

	<t:test >
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail">
				<query>in:inbox</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:c" attr="su" match="Undelivered Mail Returned to Sender"/>
			<t:select path="//mail:SearchResponse/mail:c/mail:m" attr="id" set="message1.id"/>
		</t:response>
	</t:test>

	<t:property name="server.restServlet" value="${userA.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<id>${message1.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
			<t:select attr="To" match="${list6}"/>
			<t:select attr="Subject" match="${compose.subject}"/> 
		</t:restServletResponse>
	</t:resttest>

	<t:property name="server.zimbraAccount" value="${userA2.server}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
			<account by="name">${userA2}</account>
			<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateAppointmentRequest xmlns="urn:zimbraMail">
                <m>
                    <inv method="REQUEST" type="event" fb="B" transp="O" allDay="0" name="${appointment.subject}" loc="${appointment.location}">
                        <at role="OPT" ptst="NE" rsvp="1" a="${list6}"/>
                        <s d="${Time1}"/>  
                        <e d="${Time2}"/>  
                        <or a="${userA2}"/>
                    </inv>
                    <e a="${list6}" t="t"/>
                    <mp content-type="text/plain">
                        <content>${appointment.content}</content>
                    </mp>
                    <su>${appointment.subject}</su>
                </m>
			</CreateAppointmentRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateAppointmentResponse"/>
        </t:response>
    </t:test>

	<t:test >
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail">
				<query>in:inbox</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:c" attr="su" match="Undelivered Mail Returned to Sender" />
			<t:select path="//mail:SearchResponse/mail:c/mail:m" attr="id" set="message2.id"/>
		</t:response>
	</t:test>

	<t:property name="server.restServlet" value="${userA.server}"/>

	<t:resttest>
		<t:restServletRequest>
			<id>${message2.id}</id>
		</t:restServletRequest>
		<t:restServletResponse>
			<t:select attr="StatusCode" match="200"/>
			<t:select attr="To" match="${list6}"/>
			<t:select attr="Subject" match="${appointment.subject}"/> 
		</t:restServletResponse>
	</t:resttest>

</t:test_case>

</t:tests>