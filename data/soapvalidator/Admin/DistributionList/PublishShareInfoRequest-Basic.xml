<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="share1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="share2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="share3.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.name" value="share4.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account5.name" value="share5.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account6.name" value="share6.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account7.name" value="share7.${TIME}.${COUNTER}@${defaultdomain.name}"/>


<t:property name="validpref.name" value="zimbraPrefSaveToSent"/>
<t:property name="pref.value.true" value="TRUE"/>
<t:property name="pref.value.false" value="FALSE"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="test_acct.server" value="NOT_DEFINED"/>
<t:property name="dl1.name" value="dl1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="dl2.name" value="dl2.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account2.folder.calendar.id" value="calshare.${TIME}"></t:property>
<t:property name="account2.folder.Briefcase.id" value="Briefcaseshare.${TIME}"></t:property>
<t:property name="account2.folder.inbox.id" value="Inboxshare.${TIME}"></t:property>
<t:property name="account3.folder.Task.id" value="Taskshare.${TIME}"></t:property>
<t:property name="account1.folder.document.id" value="act1DocShare.${TIME}"></t:property>

<t:property name="op.grant" value="grant"/>
<t:property name="op.ngrant" value="!grant"/>
<t:property name="op.read" value="read"/>
<t:property name="op.delete" value="delete"/>

<t:property name="grant.usr" value="usr"/>
<t:property name="grant.grp" value="grp"/>
<t:property name="grant.dom" value="dom"/>
<t:property name="grant.cos" value="cos"/>
<t:property name="grant.all" value="all"/>
<t:property name="grant.pub" value="pub"/>
<t:property name="grant.guest" value="guest"/>

<t:property name="rights.none" value=""/>
<t:property name="rights.read" value="r"/>
<t:property name="rights.write" value="w"/>
<t:property name="rights.insert" value="i"/>
<t:property name="rights.delete" value="d"/>
<t:property name="rights.administer" value="a"/>
<t:property name="rights.workflow" value="x"/>
<t:property name="rights.manager" value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}"/>


<t:test_case testcaseid="Ping" type="deprecated" >
    <t:objective>basic system check</t:objective>
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="acct_setup" type="deprecated">
    <t:objective>create test accounts</t:objective>

<!-- Login as the admin to get an auth token -->
   <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account1" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account1.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account2" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account2.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>

 	<t:test  id="create_test_account3" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account3.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>

 	<t:test  id="create_test_account4" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account4.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>        

	<t:test  id="create_test_account5" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account5.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account5.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account5.server"/>
        </t:response>
    </t:test>        
	
	<t:test  id="create_test_account6" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account6.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account6.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account6.server"/>
        </t:response>
    </t:test>        

	<t:test  id="create_test_account7" required="false" depends="admin_login">
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account7.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account7.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account7.server"/>
        </t:response>
    </t:test>        
    
	<!--  Create DistributionList -->
	<t:test>
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${dl1.name}</name>
                <a n="description">A Distribution List containing 2 users</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="dl1.id"/>
        </t:response>
    </t:test>

	<!--  Create DistributionList -->
	<t:test>
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${dl2.name}</name>
                <a n="description">A Distribution List containing 2 users</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="dl2.id"/>
        </t:response>
    </t:test>
	

	<!-- Add all Member to DL -->
    <t:test >
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${dl1.id}</id>
                <dlm>${account3.name}</dlm>
                <dlm>${account2.name}</dlm>
                <dlm>${account1.name}</dlm>                
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

	<!-- Add all Member to DL -->
    <t:test >
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${dl2.id}</id>
                <dlm>${account6.name}</dlm>
                <dlm>${account7.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

</t:test_case> 

<t:test_case testcaseid="PublishShareInfoRequest_Basic_01" type="deprecated" >
    <t:objective>Verify that PublishShareInfoRequest adds shareinfo to DL</t:objective>
     <t:steps>
     1.Login to Account2 
     2.Account2 shares calendar with Dl1
	 4.Admin sends PublishShareInfoRequest 
     3.Check if DL has shareinfo     
     </t:steps>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test id="auth_acct2" required="true" depends="create_test_account2">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>                
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
	
		
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.calendar}']" attr="id" set="account2.folder.calendar.id"/>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account2.folder.inbox.id"/>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account2.folder.Briefcase.id"/>			
		</t:response>
	</t:test>

    <!--  Share the Calendar  folder with Account1 -->
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account2.folder.calendar.id}">
					<grant gt="${grant.grp}" d="${dl1.name}" perm="${rights.manager}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <!-- Login as the admin to get an auth token -->
   <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test required="true" >
        <t:request>
            <PublishShareInfoRequest xmlns="urn:zimbraAdmin">
				<dl by="id">${dl1.id}</dl>
                <share action="add">
					<owner by="name">${account2.name}</owner>
                	<folder pathOrId="${account2.folder.calendar.id}"/>
				</share>
            </PublishShareInfoRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:PublishShareInfoResponse"/>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
            <GetDistributionListRequest xmlns="urn:zimbraAdmin">
                <dl by="name">${dl1.name}</dl>
            </GetDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path='//admin:GetDistributionListResponse/admin:dl/admin:a[@n="zimbraShareInfo"]' match=".*${account2.name}.*"/>
        </t:response>
    </t:test>
         
</t:test_case>

<t:test_case testcaseid="PublishShareInfoRequest_Basic_02" type="deprecated" >
    <t:objective>Verify that PublishShareInfoRequest with op=remove removes shareinfo from DL</t:objective>
     <t:steps>
     1.Login to Account2 
     2.Account2 shares calendar with Dl1
	 4.Admin sends PublishShareInfoRequest 
     3.Now check if DL has shareinf
	 4.Admin sends PubliecShareInfoRequest with remove operation. Check if shareinfo is removed     
     </t:steps>

	<t:property name="server.zimbraAccount" value="${account5.server}"/>

	<t:test id="auth_acct5" required="true" depends="create_test_account5">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account5.name}</account>
                <password>${defaultpassword.value}</password>                
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
	
		
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.calendar}']" attr="id" set="account5.folder.calendar.id"/>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account5.folder.inbox.id"/>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account5.folder.Briefcase.id"/>			
		</t:response>
	</t:test>

    <!--  Share the Calendar  folder with Account1 -->
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account5.folder.calendar.id}">
					<grant gt="${grant.grp}" d="${dl2.name}" perm="${rights.manager}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <!-- Login as the admin to get an auth token -->
   <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test required="true" >
        <t:request>
            <PublishShareInfoRequest xmlns="urn:zimbraAdmin">
				<dl by="id">${dl2.id}</dl>
                <share action="add">
					<owner by="name">${account5.name}</owner>
                	<folder pathOrId="${account5.folder.calendar.id}"/>
				</share>
            </PublishShareInfoRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:PublishShareInfoResponse"/>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
            <GetDistributionListRequest xmlns="urn:zimbraAdmin">
                <dl by="name">${dl2.name}</dl>
            </GetDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path='//admin:GetDistributionListResponse/admin:dl/admin:a[@n="zimbraShareInfo"]' match=".*${account5.name}.*"/>
        </t:response>
    </t:test>

	<t:test required="true" >
        <t:request>
            <PublishShareInfoRequest xmlns="urn:zimbraAdmin">
				<dl by="id">${dl2.id}</dl>
                <share action="remove">
					<owner by="name">${account5.name}</owner>
                	<folder pathOrId="${account5.folder.calendar.id}"/>
				</share>
            </PublishShareInfoRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:PublishShareInfoResponse"/>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
            <GetDistributionListRequest xmlns="urn:zimbraAdmin">
                <dl by="name">${dl2.name}</dl>
            </GetDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path='//admin:GetDistributionListResponse/admin:dl/admin:a[@n="zimbraShareInfo"]' emptyset="1"/>
        </t:response>
    </t:test>
         
</t:test_case>
</t:tests>