<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account.password" value="test123"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="test_acct1.server" value="NOT_DEFINED"/>


<t:test_case testcaseid="Account_setup" type="always" >
    <t:objective>Basic system check and create test accounts. </t:objective>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${account.password}</password>         
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>     
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>           
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${account.password}</password>         
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>     
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>           
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="ReloadAccountRequest_01" areas="network" type="smoke" >
    <t:objective>Send ReloadAccountRequest to reload account with changes made</t:objective>
    <t:steps>
    1. Login to Admin
    2. Modify account objects
    3. Send ReloadAccountRequest to reload account with changes made.
    </t:steps>
    
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
 	<t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test >
		<t:request>
			<ModifyAccountRequest xmlns="urn:zimbraAdmin">
	      		<id>${account2.id}</id>
		        <a n="zimbraFeatureCalendarEnabled">TRUE</a>
		        <a n="zimbraPasswordModifiedTime">20050529053842Z</a>
		        <a n="zimbraPrefMailInitialSearch">in:inbox</a>
		        <a n="zimbraPop3Enabled">TRUE</a>
		        <a n="zimbraImapEnabled">TRUE</a>
		        <a n="zimbraContactMaxNumEntries">0</a>  
		        <a n="zimbraFeatureContactsEnabled">TRUE</a>
		        <a n="zimbraPrefIncludeSpamInSearch">FALSE</a>
		        <a n="zimbraPrefMailItemsPerPage">25</a>
		        <a n="zimbraPasswordMinAge">0</a>
		        <a n="zimbraPrefContactsPerPage">25</a>
		        <a n="zimbraAccountStatus">active</a>
		        <a n="zimbraMailSpamLifetime">7d</a>
		        <a n="zimbraPrefAutoAddAddressEnabled">FALSE</a>
		        <a n="zimbraPrefMailSignatureStyle">internet</a>
		        <a n="zimbraFeatureConversationsEnabled">TRUE</a>
    		</ModifyAccountRequest>
		</t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <ReloadAccountRequest xmlns="urn:zimbraAdmin">
                <account name="${account1.name}"/>
            </ReloadAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ReloadAccountResponse"/>
        </t:response>
    </t:test>
 
</t:test_case>

<t:test_case testcaseid="ReloadAccountRequest_02" areas="network" type="negative" >
    <t:objective>Send ReloadAccountRequest with blank email address. - service.FAILURE</t:objective>
    
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
 	<t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test >
		<t:request>
			<ModifyAccountRequest xmlns="urn:zimbraAdmin">
	      		<id>${account2.id}</id>
		        <a n="zimbraAccountStatus">active</a>
		        <a n="zimbraMailSpamLifetime">7d</a>
		        <a n="zimbraPrefAutoAddAddressEnabled">FALSE</a>
		        <a n="zimbraPrefMailSignatureStyle">internet</a>
		        <a n="zimbraFeatureConversationsEnabled">TRUE</a>
    		</ModifyAccountRequest>
		</t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <ReloadAccountRequest xmlns="urn:zimbraAdmin">
                <account name=""/>
            </ReloadAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.FAILURE"/>

        </t:response>
    </t:test>
 
</t:test_case>

<t:test_case testcaseid="ReloadAccountRequest_03" areas="network" type="negative" >
    <t:objective>Send ReloadAccountRequest with invalid email address as alphabets. - service.FAILURE</t:objective>
    
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
 	<t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test >
		<t:request>
			<ModifyAccountRequest xmlns="urn:zimbraAdmin">
	      		<id>${account2.id}</id>
		        <a n="zimbraAccountStatus">active</a>
		        <a n="zimbraMailSpamLifetime">7d</a>
		        <a n="zimbraPrefAutoAddAddressEnabled">FALSE</a>
		        <a n="zimbraPrefMailSignatureStyle">internet</a>
		        <a n="zimbraFeatureConversationsEnabled">TRUE</a>
    		</ModifyAccountRequest>
		</t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <ReloadAccountRequest xmlns="urn:zimbraAdmin">
                <account name="invalid.email"/>
            </ReloadAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.FAILURE"/>

        </t:response>
    </t:test>
 
</t:test_case>

<t:test_case testcaseid="ReloadAccountRequest_03" areas="network" type="negative" >
    <t:objective>smoke test for ReloadAccountRequest with invalid address as negative number. - service.FAILURE</t:objective>
    
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
 	<t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test >
		<t:request>
			<ModifyAccountRequest xmlns="urn:zimbraAdmin">
	      		<id>${account2.id}</id>
		        <a n="zimbraAccountStatus">active</a>
		        <a n="zimbraMailSpamLifetime">7d</a>
		        <a n="zimbraPrefAutoAddAddressEnabled">FALSE</a>
		        <a n="zimbraPrefMailSignatureStyle">internet</a>
		        <a n="zimbraFeatureConversationsEnabled">TRUE</a>
    		</ModifyAccountRequest>
		</t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <ReloadAccountRequest xmlns="urn:zimbraAdmin">
                <account name="-111111"/>
            </ReloadAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.FAILURE"/>

        </t:response>
    </t:test>
 
</t:test_case>

</t:tests>