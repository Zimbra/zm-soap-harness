<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_acct1.server" value="NOT_DEFINED"/>
<t:property name="test_acct2.server" value="NOT_DEFINED"/>
<t:property name="test_acct2a.server" value="NOT_DEFINED"/>
<t:property name="test_acct3.server" value="NOT_DEFINED"/>
<t:property name="test_acct3a.server" value="NOT_DEFINED"/>
<t:property name="test_acct4.server" value="NOT_DEFINED"/>

<t:property name="test_account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account1.password" value="${defaultpassword.value}" />
<t:property name="test_account2.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account2.newname" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account3.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account3.newname" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account4.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />

<t:property name="account.name" value="testcos${TIME}${COUNTER}" />
<t:property name="account1.name" value="testcos1${TIME}${COUNTER}" />
<t:property name="account2.name" value="testcos1${TIME}${COUNTER}" />
<t:property name="account1.id" value="11" />
<t:property name="account2.id" value="12" />

<t:property name="spchar" value=":''&lt;//\\" />
<t:property name="starting_with_zero" value="0099" />
<t:property name="sometext" value="abcd" />

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:test_case testcaseid="Ping" type="always">
   <t:objective>basic system check</t:objective>
   
    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin" />
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse" />
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="admin_auth_account_get" type="always">
    <t:objective>login as admin and create a test account</t:objective>
	<t:steps> 1. Login as an admin
              2. create a test account
    </t:steps>
	
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account1.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account.id" />
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="name" set="account.name" />
          	<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
		</t:response>
	</t:test>
	
</t:test_case>


<t:test_case testcaseid="GetAccountRequest1" type="bhr" areas="dev_sanity">
	<t:objective> GetAccountRequest with valid value of "id" </t:objective>
		<t:test>
			<t:request>
				<GetAccountRequest xmlns="urn:zimbraAdmin">
					<account by="id">${account.id}</account>
				</GetAccountRequest>
			</t:request>
			<t:response>
				<t:select path="//admin:GetAccountResponse/admin:account" />
			</t:response>
		</t:test>
		
</t:test_case>


<t:test_case testcaseid="GetAccountRequest2" type="bhr">
	<t:objective> GetAccountRequest with valid value of "name" </t:objective>
		
	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="name">${account.name}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse/admin:account" />
		</t:response>
	</t:test>
		
</t:test_case>
	
	
<t:test_case testcaseid="GetAccountRequest3" type="bhr">
	<t:objective> GetAccountRequest by "id" and applyCos=1  </t:objective>
	
	<t:test>
		<t:request>
		    <GetAccountRequest xmlns="urn:zimbraAdmin" applyCos="1">
				<account by="id">${account.id}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraFeatureGalEnabled']" match="TRUE|FALSE" />
		</t:response>
	</t:test>
	
</t:test_case>


<t:test_case testcaseid="GetAccountRequest4" type="bhr" areas="dev_sanity">
	<t:objective> GetAccountRequest by "id" and applyCos=0 </t:objective>
 
 	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin" applyCos="0">
				<account by="id">${account.id}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse/admin:account" />
		</t:response>
	</t:test>
	
</t:test_case>


<t:test_case testcaseid="GetAccountRequest5" bugids="2216" type="functional">
	<t:objective> GetAccountRequest by "id" and with value of applyCos as invalid/negative/char/spchar/starting_with_zero </t:objective>

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin" applyCos="3">
				<account by="id">${account.id}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
		</t:response>
	</t:test>

	<t:test>
 		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin" applyCos="-1">
				<account by="id">${account.id}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
		</t:response>
		
	</t:test>
		
	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin" applyCos="abcd">
				<account by="id">${account.id}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
				<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin" applyCos="${spchar}">
				<account by="id">${account.id}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin" applyCos="${starting_with_zero}">
				<account by="id">${account.id}</account>
			</GetAccountRequest>
		</t:request>
			<t:response>
				<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
			</t:response>
		</t:test>
		
</t:test_case>
	
	
<t:test_case testcaseid="GetAccountRequest6" type="bhr">
	<t:objective> GetAccountRequest by "name" and value of applyCos=1 </t:objective>

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin" applyCos="1">
				<account by="name">${account.name}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse/admin:account/admin:a[@n='zimbraFeatureGalEnabled']" match="TRUE|FALSE" />
		</t:response>
	</t:test>
	
</t:test_case>

	
<t:test_case testcaseid="GetAccountRequest7" type="bhr">
	<t:objective> GetAccountRequest by "name" and value of applyCos=0 </t:objective>
	
	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin" applyCos="0">
				<account by="name">${account.name}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse/admin:account" />
		</t:response>
	</t:test>
		
</t:test_case>

	
<t:test_case testcaseid="GetAccountRequest8" bugids="2216" type="functional">
	<t:objective> GetAccountRequest by "name" and value of cos as invalid/negative/char/spchar/starting_with_zero </t:objective>

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin" applyCos="3">
				<account by="name">${account.name}</account>
			</GetAccountRequest>
		</t:request>
			<t:response>
				<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
			</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin" applyCos="-1">
				<account by="name">${account.name}</account>
			</GetAccountRequest>
		</t:request>
 		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin" applyCos="abcd">
				<account by="name">${account.name}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin" applyCos="${spchar}">
				<account by="name">${account.name}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin" applyCos="${starting_with_zero}">
				<account by="name">${account.name}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
		</t:response>
	</t:test>
	
</t:test_case>


<t:test_case testcaseid="GetAccountRequest9" type="functional">
	<t:objective> GetAccountRequest by id/name and with leading spaces in id/name  </t:objective>

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="         id">${account.id}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="          name">${account.name}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
		</t:response>
	</t:test>
	
</t:test_case>


<t:test_case testcaseid="GetAccountRequest10" type="functional">
	<t:objective> GetAccountRequest by id/name and with trailing spaces in id/name  </t:objective>

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="id            ">${account.id}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="name              ">${account.name}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
		</t:response>
	</t:test>
	
</t:test_case>


<t:test_case testcaseid="GetAccountRequest11" type="functional">
	<t:objective> GetAccountRequest by id/name and with both leading and trailing spaces in id/name  </t:objective>

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="           id            ">${account.id}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
  			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="         name              ">${account.name}</account>
			</GetAccountRequest>
	    </t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
		</t:response>
	</t:test>
	
</t:test_case>


<t:test_case testcaseid="GetAccountRequest12" type="functional">
	<t:objective> GetAccountRequest with value of atrribute "by" as sometext (i.e invalid)  </t:objective>

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="${sometext}">${account.name}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
		</t:response>
	</t:test>
	
</t:test_case>

<t:test_case testcaseid="GetAccountRequest13" type="functional">
	<t:objective> GetAccountRequest by name of deleted account </t:objective>
	<t:steps> 1. create an account
              2. delete it
              3. get account by id of deleted account
    </t:steps>

	<t:test id="getaccountrequest13a">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>test.${TIME}.${COUNTER}@${defaultdomain.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account.id" />
                     <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct.server"/>
		</t:response>
	</t:test>
	
	<t:property name="server.zimbraAdmin" value="${test_acct.server}"/>
	<t:test id="getaccountrequest13b" depends="getaccountrequest13a">
		<t:request>
			<DeleteAccountRequest xmlns="urn:zimbraAdmin">
				<id>${test_account.id}</id>
			</DeleteAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:DeleteAccountResponse" />
		</t:response>
	</t:test>
	
	<t:test id="getaccountrequest13c" depends="getaccountrequest13b">
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="id">${test_account.id}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^account.NO_SUCH_ACCOUNT" />
		</t:response>
	</t:test>
	
</t:test_case>


<t:test_case testcaseid="GetAccountRequest14" type="functional" bugids="5171">
	<t:objective> Get account by name of deleted account </t:objective>
	<t:steps> 1. create an account
              2. delete it
              3. get account by name of deleted account
    </t:steps>
	
	<t:test id="getaccountrequest14a">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>test.${TIME}.${COUNTER}@${defaultdomain.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="name" set="test_account1.name" />
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account1.id" />
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
		</t:response>
	</t:test>
	
    <t:property name="server.zimbraAdmin" value="${test_acct1.server}"/>
	
	<t:test id="getaccountrequest14b" depends="getaccountrequest14a">
		<t:request>
			<DeleteAccountRequest xmlns="urn:zimbraAdmin">
				<id>${test_account1.id}</id>
			</DeleteAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:DeleteAccountResponse" />
		</t:response>
	</t:test>
	
	<t:test id="getaccountrequest14c" depends="getaccountrequest14b">
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="name">${test_account1.name}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^account.NO_SUCH_ACCOUNT" />
		</t:response>
	</t:test>
	
</t:test_case>


<t:test_case testcaseid="GetAccountRequest15" type="sanity">
	<t:objective> Get account by id of old account </t:objective>
	<t:steps> 1. create an account.
              2. rename it.
              3. get account by name of old account id.
    </t:steps>

	<t:test id="getaccountrequest15a">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>test.${TIME}.${COUNTER}@${defaultdomain.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account2.id" />
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
		</t:response>
	</t:test>
    <t:property name="server.zimbraAdmin" value="${test_acct2.server}"/>

	<t:test id="getaccountrequest15b" depends="getaccountrequest15a">
		<t:request>
			<RenameAccountRequest xmlns="urn:zimbraAdmin">
				<id>${test_account2.id}</id>
				<newName>${test_account2.newname}</newName>
			</RenameAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:RenameAccountResponse" />
		</t:response>
	</t:test>

	<t:test id="getaccountrequest15c" depends="getaccountrequest15b">
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="name">${test_account2.name}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^account.NO_SUCH_ACCOUNT$" />
		</t:response>
	</t:test>
	
</t:test_case>


<t:test_case testcaseid="GetAccountRequest16" type="sanity">
	<t:objective> Get account by giving the New name of the renamed account </t:objective>
	<t:steps> 1. create an account.
              2. rename it.
              3. get account by name of new account name.
    </t:steps>

	<t:test id="getaccountrequest16a">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>test.${TIME}.${COUNTER}@${defaultdomain.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account3.id" />
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
		</t:response>
	</t:test>
	    <t:property name="server.zimbraAdmin" value="${test_acct3.server}"/>
	
	<t:test id="getaccountrequest16b" depends="getaccountrequest16a">
		<t:request>
			<RenameAccountRequest xmlns="urn:zimbraAdmin">
				<id>${test_account3.id}</id>
				<newName>${test_account3.newname}</newName>
			</RenameAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:RenameAccountResponse/admin:account" attr="name" set="test_account4.name" />
			<t:select path="//admin:RenameAccountResponse/admin:account" attr="id" set="test_account4.id" />
		</t:response>
	</t:test>
	
	<t:test id="getaccountrequest16c" depends="getaccountrequest16b">
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="name">${test_account4.name}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse/admin:account" />
		</t:response>
	</t:test>
	
</t:test_case>


<t:test_case testcaseid="GetAccountRequest17" type="functional">
	<t:objective> GetAccountRequest by id of one account and name of the other account  </t:objective>
	<t:property name="server.zimbraAdmin" value="${test_acct2.server}"/>
	
	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="id">${test_account.id}</account>
				<account by="name">${test_account2.name}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^account.NO_SUCH_ACCOUNT" />
		</t:response>
	</t:test>
	
</t:test_case>


<t:test_case testcaseid="GetAccountRequest18" type="functional">
	<t:objective> GetAccountRequest by multiple id's </t:objective>

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="id">${account.id}</account>
				<account by="id">${test_account4.id}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse/admin:account" attr="id" match="${account.id}"/>			
		</t:response>
	</t:test>
	
</t:test_case>


<t:test_case testcaseid="GetAccountRequest19" type="functional">
	<t:objective> GetAccountRequest by multiple names </t:objective>
	
	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="name">${account.name}</account>
				<account by="name">${test_account4.name}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse/admin:account" attr="name" match="${account.name}"/>			
		</t:response>
	</t:test>
	
</t:test_case>


</t:tests>