<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_acct1.server" value="NOT_DEFINED"/>
<t:property name="test_acct2.server" value="NOT_DEFINED"/>
<t:property name="test_acct3.server" value="NOT_DEFINED"/>
<t:property name="test_acct4.server" value="NOT_DEFINED"/>
<t:property name="test_acct5.server" value="NOT_DEFINED"/>
<t:property name="test_acct6.server" value="NOT_DEFINED"/>
<t:property name="test_acct7.server" value="NOT_DEFINED"/>
<t:property name="test_acct8.server" value="NOT_DEFINED"/>
<t:property name="test_acct9.server" value="NOT_DEFINED"/>
<t:property name="test_acct10.server" value="NOT_DEFINED"/>

<t:property name="test_account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account3.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account4.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account5.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account6.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account6.newname" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account7.name" value = "       "/>
<t:property name="test_account8.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account9.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account10.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="passwspaces" value="                         "/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    	
    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
	    <t:response>
	        <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="admin_auth_account_delete" type="always" >
    <t:objective>login as the admin</t:objective>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="DeleteAccountRequest1" type="smoke" areas="dev_sanity">
    <t:objective>Delete a valid account</t:objective>
	<Steps> 1. Create a valid account.
			2. Delete the account.
	</Steps>
	
    <!-- Create an account  -->
    <t:test id="deleteAccountRequest1a">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <userPassword>${defaultpassword.value}</userPassword>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>	 
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
    <!-- Delete a valid account -->
    <t:test depends="deleteAccountRequest1a">
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${test_account1.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteAccountResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="DeleteAccountRequest2" type="negative" >
    <t:objective>Delete two accounts simultaneously (cann't delete simultaneously two accounts)</t:objective>
    <Steps> 1. Create 2 accounts.
			2. Delete the 2 accounts.
    </Steps>

    <t:test id="deleteAccountRequest2a">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <userPassword>${defaultpassword.value}</userPassword>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>	 
        </t:response>
    </t:test>

    <t:test id="deleteAccountRequest2b">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account3.name}</name>
                <userPassword>${defaultpassword.value}</userPassword>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account3.id"/>	
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/> 
        </t:response>
    </t:test>

    <t:test depends="deleteAccountRequest2a,deleteAccountRequest2b">
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${test_account2.id},${test_account3.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_ACCOUNT"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="DeleteAccountRequest3" type="smoke" >
    <t:objective>Delete an account ID that is already deleted</t:objective>
	<Steps>	1. Create a account
			2. Delete the account
			3. Again try deleting the same account.
	</Steps>
	
    <!--  Create an account  -->
    <t:test id="deleteAccountRequest3a">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account4.name}</name>
                <userPassword>${defaultpassword.value}</userPassword>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct4.server"/>
        </t:response>
    </t:test>

    <!--  Delete the account  -->
    <t:test id="deleteAccountRequest3b" depends="deleteAccountRequest3a">
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${test_account4.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteAccountResponse"/>
        </t:response>
    </t:test>

    <!--  Delete the account  -->
    <t:test depends="deleteAccountRequest3b">
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${test_account4.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_ACCOUNT"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="DeleteAccountRequest4" type="functional" >
    <t:objective>Delete non-existing account</t:objective>

    <t:test>
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>fdfd220090dfdf90909090</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <DeleteAccountResponse>
                <t:select path= "//zimbra:Code" match="^service.NO_SUCH_ACCOUNT"/>
            </DeleteAccountResponse>
        </t:response>
    </t:test >

</t:test_case>


<t:test_case testcaseid="DeleteAccountRequest5" type="negative" >
    <t:objective>Delete an account with some text in id</t:objective>

    <t:test>
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>some different text  </id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_ACCOUNT"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="DeleteAccountRequest6" type="feature" >
    <t:objective>Delete a renamed account </t:objective>
    <Steps>	1. Create a account.
			2. Rename the account.
			3. Delete the account.
    </Steps>

    <!-- Create an account  -->
    <t:test id="deleteAccountRequest6a">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account5.name}</name>
                <userPassword>${defaultpassword.value}</userPassword>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account5.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct5.server"/>
        </t:response>
    </t:test>

    <!-- rename the account -->

    <t:test id = "deleteAccountRequest6b" depends = "deleteAccountRequest6a">

        <t:request>
            <RenameAccountRequest xmlns="urn:zimbraAdmin">
                <id>${test_account5.id}</id>
                <newName>${test_account6.newname}</newName>
            </RenameAccountRequest >
        </t:request>
        <t:response>
            <t:select path="//admin:RenameAccountResponse/admin:account" attr="id"  set="test_account6.id"/>
        </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct5.server}"/>
    <!-- Delete the account -->
    <t:test depends="deleteAccountRequest6b">
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${test_account6.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
                <t:select path="//admin:DeleteAccountResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="DeleteAccountRequest7" type="negative" >
    <t:objective>Delete an account with spaces/Special Character/Zero/Negative numbers/Leading Spaces / Trailling Spaces / Space before and after the id </t:objective>

	<!-- Spaces -->
    <t:test>
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>"      "</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_ACCOUNT"/>
        </t:response>
    </t:test>

	<!-- Special Characters -->
    <t:test>
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>"@#$%"</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_ACCOUNT"/>
        </t:response>
    </t:test>
    
    <!-- Zero -->
    <t:test>
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>000</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_ACCOUNT"/>
        </t:response>
    </t:test>
    
    <!-- Negative Number -->
    <t:test>
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>-1627</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_ACCOUNT"/>
        </t:response>
    </t:test>
    
    <!-- Leading Spaces  -->
    <t:test>
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>"      abcd"</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_ACCOUNT"/>
        </t:response>
    </t:test>
    
    <!-- Trailing Spaces  -->
    <t:test>
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>"abcd     "</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_ACCOUNT"/>
        </t:response>
    </t:test>
    
    <!-- Leading & trailing Spaces -->
    <t:test>
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>"    abcd     "</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_ACCOUNT"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="DeleteAccountRequest8" type="functional" >
    <t:objective>Delete account by parsing invalid attribute in DeleteAccountRequest</t:objective>

    <t:test>
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <DeleteAccountResponse>
                <t:select path= "//zimbra:Code" match="^service.NO_SUCH_ACCOUNT"/>
            </DeleteAccountResponse>
        </t:response>
    </t:test >

</t:test_case>


</t:tests>
