<t:tests xmlns:t = "urn:zimbraTestHarness">

<t:property name = "test_account1.name" value = "test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="admin.account3.without_domain_name" value="admin.${TIME}.${COUNTER}"/>
<t:property name="admin.account4.without_domain_name" value="admin.${TIME}.${COUNTER}"/>
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:test_case testcaseid="Ping" type="always" >
<t:objective>basic system check</t:objective>

	<t:test required="true">
		<t:request>
			<PingRequest xmlns="urn:zimbraAdmin"/>
		</t:request>
		<t:response>
			<t:select path="//admin:PingResponse"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="acct_setup" type="always" >
 <t:objective>login as the admin</t:objective>

	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
			
		</t:response>
	</t:test>
	
	     <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${admin.account4.without_domain_name}@${defaultdomain.name}</name>
                <password>${admin.password}</password>
                <a n="zimbraIsDelegatedAdminAccount">${globals.true}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="admin_del.Id"/>
        </t:response>
    </t:test>
    
     <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${admin.account3.without_domain_name}@${defaultdomain.name}</name>
                <password>${admin.password}</password>
                <a n="zimbraIsAdminAccount">${globals.true}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="admin.Id"/>
        </t:response>
    </t:test>



	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account1.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_accountid.id"/>
		</t:response>
	</t:test>  

</t:test_case>






<t:test_case testcaseid = "ModifyAccountAuthLifeToken" type = "smoke" bugids="39720">
    <t:objective>Do not allow auth token lifetime to be zero</t:objective>
    <t:steps> 
          1) Verify if admin/delegated admin/regular user can not have auth lifetime token to be 0.
     </t:steps>
     
      <t:test>
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${admin.Id}</id>
                <a n = "zimbraAuthTokenLifetime">0</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//zimbra:Code" match = "service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
    

    <t:test>
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_accountid.id}</id>
                <a n = "zimbraAuthTokenLifetime">0</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//zimbra:Code" match = "service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
    
     <t:test>
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${admin_del.Id}</id>
                <a n = "zimbraAuthTokenLifetime">0</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//zimbra:Code" match = "service.INVALID_REQUEST"/>
        </t:response>
    </t:test>
    

   
</t:test_case>



</t:tests>