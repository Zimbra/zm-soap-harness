<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="foreignPrincipal.Attr.name" value="zimbraForeignPrincipal"/>


<t:property name="account1.name" value="fp.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.prefix" value="prefix${TIME}"/>
<t:property name="account1.foreignPrincipal" value="test:${TIME}.${COUNTER}"/>
    
<t:property name="account2.name" value="fp.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.prefix" value="prefix${TIME}"/>
<t:property name="account2.foreignPrincipal" value="test:${TIME}.${COUNTER}"/>
    


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>


</t:test_case>


<t:test_case testcaseid="ForeignPrincipal_AccountBackup_01" type="sanity" areas="backup" bugids="8361">
    <t:objective>Backup (full) and restore an account with a Foreign Principal.  Verify the Foreign Principal value is backed up and restored</t:objective>
    <t:steps>
    1. Create an account with a Foreign Principal
    2. Backup the account
    3. Delete the account
    4. Restore the account
    5. Verify the Foreign Principal is still set
    </t:steps>

    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraForeignPrincipal">${account1.foreignPrincipal}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>  

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="foreignPrincipal">${account1.foreignPrincipal}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse/admin:account" attr="id"  match="${account1.id}"/>
		</t:response>
	</t:test>

	<!-- workaround to create the mailbox -->
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
    

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:property name="account.name" value="${account1.name}"/>
	<t:property name="account.id" value="${account1.id}"/>
    <t:include filename="BackupWorkflowFullDeleteRestore.inc"/>

    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
			<SearchDirectoryRequest xmlns="urn:zimbraAdmin" attrs="zimbraForeignPrincipal">
			  <query>(mail=*${account1.name}*)</query>
			</SearchDirectoryRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:SearchDirectoryResponse/admin:account"/>
        </t:response>
    </t:test>  

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="foreignPrincipal">${account1.foreignPrincipal}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse/admin:account"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="ForeignPrincipal_AccountBackup_02" type="sanity" areas="backup" bugids="8361">
    <t:objective>Backup (incremental) and restore an account with a Foreign Principal.  Verify the Foreign Principal value is backed up and restored</t:objective>
    <t:steps>
    1. Create an account without a Foreign Principal
    2. Backup the account
    3. Add a ForeignPrincipal to the account
    4. Do incremental backup
    3. Delete the account
    4. Restore the account (no redo logs)
    5. Verify the Foreign Principal is still set
    </t:steps>

    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  

	<!-- workaround to create the mailbox -->
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>
    

	<t:property name="account.name" value="${account2.name}"/>
    <t:include filename="BackupRequestFullBasic.inc"/>
	<t:property name="backup2.label1.id" value="${backup.label}"/>

    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${account2.id}</id>
                <a n="zimbraForeignPrincipal">${account2.foreignPrincipal}</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account" attr="id" match="${account2.id}"/>
            <t:select path = "//admin:ModifyAccountResponse/admin:account/admin:a[@n='zimbraForeignPrincipal']" match="${account2.foreignPrincipal}"/>
        </t:response>
    </t:test>


	<t:property name="account.name" value="${account2.name}"/>
	<t:property name="account.id" value="${account2.id}"/>
    <t:include filename="BackupWorkflowIncrementalDeleteRestore.inc"/>

    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
			<SearchDirectoryRequest xmlns="urn:zimbraAdmin" attrs="zimbraForeignPrincipal">
			  <query>(mail=*${account2.name}*)</query>
			</SearchDirectoryRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:SearchDirectoryResponse/admin:account"/>
        </t:response>
    </t:test>  

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="foreignPrincipal">${account2.foreignPrincipal}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse/admin:account"/>
		</t:response>
	</t:test>

</t:test_case>



</t:tests>

