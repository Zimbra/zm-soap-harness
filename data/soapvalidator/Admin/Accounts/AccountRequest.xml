<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="test_account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account2.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account3.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account4.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account4.newname" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account5.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account6.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account7.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account8.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account9.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account10.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account11.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account12.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account13.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account14.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />

<t:property name = "password.new" value = "test1234"/>
<t:property name="alias.name" value="Alias.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="alias1.name" value="Alias.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:test_case testcaseid="CreateAccountRequest_01" type="bhr">
    <t:objective>Sanity test for CreateAccountRequest</t:objective>
	
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account1.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" />			                 
		</t:response>
	</t:test>
	
</t:test_case>


<t:test_case testcaseid="GetAccountRequest_01" type="bhr" >
	<t:objective>Sanity test for GetAccountRequest</t:objective>
	
	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account2.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account2.id"/>			                 
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="id">${account2.id}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse/admin:account" />
		</t:response>
	</t:test>
		
</t:test_case>

<t:test_case testcaseid="ModifyAccountRequest_01" type="bhr" >
	<t:objective>Sanity test for ModifyAccountRequest</t:objective>
	
	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account3.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account3.id"/>			                 
		</t:response>
	</t:test>
		
	<t:test>
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${account3.id}</id>
                <a n = "zimbraPrefGalAutoCompleteEnabled">TRUE</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
		
</t:test_case>

<t:test_case testcaseid="RenameAccountRequest_01" type="bhr" >
	<t:objective>Sanity test for RenameAccountRequest</t:objective>
	
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account4.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account4.id"/>			                 
		</t:response>
	</t:test>
		
	<t:test>
        <t:request>
            <RenameAccountRequest xmlns="urn:zimbraAdmin">
                <id>${account4.id}</id>
                <newName>${test_account4.newname}</newName>
            </RenameAccountRequest >
        </t:request>
        <t:response>
            <t:select path="//admin:RenameAccountResponse"/>
        </t:response>
    </t:test>
		
</t:test_case>


<t:test_case testcaseid="DeleteAccountRequest_01" type="bhr" >
	<t:objective>Sanity test for DeleteAccountRequest</t:objective>
	
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account5.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account5.id"/>			                 
		</t:response>
	</t:test>
		
	 <!-- Delete a valid account -->
    <t:test >
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${account5.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteAccountResponse"/>
        </t:response>
    </t:test>
		
</t:test_case>

<t:test_case testcaseid="CheckPasswordStrengthRequest_01" type="bhr" >
	<t:objective>Sanity test for CheckPasswordStrengthRequest</t:objective>
	
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account6.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account6.id"/>			                 
		</t:response>
	</t:test>
		
	<t:test>
        <t:request>
            <CheckPasswordStrengthRequest  xmlns="urn:zimbraAdmin">
                <id>${account6.id}</id>
                <password>${defaultpassword.value}</password>
            </CheckPasswordStrengthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CheckPasswordStrengthResponse"/>
        </t:response>
    </t:test>
		
</t:test_case>

<t:test_case testcaseid="SetPasswordRequest_01" type="bhr" >
	<t:objective>Sanity test for SetPasswordRequest</t:objective>
	
	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account7.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account7.id"/>			                 
		</t:response>
	</t:test>
	
    <t:test xmlns="urn:zimbraAdmin">
        <t:request>
            <SetPasswordRequest>
                <id>${account7.id}</id>
                <newPassword>${password.new}</newPassword>
            </SetPasswordRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:SetPasswordResponse"/>
        </t:response>
    </t:test>
		
</t:test_case>

<t:test_case testcaseid="AddAccountAliasRequest_01" type="bhr" >
	<t:objective>Sanity test for AddAccountAliasRequest</t:objective>
	
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account8.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account8.id"/>			                 
		</t:response>
	</t:test>
	
    <!-- Add an alias to the account -->
    <t:test>
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${account8.id}</id>
                <alias>${alias.name}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test>
		
</t:test_case>

<t:test_case testcaseid="RemoveAccountAliasRequest_01" type="bhr" >
	<t:objective>Sanity test for RemoveAccountAliasRequest</t:objective>
	
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account9.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account9.id"/>			                 
		</t:response>
	</t:test>
	
    <!-- Add an alias to the account -->
    <t:test>
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${account9.id}</id>
                <alias>${alias1.name}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test>	
		
		  
   <!-- Remove alias from the account -->
    <t:test>
        <t:request>
            <RemoveAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${account9.id}</id>
                <alias>${alias1.name}</alias>
            </RemoveAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:RemoveAccountAliasResponse"/>
        </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="GetAllAdminAccountsRequest_01" type="bhr" >
    <t:objective>Sanity test for GetAllAdminAccountsRequest</t:objective>
    
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>

		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <GetAllAdminAccountsRequest  xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAllAdminAccountsResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="GetAccountInfoRequest_01" type="bhr" >
	<t:objective>Sanity test for GetAccountInfoRequest</t:objective>
	
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account10.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account10.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct10.server"/>	                 
		</t:response>
	</t:test>
	
  	<t:property name="server.zimbraAccount" value="${test_acct10.server}"/>
    
    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account10.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <GetAccountInfoRequest xmlns="urn:zimbraAccount">
              <account by="name">${test_account10.name}</account>
        </GetAccountInfoRequest>
        </t:request>
        <t:response> 
            <t:select path="//acct:GetAccountInfoResponse/acct:name" match="${test_account10.name}"/>
            <t:select path="//acct:GetAccountInfoResponse/acct:attr[@name='zimbraId']" match="${account10.id}"/>
        </t:response>
   </t:test>  
    
</t:test_case>

<t:test_case testcaseid="GetAvailableSkinsRequest_01" type="bhr" >
    <t:objective>Sanity test for GetAvailableSkinsRequest</t:objective>
    
    <t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account11.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account11.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct11.server"/>	                 
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${test_acct11.server}"/>
    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account11.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetAvailableSkinsRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetAvailableSkinsResponse/acct:skin" />
		</t:response>
	</t:test>  

</t:test_case>

<t:test_case testcaseid="GetAvailableCsvFormatsRequest_01" type="bhr" >
    <t:objective>Sanity test for GetAvailableCsvFormatsRequest</t:objective>
    
    <t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account12.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account12.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct12.server"/>	                 
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${test_acct12.server}"/>
    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account12.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetAvailableCsvFormatsRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path="//acct:GetAvailableCsvFormatsResponse/acct:csv" />
		</t:response>
	</t:test>  

</t:test_case>

<t:test_case testcaseid="GetAdminConsoleUICompRequest_01" type="bhr" >
    <t:objective>Sanity test for GetAdminConsoleUICompRequest</t:objective>
    
    <t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<GetAdminConsoleUICompRequest xmlns="urn:zimbraAdmin">				
			</GetAdminConsoleUICompRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAdminConsoleUICompResponse/admin:a" />
		</t:response>
	</t:test>  

</t:test_case>

<t:test_case testcaseid="SearchAccountsRequest_01" type="bhr">
    <t:objective>Sanity test for SearchAccountsRequest </t:objective>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account13.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account13.id"/>
		</t:response>
	</t:test>
	
    <t:test>
        <t:request>
            <SearchAccountsRequest xmlns="urn:zimbraAdmin">
                <query>zimbraId=${account13.id}</query>
            </SearchAccountsRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:SearchAccountsResponse/admin:account" attr="id"  match="${account13.id}"/>    
        </t:response>
    </t:test> 

</t:test_case>

<t:test_case testcaseid="MigrateAccountRequest_01" type="bhr">
    <t:objective>Sanity test for MigrateAccountRequest </t:objective>

	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${test_account14.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account14.id"/>
		</t:response>
	</t:test>
	
    <t:test>
        <t:request>
            <MigrateAccountRequest xmlns="urn:zimbraAdmin">
                <migrate action="wiki" id="${account14.id}"/>
            </MigrateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:MigrateAccountResponse"/>    
        </t:response>
    </t:test> 

</t:test_case>

</t:tests>