<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_acct1.server" value="NOT_DEFINED"/>
<t:property name="test_acct2.server" value="NOT_DEFINED"/>
<t:property name="test_acct3.server" value="NOT_DEFINED"/>

<t:property name="test_account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account2.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="test_account3.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="alias.name" value="alias.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="alias.name1" value="alias.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="alias.name1a" value="alias.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="alias.name1b" value="alias.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="alias2.name" value="Alias.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="alias3.name" value="Alias.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="alias.name2" value="alias01"/>
<t:property name="alias.name3" value="alias@non.existing.domain"/>
<t:property name="alias.blank" value=""/>
<t:property name="alias.numbers" value="1234566"/>
<t:property name="alias.spchar" value=":''&lt;//\\"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="domain" value="dl.example.com${COUNTER}${TIME}"/>
<t:property name="list1" value="test@${domain}"/>

<t:property name = "message.subject1" value = "Subject${TIME}.${COUNTER}"/>
<t:property name = "message.content1" value = "content of the message${TIME}.${COUNTER}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test id="ping" required="true">
         <t:request>
               <PingRequest xmlns="urn:zimbraAdmin"/>
         </t:request>
          <t:response>
                <t:select path="//admin:PingResponse"/>
         </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acct1_setup" type="always" >
    <t:objective>create test account</t:objective>

    <t:test id="admin_login" required="true" >
         <t:request>
              <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
              </AuthRequest>
         </t:request>
         <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
         </t:response>
    </t:test>
    
    <t:property name="admin.authToken" value="${authToken}"/>
    
    <t:test required="true" >
         <t:request>
              <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account1.name}</name>
                    <password>${defaultpassword.value}</password>
              </CreateAccountRequest>
         </t:request>
         <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
         </t:response>
    </t:test>

    <t:test required="true" >
         <t:request>
              <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account3.name}</name>
                    <password>${defaultpassword.value}</password>
              </CreateAccountRequest>
         </t:request>
         <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account3.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
         </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain}</name>
                <a n="zimbraNotes">Domain for distribution list testing</a>
            </CreateDomainRequest>
        </t:request>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${list1}</name>
                <a n="description">A test distribution list</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="list1.id"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="RemoveAccountAliasRequest1" type="bhr" areas="dev_sanity">
    <t:objective> Remove an alias from an account </t:objective>
    <t:steps> 1. Create an alias
              2. Remove it
    </t:steps>
    
    <t:test id="removeaccountaliasrequest1a">
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account.id}</id>
                <alias>${alias.name}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
                <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test>  

    <t:test depends="removeaccountaliasrequest1a">
        <t:request>
            <RemoveAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account.id}</id>
                <alias>${alias.name}</alias>
            </RemoveAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:RemoveAccountAliasResponse"/>
        </t:response>
    </t:test>  

</t:test_case>
 

<t:test_case testcaseid="RemoveAccountAliasRequest2" type="functional">
    <t:objective> Remove an invalid alias (without domain name) from an account </t:objective>

    <t:test>
        <t:request>
            <RemoveAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account.id}</id>
                <alias>${alias.name2}</alias>
            </RemoveAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match ="^service.INVALID_REQUEST"/>
        </t:response>
    </t:test> 

</t:test_case>


<t:test_case testcaseid="RemoveAccountAliasRequest3" type="functional">
    <t:objective> Remove an invalid alias (with non existing domain name) from an account </t:objective>

    <t:test>
        <t:request>
            <RemoveAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account.id}</id>
                <alias>${alias.name3}</alias>
            </RemoveAccountAliasRequest>
        </t:request>
        <t:response>
            <!-- Getting account.NO_SUCH_ALIAS instead of account.NO_SUCH_DOMAIN in build 20050609164754_main -->
			<!-- Getting account.NO_SUCH_DOMAIN now and this response seems to be proper -->
            <t:select path= "//zimbra:Code" match ="^account.NO_SUCH_DOMAIN"/> 
        </t:response>
    </t:test> 

</t:test_case>

<t:test_case testcaseid="RemoveAccountAliasRequest4" type="functional">
    <t:objective> Remove an alias with name as blank/spchar/numbers </t:objective>

    <t:test>
        <t:request>
            <RemoveAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account.id}</id>
                <alias>${alias.blank}</alias>
            </RemoveAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match ="^service.INVALID_REQUEST"/> 
        </t:response>
    </t:test> 

    <t:test>
        <t:request>
            <RemoveAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account.id}</id>
                <alias>${alias.spchar}</alias>
            </RemoveAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match ="^service.INVALID_REQUEST"/> 
        </t:response>
    </t:test> 

    <t:test>
        <t:request>
            <RemoveAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account.id}</id>
                <alias>${alias.numbers}</alias>
            </RemoveAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match ="^service.INVALID_REQUEST"/> 
        </t:response>
    </t:test> 

</t:test_case>


<t:test_case testcaseid="RemoveAccountAliasRequest5" bugids="2157" type="functional">
    <t:objective> Remove already deleted alias from the account </t:objective>
    <t:steps> 1. Create an alias
              2. Remove it
              3. Again remove the same alias
    </t:steps>

    <t:test id="removeaccountaliasrequest5a">
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account.id}</id>
                <alias>${alias.name}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
                <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test>  

    <t:test id="removeaccountaliasrequest5b" depends="removeaccountaliasrequest5a">
        <t:request>
            <RemoveAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account.id}</id>
                <alias>${alias.name}</alias>
            </RemoveAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:RemoveAccountAliasResponse"/>
        </t:response>
    </t:test>  

    <t:test depends="removeaccountaliasrequest5b">
        <t:request>
            <RemoveAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account.id}</id>
                <alias>${alias.name}</alias>
            </RemoveAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match ="^account.NO_SUCH_ALIAS"/> 
        </t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid="RemoveAccountAliasRequest6" type="sanity" bugids="4091">
    <t:objective>Remove an alias from an account without removing alias from distribution list. </t:objective>
    <t:steps> 1. Create an alias.
              2. Add that alias to distribution list.
              3. Remove it from account.              
    </t:steps>

    <t:test id="removeaccountaliasrequest6a">
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account.id}</id>
                <alias>${alias.name1}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
                <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test>  
  
    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${alias.name1}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

    <t:test depends="removeaccountaliasrequest6a">
        <t:request>
            <RemoveAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account.id}</id>
                <alias>${alias.name1}</alias>
            </RemoveAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:RemoveAccountAliasResponse"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <GetDistributionListRequest xmlns="urn:zimbraAdmin">
                <dl by="name">${list1}</dl>
            </GetDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetDistributionListResponse/admin:dl/admin:dlm" match="${alias.name1}" emptyset="1"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid = "RemoveAccountAliasRequest7" type="functional">
    <t:objective> Remove an alias from the distribution list without removing account from the distribution list. </t:objective>
    <t:steps> 1. Create an account
              2. Create an alias of the same account
              3. Add that alias to distribution list
              4. Remove the alias fron the distribution list
    </t:steps>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>test.${TIME}.${COUNTER}@${defaultdomain.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account2.id}</id>
                <alias>${alias.name1a}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${alias.name1a}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <RemoveDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${alias.name1a}</dlm>
            </RemoveDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:RemoveDistributionListMemberResponse" />
        </t:response>
    </t:test>
   
    <t:test>
        <t:request>
            <SearchAccountsRequest xmlns="urn:zimbraAdmin">
                <query>zimbraId=${test_account2.id}</query>
            </SearchAccountsRequest>
        </t:request>
        <t:response>
            <t:select path='//admin:SearchAccountsResponse/admin:account/admin:a[@n="zimbraMailAlias"]' match="${alias.name1a}"/>
            </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid = "RemoveAccountAliasRequest8" type="functional" bugids="4091">
    <t:objective>Delete an account.The alias of that account added in the distribution list should also get deleted from distribution list.</t:objective>
    <t:steps> 1. Create an account
              2. Create an alias of the same account
              3. Add that alias to distribution list
              4. Delete account.
              5. Alias should get deleted from distribution list.
    </t:steps>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>test.${TIME}.${COUNTER}@${defaultdomain.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="test_account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account3.id}</id>
                <alias>${alias.name1b}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${alias.name1b}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>
    
<t:property name="server.zimbraAccount" value="${test_acct3.server}"/>

    <t:test>
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${test_account3.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteAccountResponse"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <GetDistributionListRequest xmlns="urn:zimbraAdmin">
                <dl by="name">${list1}</dl>
            </GetDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetDistributionListResponse/admin:dl/admin:dlm" match="${alias.name1b}" emptyset="1"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="RemoveAccountAliasRequest9" type="sanity">
    <t:objective>Verify that deleting the original account deletes the aliases as well </t:objective>
    <t:steps> 1. Create an account and its alias
              2. Verify that you can log into alias account
              3. Delete the account
              4. Try to log into alias account              
    </t:steps>

    <t:test id="RemoveAccountAliasRequest9a">
         <t:request>
              <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account2.name}</name>
                    <password>${defaultpassword.value}</password>
              </CreateAccountRequest>
         </t:request>
         <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account4.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct4.server"/>
         </t:response>
    </t:test>

    <t:test id="RemoveAccountAliasRequest9b">
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account4.id}</id>
                <alias>${alias2.name}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
                <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test>  

<t:property name="server.zimbraAccount" value="${test_acct4.server}"/>

    <t:test depends="RemoveAccountAliasRequest9b">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${alias2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/> 
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test id="RemoveAccountAliasRequest9c">
         <t:request>
              <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
              </AuthRequest>
         </t:request>
         <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
         </t:response>
    </t:test>

<t:property name="server.zimbraAccount" value="${test_acct4.server}"/>
    <t:test id="RemoveAccountAliasRequest9d" depends="RemoveAccountAliasRequest9a,RemoveAccountAliasRequest9c">
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${test_account4.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteAccountResponse"/>
        </t:response>
    </t:test>  

<t:property name="server.zimbraAccount" value="${test_acct4.server}"/>
    <t:test depends="RemoveAccountAliasRequest9d">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${test_account4.id}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match ="^account.AUTH_FAILED"/> 
        </t:response>
    </t:test>

    <t:test depends="RemoveAccountAliasRequest9b,RemoveAccountAliasRequest9d">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${alias2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match ="^account.AUTH_FAILED"/> 
        </t:response>
    </t:test>
 
</t:test_case>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="RemoveAccountAliasRequest10" type="sanity">
    <t:objective>Verify that the original account does not get deleted if alias is deleted </t:objective>
    <t:steps> 1. Create an alias
              2. Try to log into alias account (should be allowed)
              3. Remove alias account
              4. Try to log into alias account (should not be allowed)
              5. Try to log into original account (should be allowed)            
    </t:steps>

    <t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:test id="admin_login" required="true" >
         <t:request>
              <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
              </AuthRequest>
         </t:request>
         <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
         </t:response>
    </t:test>

    <t:test id="RemoveAccountAliasRequest10a">
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account.id}</id>
                <alias>${alias3.name}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
                <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test> 
     
<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>   
    <t:test depends="RemoveAccountAliasRequest10a">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${alias3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/> 
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:property name="authToken" value="${admin.authToken}"/>
    
    <t:test id="RemoveAccountAliasRequest10b" depends="RemoveAccountAliasRequest10a">
        <t:request>
            <RemoveAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account.id}</id>
                <alias>${alias3.name}</alias>
            </RemoveAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:RemoveAccountAliasResponse"/>
        </t:response>
    </t:test>  
    
<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
    <t:test depends="RemoveAccountAliasRequest10b">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${alias3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
	    <t:response>
	        <t:select path= "//zimbra:Code" match ="^account.AUTH_FAILED"/>
	    </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="RemoveAccountAliasRequest11" type="sanity">
    <t:objective> Create an alias with same name as that deleted for some other account </t:objective>
    <t:steps> 1. Create an account and its alias
              2. Remove the alias
              3. Create a new alias for some other account with same name
    </t:steps>

    <t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:test id="admin_login" required="true" >
         <t:request>
              <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
              </AuthRequest>
         </t:request>
         <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
         </t:response>
    </t:test>

    <t:test id="RemoveAccountAliasRequest11a">
         <t:request>
              <CreateAccountRequest xmlns="urn:zimbraAdmin">
                    <name>${test_account2.name}</name>
                    <password>${defaultpassword.value}</password>
              </CreateAccountRequest>
         </t:request>
         <t:response>
                <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account4.id"/>
                <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct4.server"/>
         </t:response>
    </t:test>

    <t:test id="RemoveAccountAliasRequest11b" depends="RemoveAccountAliasRequest11a">
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account4.id}</id>
                <alias>${alias.name}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
                <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test>  

    <t:test id="RemoveAccountAliasRequest11c" depends="RemoveAccountAliasRequest11b">
        <t:request>
            <RemoveAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account4.id}</id>
                <alias>${alias.name}</alias>
            </RemoveAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:RemoveAccountAliasResponse"/>
        </t:response>
    </t:test>  

    <t:test depends="RemoveAccountAliasRequest11c">
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account.id}</id>
                <alias>${alias.name}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
                <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test> 
   
</t:test_case>


<t:test_case testcaseid="RemoveAccountAliasRequest12" type="sanity" bugids="8399">
    <t:objective>Verify that one cannot send mail to a deleted alias </t:objective>
    <t:steps> 1. Create an alias
              2. Log into test_account1 and send mail to alias address
              3. Delete the alias
              4. Log into test_account1 and try to send mail to alias address
			  5. Search an Undelivered Mail Returned to Sender.
    </t:steps>

    <t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:test id="admin_login" required="true" >
         <t:request>
              <AuthRequest xmlns="urn:zimbraAdmin">
                    <name>${admin.user}</name>
                    <password>${admin.password}</password>
              </AuthRequest>
         </t:request>
         <t:response>
                <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
         </t:response>
    </t:test>

   <t:test id="RemoveAccountAliasRequest12a">
        <t:request>
            <AddAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account4.id}</id>
                <alias>${alias2.name}</alias>
            </AddAccountAliasRequest>
        </t:request>
        <t:response>
                <t:select path="//admin:AddAccountAliasResponse"/>
        </t:response>
    </t:test>  

<t:property name="server.zimbraAccount" value="${test_acct4.server}"/>    
    <t:test id="RemoveAccountAliasRequest12b">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by = "name">${test_account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//acct:AuthResponse/acct:lifetime" match = "^\d+$"/>
            <t:select path = "//acct:AuthResponse/acct:authToken" set = "authToken"/>

        </t:response>
    </t:test>

    <t:test depends="RemoveAccountAliasRequest12b">
        <t:request>
            <SendMsgRequest xmlns = "urn:zimbraMail">
                <m>
                    <e t = "t" a = "${alias2.name}"/>
                    <su>${message.subject1}</su>
                    <mp ct = "text/plain">
                        <content>${message.content1}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path= "//mail:SendMsgResponse"/>
        </t:response>
    </t:test>

    <t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:property name="authToken" value="${admin.authToken}"/>

    <t:test id="RemoveAccountAliasRequest12c" depends="RemoveAccountAliasRequest12a">
        <t:request>
            <RemoveAccountAliasRequest xmlns="urn:zimbraAdmin">
                <id>${test_account4.id}</id>
                <alias>${alias2.name}</alias>
            </RemoveAccountAliasRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:RemoveAccountAliasResponse"/>
        </t:response>
    </t:test> 
    
<t:property name="server.zimbraAccount" value="${test_acct4.server}"/>
    <t:test id="RemoveAccountAliasRequest12d">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by = "name">${test_account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//acct:AuthResponse/acct:lifetime" match = "^\d+$"/>
            <t:select path = "//acct:AuthResponse/acct:authToken" set = "authToken"/>

        </t:response>
    </t:test>

    <t:test depends="RemoveAccountAliasRequest12d,RemoveAccountAliasRequest12c">
        <t:request>
            <SendMsgRequest xmlns = "urn:zimbraMail">
                <m>
                    <e t = "t" a = "${alias2.name}"/>
                    <su>${message.subject1}</su>
                    <mp ct = "text/plain">
                        <content>${message.content1}</content>
                    </mp>
                </m>
            </SendMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendMsgResponse/mail:m"/>
        </t:response>
    </t:test>

	<t:test id="RemoveAccountAliasRequest12e" depends="RemoveAccountAliasRequest12d,RemoveAccountAliasRequest12c">
        <t:request>
			<SearchRequest xmlns="urn:zimbraMail">
				<query>in:inbox</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:c" attr="su" match="Undelivered Mail Returned to Sender"/>
			<t:select path="//mail:SearchResponse/mail:c" attr="su" match="${message.subject1}"/>
		</t:response>
	</t:test>
		
</t:test_case>


</t:tests>