<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="COS.name" value="cos${TIME}${COUNTER}"/>
<t:property name="msg.folder" value="${testMailRaw.root}/email07/"/>
<t:property name="test_account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="mail.quota" value="9188608"/>
<t:property name="warn.msg" value="From: Postmaster &lt;postmaster@${RECIPIENT_DOMAIN}&gt;${NEWLINE}To: ${RECIPIENT_NAME} &lt;${RECIPIENT_ADDRESS}&gt;${NEWLINE}Subject: Quota warning${NEWLINE}Date: ${DATE}${NEWLINE}Content-Type: text/plain${NEWLINE}${NEWLINE}Your mailbox size has reached ${MBOX_SIZE_MB}MB, which is over ${WARN_PERCENT}% of your ${QUOTA_MB}MB quota.${NEWLINE}Please delete some messages to avoid exceeding your quota.${NEWLINE}" expand="0"/>
<t:property name="WARN_PERCENT" value="50"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="acctSetup1_cos_quota" type="always" >
    <t:objective>Login to the account</t:objective>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="admin.authtoken" value="${authToken}"/>

</t:test_case>


<t:test_case testcaseid="cos_quota01" type="smoke">
    <t:objective> Verify warning message is sent if account quota exceeds </t:objective>   
    <t:steps> 
              1. Create a COS with zimbraMailQuota appx 9mb and with some warning message
              2. Create an account in that COS
			  3. Inject mails near about 9mb to that account 
			  4. Get account Information
			  5. Login to that account
              6. Search for mails in inbox and search for quota warming mail
    </t:steps>
  
	    <t:test>
        <t:request xmlns="urn:zimbraAdmin">
            <GetCosRequest>
                <cos by="name">default</cos>
            </GetCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetCosResponse/admin:cos" attr="name" match="default"/>
            <t:select path='//admin:GetCosResponse/admin:cos/admin:a[@n="zimbraQuotaWarnMessage"]' set="mailQuota"/>

			
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateCosRequest xmlns="urn:zimbraAdmin">
                <name>${COS.name}</name>
                <a n="cn">${COS.name}</a>
                <a n="zimbraNotes">For test purpose</a>
                <a n="description">New Cos</a>                            
   		        <a n="zimbraQuotaWarnPercent">${WARN_PERCENT}</a>
				<a n="zimbraQuotaWarnMessage">${warn.msg}</a>
		        <a n="zimbraQuotaWarnInterval">1d</a>
		        <a n="zimbraMailQuota">${mail.quota}</a>
            </CreateCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos.id"/>     
              <t:select path='//admin:CreateCosResponse/admin:cos/admin:a[@n="zimbraQuotaWarnMessage"]' equals="${warn.msg}"/>   
        </t:response>
    </t:test>    

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${defaultpassword.value}</password>
                <a n="zimbraCOSId">${cos.id}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_accountid.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>
    

	<t:mailinjecttest>
        <t:lmtpInjectRequest>
            <foldername>${msg.folder}</foldername>
			<to>${test_account1.name}</to>
			<from>${nonZimbraUser.name}</from>
			<server>${test_acct1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>
    

	<t:test>
		<t:request>
			<GetAccountInfoRequest xmlns="urn:zimbraAdmin">
				<account by="name">${test_account1.name}</account>
			</GetAccountInfoRequest>
		</t:request>
		<t:response> 
			<t:select path="//admin:GetAccountInfoResponse/admin:name" match="${test_account1.name}"/>
			<t:select path="//admin:GetAccountInfoResponse/admin:a[@n='zimbraId']" match="${test_accountid.id}"/>
		</t:response>
	</t:test>


<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test required = "true">
        <t:request>
            <AuthRequest xmlns = "urn:zimbraAccount">
                <account by = "name">${test_account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path = "//acct:AuthResponse/acct:lifetime" match = "^\d+$"/>
            <t:select path = "//acct:AuthResponse/acct:authToken" set = "authToken"/>

        </t:response>
    </t:test>
    
   	<t:waitforpostfixqueue/>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message" fetch="1">
				<query>subject:Quota warning</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m" attr="id" set="message.id1"/>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${message.id1}" read="1" html="1"/>
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e" attr="a" match="postmaster@${defaultdomain.name}" />
        </t:response>
    </t:test>

</t:test_case>
 
</t:tests>
