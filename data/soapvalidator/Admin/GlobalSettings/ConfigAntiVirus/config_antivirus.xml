<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="admin_login" type="always">
    <t:objective>Login to Admin Account</t:objective>
        
    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
 
 	 <t:test>
		<t:request>
			<GetServerRequest xmlns="urn:zimbraAdmin">
				<server by="name">${zimbraServer.name}</server>
			</GetServerRequest>
		</t:request>
		<t:response>
	            <t:select path='//admin:GetServerResponse/admin:server/admin:a[@n="zimbraSmtpHostname"]' set="mta.server"/>
		</t:response>
    </t:test>

    <!-- Keep the old settings so they can be reset in the future -->
    <!-- <t:property name="server.zimbraAdmin" value="${mta.server}"/> -->
    
    <t:test>
        <t:request>
            <GetAllConfigRequest  xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraAttachmentsScanEnabled']" set="zimbraAttachmentsScanEnabled.value"/>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraVirusWarnRecipient']" set="zimbraVirusWarnRecipient.value"/>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraVirusWarnAdmin']" set="zimbraVirusWarnAdmin.value"/>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraAttachmentsScanClass']" set="zimbraAttachmentsScanClass.value"/>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraAttachmentsViewInHtmlOnly']" set="zimbraAttachmentsViewInHtmlOnly.value"/>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraAttachmentsBlocked']" set="zimbraAttachmentsBlocked.value"/>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraVirusDefinitionsUpdateFrequency']" set="zimbraVirusDefinitionsUpdateFrequency.value"/>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraVirusBlockEncryptedArchive']" set="zimbraVirusBlockEncryptedArchive.value"/>
        </t:response>
    </t:test>


</t:test_case>

<t:finally areas="virus,noncluster" >

	<!-- After all tests have run, reset the zimbraSpamCheckEnabled setting to the default -->

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
   

 <!-- <t:property name="server.zimbraAdmin" value="${mta.server}"/> -->
 
    <t:test>
        <t:request>
                <ModifyConfigRequest xmlns="urn:zimbraAdmin">
	                <a n="zimbraAttachmentsScanEnabled">${zimbraAttachmentsScanEnabled.value}</a>
	                <a n="zimbraVirusWarnRecipient">${zimbraVirusWarnRecipient.value}</a>
	                <a n="zimbraVirusWarnAdmin">${zimbraVirusWarnAdmin.value}</a>
					<a n="zimbraAttachmentsScanClass">${zimbraAttachmentsScanClass.value}</a>
	                <a n="zimbraAttachmentsViewInHtmlOnly">${zimbraAttachmentsViewInHtmlOnly.value}</a>
	                <a n="zimbraAttachmentsBlocked">${zimbraAttachmentsBlocked.value}</a>
	                <a n="zimbraVirusDefinitionsUpdateFrequency">${zimbraVirusDefinitionsUpdateFrequency.value}</a>
	                <a n="zimbraVirusBlockEncryptedArchive">${zimbraVirusBlockEncryptedArchive.value}</a>
                </ModifyConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyConfigResponse"/>
        </t:response>
    </t:test>


	<t:staftask >
		<t:request>
			<server>${mta.server}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/zmmtactl reload\'" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.zmmtactl}</params>
		</t:request>
	</t:staftask>

	    <!-- Make sure this setting is reset to the original value -->
	<t:test>
        <t:request>
            <GetAllConfigRequest  xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAllConfigResponse"/>
        </t:response>
    </t:test>

</t:finally>


<t:test_case testcaseid="ModifyConfigRequest_antivirus1" type="deprecated" >
    <t:objective>Set zimbraVirusCheckEnabled = TRUE </t:objective>
    
    <t:test>
        <t:request>
            <ModifyConfigRequest  xmlns="urn:zimbraAdmin">
                <a n="zimbraVirusCheckEnabled">${globals.true}</a>
            </ModifyConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyConfigResponse"/>
        </t:response>
    </t:test>

	<!-- Wait for postfix to be updated -->
	<t:staftask >
		<t:request>
			<server>${mta.server}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/zmmtactl reload\'" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.zmmtactl}</params>
		</t:request>
	</t:staftask>

    <t:test>
        <t:request>
            <GetAllConfigRequest  xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraVirusCheckEnabled']" match="${globals.true}"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="ModifyConfigRequest_antivirus2" type="deprecated" >
    <t:objective>Set zimbraVirusCheckEnabled = FALSE </t:objective>
    
    <t:test>
        <t:request>
            <ModifyConfigRequest  xmlns="urn:zimbraAdmin">
                <a n="zimbraVirusCheckEnabled">${globals.false}</a>
            </ModifyConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyConfigResponse"/>
        </t:response>
    </t:test>

	<t:staftask >
		<t:request>
			<server>${mta.server}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/zmmtactl reload\'" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.zmmtactl}</params>
		</t:request>
	</t:staftask>


    <t:test>
        <t:request>
            <GetAllConfigRequest  xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraVirusCheckEnabled']" match="^${globals.false}"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="ModifyConfigRequest_antivirus3" type="deprecated" >
    <t:objective>Change the virus settings</t:objective>
    
    <t:test>
        <t:request>
            <ModifyConfigRequest  xmlns="urn:zimbraAdmin">
                <a n="zimbraVirusCheckEnabled">${globals.true}</a>
                <a n="zimbraAttachmentsScanEnabled">${globals.true}</a>
                <a n="zimbraVirusWarnRecipient">${globals.true}</a>
                <a n="zimbraVirusWarnAdmin">${globals.true}</a>
                <a n="zimbraAttachmentsScanClass">com.zimbra.cs.scan.ClamScanner</a>
                <a n="zimbraAttachmentsViewInHtmlOnly">${globals.true}</a>
                <a n="zimbraAttachmentsBlocked">${globals.true}</a>
                <a n="zimbraVirusDefinitionsUpdateFrequency">2h</a>
                <a n="zimbraVirusBlockEncryptedArchive">${globals.true}</a>
            </ModifyConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyConfigResponse"/>
        </t:response>
    </t:test>

	<t:staftask >
		<t:request>
			<server>${mta.server}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/zmmtactl reload\'" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.zmmtactl}</params>
		</t:request>
	</t:staftask>


    <t:test>
        <t:request>
            <GetAllConfigRequest  xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraVirusCheckEnabled']" match="^${globals.true}"/>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraAttachmentsScanEnabled']" match="^${globals.true}"/>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraVirusWarnRecipient']" match="^${globals.true}"/>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraVirusWarnAdmin']" match="^${globals.true}"/>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraAttachmentsScanClass']" match="com.zimbra.cs.scan.ClamScanner"/>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraAttachmentsViewInHtmlOnly']" match="^${globals.true}"/>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraAttachmentsBlocked']" match="^${globals.true}"/>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraVirusDefinitionsUpdateFrequency']" match="2h"/>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraVirusBlockEncryptedArchive']" match="^${globals.true}"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="ModifyConfigRequest_antivirus4" type="deprecated" bugids="8541">
    <t:objective>With virus checking off, send a mail</t:objective>
    
	<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
	<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
            <ModifyConfigRequest  xmlns="urn:zimbraAdmin">
                <a n="zimbraVirusCheckEnabled">${globals.false}</a>
            </ModifyConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyConfigResponse"/>
        </t:response>
	</t:test>

	<t:staftask >
		<t:request>
			<server>${mta.server}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/zmmtactl reload\'" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.zmmtactl}</params>
		</t:request>
	</t:staftask>


	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
	</t:test>

	<t:test >
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account2.name}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
		</t:response>
	</t:test>

	
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test >
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="t" a="${account2.name}"/>
					<su>subject01</su>
					<mp ct="text/plain">
						<content>content01</content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse"/>
		</t:response>
	</t:test>

	
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
	 <t:request>
	   <SearchRequest xmlns="urn:zimbraMail" types="message">
		   <query>subject:(subject01)</query>
	   </SearchRequest>
	 </t:request>
	  <t:response>
		<t:select path="//mail:SearchResponse/mail:m">
			<t:select attr="su" match="^subject01$"/>
		</t:select>
	 </t:response>
	</t:test>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>


	<t:test>
        <t:request>
            <ModifyConfigRequest  xmlns="urn:zimbraAdmin">
              <a n="zimbraVirusCheckEnabled">${zimbraVirusCheckEnabled.value}</a>
            </ModifyConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyConfigResponse"/>
        </t:response>
	</t:test>
	
	<t:staftask >
		<t:request>
			<server>${mta.server}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/zmmtactl reload\'" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.zmmtactl}</params>
		</t:request>
	</t:staftask>

	    <!-- Make sure this setting is reset to the original value -->
	<t:test>
        <t:request>
            <GetAllConfigRequest  xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAllConfigResponse/admin:a[@n='zimbraVirusCheckEnabled']" match="${zimbraVirusCheckEnabled.value}"/>
        </t:response>
    </t:test>

</t:test_case>


</t:tests>
