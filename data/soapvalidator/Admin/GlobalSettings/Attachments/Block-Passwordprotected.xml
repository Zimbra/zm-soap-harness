<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account1.mime1.file" value="${testMailRaw.root}/Bugs/19713/encrypted.txt"/>
<t:property name="account1.mime1.subject" value="Bug19713a"/>

<t:property name="account1.mime2.file" value="${testMailRaw.root}/Bugs/19713/nonencrypted.txt"/>
<t:property name="account1.mime2.subject" value="Bug19713b"/>



<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="AccountSetup_PasswordProtectedAttachments_01" type="always" >
    <t:objective>Create test account and modify settings.</t:objective>
    <t:steps>1.Login to admin.
             2.Create test account.
             3.Modify settings to block encrypted attachments.
    </t:steps>

    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
        <CreateAccountRequest xmlns="urn:zimbraAdmin">
            <name>${account1.name}</name>
            <password>${defaultpassword.value}</password>
        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>
    
    
    <t:test>
		<t:request>
			<GetServerRequest xmlns="urn:zimbraAdmin">
				<server by="name">${account1.server}</server>
			</GetServerRequest>
		</t:request>
		<t:response>
	            <t:select path='//admin:GetServerResponse/admin:server/admin:a[@n="zimbraSmtpHostname"]' set="account1.mta.server"/>
		</t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="PasswordProtectedAttachments_01" type="sanity"  areas="smtp" bugids="19713">
    <t:objective> Set zimbraVirusBlockEncryptedArchive=true.  Verify password encrypted attachments are blocked. </t:objective>
    <t:steps>
		1. Login as admin
		2. Block encrypted attachments
		3. SMTP a message with encrypted attachment
		4. Verify message an attachment are blocked
		5. SMTP a message with non-encrypted attachment
		6. Verify message an attachment are received
    </t:steps>


    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>


    <t:test >
        <t:request>
            <GetConfigRequest xmlns="urn:zimbraAdmin">
            	<a n="zimbraVirusBlockEncryptedArchive"/>
            </GetConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetConfigResponse"/>
        </t:response>
    </t:test>

<!--
Per bug 19713, the zimbraVirusBlockEncryptedArchive has no effect on these tests.
Need to update these tests based on the implementation of bug 19713, once it is fixed.
-->

    <t:test>
        <t:request>
            <ModifyConfigRequest  xmlns="urn:zimbraAdmin">
                <a n="zimbraVirusBlockEncryptedArchive">${globals.true}</a>
            </ModifyConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyConfigResponse"/>
        </t:response>
    </t:test>

    <t:test delay="${blockedextdelay.msec}">
        <t:request>
            <GetConfigRequest xmlns="urn:zimbraAdmin">
            	<a n="zimbraVirusBlockEncryptedArchive"/>
            </GetConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetConfigResponse"/>
        </t:response>
    </t:test>
    
    <t:test>
		<t:request>
			<GetServerRequest xmlns="urn:zimbraAdmin">
				<server by="name">${zimbraServer.name}</server>
			</GetServerRequest>
		</t:request>
		<t:response>
	            <t:select path='//admin:GetServerResponse/admin:server/admin:a[@n="zimbraSmtpHostname"]' set="mta.server"/>
		</t:response>
    </t:test>
    
	<t:staftask >
		<t:request>
			<server>${mta.server}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/zmantispamctl restart\'" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.zmmtactl}</params>
		</t:request>
	</t:staftask>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:smtpinjecttest>
        <t:smtpInjectRequest>
            <address>${account1.mta.server}</address>
            <filename>${account1.mime1.file}</filename>
            <recipient>${account1.name}</recipient>
        </t:smtpInjectRequest>
    </t:smtpinjecttest>

   <t:test_loop count="2">
	<t:test delay="3000">
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${account1.mime1.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m"/>
		</t:response>
	</t:test>
   </t:test_loop>


    <t:smtpinjecttest>
        <t:smtpInjectRequest>
            <address>${account1.mta.server}</address>
            <filename>${account1.mime2.file}</filename>
            <recipient>${account1.name}</recipient>
        </t:smtpInjectRequest>
    </t:smtpinjecttest>
   
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${account1.mime2.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m"/>
		</t:response>
	</t:test>

</t:test_case>


<t:test_case testcaseid="PasswordProtectedAttachments_02" type="sanity"  areas="smtp" bugids="19713">
    <t:objective> Set zimbraVirusBlockEncryptedArchive=false.  Verify password encrypted attachments are received. </t:objective>
    <t:steps>
		1. Login as admin
		2. Block encrypted attachments
		3. SMTP a message with encrypted attachment
		4. Verify message an attachment are recieved
		5. SMTP a message with non-encrypted attachment
		6. Verify message an attachment are received
    </t:steps>


    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>


    <t:test >
        <t:request>
            <GetConfigRequest xmlns="urn:zimbraAdmin">
            	<a n="zimbraVirusBlockEncryptedArchive"/>
            </GetConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetConfigResponse"/>
        </t:response>
    </t:test>

<!--
Per bug 19713, the zimbraVirusBlockEncryptedArchive has no effect on these tests.
Need to update these tests based on the implementation of bug 19713, once it is fixed.
-->

    <t:test>
        <t:request>
            <ModifyConfigRequest  xmlns="urn:zimbraAdmin">
                <a n="zimbraVirusBlockEncryptedArchive">${globals.false}</a>
            </ModifyConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyConfigResponse"/>
        </t:response>
    </t:test>
    
    <t:staftask >
		<t:request>
			<server>${mta.server}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/zmantispamctl restart\'" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.zmmtactl}</params>
		</t:request>
	</t:staftask>

    <t:test delay="${blockedextdelay.msec}">
        <t:request>
            <GetConfigRequest xmlns="urn:zimbraAdmin">
            	<a n="zimbraVirusBlockEncryptedArchive"/>
            </GetConfigRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetConfigResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>
    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:smtpinjecttest>
        <t:smtpInjectRequest>
            <address>${account1.mta.server}</address>
            <filename>${account1.mime1.file}</filename>
            <recipient>${account1.name}</recipient>
        </t:smtpInjectRequest>
    </t:smtpinjecttest>
   
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>${account1.mime1.subject}</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m/mail:fr" match="VIRUS ALERT Our content checker found virus.*"/>
		</t:response>
	</t:test>

    <t:smtpinjecttest>
        <t:smtpInjectRequest>
            <address>${account1.mta.server}</address>
            <filename>${account1.mime2.file}</filename>
            <recipient>${account1.name}</recipient>
        </t:smtpInjectRequest>
    </t:smtpinjecttest>
   
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${account1.mime2.subject})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:m"/>
		</t:response>
	</t:test>

</t:test_case>



</t:tests>

