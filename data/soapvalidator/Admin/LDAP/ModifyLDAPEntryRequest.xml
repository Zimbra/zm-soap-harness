<t:tests xmlns:t="urn:zimbraTestHarness">


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="account1.name" value="account${TIME}${COUNTER}"/>
<t:property name="account1.email" value="${account1.name}@${defaultdomain.name}"/>
<t:property name="account2.name" value="account${TIME}${COUNTER}"/>
<t:property name="account2.email" value="${account2.name}@${defaultdomain.name}"/>
<t:property name="account3.name" value="account${TIME}${COUNTER}"/>
<t:property name="account3.email" value="${account3.name}@${defaultdomain.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="ModifyLDAPEntryRequest_CreateAccounts" type="always" >
    <t:objective>create test account</t:objective>


    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>


</t:test_case>



<t:test_case testcaseid="ModifyLDAPEntryRequest_01" type="smoke">
    <t:objective> Send basic ModifyLDAPEntryRequest.</t:objective>
    
    <t:property name="account2.sn" value="new.sn.${TIME}.${COUNTER}"/>
    
    <t:test>
        <t:request>
            <CreateLDAPEntryRequest xmlns="urn:zimbraAdmin" dn="cn=${account2.name}">
		        <a n="objectClass">organizationalPerson</a>
		        <a n="sn">${account2.name}</a>
            </CreateLDAPEntryRequest>
        </t:request>
        <t:response>
            <t:select path="//CreateLDAPEntryResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <ModifyLDAPEntryRequest xmlns="urn:zimbraAdmin" dn="cn=${account2.name}">
		        <a n="sn">${account2.sn}</a>
            </ModifyLDAPEntryRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyLDAPEntryResponse">
            	<t:select path="//admin:a[@n='sn']" match="${account2.sn}"/>
            </t:select>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="ModifyLDAPEntryRequest_02" type="bhr" bugids="36426">
    <t:objective>Verify no NPE on ModifyLDAPEntryRequest for non-existant DN</t:objective>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.email}</name>
                <password>${defaultpassword.value}</password>                
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>
       
    <t:test>
        <t:request>
            <GetLDAPEntriesRequest xmlns="urn:zimbraAdmin">
                <ldapSearchBase>dc=com</ldapSearchBase>
                <query>cn=${account1.name}*</query>
            </GetLDAPEntriesRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetLDAPEntriesResponse">
            	<t:select path="//admin:LDAPEntry" attr="name" set="ldapentry.name"/>
            </t:select>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <ModifyLDAPEntryRequest xmlns="urn:zimbraAdmin" dn="cn=${ldapentry.name}">
		        <a n="zimbraQuotaWarnMessage">${TIME}${COUNTER}</a>
            </ModifyLDAPEntryRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="service.FAILURE"/>
            <t:select path="//soap:Text" match="NullPointerException" emptyset="1"/>
        </t:response>
    </t:test>


</t:test_case>

<t:test_case testcaseid="ModifyLDAPEntryRequest_03" type="bhr" bugids="35013">
    <t:objective> ModifyLDAPEntryRequest should allow to remove attributes.</t:objective>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.email}</name>
                <password>${defaultpassword.value}</password>                
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>
    
    <!--
    Per Greg, you can get the DN if you try to re-create the account.  the DN is in the error message
    -->
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.email}</name>
                <password>${defaultpassword.value}</password>                
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//soap:Text" set="reason"/>
        </t:response>
    </t:test>
    
    <t:regex input="${reason}" regex=".*DN:(.*)$" group="1" set="account3.dn"/>

    <t:test>
        <t:request>
            <ModifyLDAPEntryRequest xmlns="urn:zimbraAdmin" dn="${account3.dn}">
		        <a n="zimbraCreateTimestamp"/>
            </ModifyLDAPEntryRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyLDAPEntryResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
			<FlushCacheRequest xmlns="urn:zimbraAdmin" >
				<cache type="account">
					<entry by="name">${account3.email}</entry>
				</cache>
			</FlushCacheRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:FlushCacheResponse"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="name">${account3.email}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse">
				<t:select path="//admin:a[@n='zimbraCreateTimestamp']" emptyset="1"/>
			</t:select>
		</t:response>
	</t:test>

</t:test_case>


</t:tests>

