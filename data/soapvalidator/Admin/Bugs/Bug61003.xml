<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="admin_global.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="admin_password" value="${defaultpassword.value}" />
<t:property name="admin_delegate.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />
<t:property name="test_account1.name" value="test.${TIME}.${COUNTER}@${defaultdomain.name}" />

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:test_case testcaseid="bug61003_account_setup" type="always">
    <t:objective>login as admin and create a global and delegated admin account</t:objective>
	<t:steps> 1. Login as an admin
              2. Create a Glabal and delegated admin account
    </t:steps>
	
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${admin_global.name}</name>
				<password>${defaultpassword.value}</password>
				<a n="zimbraIsAdminAccount">TRUE</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account.id" />		
          	<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="admin_global.server"/>
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${admin_delegate.name}</name>
				<password>${defaultpassword.value}</password>
				<a n="zimbraIsDelegatedAdminAccount">TRUE</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account.id" />		
          	<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="admin_delegate.server"/>
		</t:response>
	</t:test>
	
</t:test_case>



<t:test_case testcaseid="Bug_61003" type="smoke" bugids="61003">
	<t:objective>Check that global admin receives NO_SUCH_ACCOUNT error code for non existing account and delegated admin user receives PERM_DENIED error code</t:objective>
	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin_global.name}</name>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
		
	<t:property name="server.zimbraAccount" value="${admin_global.server}"/>
	<t:test>
		<t:requestContext>
			<authToken>${authToken}</authToken>
		    <account by="name">${test_account1.name}</account>
		 </t:requestContext>
		<t:request>
			<GetInfoRequest xmlns="urn:zimbraAccount"/>		
		</t:request>
		<t:response>
			<t:select path= "//zimbra:Code" match="account.NO_SUCH_ACCOUNT"/>
		</t:response>
	</t:test>
	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin_delegate.name}</name>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken" />
		</t:response>
	</t:test>
		
	<t:test>
		<t:requestContext>
			<authToken>${authToken}</authToken>
		    <account by="name">${test_account1.name}</account>
		 </t:requestContext>
		<t:request>
			<GetInfoRequest xmlns="urn:zimbraAccount"/>
		</t:request>
		<t:response>
			<t:select path= "//zimbra:Code" match="service.PERM_DENIED"/>
		</t:response>
	</t:test>
		
</t:test_case>
	
</t:tests>
