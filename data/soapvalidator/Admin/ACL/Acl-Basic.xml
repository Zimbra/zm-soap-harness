<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="uploadFile.name" value="${testMailRaw.root}/email01/Msg01.txt"/>
<t:property name="uploadFile.subject" value="email01A"/>
<t:property name="uploadFile.fragment" value="simple text string in the body"/>
<t:property name="uploadFile.content" value="simple text string in the body.*"/>


<t:property name="acl1.name" value="acl1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="acl2.name" value="acl2.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account1.name" value="account1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account1.server" value="NOT_DEFINED"/>
<t:property name="account1.folder1.name" value="folder.${TIME}.${COUNTER}"/>

<t:property name="account2.name" value="account2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.server" value="NOT_DEFINED"/>

<t:property name="account3.name" value="account3.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.server" value="NOT_DEFINED"/>

<t:property name="account4.name" value="account4.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.server" value="NOT_DEFINED"/>

<t:property name="account5.name" value="account5.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account5.server" value="NOT_DEFINED"/>


<t:property name="op.grant"			value="grant"/>
<t:property name="op.read"			value="read"/>
<t:property name="op.unread"		value="!read"/>
<t:property name="op.flag"			value="flag"/>
<t:property name="op.unflag"		value="!flag"/>
<t:property name="op.tag"			value="tag"/>
<t:property name="op.untag"			value="!tag"/>
<t:property name="op.move"			value="move"/>
<t:property name="op.delete"		value="delete"/>

<t:property name="grant.usr"			value="usr"/>
<t:property name="grant.grp"			value="grp"/>
<t:property name="grant.dom"			value="dom"/>
<t:property name="grant.cos"			value="cos"/>
<t:property name="grant.all"			value="all"/>
<t:property name="grant.pub"			value="pub"/>
<t:property name="grant.guest"			value="guest"/>

<t:property name="rights.none"			value=""/>
<t:property name="rights.read"			value="r"/>
<t:property name="rights.write"			value="w"/>
<t:property name="rights.insert"		value="i"/>
<t:property name="rights.delete"		value="d"/>
<t:property name="rights.administer"	value="a"/>
<t:property name="rights.workflow"		value="x"/>
<t:property name="rights.manager"		value="${rights.read}${rights.write}${rights.insert}${rights.delete}${rights.workflow}"/>
<t:property name="view.conversation"	value="conversation"/>
<t:property name="view.message"			value="message"/>
<t:property name="view.contact"			value="contact"/>
<t:property name="view.appointment"		value="appointment"/>
<t:property name="view.note"			value="note"/>



<t:test_case testcaseid="SharingACLBasic_setup" type="always">
    <t:objective>Setup accounts and ACLs</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
<!-- <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
-->    
    <t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/zmlocalconfig -e allow_unauthed_ping=true\'" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.zmmtactl}</params>
		</t:request>
	</t:staftask>
	
	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/zmmailboxdctl restart\'" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.zmmtactl}</params>
		</t:request>
	</t:staftask>
	
	
	<!-- Sleep for 1 minute to wait for mbox to come up -->
	<t:delay sec="30"/>
    
	

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account1" required="false" depends="admin_login">
        <t:request>
	        <CreateAccountRequest xmlns="urn:zimbraAdmin">
	            <name>${account1.name}</name>
	            <password>${defaultpassword.value}</password>
	        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account1" required="false" depends="admin_login">
        <t:request>
	        <CreateAccountRequest xmlns="urn:zimbraAdmin">
	            <name>${account2.name}</name>
	            <password>${defaultpassword.value}</password>
	        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account1" required="false" depends="admin_login">
        <t:request>
	        <CreateAccountRequest xmlns="urn:zimbraAdmin">
	            <name>${account3.name}</name>
	            <password>${defaultpassword.value}</password>
	        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account1" required="false" depends="admin_login">
        <t:request>
	        <CreateAccountRequest xmlns="urn:zimbraAdmin">
	            <name>${account4.name}</name>
	            <password>${defaultpassword.value}</password>
	        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>

    <t:test  id="create_test_account1" required="false" depends="admin_login">
        <t:request>
	        <CreateAccountRequest xmlns="urn:zimbraAdmin">
	            <name>${account5.name}</name>
	            <password>${defaultpassword.value}</password>
	        </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account5.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account5.server"/>
        </t:response>
    </t:test>





	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	<t:property name="uploadServletServer" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.inbox}']" attr="id" set="account1.folder.inbox.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${account1.folder1.name}" l="${account1.folder.inbox.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account1.folder1.id"/>
        </t:response>
    </t:test >
    
	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${uploadFile.name}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="account1.message1.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

    <t:test>
        <t:request>
            <AddMsgRequest xmlns="urn:zimbraMail">
                <m l="${account1.folder1.id}" aid="${account1.message1.aid}"/>
            </AddMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:AddMsgResponse/mail:m" attr="id" set="account1.message1.id"/>
        </t:response>
    </t:test>


</t:test_case>

<t:test_case testcaseid="SharingACLBasic_01" type="bhr">
    <t:objective>Verify that existing members to an ACL inherit the access</t:objective>
    <t:steps>
    1. ACL1 has Account2 as a member
    2. Account1 grants folder access to ACL1
    3. Verify Account2 has access to the shared folder
    </t:steps>

    
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${acl1.name}</name>
                <a n="description">An Access Control List</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="acl1.id"/>
        </t:response>
    </t:test>

    <t:test id="addDistributionListMemberRequest1b" depends="addDistributionListMemberRequest1a">
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${acl1.id}</id>
                <dlm>${account2.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder1.id}">
					<grant gt="${grant.grp}" d="${acl1.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.id}:${account1.message1.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account1.id}:${account1.message1.id}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='f']" attr="a" match="foo@foo.com"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='t']" attr="a" match="foo@foo.com"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:su" match="${uploadFile.subject}"/>
			<t:select path="//mail:GetMsgResponse/mail:m/mail:mp[@ct='text/plain']/mail:content"/>
        </t:response>
    </t:test>


</t:test_case>

<t:test_case testcaseid="SharingACLBasic_02" type="bhr">
    <t:objective>Verify that all accounts (3 accounts total) in an ACL have the shared access</t:objective>
    <t:steps>
    1. ACL2 has Account3, Account4, and Account5 as a members
    2. Account1 grants folder access to ACL2
    3. For Account3, Account4, and Account5,
     A. Verify account has access to the shared folder
    </t:steps>

    
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${acl2.name}</name>
                <a n="description">An Access Control List</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="acl1.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${acl1.id}</id>
                <dlm>${account3.name}</dlm>
                <dlm>${account4.name}</dlm>
                <dlm>${account5.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account1.folder1.id}">
					<grant gt="${grant.grp}" d="${acl2.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account3.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.id}:${account1.message1.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account1.id}:${account1.message1.id}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='f']" attr="a" match="foo@foo.com"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='t']" attr="a" match="foo@foo.com"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:su" match="${uploadFile.subject}"/>
			<t:select path="//mail:GetMsgResponse/mail:m/mail:mp[@ct='text/plain']/mail:content"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account4.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.id}:${account1.message1.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account1.id}:${account1.message1.id}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='f']" attr="a" match="foo@foo.com"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='t']" attr="a" match="foo@foo.com"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:su" match="${uploadFile.subject}"/>
			<t:select path="//mail:GetMsgResponse/mail:m/mail:mp[@ct='text/plain']/mail:content"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account5.server}"/>

    <t:test  required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account5.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
            </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <GetMsgRequest xmlns="urn:zimbraMail">
                <m id="${account1.id}:${account1.message1.id}" />
            </GetMsgRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetMsgResponse/mail:m" attr="id" match="${account1.id}:${account1.message1.id}"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='f']" attr="a" match="foo@foo.com"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:e[@t='t']" attr="a" match="foo@foo.com"/>
            <t:select path="//mail:GetMsgResponse/mail:m/mail:su" match="${uploadFile.subject}"/>
			<t:select path="//mail:GetMsgResponse/mail:m/mail:mp[@ct='text/plain']/mail:content"/>
        </t:response>
    </t:test>


</t:test_case>

</t:tests>
