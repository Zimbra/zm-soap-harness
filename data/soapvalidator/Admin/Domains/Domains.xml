<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain1.name" value="test${TIME}${COUNTER}"/>
<t:property name="domain2.name" value="test${TIME}${COUNTER}"/>
<t:property name="domain3.name" value="test${TIME}${COUNTER}"/>
<t:property name="domain4.name" value="test${TIME}${COUNTER}"/>
<t:property name="domain5.name" value="test${TIME}${COUNTER}"/>

<t:property name="test_account1.name" value="test.${TIME}.${COUNTER}@${domain4.name}"/>
<t:property name="test_account2.name" value="test.${TIME}.${COUNTER}@${domain5.name}"/>

<t:property name="galresult" value="10"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:test_case testcaseid="GetDomainRequest01" type="smoke">
	<t:objective>Smoke test for GetDomainRequest</t:objective>
    
	<t:test id="admin_login" required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain1.name}</name>
                <a n="zimbraNotes">test of adding via SOAP</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id"  set="domain1.id"/>
        </t:response>        
    </t:test>

	<t:test>
        <t:request>
            <GetDomainRequest xmlns="urn:zimbraAdmin">
                <domain by="id">${domain1.id}</domain>
            </GetDomainRequest>
        </t:request>
        <t:response>
	        <t:select path="//admin:GetDomainResponse/admin:domain" attr="id"  match="^${domain1.id}$"/>
        </t:response>
    </t:test>
   
</t:test_case>

<t:test_case testcaseid="ModifyDomainRequest_01" type="smoke">
	<t:objective>Smoke test for ModifyDomainRequest </t:objective>
    
	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain2.name}</name>
                <a n="zimbraNotes">test of adding via SOAP</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id"  set="domain2.id"/>
        </t:response>        
    </t:test>
    
    <t:test>
        <t:request>
            <ModifyDomainRequest xmlns="urn:zimbraAdmin">
                <id>${domain2.id}</id>
                <a n="zimbraGalMaxResults">5000</a>
            </ModifyDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyDomainResponse/admin:domain"/>
        </t:response>
    </t:test>   
   
</t:test_case>

<t:test_case testcaseid="DeleteDomainRequest_01" type="smoke">
	<t:objective>Smoke test for DeleteDomainRequest</t:objective>
    
	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain3.name}</name>
                <a n="zimbraNotes">test of adding via SOAP</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id"  set="domain3.id"/>
        </t:response>        
    </t:test>
    
    <t:test>
        <t:request>
            <DeleteDomainRequest xmlns="urn:zimbraAdmin">
                <id>${domain3.id}</id>               
            </DeleteDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteDomainResponse"/>
        </t:response>
    </t:test>   
   
</t:test_case>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="GetDomainInfoRequest_01" type="smoke">
	<t:objective>Smoke test for GetDomainInfoRequest </t:objective>

	<t:test>
        <t:request>
            <GetDomainInfoRequest xmlns="urn:zimbraAdmin">
                <domain by="name">${defaultdomain.name}</domain>                 
            </GetDomainInfoRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetDomainInfoResponse/admin:domain" attr="name" match="${defaultdomain.name}"/>  
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="GetAllDomainsRequest_01" type="smoke">
    <t:objective>Smoke test for GetAllDomainsRequest</t:objective>
  
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

    <t:test>
        <t:request>
            <GetAllDomainsRequest  xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAllDomainsResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="GetAllAccountsRequest_01" type="smoke">
    <t:objective>Smoke test for GetAllAccountsRequest</t:objective>
  
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>
	
	<t:test required="true">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain4.name}</name>
                <a n="zimbraNotes">test of adding via SOAP</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain"/>
        </t:response>        
    </t:test>

	<t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" />
        </t:response>
    </t:test>  

    <t:test>
        <t:request>
            <GetAllAccountsRequest  xmlns="urn:zimbraAdmin">
             	<domain by="name">${domain4.name}</domain>
            </GetAllAccountsRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAllAccountsResponse/admin:account"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="GetQuotaUsageRequest_01" type="bhr">
    <t:objective>BHR test for GetQuotaUsageRequest</t:objective>
  
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

	<t:test >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>
	
	<t:test required="true">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain5.name}</name>
                <a n="zimbraNotes">test of adding via SOAP</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain"/>
        </t:response>        
    </t:test>

	<t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account2.id" />
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>  

 	<t:test>
        <t:request>
            <GetServerRequest xmlns="urn:zimbraAdmin">
                <server by="name">${account2.server}</server>
            </GetServerRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetServerResponse/admin:server" attr="id" set="account2.server.id"/>
        </t:response>
    </t:test>

    <t:test >
        <t:requestContext>
            <authToken>${authToken}</authToken>
            <targetServer>${account2.server.id}</targetServer>
        </t:requestContext>
        <t:request>
			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" domain="${domain5.name}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path="//admin:GetQuotaUsageResponse">
            	<t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${test_account2.name}']"/>
            </t:select>
        </t:response>
	</t:test>

</t:test_case>

</t:tests>

