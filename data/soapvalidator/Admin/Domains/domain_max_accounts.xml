<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain.name" value="${TIME}${COUNTER}"/>
<t:property name="domain.zimbra" value="zimbra"/>
<t:property name="domain.number" value="3"/>
<t:property name="account1.name" value="test.${TIME}.${COUNTER}@${domain.name}"/>
<t:property name="account2.name" value="test.${TIME}.${COUNTER}@${domain.name}"/>
<t:property name="account3.name" value="test.${TIME}.${COUNTER}@${domain.name}"/>
<t:property name="account4.name" value="test.${TIME}.${COUNTER}@${domain.name}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="admin_auth_domain_max_account" type="always" >
    <t:objective>Login to Admin Account</t:objective>
    
    <t:test id="admin_login" required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
    </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="domain_max_account" type="smoke">
<t:objective>Create a domain with limit on number of accounts and create an account more than allowed number</t:objective>    
    <t:steps>
		1.Create a domain which allows 3 accounts to be made at max.
		2. Create 3 accounts.
		4. Create 4th account and check the error.
	</t:steps>

    <t:test>
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">                
  				<name>${domain.name}</name>
				<a n="zimbraDomainMaxAccounts">${domain.number}</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain.id"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
             <t:select path="//admin:CreateAccountResponse/admin:account"/>
        </t:response>
    </t:test> 

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
              <t:select path="//admin:CreateAccountResponse/admin:account"/>
       </t:response>
    </t:test> 

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
             <t:select path="//admin:CreateAccountResponse/admin:account"/>
        </t:response>
    </t:test> 

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
             <t:select path = "//zimbra:Code" match = "^account.TOO_MANY_ACCOUNTS$"/>
       </t:response>
    </t:test> 

</t:test_case>

</t:tests>