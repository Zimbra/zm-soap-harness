  <t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="account1.name" value="test1${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test2${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="test3${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="dl1.name" value="dl${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="dl2.name" value="dl${TIME}${COUNTER}@${defaultdomain.name}"/>

<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
</t:test_case>



<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Create test accounts</t:objective>
   
    <!-- Login to admin -->
    <t:test id="admin_login" required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="create_account1" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>

    <t:test id="create_account2" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>
    
     
    <t:test>
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${dl1.name}</name>
                <a n="description">A test distribution list</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="dl1.id"/>
        </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="GetAdminConsoleUICompRequest01" type="bhr">
<t:objective>Send GetAdminConsoleUICompRequest on account by name</t:objective>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
    	<t:request>
    		<GetAdminConsoleUICompRequest xmlns="urn:zimbraAdmin" > 
    			<account by="name">${account1.name}</account>
    		</GetAdminConsoleUICompRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//admin:GetAdminConsoleUICompResponse"/>
    	</t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="GetAdminConsoleUICompRequest02" type="bhr">
<t:objective>Send GetAdminConsoleUICompRequest on account by id</t:objective>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
    	<t:request>
    		<GetAdminConsoleUICompRequest xmlns="urn:zimbraAdmin" > 
    			<account by="id">${account1.id}</account>
    		</GetAdminConsoleUICompRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//admin:GetAdminConsoleUICompResponse"/>
    	</t:response>
    </t:test>


</t:test_case>

<t:test_case testcaseid="GetAdminConsoleUICompRequest03" type="bhr">
<t:objective>Send GetAdminConsoleUICompRequest on DL by name</t:objective>
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
    	<t:request>
    		<GetAdminConsoleUICompRequest xmlns="urn:zimbraAdmin" > 
    			<dl by="name">${dl1.name}</dl>
    		</GetAdminConsoleUICompRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//admin:GetAdminConsoleUICompResponse"/>
    	</t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="GetAdminConsoleUICompRequest04" type="bhr">
<t:objective>Send GetAdminConsoleUICompRequest on DL by ID</t:objective>
   <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
    	<t:request>
    		<GetAdminConsoleUICompRequest xmlns="urn:zimbraAdmin" > 
    			<dl by="id">${dl1.id}</dl>
    		</GetAdminConsoleUICompRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//admin:GetAdminConsoleUICompResponse"/>
    	</t:response>
    </t:test>
</t:test_case>

<t:test_case testcaseid="GetAdminConsoleUICompRequest05" type="bhr">
<t:objective>Send GetAdminConsoleUICompRequest non existing account and DL</t:objective>
   <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
    	<t:request>
    		<GetAdminConsoleUICompRequest xmlns="urn:zimbraAdmin" > 
    			<dl by="name">${dl2.name}</dl>
    		</GetAdminConsoleUICompRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//zimbra:Code" match="account.NO_SUCH_DISTRIBUTION_LIST"/>
    	</t:response>
    </t:test>
    <t:test>
    	<t:request>
    		<GetAdminConsoleUICompRequest xmlns="urn:zimbraAdmin" > 
    			<account by="name">${account3.name}</account>
    		</GetAdminConsoleUICompRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//zimbra:Code" match="account.NO_SUCH_ACCOUNT"/>
    	</t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="GetAdminConsoleUICompRequest06" type="bhr">
<t:objective>Send GetAdminConsoleUICompRequest on account and dl together.</t:objective>

   <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    

    <t:test>
    	<t:request>
    		<GetAdminConsoleUICompRequest xmlns="urn:zimbraAdmin" > 
    			<account by="name">${account1.name}</account>
    			<dl by="name">${dl1.name}</dl>
    		</GetAdminConsoleUICompRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//zimbra:Code" match="service.INVALID_REQUEST"/>
    	</t:response>
    </t:test>

</t:test_case>

</t:tests>