<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="waitset.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="waitset.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="waitset.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="interest.all" value="all"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>


<t:test_case testcaseid="WaitSetRequest_01" type="bhr">
    <t:objective>Sanity test for AdminCreateWaitSetRequest, AdminWaitSetRequest, QueryWaitSetRequest and AdminDestroyWaitSetRequest</t:objective>
   
    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account2.id"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>  
        </t:response>
    </t:test>    

    <t:test >
        <t:request>
			<AdminCreateWaitSetRequest xmlns="urn:zimbraAdmin" defTypes="${interest.all}" >
				<add>
					<a id="${account1.id}" />
					<a id="${account2.id}" />
				</add>				
			</AdminCreateWaitSetRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AdminCreateWaitSetResponse" attr="seq" set="admin.waitset.seq"/>
            <t:select path="//admin:AdminCreateWaitSetResponse" attr="waitSet" set="admin.waitset.waitSet"/>
        </t:response>
    </t:test>

	<t:property name="msg01.file" value="${testMailRaw.root}/email01/msg01.txt"/>

    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <filename>${msg01.file}</filename>
			<to>${account3.name}</to>
			<from>${nonZimbraUser.name}</from>
			<server>${account3.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

    <t:test >
        <t:request>
			<AdminWaitSetRequest xmlns="urn:zimbraAdmin" waitSet="${admin.waitset.waitSet}" seq="${admin.waitset.seq}"  >
				 <remove>
	     		 	<a id="${account2.id}"/>
	   			</remove>
			</AdminWaitSetRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AdminWaitSetResponse">
            	<t:select path="//admin:a" attr="id" match="${account2.id}" emptyset="1"/>
            </t:select>
        </t:response>
    </t:test>    
             
    <t:test >
        <t:request>
			<QueryWaitSetRequest xmlns="urn:zimbraAdmin" waitSet="${admin.waitset.waitSet}"/>
        </t:request>
        <t:response>
            <t:select path="//admin:QueryWaitSetResponse" />
        </t:response>
    </t:test>
            
    <t:test >
        <t:request>
			<AdminDestroyWaitSetRequest xmlns="urn:zimbraAdmin" waitSet="${admin.waitset.waitSet}"/>
        </t:request>
        <t:response>
            <t:select path="//admin:AdminDestroyWaitSetResponse" />
        </t:response>
    </t:test>
        
</t:test_case>

</t:tests>