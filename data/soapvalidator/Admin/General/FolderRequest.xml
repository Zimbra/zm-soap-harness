<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain2.name" value="domain2.${TIME}.${COUNTER}.${defaultdomain.name}"/>
<t:property name="folder1.name" value="Briefcase.${TIME}.${COUNTER}"/>
<t:property name="folder2.name" value="Briefcase.${TIME}.${COUNTER}"/>
<t:property name="folder3.name" value="Briefcase.${TIME}.${COUNTER}"/>
<t:property name="folder4.name" value="Briefcase.${TIME}.${COUNTER}"/>
<t:property name="folder5.name" value="Briefcase.${TIME}.${COUNTER}"/>
<t:property name="folder2.name.new" value="Briefcase.${TIME}.${COUNTER}"/>

<t:property name="account1.name" value="account.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="account.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="account.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.name" value="account.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account5.name" value="account.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account6.name" value="account.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account7.name" value="account.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account8.name" value="account.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account9.name" value="account.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account10.name" value="account.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<t:property name="account6.document.textfile" value="${testMailRaw.root}/contact/contact1.txt"/>

<t:property name="grant.usr" value="usr"/>
<t:property name="op.grant" value="grant"/>
<t:property name="rights.read" value="r"/>

<t:property name="message.content" value="content${TIME}.${COUNTER}"/>
<t:property name="message.subject" value="subject${TIME}.${COUNTER}"/>

<t:property name="search.name1" value="Search01${TIME}.${COUNTER}"/>
<t:property name="query01" value="in:inbox"/>
<t:property name="query02" value="in:contacts"/>

<t:property name="type1" value="message"/>

 
  
<t:test_case testcaseid="GetFolderRequest_01" type="bhr"  >
    <t:objective>Sanity test for GetFolderRequest </t:objective>
   
     <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>
    
	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
    
     <t:test id="getFolderRequest">
        <t:request>
            <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.briefcase}']" attr="id" set="folder.briefcase"/>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="folder.inbox"/>
        </t:response>
    </t:test>      
    
</t:test_case>

<t:test_case testcaseid="CreateFolderRequest_01" type="bhr"  >
    <t:objective>Sanity test for CreateFolderRequest </t:objective>
   
     <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>
    
	<t:property name="server.zimbraAccount" value="${account2.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account2.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
    
     <t:test >
        <t:request>
            <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.briefcase}']" attr="id" set="folder.briefcase"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder l="${folder.briefcase}" name="${folder1.name}"/>  	 
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder1.id"/>			
        </t:response>
    </t:test>   
    
</t:test_case>

<t:test_case testcaseid="FolderActionRequest_01" type="bhr"  >
    <t:objective>Sanity test for FolderActionRequest </t:objective>
   
     <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>
     
	<t:property name="server.zimbraAccount" value="${account3.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account3.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
    
    <t:test>
        <t:request>
            <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.briefcase}']" attr="id" set="folder.briefcase"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder l="${folder.briefcase}" name="${folder2.name}"/>  	 
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder2.id"/>			
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
             	<action op="trash" id="${folder2.id}"/>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action[@id='${folder2.id}']" attr="op" match="trash"/>			
        </t:response>
    </t:test>
    
</t:test_case>

<t:test_case testcaseid="GetItemRequest_01" type="bhr"  >
    <t:objective>Sanity test for GetItemRequest </t:objective>
   
     <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>  
	<t:property name="server.zimbraAccount" value="${account4.server}"/>

    <t:test>
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account4.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
    
     <t:test id="getFolderRequest">
        <t:request>
            <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="folder.inbox.id"/>
        </t:response>
    </t:test> 
    
    <t:test>
        <t:request>
            <GetItemRequest xmlns="urn:zimbraMail">
                <item id="${folder.inbox.id}"/>
            </GetItemRequest>
        </t:request>
         <t:response>
              <t:select path="//mail:GetItemResponse/mail:folder" attr="name" match="Inbox" />
         </t:response>
    </t:test>    
    
</t:test_case>

<t:test_case testcaseid="SearchFolderRequest_01" type="bhr" >   
	<t:objective>Sanity test for CreateSearchFolderRequest, GetSearchFolderRequest and ModifySearchFolderRequest</t:objective>
	
     <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account5.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account5.server"/>
        </t:response>
    </t:test>
    
	<t:property name="server.zimbraAccount" value="${account5.server}"/>
		
	<t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account5.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
    
    <t:test >
		<t:request>
			<SendMsgRequest xmlns="urn:zimbraMail">
				<m>
					<e t="t" a="${account5.name}"/>					
					<su>${message.subject}</su>
					<mp ct="text/plain">
						<content>{$message.content}</content>
					</mp>
				</m>
			</SendMsgRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SendMsgResponse"/>
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<CreateSearchFolderRequest xmlns="urn:zimbraMail">
				<search name="${search.name1}" query="${query01}" types="${type1}" sortBy="dateDesc" l="1"/>
			</CreateSearchFolderRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:CreateSearchFolderResponse"/>
			<t:select path="//mail:CreateSearchFolderResponse/mail:search" attr="name" match="${search.name1}"/>
			<t:select path="//mail:CreateSearchFolderResponse/mail:search" attr="id" set="searchFolder.id"/>				
		</t:response>
	</t:test>
		
	<t:test>
		<t:request>
			<GetSearchFolderRequest xmlns="urn:zimbraMail">
			</GetSearchFolderRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:GetSearchFolderResponse/mail:search "/>
		</t:response>
	</t:test>
	
	<t:test>
		<t:request>
			<ModifySearchFolderRequest xmlns="urn:zimbraMail">
				<search id="${searchFolder.id}" query="${query02}" types="${type1}" sortBy="dateDesc" />
			</ModifySearchFolderRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:ModifySearchFolderResponse"/>
			<t:select path="//mail:ModifySearchFolderResponse/mail:search" attr="name" match="${search.name1}"/>
			<t:select path="//mail:ModifySearchFolderResponse/mail:search" attr="query" match="${query02}"/>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="CreateMountpointRequest_01" type="bhr" >   
	<t:objective>Sanity test for  CreateMountpointRequest</t:objective>
	
     <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account6.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
         	<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account6.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account6.server"/>
        </t:response>
    </t:test>    
    
    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account7.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account7.server"/>
        </t:response>
    </t:test>
    
	<t:property name="server.zimbraAccount" value="${account6.server}"/>
		
	<t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account6.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder l="${folder.briefcase}" name="${folder5.name}"  view="document" />  	 
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="account6.briefcase.folder.id"/>			
        </t:response>
    </t:test>
    
    <t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${account6.document.textfile}</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="document.textfile.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>
	
	<t:test >
        <t:request>
			<SaveDocumentRequest xmlns="urn:zimbraMail">
			  <doc l="${account6.briefcase.folder.id}">
			    <upload id="${document.textfile.aid}"/>
			  </doc>
			</SaveDocumentRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SaveDocumentResponse/mail:doc" attr="id" set="account6.document1.id"/>
        </t:response>
    </t:test>
       
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account6.briefcase.folder.id}">
					<grant gt="${grant.usr}" d="${account7.name}" perm="r"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>
   
   <t:property name="server.zimbraAccount" value="${account7.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account7.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test> 
    
    <t:test required="true">
        <t:request>
            <GetFolderRequest xmlns="urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="account7.folder.root"/>           
        </t:response>
    </t:test>

   <t:property name="shared.folder.name" value="Briefcase.${TIME}.${COUNTER}"/>
    <t:test required="true">
        <t:request>
            <CreateMountpointRequest xmlns="urn:zimbraMail">
                <link l="${account7.folder.root}" name="${shared.folder.name}" rid="${account6.briefcase.folder.id}" zid="${account6.id}" color="3" flag="urgent"/>
            </CreateMountpointRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account7.briefcase.delegated.id"/>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="owner" match="${account6.name}"/>
            <t:select path="//mail:CreateMountpointResponse/mail:link" attr="id" set="account7.shared.folder.id"/>
        </t:response>
    </t:test>    

</t:test_case>

<t:test_case testcaseid="SendShareNotificationRequest_01" type="bhr" >
    <t:objective>Sanity test for SendShareNotificationRequest </t:objective> 
    
     <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account8.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
         	<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account8.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account8.server"/>
        </t:response>
    </t:test>    
    
    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account9.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account9.server"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account9.server}"/>

	<t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account9.name}</account>
                <password>${defaultpassword.value}</password>                
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>	
		
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.calendar}']" attr="id" set="account9.folder.calendar.id"/>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.briefcase}']" attr="id" set="account9.folder.Briefcase.id"/>			
		</t:response>
	</t:test>

    <!--  Share the Calendar  folder with Account8 -->
    <t:test >
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action op="${op.grant}" id="${account9.folder.calendar.id}">
					<grant gt="${grant.usr}" d="${account8.name}" perm="${rights.read}"/>
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
	<!--  Send share notificationrequest to Account8 -->

    <t:test >
        <t:request>
            <SendShareNotificationRequest xmlns="urn:zimbraMail">
                <share l="${account9.folder.calendar.id}" gt="${grant.usr}" d="${account8.name}"/>
				<notes>test notes ${TIME}</notes>
            </SendShareNotificationRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:SendShareNotificationResponse"/>
        </t:response>
    </t:test>    
         
</t:test_case>

<t:test_case testcaseid="GetEffectivePermsRequest_01" type="bhr" >
    <t:objective>Sanity test for GetEffectivePermsRequest </t:objective> 
    
    <t:test  >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account10.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
         	<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account10.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account10.server"/>
        </t:response>
    </t:test>    
    
    
	<t:property name="server.zimbraAccount" value="${account10.server}"/>

	<t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account10.name}</account>
                <password>${defaultpassword.value}</password>                
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>	
		
	<t:test>
		<t:request>
			<GetFolderRequest xmlns="urn:zimbraMail"/>
		</t:request>
		<t:response>
			<t:select path="//mail:GetFolderResponse/mail:folder/mail:folder[@name='${globals.calendar}']" attr="id" set="account10.folder.calendar.id"/>
		</t:response>
	</t:test>

    <t:test >
        <t:request>
            <GetEffectiveFolderPermsRequest xmlns="urn:zimbraMail">
                <folder l="${account10.folder.calendar.id}" />				
            </GetEffectiveFolderPermsRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:GetEffectiveFolderPermsResponse/mail:folder"/>
        </t:response>
    </t:test>    
         
</t:test_case>

</t:tests>