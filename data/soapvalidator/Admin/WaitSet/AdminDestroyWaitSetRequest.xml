<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="waitset.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="waitset.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="waitset.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.name" value="waitset.${TIME}.${COUNTER}@${defaultdomain.name}"/>


<t:property name="interest.all" value="all"/>
<t:property name="interest.messages" value="m"/>
<t:property name="interest.appointments" value="a"/>
<t:property name="interest.contacts" value="c"/>



<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>
    
</t:test_case>





<t:test_case testcaseid="AdminDestroyWaitSetRequest01" type="smoke">
    <t:objective>AdminDestroyWaitSetRequest </t:objective>
    <t:steps>
    1. Login to admin
    2. Send the AdminCreateWaitSetRequest to create a wait set (allaccounts="1")
    3. Send AdminDestroyWaitSetRequest
    </t:steps>
    
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test required="true">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>
    
    <t:test >
        <t:request>
			<AdminCreateWaitSetRequest xmlns="urn:zimbraAdmin" defTypes="${interest.all}" allaccounts="1">
			</AdminCreateWaitSetRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AdminCreateWaitSetResponse" attr="seq" set="admin.waitset.seq"/>
            <t:select path="//admin:AdminCreateWaitSetResponse" attr="waitSet" set="admin.waitset.waitSet"/>
        </t:response>
    </t:test>

	<t:test>
       <t:request>
			<AdminDestroyWaitSetRequest waitSet="${admin.waitset.waitSet}" xmlns="urn:zimbraAdmin" >
			</AdminDestroyWaitSetRequest>
		</t:request>
	</t:test>
    
    <t:test concurrent="true">
        <t:request>
			<AdminWaitSetRequest xmlns="urn:zimbraAdmin" block="1" waitSet="${admin.waitset.waitSet}" seq="${admin.waitset.seq}" defTypes="${interest.all}" >
			</AdminWaitSetRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="admin.NO_SUCH_WAITSET" />
         </t:response>
    </t:test>




</t:test_case> 

<t:test_case testcaseid="AdminDestroyWaitSetRequest02" type="smoke">
    <t:objective>AdminDestroyWaitSetRequest non existing waitset</t:objective>
    <t:steps>
    1. Login to admin
    2. Send AdminDestroyWaitSetRequest
    </t:steps>
    
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test required="true">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    <t:property name="admin.waitset.waitSet" value="sdfsdf" />
  
	<t:test>
       <t:request>
			<AdminDestroyWaitSetRequest waitSet="${admin.waitset.waitSet}" xmlns="urn:zimbraAdmin" >
			</AdminDestroyWaitSetRequest>
		</t:request>
	</t:test>
    

</t:test_case> 



</t:tests>
