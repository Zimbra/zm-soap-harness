<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="domain.name" value="test${TIME}.com" />
<t:property name="account1.name" value="test1.${TIME}.${COUNTER}@${domain.name}"/>

<t:property name="cos1.account1.name" value="test2.${TIME}.${COUNTER}@${domain.name}"/>
<t:property name="cos2.account1.name" value="test3.${TIME}.${COUNTER}@${domain.name}"/>
<t:property name="cos3.account1.name" value="test4.${TIME}.${COUNTER}@${domain.name}"/>
<t:property name="cos4.account1.name" value="test4.${TIME}.${COUNTER}@${domain.name}"/>

<t:property name="cos1.name" value="cos1.${TIME}.${COUNTER}"/>
<t:property name="cos2.name" value="cos2.${TIME}.${COUNTER}"/>
<t:property name="cos3.name" value="cos3.${TIME}.${COUNTER}"/>
<t:property name="cos4.name" value="cos4.${TIME}.${COUNTER}"/>

<t:property name="subdomain.internal" value="sub${TIME}${COUNTER}.${domain.name}"/>
<t:property name="domain1.name" value="otherzcs${TIME}${COUNTER}.com"/>

<t:property name="internal.account" value="test1.${TIME}.${COUNTER}@${domain.name}"/>
<t:property name="otherdomain.zimbra.account" value="account1${TIME}@${domain1.name}"/>
<t:property name="subdomain.internal.account" value="account1${TIME}@${subdomain.internal}"/>
<t:property name="external.account" value="zimbraexttest@yahoo.com" />

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always" >
 <t:objective>basic system check</t:objective>
    <t:test required="true">
     <t:request>
       <PingRequest xmlns="urn:zimbraAdmin"/>
     </t:request>
      <t:response>
        <t:select path="//admin:PingResponse"/>
     </t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="admin_auth" type="always" >
 <t:objective>login as the admin</t:objective>
	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test id="CreateDomainRequest0a">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain.name}</name>
                <a n="zimbraInternalSharingCrossDomainEnabled">FALSE</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain.id"/>
        </t:response>
    </t:test>

	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${account1.name}</name>
				<password>${defaultpassword.value}</password>
				
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
	</t:test>

	
	 <t:test id="CreateDomainRequest0a">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain1.name}</name>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain1.id"/>
        </t:response>
    </t:test>
    

	 <t:test id="CreateDomainRequest0a">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${subdomain.internal}</name>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain2.id"/>
        </t:response>
    </t:test>



	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${internal.account}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="internal.account.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="internal.account.server"/>
		</t:response>
	</t:test>


	 <t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${otherdomain.zimbra.account}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="otherdomain.zimbra.account.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="otherdomain.zimbra.account.server"/>
		</t:response>
	</t:test>
	
	
	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${subdomain.internal.account}</name>
				<password>${defaultpassword.value}</password>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="subdomain.internal.account.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="subdomain.internal.account.server"/>
		</t:response>
	</t:test>
	
		
 </t:test_case>

<t:test_case testcaseid="zimbraExternalSharingEnabled01" type="smoke">
    <t:objective>Verify zimbraExternalSharingEnabled by default on any account that has default COS.  </t:objective>
    
    	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
       <t:test id="getFolderRequest" required="true">
        <t:request>
             <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="folder.inbox.id"/>
            <t:select path="//mail:folder[@name='${globals.briefcase}']" attr="id" set="folder.briefcase.id"/>
            <t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="folder.calendar.id"/>
            <t:select path="//mail:folder[@name='${globals.trash}']" attr="id" set="folder.trash.id"/>
            <t:select path="//mail:folder[@name='${globals.sent}']" attr="id" set="folder.sent.id"/>
            <t:select path="//mail:folder[@name='${globals.spam}']" attr="id" set="folder.spam.id"/> 
            <t:select path="//mail:folder[@name='${globals.drafts}']" attr="id" set="folder.drafts.id"/> 
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="folder.root.id"/>
        </t:response>
    </t:test>
    
    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${internal.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    			<t:select path="//mail:FolderActionResponse" />
    	</t:response>
    </t:test>
    
    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${subdomain.internal.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//mail:FolderActionResponse" />
    	</t:response>
    </t:test>

    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${otherdomain.zimbra.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//mail:FolderActionResponse" />
    	</t:response>
    </t:test>

    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${external.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    	<t:select path="//mail:FolderActionResponse" />
   	</t:response>
   </t:test>
  	<!-- Clearing ACL -->
	<t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${folder.briefcase.id}" op="update">
					<acl />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>      
</t:test_case>



<t:test_case testcaseid="zimbraExternalSharingEnabled02" type="smoke">
    <t:objective>Verify zimbraExternalSharingEnabled=FALSE on cos inherited by account </t:objective>
    
    <t:objective>login as the admin</t:objective>
	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test>
        <t:request>
            <CreateCosRequest xmlns="urn:zimbraAdmin">
                <name xmlns="">${cos1.name}</name>
                <a n="zimbraExternalSharingEnabled">FALSE</a>       
            </CreateCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="name" match="${cos1.name}"/>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos1.id"/>
        </t:response>
    </t:test>
	
	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${cos1.account1.name}</name>
				<password>${defaultpassword.value}</password>
				<a n="zimbraCOSId">${cos1.id}</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="cos1.account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="cos1.account1.server"/>
		</t:response>
	</t:test>

   <t:property name="server.zimbraAccount" value="${cos1.account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${cos1.account1.name}</account>
                <password>${defaultpassword.value}</password>
                <a n="zimbraExternalSharingEnabled">FALSE</a>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
       <t:test id="getFolderRequest" required="true">
        <t:request>
             <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="folder.inbox.id"/>
            <t:select path="//mail:folder[@name='${globals.briefcase}']" attr="id" set="folder.briefcase.id"/>
            <t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="folder.calendar.id"/>
            <t:select path="//mail:folder[@name='${globals.trash}']" attr="id" set="folder.trash.id"/>
            <t:select path="//mail:folder[@name='${globals.sent}']" attr="id" set="folder.sent.id"/>
            <t:select path="//mail:folder[@name='${globals.spam}']" attr="id" set="folder.spam.id"/> 
            <t:select path="//mail:folder[@name='${globals.drafts}']" attr="id" set="folder.drafts.id"/> 
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="folder.root.id"/>
        </t:response>
    </t:test>
    
    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${internal.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    			<t:select path="//mail:FolderActionResponse" />
    	</t:response>
    </t:test>
    
    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${subdomain.internal.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//zimbra:Code" match="service.PERM_DENIED" />
    	</t:response>
    </t:test>

    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${otherdomain.zimbra.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//zimbra:Code" match="service.PERM_DENIED" />
    	</t:response>
    </t:test>

    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${external.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//zimbra:Code" match="service.PERM_DENIED" />
   		</t:response>
   </t:test>

  	<!-- Clearing ACL -->
	<t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${folder.briefcase.id}" op="update">
					<acl />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>      
</t:test_case>

<t:test_case testcaseid="zimbraExternalSharingEnabled03" type="smoke">
    <t:objective>Verify zimbraExternalSharingEnabled=FALSE on account override COS value. </t:objective>
    
    <t:objective>login as the admin</t:objective>
	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test>
        <t:request>
            <CreateCosRequest xmlns="urn:zimbraAdmin">
                <name xmlns="">${cos2.name}</name>        
            </CreateCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="name" match="${cos2.name}"/>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos2.id"/>
        </t:response>
    </t:test>
	
	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${cos2.account1.name}</name>
				<password>${defaultpassword.value}</password>
				<a n="zimbraCOSId">${cos2.id}</a>
				<a n="zimbraExternalSharingEnabled">FALSE</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="cos2.account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="cos2.account1.server"/>
		</t:response>
	</t:test>

   <t:property name="server.zimbraAccount" value="${cos2.account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${cos2.account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
       <t:test id="getFolderRequest" required="true">
        <t:request>
             <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="folder.inbox.id"/>
            <t:select path="//mail:folder[@name='${globals.briefcase}']" attr="id" set="folder.briefcase.id"/>
            <t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="folder.calendar.id"/>
            <t:select path="//mail:folder[@name='${globals.trash}']" attr="id" set="folder.trash.id"/>
            <t:select path="//mail:folder[@name='${globals.sent}']" attr="id" set="folder.sent.id"/>
            <t:select path="//mail:folder[@name='${globals.spam}']" attr="id" set="folder.spam.id"/> 
            <t:select path="//mail:folder[@name='${globals.drafts}']" attr="id" set="folder.drafts.id"/> 
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="folder.root.id"/>
        </t:response>
    </t:test>
    
    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${internal.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    			<t:select path="//mail:FolderActionResponse" />
    	</t:response>
    </t:test>
    
    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${subdomain.internal.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//zimbra:Code" match="service.PERM_DENIED" />
    	</t:response>
    </t:test>

    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${otherdomain.zimbra.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//zimbra:Code" match="service.PERM_DENIED" />
    	</t:response>
    </t:test>

    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${external.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//zimbra:Code" match="service.PERM_DENIED" />
   		</t:response>
   </t:test>
      	<!-- Clearing ACL -->
	<t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${folder.briefcase.id}" op="update">
					<acl />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>  
</t:test_case>

<t:test_case testcaseid="zimbraExternalSharingEnabled04" type="smoke">
    <t:objective>Verify disabling zimbraExternalSharingEnabled on COS take effect on existing share. </t:objective>
	<t:steps>1. Create  COS (zimbraExternalSharingEnabled=TRUE) 
		2. create account having the COS create 
		3. share with internal and external account
		4. Modify COS (zimbraExternalSharingEnabled=FALSE)
		5.  Verify no further external share possible..  
	</t:steps>	
    
    <t:objective>login as the admin</t:objective>
	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test>
        <t:request>
            <CreateCosRequest xmlns="urn:zimbraAdmin">
                <name xmlns="">${cos3.name}</name>        
            </CreateCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="name" match="${cos3.name}"/>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos3.id"/>
        </t:response>
    </t:test>
	
	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${cos3.account1.name}</name>
				<password>${defaultpassword.value}</password>
				<a n="zimbraCOSId">${cos3.id}</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="cos3.account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="cos3.account1.server"/>
		</t:response>
	</t:test>

   <t:property name="server.zimbraAccount" value="${cos3.account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${cos3.account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
       <t:test id="getFolderRequest" required="true">
        <t:request>
             <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="folder.inbox.id"/>
            <t:select path="//mail:folder[@name='${globals.briefcase}']" attr="id" set="folder.briefcase.id"/>
            <t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="folder.calendar.id"/>
            <t:select path="//mail:folder[@name='${globals.trash}']" attr="id" set="folder.trash.id"/>
            <t:select path="//mail:folder[@name='${globals.sent}']" attr="id" set="folder.sent.id"/>
            <t:select path="//mail:folder[@name='${globals.spam}']" attr="id" set="folder.spam.id"/> 
            <t:select path="//mail:folder[@name='${globals.drafts}']" attr="id" set="folder.drafts.id"/> 
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="folder.root.id"/>
        </t:response>
    </t:test>
    
    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${internal.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    			<t:select path="//mail:FolderActionResponse" />
    	</t:response>
    </t:test>
    
    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${subdomain.internal.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//mail:FolderActionResponse" />
    	</t:response>
    </t:test>

    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${otherdomain.zimbra.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//mail:FolderActionResponse" />
    	</t:response>
    </t:test>

    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${external.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//mail:FolderActionResponse" />
   		</t:response>
   </t:test>
  	<!-- Clearing ACL -->
	<t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${folder.briefcase.id}" op="update">
					<acl />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>
       <t:objective>login as the admin</t:objective>
	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>
   
   <t:test >
        <t:request>
            <ModifyCosRequest xmlns="urn:zimbraAdmin">
                <id>${cos3.id}</id>
                <a n="zimbraExternalSharingEnabled">FALSE</a>
            </ModifyCosRequest>
        </t:request>
        <t:response>   
			<select path="//admin:ModifyCosResponse" />
		</t:response>
	</t:test>
	<t:property name="server.zimbraAccount" value="${cos3.account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${cos3.account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    	
	<t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${internal.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    			<t:select path="//mail:FolderActionResponse" />
    	</t:response>
    </t:test>
    
    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${subdomain.internal.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//zimbra:Code" match="service.PERM_DENIED" />
    	</t:response>
    </t:test>

    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${otherdomain.zimbra.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//zimbra:Code" match="service.PERM_DENIED" />
    	</t:response>
    </t:test>

    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${external.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//zimbra:Code" match="service.PERM_DENIED" />
   		</t:response>
   </t:test>

  	<!-- Clearing ACL -->
	<t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${folder.briefcase.id}" op="update">
					<acl />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="zimbraExternalSharingEnabled05" type="smoke">
    <t:objective>Verify disabling zimbraExternalSharingEnabled on Account take effect on existing share. </t:objective>
	<t:steps>1. Create  COS (zimbraExternalSharingEnabled=TRUE) 
		2. create account having the COS create 
		3. share with internal and external account
		4. Modify Account(zimbraExternalSharingEnabled=FALSE)
		5. Verify no further external share possible.. 
	</t:steps>	
    
    <t:objective>login as the admin</t:objective>
	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>

	<t:test>
        <t:request>
            <CreateCosRequest xmlns="urn:zimbraAdmin">
                <name xmlns="">${cos4.name}</name>        
            </CreateCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="name" match="${cos4.name}"/>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos4.id"/>
        </t:response>
    </t:test>
	
	<t:test required="true">
		<t:request>
			<CreateAccountRequest xmlns="urn:zimbraAdmin">
				<name>${cos4.account1.name}</name>
				<password>${defaultpassword.value}</password>
				<a n="zimbraCOSId">${cos4.id}</a>
			</CreateAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="cos4.account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="cos4.account1.server"/>
		</t:response>
	</t:test>

   <t:property name="server.zimbraAccount" value="${cos4.account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${cos4.account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
       <t:test id="getFolderRequest" required="true">
        <t:request>
             <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.inbox}']" attr="id" set="folder.inbox.id"/>
            <t:select path="//mail:folder[@name='${globals.briefcase}']" attr="id" set="folder.briefcase.id"/>
            <t:select path="//mail:folder[@name='${globals.calendar}']" attr="id" set="folder.calendar.id"/>
            <t:select path="//mail:folder[@name='${globals.trash}']" attr="id" set="folder.trash.id"/>
            <t:select path="//mail:folder[@name='${globals.sent}']" attr="id" set="folder.sent.id"/>
            <t:select path="//mail:folder[@name='${globals.spam}']" attr="id" set="folder.spam.id"/> 
            <t:select path="//mail:folder[@name='${globals.drafts}']" attr="id" set="folder.drafts.id"/> 
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="folder.root.id"/>
        </t:response>
    </t:test>
    
    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${internal.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    			<t:select path="//mail:FolderActionResponse" />
    	</t:response>
    </t:test>
    
    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${subdomain.internal.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//mail:FolderActionResponse" />
    	</t:response>
    </t:test>

    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${otherdomain.zimbra.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//mail:FolderActionResponse" />
    	</t:response>
    </t:test>

    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${external.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//mail:FolderActionResponse" />
   		</t:response>
   </t:test>

<!-- Clearing ACL -->
	<t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${folder.briefcase.id}" op="update">
					<acl />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
    
	<t:property name="server.zimbraAccount" value="${subdomain.internal.account.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${subdomain.internal.account}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    	
	<t:test>
    	<t:request>
    			<GetFolderRequest xmlns="urn:zimbraMail" >
    			</GetFolderRequest>
    	</t:request>
    	<t:response>
    			<t:select path="//mail:GetFolderResponse" />
    	</t:response>
    </t:test>
	<t:test>
    	<t:request>
    			<GetShareInfoRequest xmlns="urn:zimbraAccount" >
    			</GetShareInfoRequest>
    	</t:request>
    	<t:response>
    			<t:select path="//acct:GetShareInfoResponse" />
    	</t:response>
    </t:test>
    
    
	<t:test required="true" >
		<t:request>
			<AuthRequest xmlns="urn:zimbraAdmin">
				<name>${admin.user}</name>
				<password>${admin.password}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
		</t:response>
	</t:test>
   
   <t:test >
        <t:request>
            <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                <id>${cos4.account1.id}</id>
                <a n="zimbraExternalSharingEnabled">FALSE</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>   
			<select path="//admin:ModifyAccountResponse" />
		</t:response>
	</t:test>
	<t:property name="server.zimbraAccount" value="${cos4.account1.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${cos4.account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
    	
	<t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${internal.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    			<t:select path="//mail:FolderActionResponse" />
    	</t:response>
    </t:test>
    
    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${subdomain.internal.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//zimbra:Code" match="service.PERM_DENIED" />
    	</t:response>
    </t:test>

    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${otherdomain.zimbra.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//zimbra:Code" match="service.PERM_DENIED" />
    	</t:response>
    </t:test>

    <t:test>
    	<t:request>
    			<FolderActionRequest xmlns="urn:zimbraMail" requestId="0">
    				<action xmlns="" op="grant" id="${folder.briefcase.id}"><grant gt="guest" inh="1" d="${external.account}" perm="r" /></action>
    			</FolderActionRequest>
    	</t:request>
    	<t:response>
    		<t:select path="//zimbra:Code" match="service.PERM_DENIED" />
   		</t:response>
   </t:test>


  	<!-- Clearing ACL -->
	<t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${folder.briefcase.id}" op="update">
					<acl />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>
    
    
	<t:property name="server.zimbraAccount" value="${subdomain.internal.account.server}"/>

    <t:test >
        <t:request >
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${subdomain.internal.account}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
        	
	<t:test>
    	<t:request>
    			<GetFolderRequest xmlns="urn:zimbraMail" >
    			</GetFolderRequest>
    	</t:request>
    	<t:response>
    			<t:select path="//mail:GetFolderResponse" />
    	</t:response>
    </t:test>
    	
	<t:test>
    	<t:request>
    			<GetShareInfoRequest xmlns="urn:zimbraAccount" >
    			</GetShareInfoRequest>
    	</t:request>
    	<t:response>
    			<t:select path="//acct:GetShareInfoResponse" />
    	</t:response>
    </t:test>
      	<!-- Clearing ACL -->
	<t:test>
        <t:request>
            <FolderActionRequest xmlns="urn:zimbraMail">
                <action id="${folder.briefcase.id}" op="update">
					<acl />
                </action>
            </FolderActionRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:FolderActionResponse/mail:action"/>
        </t:response>
    </t:test>

</t:test_case>



</t:tests>