<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="reindex1.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="reindex2.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="reindex3.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account4.name" value="reindex4.${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account5.name" value="reindex5.${TIME}.${COUNTER}@${defaultdomain.name}"/>

<!-- For old mails -->
<t:property name="mime1.dir" value="${testMailRaw.root}/ReIndex"/>
<t:property name="mime1.message1.subject" value="summary of current activities"/>
   	

<!-- For new mails -->
<t:property name="mime2.dir" value="${testMailRaw.root}/ReIndex2"/>
<t:property name="mime2.message1.subject" value="email13D"/>


<t:property name="server.index.dir" value="/opt/zimbra/index/0"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>



<t:test_case testcaseid="ReIndexRequest_01" type="smoke" >
    <t:objective> To search for old messages after deleting the index file </t:objective>
    <t:steps> 1. Inject test mails to account2
              2. Search for message before deleting index file
              3. Delete the index file
              4. Reindex the account
              5. Login to account2
              6. Search for old messages 
    </t:steps>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
     
    <t:test  id="create_test_account1" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>
   
    <t:test>
        <t:request>
            <GetMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${account1.id}"/>
            </GetMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetMailboxResponse">
	            <t:select path="//admin:mbox" attr="mbxid" set="account1.mailbox.id"/>
            </t:select>
        </t:response>
    </t:test>


    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <foldername>${mime1.dir}</foldername>
            <to>${account1.name}</to>
            <from>${nonZimbraUser.name}</from>
            <server>${account1.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

   	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${mime1.message1.subject})</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m"/>
		</t:response>
	</t:test>


	<!-- Delete the index file -->
	<t:staftask >
		<t:request>
			<server>${account1.server}</server>
			<service>FS</service>
			<params>DELETE ENTRY ${server.index.dir}/${account1.mailbox.id} CHILDREN NAME * RECURSE CONFIRM</params>
		</t:request>
	</t:staftask>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
     
	<t:test>
        <t:request>
            <ReIndexRequest xmlns="urn:zimbraAdmin" action="start">
               <mbox id="${account1.id}"/>   
            </ReIndexRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ReIndexResponse" attr="status" match="started"/>
        </t:response>
    </t:test>
	
    <t:test delay="${reindexdelay.msec}">
        <t:request>
            <ReIndexRequest xmlns="urn:zimbraAdmin" action="status">
               <mbox id="${account1.id}"/>   
            </ReIndexRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ReIndexResponse" attr="status" match="idle"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>
	
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

   	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${mime1.message1.subject})</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m"/>
		</t:response>
	</t:test>

</t:test_case>

 
<t:test_case testcaseid="ReIndexRequest_02" type="smoke">
    <t:objective> To search for new messages (added after the index was deleted) after Reindex request </t:objective>
    <t:steps> 1. Inject test mails to account2
              2. Delete the index file
              3. Send ReIndex request
              4. Inject new mails to account2
              5. Login to account2
              6. Search for new messages
              7. Search for old message
    </t:steps>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
     
    <t:test required="true" depends="admin_login" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <GetMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${account2.id}"/>
            </GetMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetMailboxResponse">
	            <t:select path="//admin:mbox" attr="mbxid" set="account2.mailbox.id"/>
            </t:select>
        </t:response>
    </t:test>

    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <foldername>${mime1.dir}</foldername>
            <to>${account2.name}</to>
            <from>${nonZimbraUser.name}</from>
            <server>${account2.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
			    <password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

   	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(Meeting Follow Up)</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m" />
		</t:response>
	</t:test>

	<!-- Delete the index file -->
	<t:staftask >
		<t:request>
			<server>${account2.server}</server>
			<service>FS</service>
			<params>DELETE ENTRY ${server.index.dir}/${account2.mailbox.id} CHILDREN NAME * RECURSE CONFIRM</params>
		</t:request>
	</t:staftask>

   <t:test  id="admin_login" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
     	
	<t:test>
        <t:request>
            <ReIndexRequest xmlns="urn:zimbraAdmin" action="start">
               <mbox id="${account2.id}"/>   
            </ReIndexRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ReIndexResponse"/>
        </t:response>
    </t:test>

    <t:test delay="${reindexdelay.msec}">
        <t:request>
            <ReIndexRequest xmlns="urn:zimbraAdmin" action="status">
               <mbox id="${account2.id}"/>   
            </ReIndexRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ReIndexResponse" attr="status" match="idle"/>
        </t:response>
    </t:test>

    <t:mailinjecttest >
        <t:lmtpInjectRequest>
            <foldername>${mime2.dir}</foldername>
            <to>${account2.name}</to>
            <from>${nonZimbraUser.name}</from>
            <server>${account2.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

	<t:property name="server.zimbraAccount" value="${account2.server}"/>
	
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account2.name}</account>
			    <password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

		</t:response>
	</t:test>

   	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${mime2.message1.subject})</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m" />
		</t:response>
	</t:test>

   	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="message">
				<query>subject:(${mime1.message1.subject})</query>
			</SearchRequest>
		</t:request>
        <t:response>
			<t:select path="//mail:SearchResponse/mail:m" />
		</t:response>
	</t:test>


</t:test_case>


<t:test_case testcaseid="ReIndexRequest_03" type="smoke" >
    <t:objective> Cancel a reindex request - ReIndexRequest with action="cancel"  </t:objective>
    <t:steps> 1. Inject mail into an account
              2. Remove the index file
              3. Run reIndex request with status=start
              4. Run reIndex request with status=cancel
    </t:steps>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
     
    <t:test  id="create_test_account3" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>
   
    <t:test>
        <t:request>
            <GetMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${account3.id}"/>
            </GetMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetMailboxResponse">
	            <t:select path="//admin:mbox" attr="mbxid" set="account3.mailbox.id"/>
            </t:select>
        </t:response>
    </t:test>

	
    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <foldername>${mime1.dir}</foldername>
            <to>${account3.name}</to>
            <from>${nonZimbraUser.name}</from>
            <server>${account3.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

	<!-- Delete the index file -->
	<t:staftask >
		<t:request>
			<server>${account3.server}</server>
			<service>FS</service>
			<params>DELETE ENTRY ${server.index.dir}/${account3.mailbox.id} CHILDREN NAME * RECURSE CONFIRM</params>
		</t:request>
	</t:staftask>
	
	
    <t:test>
        <t:request>
            <ReIndexRequest xmlns="urn:zimbraAdmin" action="start">
               <mbox id="${account3.id}"/>   
            </ReIndexRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ReIndexResponse"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <ReIndexRequest xmlns="urn:zimbraAdmin" action="cancel">
               <mbox id="${account3.id}"/>   
            </ReIndexRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ReIndexResponse" attr="status" match="cancelled"/>
        </t:response>
    </t:test>

    <t:test delay="${reindexdelay.msec}">
        <t:request>
            <ReIndexRequest xmlns="urn:zimbraAdmin" action="status">
               <mbox id="${account3.id}"/>   
            </ReIndexRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ReIndexResponse" attr="status" match="idle"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="ReIndexRequest_04" type="functional" bugids="51327" >
    <t:objective> ReIndexRequest for an account which is never reindexed with action="cancel" and action="status" </t:objective>
	<t:steps>
	1. Auth as user1 to create the mailbox
	2. Send ReindexRequest with action=cancel ... Expect: NOT_IN_PROGRESS
	2. Send ReindexRequest with action=status ... Expect: NOT_IN_PROGRESS
	</t:steps>
	
	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
     
    <t:test required="true" depends="admin_login" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test>
   
   <t:test required="true">
		<t:request>
			<GetMailboxRequest xmlns="urn:zimbraAdmin">
				<mbox id="${account4.id}"/>
			</GetMailboxRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetMailboxResponse/admin:mbox" attr="mbxid"  set="account4.mbxid"/>
		</t:response>
	</t:test>
	
	<t:property name="server.zimbraAccount" value="${account4.server}"/>
	
	<t:test required="true">
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account4.name}</account>
			    <password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test  id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <ReIndexRequest xmlns="urn:zimbraAdmin" action="cancel">
               <mbox id="${account4.id}"/>   
            </ReIndexRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ReIndexResponse" attr="status" match="idle"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <ReIndexRequest xmlns="urn:zimbraAdmin" action="status">
               <mbox id="${account4.id}"/>   
            </ReIndexRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ReIndexResponse" attr="status" match="idle"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="ReIndexRequest_05" type="functional" >
    <t:objective>Reindex an account whose mailbox do not exists (never logged in)</t:objective>

    <t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    
    <t:test >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
     
    <t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account5.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account5.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account5.server"/>
        </t:response>
    </t:test>
   
    <t:test>
        <t:request>
            <ReIndexRequest xmlns="urn:zimbraAdmin" action="start">
               <mbox id="${account5.id}"/>   
            </ReIndexRequest>
        </t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="service.FAILURE"/>
        </t:response>
    </t:test>    
    
</t:test_case>



</t:tests>
