<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>



<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="GetMailboxVersionRequest_Basic01" areas="network" type="always">
    <t:objective>GetMailboxVersionRequest</t:objective>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
   <t:test id="create_account1"  depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <GetMailboxRequest xmlns="urn:zimbraAdmin">
                <mbox id="${account1.id}"/>
            </GetMailboxRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetMailboxResponse">
	            <t:select path="//admin:mbox" attr="mbxid" set="account1.mailbox.id"/>
            </t:select>
        </t:response>
    </t:test>
    
    <t:test>
    	 <t:request>
            <GetMailboxVersionRequest xmlns="urn:zimbraAdmin">
                <account name="${account1.name}"></account>
             </GetMailboxVersionRequest>
         	</t:request>
            <t:response>
            	<t:select path="//admin:GetMailboxVersionResponse/admin:account"  attr="mbxid" match="^[0-9].*"/>
            	<t:select path="//admin:GetMailboxVersionResponse/admin:account"  attr="majorVer" match="^[0-9].*"/>
            	<t:select path="//admin:GetMailboxVersionResponse/admin:account"  attr="minorVer" match="^[0-9].*"/>
            	<t:select path="//admin:GetMailboxVersionResponse/admin:account"  attr="dbVer" match="^[0-9].*"/>
            	<t:select path="//admin:GetMailboxVersionResponse/admin:account"  attr="indexVer" match="^[0-9].*"/>
           	</t:response>
    </t:test>
    </t:test_case>
    
    <t:test_case testcaseid="GetMailboxVersionRequest_Basic02" areas="network" type="always">
    <t:objective>GetMailboxVersionRequest f0r non exiting account </t:objective>

    <t:test required="true" >
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>


    <t:test>
    	 <t:request>
            <GetMailboxVersionRequest xmlns="urn:zimbraAdmin">
                <account name="${account2.name}"></account>
             </GetMailboxVersionRequest>
         	</t:request>
            <t:response>
            	<t:select path="//zimbra:Code" match="account.NO_SUCH_ACCOUNT" />
           	</t:response>
    </t:test>
    </t:test_case>
    
    
 </t:tests>
 
    