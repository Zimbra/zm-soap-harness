<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="test${TIME}.${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="test${TIME}.${COUNTER}"/>
<t:property name="account4.name" value="test${TIME}.${COUNTER}"/>
<t:property name="account5.name" value="test${TIME}.${COUNTER}"/>
<t:property name="account6.name" value="test${TIME}.${COUNTER}"/>

<t:property name="defcos.name" value="default"/>
<t:property name="cos.name" value="testcos${TIME}${COUNTER}"/>
<t:property name="nonexistcos.name" value="nonexistcos${TIME}${COUNTER}"/>

<t:property name="domain.name" value="testdomain${TIME}.${COUNTER}.com"/>
<t:property name="domainlimit.name" value="testdomainlimit${TIME}.${COUNTER}.com"/>
<t:property name="nonexistdomain.name" value="nonexistdomain${TIME}.${COUNTER}.com"/>

<t:property name="sortByT.name" value="totalUsed"/>
<t:property name="sortByP.name" value="percentUsed"/>
<t:property name="sortByQ.name" value="quotaLimit"/>
<t:property name="sortBy1.name" value="totalUnUsed"/>
<t:property name="nonexistsortBy.name" value="nonexistsortBy"/>

<t:property name="MailQuota90MB" value="94371840"/>
<t:property name="MailQuota5.5MB" value="5767168"/>
<t:property name="MailQuota2MB" value="2097152"/>

<t:property name="root" value="${soapxml.root}/Admin/Miscellaneous/lmtp/Attachments"/>
<t:property name="msg1mb.file" value="${root}/1mb.txt"/> 
<t:property name="msg2mb.file" value="${root}/2mb.txt"/> 
<t:property name="msg5mb.file" value="${root}/5mb.txt"/> 

<t:property name="blank" value=""/>
<t:property name="space" value="             "/>
<t:property name="sometext" value="Some text"/>
<t:property name="spchar" value=":''&lt;//\\"/>
<t:property name="negative" value="-1"/>
<t:property name="zero" value="0"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:test_case testcaseid="Basic Check_GetQuotaUsage" type="always" >
    <t:objective>basic system check</t:objective>

    <t:test id="ping" required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="Acct_setup02_GetQuotaUsage" type="always" >
    <t:objective>Create Domain, COS and test account</t:objective>
    <steps> 
        1. Login to admin account.
        2. Create a new Domain.
		3. Create a COS with valid name.
		4. Create test accounts as, 
		5. Account1 with default domain and default COS.
		6. Account2 with default domain and user-defined COS.
		7. Account3 with user-defined domain and user-defined COS.
    </steps>

    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    
    <t:test id="CreateDomainRequest1a" depends="admin_login">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain.name}</name>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="name" set="domain.name"/>
        </t:response>
    </t:test>
    
    <t:test id = "CreateCosRequest1a" depends="admin_login" >
        <t:request>
            <CreateCosRequest xmlns="urn:zimbraAdmin">
                <name xmlns="">${cos.name}</name>        
            </CreateCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCosResponse/admin:cos" attr="id" set="cos.id"/>
        </t:response>
    </t:test>


    <t:test>
        <t:request>
            <GetAllCosRequest xmlns="urn:zimbraAdmin">
            </GetAllCosRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:GetAllCosResponse/admin:cos[@name='default']" attr="id" set="defcos.id"/>
        </t:response>
    </t:test>


    <t:test id="create_account1" required="false" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>    
				<a n="zimbraCOSId">${defcos.id}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
        </t:response>
    </t:test> 

    <t:test id="create_account2" required="false" depends="CreateCosRequest1a">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2.name}</name>
                <password>${defaultpassword.value}</password>  
				<a n="zimbraCOSId">${cos.id}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
        </t:response>
    </t:test>

    <t:test id="create_account3" required="false" depends="CreateCosRequest1a,CreateDomainRequest1a">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3.name}@${domain.name}</name>
                <password>${defaultpassword.value}</password>
				<a n = "zimbraCOSId">${cos.id}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account3.server"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="GetQuotaUsage01A" type="smoke" >
    <t:objective>Verify the accounts using sortBy="totalUsed"</t:objective>
    <t:test>
        <t:request>
			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortBy="${sortByT.name}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path="//admin:GetQuotaUsageResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="GetQuotaUsage01B" type="smoke" >
    <t:objective>Verify the accounts using sortBy percentUsed </t:objective>

	<t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortBy="percentUsed" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path="//admin:GetQuotaUsageResponse"/>
		</t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="GetQuotaUsage01C" type="smoke" >
    <t:objective>Verify the accounts using sortBy quotaLimit </t:objective>

	<t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortBy="quotaLimit" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path="//admin:GetQuotaUsageResponse"/>
		</t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="GetQuotaUsage02" type="smoke">
    <t:objective>Verify the accounts using domain="defaultdomain.name"</t:objective>
    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" domain="${defaultdomain.name}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <!--
            	Since the created account cannot be assured that it is in the top 25
            	quota users, the tests will just verify that any account is returned
            -->
            <t:select path="//admin:GetQuotaUsageResponse/admin:account"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="GetQuotaUsage03" type="smoke" >
    <t:objective>Verify the accounts using domain="test domain"</t:objective>
    
    
	<t:property name="server.zimbraAdmin" value="${account3.server}"/>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" domain="${domain.name}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="id" match="${account3.id}"/>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="used" match="0"/>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="limit" match="0"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="GetQuotaUsage04" type="deprecated" bugids="7734">
    <t:objective>Verify the accounts using cos="default"</t:objective>
    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" cos="${defcos.name}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <!--
            	Since the created account cannot be assured that it is in the top 25
            	quota users, the tests will just verify that any account is returned
            -->
            <t:select path="//admin:GetQuotaUsageResponse/admin:account"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="GetQuotaUsage05" type="deprecated" >
    <t:objective>Verify the accounts using cos="test cos"</t:objective>
    
	<t:property name="server.zimbraAdmin" value="${account2.server}"/>
    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" cos="${cos.name}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account2.name}']" attr="id" match="${account2.id}"/>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account2.name}']" attr="used" match="0"/>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account2.name}']" attr="limit" match="0"/>
        </t:response>
    </t:test>
    
	<t:property name="server.zimbraAdmin" value="${account3.server}"/>
    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" cos="${cos.name}" offset="0" limit="25"/>
		</t:request>
        <t:response>
			<t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="id" match="${account3.id}"/>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="used" match="0"/>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="limit" match="0"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="GetQuotaUsage06" type="deprecated" bugids="7734" >
    <t:objective>Verify the accounts using domain and cos="default"</t:objective>
    
	<t:property name="server.zimbraAdmin" value="${account1.server}"/>
    
    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" cos="${defcos.name}" domain="${defaultdomain.name}" />
		</t:request>
        <t:response>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account1.name}']" attr="id" match="${account1.id}"/>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account1.name}']" attr="used" match="0"/>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account1.name}']" attr="limit" match="0"/>

        </t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="GetQuotaUsage07" type="functional" >
    <t:objective>Verify the accounts using domain='test domain' and cos='test cos' </t:objective>
    
	<t:property name="server.zimbraAdmin" value="${account3.server}"/>    
    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" cos="${cos.name}" domain="${domain.name}" offset="0" limit="25"/>
		</t:request>
        <t:response>
			<t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="id" match="${account3.id}"/>
			<t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="used" match="0"/>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="limit" match="0"/>
        </t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="GetQuotaUsage08" type="smoke" bugids="7734" >
    <t:objective>Verify the accounts using domain and cos="default" and sortBy="totalUsed" </t:objective>


	<t:property name="server.zimbraAdmin" value="${account1.server}"/>
    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortBy="${sortByT.name}" cos="${defcos.name}" domain="${defaultdomain.name}" />
		</t:request>
        <t:response>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account1.name}']" attr="id" match="${account1.id}"/>
			<t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account1.name}']" attr="used" match="0"/>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account1.name}']" attr="limit" match="0"/>
		</t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="GetQuotaUsage09" type="functional" >
    <t:objective>Verify the accounts using domain='test domain',cos='test cos' and sortBy="totalUsed" </t:objective>


	<t:property name="server.zimbraAdmin" value="${account3.server}"/>
    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortBy="${sortByT.name}" cos="${cos.name}" domain="${domain.name}" offset="0" limit="25"/>
		</t:request>
        <t:response>
			<t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="id" match="${account3.id}"/>
			<t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="used" match="0"/>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="limit" match="0"/>
		</t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="GetQuotaUsage10" type="functional" >
    <t:objective>Verify the accounts using domain='test domain',cos='test cos',sortBy="totalUsed" </t:objective>


	<t:property name="server.zimbraAdmin" value="${account3.server}"/>
    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortBy="${sortByT.name}" cos="${cos.name}" domain="${domain.name}" offset="0" limit="25"/>
		</t:request>
        <t:response>
			<t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="id" match="${account3.id}"/>
			<t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="used" match="0"/>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="limit" match="0"/>
		</t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="GetQuotaUsage11" type="smoke" >
    <t:objective>Verify the accounts using default domain ,sortBy="totalUsed" and sortAscending="0"</t:objective>


	<t:property name="server.zimbraAdmin" value="${account1.server}"/>
    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortBy="${sortByT.name}"  domain="${defaultdomain.name}" sortAscending="0" offset="0" />
		</t:request>
        <t:response>
			<t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account1.name}']" attr="id" match="${account1.id}"/>
			<t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account1.name}']" attr="used" match="0"/>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account1.name}']" attr="limit" match="0"/>
        </t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="GetQuotaUsage12" type="functional" >
    <t:objective>Verify the accounts using domain='test domain',cos='test cos',sortBy="totalUsed" and sortAscending="0"</t:objective>


	<t:property name="server.zimbraAdmin" value="${account3.server}"/>
    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortBy="${sortByT.name}" cos="${cos.name}" domain="${domain.name}" sortAscending="0" offset="0" limit="25"/>
		</t:request>
        <t:response>
			<t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="id" match="${account3.id}"/>
			<t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="used" match="0"/>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account3.name}@${domain.name}']" attr="limit" match="0"/>
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="GetQuotaUsage13" type="negative" >
    <t:objective>Verify the accounts using non existing domain, cos,sortBy and sortAscending</t:objective>
    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortBy="${sortBy1.name}" cos="${nonexistcos.name}" domain="${nonexistdomain.name}" sortAscending="-2" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="GetQuotaUsage14" type="negative" >
    <t:objective>Verify the accounts using non-existing/spaces/blank/spchar/sometext/negative/zero domain </t:objective>
       <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" domain="${nonexistdomain.name}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_DOMAIN"/>
		</t:response>
    </t:test>
    
	<t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" domain="${blank}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_DOMAIN"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" domain="${space}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_DOMAIN"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" domain="${spchar}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_DOMAIN"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" domain="${sometext}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_DOMAIN"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" domain="${negative}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_DOMAIN"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" domain="${zero}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_DOMAIN"/>
		</t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="GetQuotaUsage15" type="deprecated" >
    <t:objective>Verify the accounts using non-existing/spaces/blank/spchar/sometext/negative/zero cos </t:objective>

	<t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" cos="${nonexistcos.name}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_COS"/>
		</t:response>
    </t:test>
    
	<t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" cos="${blank}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_COS"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" cos="${space}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_COS"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" cos="${spchar}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_COS"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" cos="${sometext}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_COS"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" cos="${negative}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_COS"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" cos="${zero}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^account.NO_SUCH_COS"/>
		</t:response>
    </t:test>
</t:test_case>



<t:test_case testcaseid="GetQuotaUsage17" type="negative" >
    <t:objective>Verify the accounts using spaces/blank/spchar/sometext/negative/zero sortBy </t:objective>

	<t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortBy="${sortBy1.name}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
    </t:test>

	<t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortBy="${blank}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortBy="${space}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortBy="${spchar}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortBy="${sometext}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortBy="${negative}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortBy="${zero}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
    </t:test>
</t:test_case>


<t:test_case testcaseid="GetQuotaUsage18" type="negative" >
    <t:objective>Verify the accounts using invalid values in sortAscending</t:objective>
    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortAscending="${blank}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortAscending="${space}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortAscending="${spchar}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortAscending="${sometext}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
    </t:test>

    <t:test>
        <t:request>
  			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" sortAscending="${negative}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path= "//zimbra:Code" match="^service.INVALID_REQUEST"/>
		</t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="GetQuotaUsage19A" type="functional" bugids="7906" >
    <t:objective>Verify the specific order of accounts, if sorted using sortyby=totalUsed after injecting mails into the accounts. </t:objective>
	<t:steps>
			1. Login into admin and Create a test domain.
			2. Create Accounts.
			3. Inject mails into the account such that 
					  Account4 displays 9 MB used, 90 MB limit, 10% quota used.
					  Account5 displays 5 MB used, 5500 KB limit, 90% quota used
					  Account6 displays 1 MB used, 2 MB limit, 50% quota used
	</t:steps>

    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    
    <t:test id="CreateDomainRequest2a" depends="admin_login">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domainlimit.name}</name>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="name" set="domainlimit.name"/>
        </t:response>
    </t:test>

    <t:test id="create_account4" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4.name}@${domainlimit.name}</name>
                <password>${defaultpassword.value}</password>    
				<a n="zimbraMailQuota">${MailQuota90MB}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account4.server"/>
        </t:response>
    </t:test> 

    <t:test id="create_account5" required="true" depends="admin_login" >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account5.name}@${domainlimit.name}</name>
                <password>${defaultpassword.value}</password>  
				<a n="zimbraMailQuota">${MailQuota5.5MB}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account5.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account5.server"/>
		</t:response>
    </t:test>

    <t:test id="create_account6" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account6.name}@${domainlimit.name}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraMailQuota">${MailQuota2MB}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="account6.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account6.server"/>
        </t:response>
    </t:test>

    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${msg5mb.file}</filename>
            <to>${account4.name}@${domainlimit.name}</to>
            <from>${nonZimbraUser.name}</from>
            <server>${account4.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${msg2mb.file}</filename>
            <to>${account4.name}@${domainlimit.name}</to>
            <from>${nonZimbraUser.name}</from>
            <server>${account4.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${msg2mb.file}</filename>
            <to>${account4.name}@${domainlimit.name}</to>
            <from>${nonZimbraUser.name}</from>
            <server>${account4.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${msg5mb.file}</filename>
            <to>${account5.name}@${domainlimit.name}</to>
            <from>${nonZimbraUser.name}</from>
            <server>${account5.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest>

    <t:mailinjecttest>
        <t:lmtpInjectRequest>
            <filename>${msg1mb.file}</filename>
            <to>${account6.name}@${domainlimit.name}</to>
            <from>${nonZimbraUser.name}</from>
            <server>${account6.server}</server>
        </t:lmtpInjectRequest>
    </t:mailinjecttest> 

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAdmin" value="${account4.server}"/>
	<t:test>
        <t:request>
			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" domain="${domainlimit.name}" sortBy="${sortByT.name}" offset="0" limit="25"/>
		</t:request>
        <t:response>
            <t:select path="//admin:GetQuotaUsageResponse/admin:account[@limit='94371840']" attr="name" match="${account4.name}@${domainlimit.name}"/>
			<t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account4.name}@${domainlimit.name}']" attr="used" match="^831\d+"/> <!-- 9MB -->
        </t:response>
    </t:test>

	<t:property name="server.zimbraAdmin" value="${account5.server}"/>
	<t:test>
        <t:request>
			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" domain="${domainlimit.name}" sortBy="${sortByT.name}" offset="0" limit="25"/>
		</t:request>
        <t:response>
			<t:select path="//admin:GetQuotaUsageResponse/admin:account[@limit='5767168']" attr="name" match="${account5.name}@${domainlimit.name}"/>
			<t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account5.name}@${domainlimit.name}']" attr="used" match="^545\d+"/> <!-- 5MB -->
        </t:response>
    </t:test>

	<t:property name="server.zimbraAdmin" value="${account6.server}"/>
	<t:test>
        <t:request>
			<GetQuotaUsageRequest xmlns="urn:zimbraAdmin" domain="${domainlimit.name}" sortBy="${sortByT.name}" offset="0" limit="25"/>
		</t:request>
        <t:response>
			<t:select path="//admin:GetQuotaUsageResponse/admin:account[@limit='2097152']" attr="name" match="${account6.name}@${domainlimit.name}"/>
			<t:select path="//admin:GetQuotaUsageResponse/admin:account[@name='${account6.name}@${domainlimit.name}']" attr="used" match="^1433\d+"/> <!-- 2MB -->
        </t:response>
    </t:test>

</t:test_case>
 

</t:tests>