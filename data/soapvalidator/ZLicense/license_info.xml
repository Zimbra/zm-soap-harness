<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="test_account1.name" value="test${TIME}${COUNTER}@${defaultdomain.name}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
<t:property name="value.true" value="true"/>

<t:property name="zcslicense.xml.file.name" value="/tmp/ZCSLicense${TIME}${COUNTER}.xml"/>

<t:test_case testcaseid="Ping" type="always">
    <t:objective>Basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<!--  
	Reload the original license.xml file once these tests are completed 
-->
<t:finally>

	<!--  Get the license file -->
	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND " bash /opt/qa/soapvalidator/data/TestMailRaw/license/HttpGetByWget.sh" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>
	
	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>FS</service>
			<params>COPY FILE regular.xml TOFILE /opt/zimbra/regular.xml TOMACHINE ${zimbraServer.name}</params>
		</t:request>
	</t:staftask>
	
	<!--  Reinstall it -->
	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/zmlicense  -i /opt/zimbra/regular.xml\'" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>	
	
	<!--  Activate the license -->
	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/zmlicense  -a \'" RETURNSTDOUT RETURNSTDERR WAIT ${staf.process.timeout.default}</params>
		</t:request>
	</t:staftask>
	
    <t:test id="getLicenseInfo01a">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
        <t:request>
			<FlushCacheRequest xmlns="urn:zimbraAdmin">
				<cache type="config"/>
			</FlushCacheRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:FlushCacheResponse"/>
        </t:response>
    </t:test> 

	<t:test>
        <t:request>
            <GetLicenseRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:GetLicenseResponse"/>
		</t:response>
    </t:test>  

</t:finally>
	

<t:test_case testcaseid="GetLicenseInfo01" type="smoke">
    <t:objective>Get License Info</t:objective>
    <t:steps>
        1. Login into Admin
        2. Get License Info    
    </t:steps>
    
    <t:test id="getLicenseInfo01a">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
            <t:select path="//admin:AuthResponse/admin:authToken" set="admin.authToken"/>
        </t:response>
    </t:test>

    <t:test depends="getLicenseInfo01a">
        <t:request>
            <GetLicenseInfoRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:GetLicenseInfoResponse/admin:expiration" attr="date"/>
        </t:response>
    </t:test>  

	
</t:test_case>


<t:test_case testcaseid="GetLicense01" areas="network" type="smoke">
    <t:objective>Get License request. Verify all attributes returned in the response</t:objective>

	<t:test>
        <t:request>
            <GetLicenseRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:GetLicenseResponse/admin:license/admin:attr[@name='AccountsLimit']" emptyset="0"/>
            <t:select path="//admin:GetLicenseResponse/admin:license/admin:attr[@name='AttachmentConversionEnabled']" match="${value.true}"/>
            <t:select path="//admin:GetLicenseResponse/admin:license/admin:attr[@name='BackupEnabled']" match="${value.true}"/>
            <t:select path="//admin:GetLicenseResponse/admin:license/admin:attr[@name='CrossMailboxSearchEnabled']" match="${value.true}"/>
            <t:select path="//admin:GetLicenseResponse/admin:license/admin:attr[@name='HierarchicalStorageManagementEnabled']" match="${value.true}"/>
            <t:select path="//admin:GetLicenseResponse/admin:license/admin:attr[@name='ISyncAccountsLimit']" emptyset="0"/>
            <t:select path="//admin:GetLicenseResponse/admin:license/admin:attr[@name='InstallType']" emptyset="0"/> 
			<t:select path="//admin:GetLicenseResponse/admin:license/admin:attr[@name='IssuedOn']" emptyset="0"/> 
			<t:select path="//admin:GetLicenseResponse/admin:license/admin:attr[@name='IssuedToEmail']" emptyset="0"/>
			<t:select path="//admin:GetLicenseResponse/admin:license/admin:attr[@name='IssuedToName']" emptyset="0"/>
			<t:select path="//admin:GetLicenseResponse/admin:license/admin:attr[@name='LicenseId']" emptyset="0"/>
			<t:select path="//admin:GetLicenseResponse/admin:license/admin:attr[@name='MAPIConnectorAccountsLimit']" emptyset="0"/>
			<t:select path="//admin:GetLicenseResponse/admin:license/admin:attr[@name='MobileSyncAccountsLimit']" emptyset="0"/>
			<t:select path="//admin:GetLicenseResponse/admin:license/admin:attr[@name='MobileSyncEnabled']" match="${value.true}"/>
			<t:select path="//admin:GetLicenseResponse/admin:license/admin:attr[@name='ValidFrom']" emptyset="0"/>
			<t:select path="//admin:GetLicenseResponse/admin:license/admin:attr[@name='ValidUntil']" emptyset="0"/>
			<t:select path="//admin:GetLicenseResponse/admin:info/admin:attr[@name='TotalAccounts']" emptyset="0"/>
			<t:select path="//admin:GetLicenseResponse/admin:info/admin:attr[@name='ServerTime']" emptyset="0"/>
		</t:response>
    </t:test>  

</t:test_case>

<t:test_case testcaseid="InstallLicense01" areas="network" type="smoke">
    <t:objective>Install license info.</t:objective>

	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${testMailRaw.root}/license/license01.xml</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="license1.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

	<t:test>
        <t:request>
			<InstallLicenseRequest xmlns="urn:zimbraAdmin">
				<content aid="${license1.aid}"/>
			</InstallLicenseRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:InstallLicenseResponse"/>
        </t:response>
    </t:test> 

</t:test_case>

<t:test_case testcaseid="FlushLicense01" areas="network" type="smoke" bugids="14195">
    <t:objective>Flush license info.</t:objective>
	<t:steps>
		1. Get the current LicenseId
		2. Upload a new license
		3. Flush cache
		4. Verify LicenseId has changed
	</t:steps>

	<t:test>
        <t:request>
            <GetLicenseRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:GetLicenseResponse">
				<t:select path="//admin:attr[@name='LicenseId']" set="licenseid.value"/>
			</t:select>
		</t:response>
    </t:test>  

	<t:uploadservlettest>
		<t:uploadServletRequest>
			<filename>${testMailRaw.root}/license/license02.xml</filename>
		</t:uploadServletRequest>
		<t:uploadServletResponse>
			<t:select attr="id" set="license2.aid"/>
		</t:uploadServletResponse>
	</t:uploadservlettest>

	<t:test>
        <t:request>
			<InstallLicenseRequest xmlns="urn:zimbraAdmin">
				<content aid="${license2.aid}"/>
			</InstallLicenseRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:InstallLicenseResponse"/>
        </t:response>
    </t:test> 

	<t:test>
        <t:request>
			<FlushCacheRequest xmlns="urn:zimbraAdmin">
				<cache type="config"/>
			</FlushCacheRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:FlushCacheResponse"/>
        </t:response>
    </t:test> 

	<t:test>
        <t:request>
            <GetLicenseRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:GetLicenseResponse">
				<t:select path="//admin:attr[@name='LicenseId']" match="${licenseid.value}" emptyset="1"/>
			</t:select>
		</t:response>
    </t:test>  

</t:test_case>

</t:tests>
