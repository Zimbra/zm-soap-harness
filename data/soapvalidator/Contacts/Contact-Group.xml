<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="account${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account2.name" value="account${TIME}${COUNTER}@${defaultdomain.name}"/>
<t:property name="account3.name" value="account${TIME}${COUNTER}@${defaultdomain.name}"/>



<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
    </t:test>  
</t:test_case>
 

<t:test_case testcaseid="Contact_Groups_01" type="bhr" >
    <t:objective>Create contact group</t:objective>
	<t:steps>
	1. Login as account1
	2. Create group contact with account2 and account3.
	3. Verify search groups has both the contacts.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="group1.name" value="group${TIME}${COUNTER}"/>

    <t:test >
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
				<cn >
					<a n="type">group</a>
					<a n="fileAs">8:${group1.name}</a>
					<a n="nickname">${group1.name}</a>
					<a n="dlist">${account2.name},${account3.name}</a>
				</cn>
			</CreateContactRequest>
        </t:request>
        <t:response>
        	<t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="group1.id"/>          
        </t:response>
    </t:test>
  
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="contact">
				<query>contact:(${group1.name})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:cn" attr="fileAsStr" match="${group1.name}">
				<t:select path="mail:a[@n='nickname']" match="${group1.name}" />
				<t:select path="mail:a[@n='type']" match="group" />
				<t:select path="mail:a[@n='dlist']" match="${account2.name},${account3.name}" />
			</t:select>
		</t:response>
	</t:test>
</t:test_case>

<t:test_case testcaseid="Contact_Groups_02" type="bhr" >
    <t:objective>Modify contact group</t:objective>
	<t:steps>
	1. Login as account1
	2. Create group contact with account2 and account3.
	3. Verify search contact groups has both the contacts.
	4. Add an email address and remove account from group.
	5. Verify search contact group has updated.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="group1.name" value="group${TIME}${COUNTER}"/>
	<t:property name="email.address" value="test${COUNTER}@domain.com"/>

    <t:test >
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
				<cn >
					<a n="type">group</a>
					<a n="fileAs">8:${group1.name}</a>
					<a n="nickname">${group1.name}</a>
					<a n="dlist">${account2.name},${account3.name}</a>
				</cn>
			</CreateContactRequest>
        </t:request>
        <t:response>
        	<t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="group1.id"/>          
        </t:response>
    </t:test>
  
    <t:test>
        <t:request>
            <ModifyContactRequest xmlns = "urn:zimbraMail" replace = "0">
                <cn id = "${group1.id}">
                    <a n = "dlist">${account2.name},${email.address}</a>
                </cn>
            </ModifyContactRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:ModifyContactResponse/mail:cn" attr="id" set="group1.id"/>
        </t:response>
    </t:test>
    
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="contact">
				<query>contact:(${group1.name})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:cn" attr="fileAsStr" match="${group1.name}">
				<t:select path="mail:a[@n='nickname']" match="${group1.name}" />
				<t:select path="mail:a[@n='type']" match="group" />
				<t:select path="mail:a[@n='dlist']" match="${account2.name},${email.address}" />
			</t:select>
		</t:response>
	</t:test>

</t:test_case>

<t:test_case testcaseid="Contact_Groups_03" type="bhr" >
    <t:objective>Modify contact to contact group</t:objective>
	<t:steps>
	1. Login as account1
	2. Create a contact
	3. Modify the contact to contact group.
	4. Verify contact get converted into group.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="group1.name" value="group${TIME}${COUNTER}"/>
	<t:property name="email.address" value="test@domain.com"/>
	<t:property name="first.name" value="First${COUNTER}_Name${COUNTER}"/>
	<t:property name="last.name" value="Last${COUNTER}_Name${COUNTER}"/>


    <t:test>
        <t:request>
            <CreateContactRequest xmlns = "urn:zimbraMail">
                <cn>
                    <a n = "firstName">${first.name}</a>
                    <a n = "lastName">${last.name}</a>
                    <a n = "email">${email.address}</a>
                </cn>
            </CreateContactRequest>
        </t:request>
        <t:response>
            <t:select path = "//mail:CreateContactResponse/mail:cn">
            <t:select attr = "id" set = "contact.id"/>            
            </t:select>
        </t:response>
    </t:test>	

    <t:test>
        <t:request>
            <ModifyContactRequest xmlns = "urn:zimbraMail" replace = "1">
                <cn id = "${contact.id}">
					<a n="type">group</a>
					<a n="fileAs">8:${group1.name}</a>
					<a n="nickname">${group1.name}</a>
					<a n="dlist">${account2.name},${account3.name}</a>
				</cn>
			</ModifyContactRequest>
        </t:request>
        <t:response>
        	<t:select path="//mail:ModifyContactResponse/mail:cn" attr="id" set="group1.id"/>          
        </t:response>
    </t:test>
  
  	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="contact">
				<query>contact:(${group1.name})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:cn" attr="fileAsStr" match="${group1.name}">
				<t:select path="mail:a[@n='nickname']" match="${group1.name}" />
				<t:select path="mail:a[@n='type']" match="group" />
				<t:select path="mail:a[@n='dlist']" match="${account2.name},${account3.name}" />
			</t:select>
		</t:response>
	</t:test>
</t:test_case>

<t:test_case testcaseid="Contact_Groups_04" type="bhr" >
    <t:objective>Create contact group in sub folder</t:objective>
	<t:steps>
	1. Login as account1
	2. create a folder
	2. Create group contact with account2 and account3 in folder created at step #2.
	3. Verify search groups has both the contacts.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
               <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.contacts}']" attr="id" set="contacts.id"/>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="root.id"/> 
        </t:response>
    </t:test>
	<t:property name="folder1.name" value="folder${TIME}"/>    
    <t:test id="createFolderRequest1" >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder1.name}" l="${contacts.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder1.id"/>
        </t:response>
    </t:test>


	<t:property name="group1.name" value="group${TIME}${COUNTER}"/>

    <t:test >
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
				<cn l="${folder1.id}">
					<a n="type">group</a>
					<a n="fileAs">8:${group1.name}</a>
					<a n="nickname">${group1.name}</a>
					<a n="dlist">${account2.name},${account3.name}</a>
				</cn>
			</CreateContactRequest>
        </t:request>
        <t:response>
        	<t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="group1.id"/>          
        </t:response>
    </t:test>
  
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="contact">
				<query>in:contacts/${folder1.name}(${group1.name})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:cn" attr="fileAsStr" match="${group1.name}">
				<t:select path="mail:a[@n='nickname']" match="${group1.name}" />
				<t:select path="mail:a[@n='type']" match="group" />
				<t:select path="mail:a[@n='dlist']" match="${account2.name},${account3.name}" />
			</t:select>
		</t:response>
	</t:test>
</t:test_case>

<t:test_case testcaseid="Contact_Groups_05" type="bhr" >
    <t:objective>Delete contact group</t:objective>
	<t:steps>
	1. Login as account1
	2. Create group contact with account2 and account3.
	3. Verify search groups has both the contacts.
	4. Delete contact group.
	5. Verify contact group deleted.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="group1.name" value="group${TIME}${COUNTER}"/>

    <t:test >
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
				<cn >
					<a n="type">group</a>
					<a n="fileAs">8:${group1.name}</a>
					<a n="nickname">${group1.name}</a>
					<a n="dlist">${account2.name},${account3.name}</a>
				</cn>
			</CreateContactRequest>
        </t:request>
        <t:response>
        	<t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="group1.id"/>          
        </t:response>
    </t:test>

   <t:test depends="contactaction1b">
        <t:request>
            <ContactActionRequest xmlns="urn:zimbraMail">
            <action id="${group1.id}" op="delete"/>
            </ContactActionRequest>
        </t:request>
        <t:response>
	        <t:select path="//mail:ContactActionResponse/mail:action"/>
        </t:response>
    </t:test>

  
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="contact">
				<query>contact:(${group1.name})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:cn" emptyset="1" />
		</t:response>
	</t:test>
</t:test_case>

<t:test_case testcaseid="Contact_Groups_06" type="bhr" >
    <t:objective>Move contact group</t:objective>
	<t:steps>
	1. Login as account1
	2. Create group contact with account2 and account3 in default folder.
	3. Create a folder
	4. Move contact group to new folder.
	5. Verify contact group Moved.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
	<t:property name="folder2.name" value="folder2${TIME}"/>    

    <t:test>
        <t:request>
               <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.contacts}']" attr="id" set="contacts.id"/>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="root.id"/> 
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder2.name}" l="${contacts.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder2.id"/>
        </t:response>
    </t:test>

	<t:property name="group1.name" value="group${TIME}${COUNTER}"/>

    <t:test >
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
				<cn >
					<a n="type">group</a>
					<a n="fileAs">8:${group1.name}</a>
					<a n="nickname">${group1.name}</a>
					<a n="dlist">${account2.name},${account3.name}</a>
				</cn>
			</CreateContactRequest>
        </t:request>
        <t:response>
        	<t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="group1.id"/>          
        </t:response>
    </t:test>

   <t:test>
        <t:request>
            <ContactActionRequest xmlns="urn:zimbraMail">
	            <action id="${group1.id}" op="move" l="${folder2.id}"/>
            </ContactActionRequest>
        </t:request>
        <t:response>
	        <t:select path="//mail:ContactActionResponse/mail:action"/>
        </t:response>
    </t:test>

  
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="contact">
				<query>in:contacts/${folder2.name}(${group1.name})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:cn" attr="fileAsStr" match="${group1.name}">
				<t:select path="mail:a[@n='nickname']" match="${group1.name}" />
				<t:select path="mail:a[@n='type']" match="group" />
				<t:select path="mail:a[@n='dlist']" match="${account2.name},${account3.name}" />
			</t:select>
		</t:response>
		
	</t:test>
</t:test_case>

<t:test_case testcaseid="Contact_Groups_07" type="bhr" >
    <t:objective>Delete contact group from folder</t:objective>
	<t:steps>
	1. Login as account1
	2. Create group contact with account2 and account3 in default folder.
	3. Create a folder
	4. Move contact group to new folder.
	5. Verify contact group Moved.
	6. Delete contact group.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>
	<t:property name="folder2.name" value="folder2${TIME}"/>    

    <t:test>
        <t:request>
               <GetFolderRequest xmlns = "urn:zimbraMail"/>
        </t:request>
        <t:response>
            <t:select path="//mail:folder[@name='${globals.contacts}']" attr="id" set="contacts.id"/>
            <t:select path="//mail:folder[@name='${globals.root}']" attr="id" set="root.id"/> 
        </t:response>
    </t:test>
    
    <t:test>
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="${folder2.name}" l="${contacts.id}"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder2.id"/>
        </t:response>
    </t:test>

	<t:property name="group1.name" value="group${TIME}${COUNTER}"/>

    <t:test >
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
				<cn >
					<a n="type">group</a>
					<a n="fileAs">8:${group1.name}</a>
					<a n="nickname">${group1.name}</a>
					<a n="dlist">${account2.name},${account3.name}</a>
				</cn>
			</CreateContactRequest>
        </t:request>
        <t:response>
        	<t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="group1.id"/>          
        </t:response>
    </t:test>

   <t:test>
        <t:request>
            <ContactActionRequest xmlns="urn:zimbraMail">
	            <action id="${group1.id}" op="move" l="${folder2.id}"/>
            </ContactActionRequest>
        </t:request>
        <t:response>
	        <t:select path="//mail:ContactActionResponse/mail:action"/>
        </t:response>
    </t:test>

  
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="contact">
				<query>in:contacts/${folder2.name}(${group1.name})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:cn" attr="fileAsStr" match="${group1.name}">
				<t:select path="mail:a[@n='nickname']" match="${group1.name}" />
				<t:select path="mail:a[@n='type']" match="group" />
				<t:select path="mail:a[@n='dlist']" match="${account2.name},${account3.name}" />
			</t:select>
		</t:response>
	</t:test>
   	<t:test>
        <t:request>
            <ContactActionRequest xmlns="urn:zimbraMail">
	            <action id="${group1.id}" op="delete"/>
            </ContactActionRequest>
        </t:request>
        <t:response>
	        <t:select path="//mail:ContactActionResponse/mail:action"/>
        </t:response>
    </t:test>

  
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="contact">
				<query>contact:(${group1.name})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:cn" emptyset="1"/>
		</t:response>
	</t:test>
</t:test_case>
<t:test_case testcaseid="Contact_Groups_08" type="bhr" >
    <t:objective>Create contact group with member having first name and last name</t:objective>
	<t:steps>
	1. Login as account1
	2. Create group contact with "firstname lastname" email format.
	3. Verify search groups has both the contacts.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:property name="group1.name" value="group${TIME}${COUNTER}"/>
	<t:property name="member1.fname" value="Fname-${COUNTER}"/>
	<t:property name="member1.lname" value="lastname-${COUNTER}"/>
	<t:property name="member1.email" value="email-${COUNTER}@test.com.on"/>
	<t:property name="member2.fname" value="Fname-${COUNTER}"/>
	<t:property name="member2.lname" value="lastname-${COUNTER}"/>
	<t:property name="member2.email" value="email-${COUNTER}@test.com.on"/>
	<t:property name="member3.fname" value="Fname-${COUNTER}"/>
	<t:property name="member3.lname" value="lastname-${COUNTER}"/>
	<t:property name="member3.email" value="email-${COUNTER}@test.com.on"/>

    <t:test >
        <t:request>
            <CreateContactRequest xmlns="urn:zimbraMail">
				<cn >
					<a n="type">group</a>
					<a n="fileAs">8:${group1.name}</a>
					<a n="nickname">${group1.name}</a>
					<a n="dlist">"${member1.fname} ${member1.lname}"&lt;${member1.email}&gt;,"${member2.fname} ${member2.lname}"&lt;${member2.email}&gt;;"${member3.fname} ${member3.lname}"&lt;${member3.email}&gt;</a>
				</cn>
			</CreateContactRequest>
        </t:request>
        <t:response>
        	<t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="group1.id"/>          
        </t:response>
    </t:test>
  
	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="contact">
				<query>contact:(${group1.name})</query>
			</SearchRequest>
		</t:request>
		<t:response>
			<t:select path="//mail:SearchResponse/mail:cn" attr="fileAsStr" match="${group1.name}">
				<t:select path="mail:a[@n='nickname']" match="${group1.name}" />
				<t:select path="mail:a[@n='type']" match="group" />
				<t:select path="mail:a[@n='dlist']" match='^"${member1.fname} ${member1.lname}"&lt;${member1.email}&gt;,"${member2.fname} ${member2.lname}"&lt;${member2.email}&gt;;"${member3.fname} ${member3.lname}"&lt;${member3.email}&gt;' />
			</t:select>
		</t:response>
	</t:test>
</t:test_case>



</t:tests>