<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="account1.name" value="account${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="contact1.email" value="account${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="contact1.firstname" value="first${COUNTER}${TIME}"/>
<t:property name="contact1.lastname" value="last${COUNTER}${TIME}"/>
<t:property name="contact2.email" value="account${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="contact2.firstname" value="first${COUNTER}${TIME}"/>
<t:property name="contact2.lastname" value="last${COUNTER}${TIME}"/>
<t:property name="contact3.email" value="account${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="contact3.firstname" value="${contact2.firstname}"/>
<t:property name="contact3.lastname" value="last${COUNTER}${TIME}"/>
<t:property name="contact4.email" value="account${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="contact4.firstname" value="first${COUNTER}${TIME}"/>
<t:property name="contact4.lastname" value="last${COUNTER}${TIME}"/>
<t:property name="contact5.email" value="account${COUNTER}${TIME}@${defaultdomain.name}"/>
<t:property name="contact5.firstname" value="${contact2.firstname}"/>
<t:property name="contact5.lastname" value="last${COUNTER}${TIME}"/>
<t:property name="contact6.email" value="test.test.talk_twist@special.char.com"/>
<t:property name="contact6.firstname" value="Conf -  hillview"/>
<t:property name="contact6.lastname" value="test.server-vmware - dash"/>
<t:property name="contact7.email" value="starhash@steel.com"/>
<t:property name="contact7.firstname" value="Mr. Tim*star"/>
<t:property name="contact7.lastname" value="dollar$_Hash#and&amp;"/>

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test >
        <t:request>
        	<CreateContactRequest xmlns="urn:zimbraMail">
                <cn >
                    <a n="firstName">${contact1.firstname}</a>
                    <a n="lastName">${contact1.lastname}</a>
                    <a n="fullName">${contact1.firstname} ${contact1.lastname}</a>
                    <a n="email">${contact1.email}</a>
                </cn>     
        	</CreateContactRequest>
        </t:request>
        <t:response>
        	<t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="contact1.id"/>          
        </t:response>
    </t:test>

    <t:test >
        <t:request>
        	<CreateContactRequest xmlns="urn:zimbraMail">
                <cn >
                    <a n="firstName">${contact2.firstname}</a>
                    <a n="lastName">${contact2.lastname}</a>
                    <a n="fullName">${contact2.firstname} ${contact2.lastname}</a>
                    <a n="email">${contact2.email}</a>
                </cn>     
        	</CreateContactRequest>
        </t:request>
        <t:response>
        	<t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="contact2.id"/>          
        </t:response>
    </t:test>

    <t:test >
        <t:request>
        	<CreateContactRequest xmlns="urn:zimbraMail">
                <cn >
                    <a n="firstName">${contact3.firstname}</a>
                    <a n="lastName">${contact3.lastname}</a>
                    <a n="fullName">${contact3.firstname} ${contact3.lastname}</a>
                    <a n="email">${contact3.email}</a>
                </cn>     
        	</CreateContactRequest>
        </t:request>
        <t:response>
        	<t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="contact3.id"/>          
        </t:response>
    </t:test>

    <t:test >
        <t:request>
            <CreateFolderRequest xmlns="urn:zimbraMail">
                <folder name="folder${TIME}${COUNTER}" l="1" view="contact"/>
            </CreateFolderRequest>
        </t:request>
        <t:response>
            <t:select path="//mail:CreateFolderResponse/mail:folder" attr="id" set="folder1.id"/>
        </t:response>
	</t:test>

    <t:test >
        <t:request>
        	<CreateContactRequest xmlns="urn:zimbraMail">
                <cn l="${folder1.id}">
                    <a n="firstName">${contact4.firstname}</a>
                    <a n="lastName">${contact4.lastname}</a>
                    <a n="fullName">${contact4.firstname} ${contact4.lastname}</a>
                    <a n="email">${contact4.email}</a>
                </cn>     
        	</CreateContactRequest>
        </t:request>
        <t:response>
        	<t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="contact4.id"/>          
        </t:response>
    </t:test>

    <t:test >
        <t:request>
        	<CreateContactRequest xmlns="urn:zimbraMail">
                <cn l="${folder1.id}">
                    <a n="firstName">${contact5.firstname}</a>
                    <a n="lastName">${contact5.lastname}</a>
                    <a n="fullName">${contact5.firstname} ${contact5.lastname}</a>
                    <a n="email">${contact5.email}</a>
                </cn>     
        	</CreateContactRequest>
        </t:request>
        <t:response>
        	<t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="contact5.id"/>          
        </t:response>
    </t:test>
        <t:test >
        <t:request>
        	<CreateContactRequest xmlns="urn:zimbraMail">
                <cn l="${folder1.id}">
                    <a n="firstName">${contact6.firstname}</a>
                    <a n="lastName">${contact6.lastname}</a>
                    <a n="fullName">${contact6.firstname} ${contact6.lastname}</a>
                    <a n="email">${contact6.email}</a>
                </cn>     
        	</CreateContactRequest>
        </t:request>
        <t:response>
        	<t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="contact6.id"/>          
        </t:response>
    </t:test>
        <t:test >
        <t:request>
        	<CreateContactRequest xmlns="urn:zimbraMail">
                <cn l="${folder1.id}">
                    <a n="firstName">${contact7.firstname}</a>
                    <a n="lastName">${contact7.lastname}</a>
                    <a n="fullName">${contact7.firstname} ${contact7.lastname}</a>
                    <a n="email">${contact7.email}</a>
                </cn>     
        	</CreateContactRequest>
        </t:request>
        <t:response>
        	<t:select path="//mail:CreateContactResponse/mail:cn" attr="id" set="contact7.id"/>          
        </t:response>
    </t:test>

</t:test_case>
 

<t:test_case testcaseid="AutoCompleteRequest_01" type="smoke" >
    <t:objective>Basic AutoCompleteRequest test</t:objective>
	<t:steps>
	1. Login as account1
	6. Send AutoCompleteRequest
	</t:steps>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>


	<t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail"> 
				<name>foo</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse"/>
		</t:response>
    </t:test>  

</t:test_case>

<t:test_case testcaseid="AutoCompleteRequest_02" type="smoke" >
    <t:objective>Basic AutoCompleteRequest test - verify result</t:objective>
	<t:steps>
	1. Login as account1
	6. Send AutoCompleteRequest - verify result
	</t:steps>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>


	<t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail"> 
				<name>${contact1.firstname}</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact1.id}"/>
 			</t:select>
		</t:response>
    </t:test>  

</t:test_case>

<t:test_case testcaseid="AutoCompleteRequest_03" type="smoke" >
    <t:objective>Basic AutoCompleteRequest test - verify result has multiple values</t:objective>
	<t:steps>
	1. Login as account1
	2. create contact with firstname = first
	3. create another contact with firstname = first
	6. Send AutoCompleteRequest - verify both contacts are returned
	</t:steps>


	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>


	<t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail"> 
				<name>${contact2.firstname}</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact2.id}"/>
 				<t:select path="//mail:match" attr="id" match="${contact3.id}"/>
 			</t:select>
		</t:response>
    </t:test>  

</t:test_case>

<t:test_case testcaseid="AutoCompleteRequest_04" type="smoke" >
    <t:objective>AutoCompleteRequest test with folder</t:objective>
	<t:steps>
	1. Login as account1
	6. Send AutoCompleteRequest is folder id
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>


	<t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" folders="${folder1.id}"> 
				<name>${contact4.firstname}</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact4.id}"/>
 			</t:select>
		</t:response>
    </t:test>  


</t:test_case>

<t:test_case testcaseid="AutoCompleteRequest_05" type="smoke" >
    <t:objective>AutoCompleteRequest test with folder - doesn't match contacts in other folder</t:objective>
	<t:steps>
	1. Login as account1
	2. create contact folder
	3. create contact in contacts folder with first name = "first"
	4. create contact in subfolder with first name = "first"
	5. Send AutoCompleteRequest with folder id for "first" - verify subfolder contact is returned, but contacts folder contact is not returned
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" folders="${folder1.id}"> 
				<name>${contact5.firstname}</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact5.id}"/>
 				<t:select path="//mail:match" attr="id" match="${contact2.id}" emptyset="1"/>
 			</t:select>
		</t:response>
    </t:test>  


</t:test_case>

<t:test_case testcaseid="AutoCompleteRequest_06" type="smoke" >
    <t:objective>AutoCompleteRequest test for "lastname"</t:objective>
	<t:steps>
	1. Login as account1
	5. Send AutoCompleteRequest for "lastname"
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>${contact1.lastname}</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact1.id}"/>
 			</t:select>
		</t:response>
    </t:test>  


</t:test_case>

<t:test_case testcaseid="AutoCompleteRequest_07" type="smoke" bugids="18753" >
    <t:objective>AutoCompleteRequest test for "first last"</t:objective>
	<t:steps>
	1. Login as account1
	5. Send AutoCompleteRequest for "first last"
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>${contact1.firstname} ${contact1.lastname}</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact1.id}"/>
 			</t:select>
		</t:response>
    </t:test>  


</t:test_case>

<t:test_case testcaseid="AutoCompleteRequest_special_char_08" type="smoke" bugids="51963" >
    <t:objective>AutoCompleteRequest test  for special characters.</t:objective>
	<t:steps>
	1. Login as account1
	5. Send AutoCompleteRequest for special characters.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>Conf </name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact6.id}"/>
 			</t:select>
		</t:response>
    </t:test>  
    <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>Conf -</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact6.id}"/>
 			</t:select>
		</t:response>
    </t:test>  
    <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>Conf -  </name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact6.id}"/>
 			</t:select>
		</t:response>
    </t:test>      
    <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>Conf -  h</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact6.id}"/>
 			</t:select>
		</t:response>
    </t:test>      
    <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>test.</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact6.id}"/>
 			</t:select>
		</t:response>
    </t:test>     
    <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>test.s</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact6.id}"/>
 			</t:select>
		</t:response>
    </t:test>   
    <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>test.server-</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact6.id}"/>
 			</t:select>
		</t:response>
    </t:test> 
    <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>test.server-v</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact6.id}"/>
 			</t:select>
		</t:response>
    </t:test>                   
    <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>test.server-vmware -</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact6.id}"/>
 			</t:select>
		</t:response>
    </t:test>                   
    <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>test.server-vmware - d</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact6.id}"/>
 			</t:select>
		</t:response>
    </t:test>                   


</t:test_case>

<t:test_case testcaseid="AutoCompleteRequest_special_char_09" type="smoke" bugids="51963,41512" >
    <t:objective>AutoCompleteRequest test  for special characters.</t:objective>
	<t:steps>
	1. Login as account1
	5. Send AutoCompleteRequest for special characters.
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>Mr.</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact7.id}"/>
 			</t:select>
		</t:response>
    </t:test>  
    <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>Mr. T</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact7.id}"/>
 			</t:select>
		</t:response>
    </t:test>  
    <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>Mr. Tim</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact7.id}"/>
 			</t:select>
		</t:response>
    </t:test>      
    <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>Mr. Tim*</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact7.id}"/>
 			</t:select>
		</t:response>
    </t:test>
        <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>Mr. Tim*s</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact7.id}"/>
 			</t:select>
		</t:response>
    </t:test>         
    <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>dollar$</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact7.id}"/>
 			</t:select>
		</t:response>
    </t:test>     
        <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>dollar$_</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact7.id}"/>
 			</t:select>
		</t:response>
    </t:test>   
         
    <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>dollar$_Hash#</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact7.id}"/>
 			</t:select>
		</t:response>
    </t:test> 
     <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>dollar$_Hash#and</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact7.id}"/>
 			</t:select>
		</t:response>
    </t:test>                   
   
   <t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail" > 
				<name>dollar$_Hash#and&amp;</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
 			<t:select path="//mail:AutoCompleteResponse">
 				<t:select path="//mail:match" attr="id" match="${contact7.id}"/>
 			</t:select>
		</t:response>
    </t:test> 

</t:test_case>

<t:test_case testcaseid="AutoCompleteRequest_empty_nameField_10" type="smoke" bugids="ZCS-3951">
	<t:objective>AutoCompleteRequest test for name field validation</t:objective>
	<t:steps>
		1. Login as account1
		2. Send AutoCompleteRequest with empty name field
	</t:steps>


	<t:property name="server.zimbraAccount" value="${account1.server}" />
	<t:property name="emptyName" value="" />
	<t:property name="Name_space" value=" " />

	<t:test>
		<t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${account1.name}</account>
				<password>${defaultpassword.value}</password>
			</AuthRequest>
		</t:request>
		<t:response>
			<t:select path="//acct:AuthResponse/acct:authToken" set="authToken" />
		</t:response>
	</t:test>


	<t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail">
				<name>${emptyName}</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
			<t:select path= "//zimbra:Code" match ="^service.INVALID_REQUEST"/>
			<t:select path= "//soap:Text" match =".*name parameter is empty"/>
		</t:response>
	</t:test>

	<t:test>
		<t:request>
			<AutoCompleteRequest xmlns="urn:zimbraMail">
				<name>${Name_space}</name>
			</AutoCompleteRequest>
		</t:request>
		<t:response>
			<t:select path= "//zimbra:Code" match ="^service.INVALID_REQUEST"/>
			<t:select path= "//soap:Text" match =".*name parameter is empty"/>
		</t:response>
	</t:test>
</t:test_case>
</t:tests>