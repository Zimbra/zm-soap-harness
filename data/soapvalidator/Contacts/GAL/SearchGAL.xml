<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="test_acct1.server" value="NOT_DEFINED"/>
<t:property name="test_acct2.server" value="NOT_DEFINED"/>
<t:property name="test_acct3.server" value="NOT_DEFINED"/>
<t:property name="test_acct4.server" value="NOT_DEFINED"/>
<t:property name="test_acct5.server" value="NOT_DEFINED"/>

<t:property name="gal.curTime" value="${TIME}"/>
<t:property name="gal.domain1" value="domain1${gal.curTime}${COUNTER}.com"/>
<t:property name="gal.domain2" value="domain2${gal.curTime}${COUNTER}.com"/>
<t:property name="gal.domain3" value="NonExistingdomain3${gal.curTime}${COUNTER}.com"/>

<t:property name="test_account1.name" value="galtest${gal.curTime}@${gal.domain1}"/>
<t:property name="test_account2.name" value="moregaltest${gal.curTime}@${gal.domain1}"/>
<t:property name="test_account3.name" value="galtest${gal.curTime}@${gal.domain2}"/>
<t:property name="test_account4.name" value="moregaltest${gal.curTime}@${gal.domain2}"/>
<t:property name="test_account5.name" value="NonExistingaccount${gal.curTime}@${gal.domain2}"/>

<t:property name="test_account1.password" value="test123"/>
<t:property name="test_account2.password" value="test123"/>
<t:property name="test_account3.password" value="test123"/>
<t:property name="test_account4.password" value="test123"/>

<t:property name="gal.searchstring" value="galtest${gal.curTime}"/>

<t:property name="gal.spchar" value="//\\'^%"/>
<t:property name="gal.space" value="           "/>
<t:property name="gal.blank" value=""/>
<t:property name="gal.sometext" value="some text"/>

<t:property name="message.subject1" value="Subject${TIME}.${COUNTER}"/>
<t:property name="message.content1" value="content of the message${TIME}.${COUNTER}"/>

<t:property name="list1" value="test@${gal.domain1}"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="acct_setup" type="always" >
    <t:objective>Create two test account</t:objective>
    <steps>1. Login to admin account  
        2. Create the domains
        3. Create a test accounts 
    </steps>

    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="createDomainRequest1" required="true">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${gal.domain1}</name>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain1.id"/>            
        </t:response>
    </t:test>
    
    <t:test id="createDomainRequest2" required="true">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${gal.domain2}</name>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain2.id"/>
        </t:response>
        
    </t:test>
    
    <t:test id="create_test_account1" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account1.password}</password>               
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>
    
    <t:test id="create_test_account2" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${test_account2.password}</password>               
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>
    
    <t:test id="create_test_account3" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account3.name}</name>
                <password>${test_account3.password}</password>                
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account3.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
        </t:response>
    </t:test>
 
    <t:test id="create_test_account4" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account4.name}</name>
                <password>${test_account4.password}</password>                
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account4.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct4.server"/>
        </t:response>
    </t:test>
    
</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
<t:test_case testcaseid="acct_setup2" type="always" >
    <t:objective>login as the test account</t:objective>
    
    <t:test id="auth1" required="true">
        <t:request>
        <AuthRequest xmlns="urn:zimbraAccount">
            <account by="name">${test_account1.name}</account>
            <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="SearchGal1" type="bhr">
    <t:objective>Search a GAL for a test account</t:objective>

    <t:test id="SearchGal1">
        <t:request>
            <SearchGalRequest xmlns="urn:zimbraAccount">
                <name >${test_account1.name}</name>
            </SearchGalRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" match="${test_account1.name}"/>                        
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SearchGal2" type="functional" >
    <t:objective>Search a GAL with spaces within the name tag</t:objective>

    <t:test id="SearchGal2">
        <t:request>
            <SearchGalRequest xmlns="urn:zimbraAccount">
                <name >${gal.space}</name>
            </SearchGalRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:SearchGalResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SearchGal3" type="functional" >
    <t:objective>Search a GAL with blank within the name tag</t:objective>

    <t:test id="SearchGal3">
        <t:request>
            <SearchGalRequest xmlns="urn:zimbraAccount">
                <name >${gal.blank}</name>
            </SearchGalRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:SearchGalResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SearchGal4" type="sanity" >
    <t:objective>Search a GAL with special characters within the name tag</t:objective>

    <t:test id="SearchGal4">
        <t:request>
            <SearchGalRequest xmlns="urn:zimbraAccount">
                <name >${gal.spchar}</name>
            </SearchGalRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:SearchGalResponse"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SearchGal5" type="functional" >
    <t:objective>Search a GAL with no name tag</t:objective>

    <t:test id="SearchGal5">
        <t:request>
            <SearchGalRequest xmlns="urn:zimbraAccount">
            </SearchGalRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SearchGal6" type="functional" >
    <t:objective>Search a GAL with misspelled name tag</t:objective>

    <t:test id="SearchGal6">
        <t:request>
            <SearchGalRequest xmlns="urn:zimbraAccount">
                <name1 >${gal.searchstring}</name1>
            </SearchGalRequest>
        </t:request>
        <t:response>
            <t:select path="//zimbra:Code" match="^service.INVALID_REQUEST$"/>
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SearchGal7" type="sanity" >
    <t:objective>Search a GAL for a generalized string </t:objective>

    <t:test>
        <t:request>
            <SearchGalRequest xmlns="urn:zimbraAccount">
                <name >${gal.searchstring}</name>
            </SearchGalRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" match="${test_account1.name}"/>            
            <t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" match="${test_account2.name}"/>            
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SearchGal8" type="sanity" >
    <t:objective>Search a GAL for a particular domain </t:objective>

    <t:test>
        <t:request>
            <SearchGalRequest xmlns="urn:zimbraAccount">
                <name >${gal.domain1}</name>
            </SearchGalRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" match="[a-z0-9\.]*[@]${gal.domain1}"/>
        </t:response>
    </t:test>

</t:test_case>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="SearchGal9" type="bhr">
    <t:objective>To change the Number of result returned by GAL and Verify it </t:objective>
    <t:steps>1. Login to admin
             2. Set zimbraGalMaxResults = 1
             3. Login to test account
             4. verify only 1 account is returned for Gal search
    </t:steps>

    <t:test  id="searchGal9a">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="searchGal9b" depends="searchGal9a">
        <t:request>
            <ModifyDomainRequest xmlns="urn:zimbraAdmin">
                <id>${domain1.id}</id>
                <a n="zimbraGalMaxResults">0</a>                
            </ModifyDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyDomainResponse/admin:domain"/>
        </t:response>
    </t:test>
  
<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>    
    <t:test id="searchGal9c">
        <t:request>
        <AuthRequest xmlns="urn:zimbraAccount">
            <account by="name">${test_account1.name}</account>
            <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test depends="searchGal9b,searchGal9c">
        <t:request>
            <SearchGalRequest xmlns="urn:zimbraAccount">
                <name >${gal.searchstring}</name>
            </SearchGalRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" match="${test_account1.name}"/>                        
        </t:response>
    </t:test>
        
</t:test_case>


<t:test_case testcaseid="SearchGal10" type="sanity" bugids="2552">
    <t:objective>To disable the GAL Search and Verify it </t:objective>
    <t:steps>1. Login to admin
             2. Set zimbraFeatureGalEnabled = FALSE
             3. Login to test account
             4. Verify GAL search.
    </t:steps>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>     
    <t:test  id="SearchGal10a">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
   
    <t:test id="SearchGal10b" depends="SearchGal10a">
        <t:request>
            <ModifyAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account1.id}</id>
                <a n = "zimbraFeatureGalEnabled">FALSE</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:ModifyAccountResponse/admin:account"/>
        </t:response>
    </t:test>
  
<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>    
    <t:test id="SearchGal10c">
        <t:request>
        <AuthRequest xmlns="urn:zimbraAccount">
            <account by="name">${test_account1.name}</account>
            <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test depends="SearchGal10b,SearchGal10c">
        <t:request>
            <SearchGalRequest xmlns="urn:zimbraAccount">
                <name >${gal.searchstring}</name>
            </SearchGalRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" emptyset="1"/>                        
        </t:response>
    </t:test>
        
</t:test_case>


<t:test_case testcaseid="SearchGa111" type="sanity" >
    <t:objective>Search a GAL for a nonexisting account </t:objective>

    <t:test>
        <t:request>
            <SearchGalRequest xmlns="urn:zimbraAccount">
                <name >${test_account5.name}</name>
            </SearchGalRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:SearchGalResponse/acct:cn/acct:a" emptyset="1"/>                       
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid="SearchGal12" type="functional" >
    <t:objective>Search a GAL for a deleted account </t:objective>
    <t:steps>1. Login to admin
             2. Delete the account
             3. Login to any test account
             4. Verify GAL search.
    </t:steps>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:test  id="SearchGal12a">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
<t:property name="server.zimbraAccount" value="${test_acct4.server}"/>
    <t:test id="SearchGal12b" depends="SearchGal12a">
        <t:request>
            <DeleteAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account4.id}</id>                
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:DeleteAccountResponse"/>
        </t:response>
    </t:test>
  
<t:property name="server.zimbraAccount" value="${test_acct3.server}"/>
    
    <t:test id="SearchGal12c">
        <t:request>
        <AuthRequest xmlns="urn:zimbraAccount">
            <account by="name">${test_account3.name}</account>
            <password>${test_account3.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test depends="SearchGal12b,SearchGal12c">
        <t:request>
            <SearchGalRequest xmlns="urn:zimbraAccount">
                <name >${test_account4.name}</name>
            </SearchGalRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" emptyset="1"/>                        
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="SearchGal13" type="functional" bugids="4997">
    <t:objective>Search a GAL for a deleted domain </t:objective>
    <t:steps>1. Login to admin
             2. Delete the account to empty the domain.
             2. Delete the domain
             3. Login to any test account
             4. Verify GAL search.
    </t:steps>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
    <t:test  id="SearchGal13a">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
<t:property name="server.zimbraAccount" value="${test_acct3.server}"/>
    <t:test id="SearchGal13b" depends="SearchGal13a">
        <t:request>
            <DeleteAccountRequest xmlns = "urn:zimbraAdmin">
                <id>${test_account3.id}</id>                
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:DeleteAccountResponse"/>
        </t:response>
    </t:test>
   
    <t:test id="SearchGal13c" depends="SearchGal13b">
        <t:request>
            <DeleteDomainRequest xmlns = "urn:zimbraAdmin">
                <id>${domain2.id}</id>                
            </DeleteDomainRequest>
        </t:request>
        <t:response>
            <t:select path = "//admin:DeleteDomainResponse"/>
        </t:response>
    </t:test>
  
<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
    
    <t:test id="SearchGal13d">
        <t:request>
        <AuthRequest xmlns="urn:zimbraAccount">
            <account by="name">${test_account1.name}</account>
            <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
    
    <t:test depends="SearchGal13d">
        <t:request>
            <SearchGalRequest xmlns="urn:zimbraAccount">
                <name >${gal.domain2}</name>
            </SearchGalRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" emptyset="1"/>                        
        </t:response>
    </t:test>
    
</t:test_case>


<t:test_case testcaseid="SearchGal14" type="sanity" >
    <t:objective>Search a GAL for a nonexisting domain </t:objective>

    <t:test>
        <t:request>
            <SearchGalRequest xmlns="urn:zimbraAccount">
                <name >${gal.domain3}</name>
            </SearchGalRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:SearchGalResponse/acct:cn/acct:a" emptyset="1"/>                       
        </t:response>
    </t:test>

</t:test_case>


<t:test_case testcaseid = "SearchGa115" type="functional"  bugids="5940">
    <t:objective> Verify that seraching for a Distribution List returns unique DL only </t:objective>
    <t:steps> 1. Login to admin
              2. Create an distribution list              
			  3. Add accounts to the distribution list
			  4. Login to test account
			  5. search for DL
    </t:steps>
    
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
     
    <t:test  id="SearchGal15a">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
	<t:test id="SearchGal15b" depends="SearchGal15a">
		<t:request>
			<CreateDistributionListRequest xmlns="urn:zimbraAdmin">
				<name>${list1}</name>
				<a n="description">A test distribution list</a>
			</CreateDistributionListRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="list1.id"/>
		</t:response>
	</t:test>
           
    <t:test id="SearchGal15c" depends="SearchGal15b">
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${test_account1.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
    </t:test>
 
     <t:test id="SearchGal15d" depends="SearchGal15b">
        <t:request>
            <AddDistributionListMemberRequest xmlns="urn:zimbraAdmin">
                <id>${list1.id}</id>
                <dlm>${test_account2.name}</dlm>
            </AddDistributionListMemberRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AddDistributionListMemberResponse"/>
        </t:response>
	</t:test>

	<t:test id="SearchGal15e" depends="SearchGal15b">
		<t:request>
			<GetDistributionListRequest xmlns="urn:zimbraAdmin" limit="25" offset="0">
				<dl by="name">${list1}</dl>
				<dl by="id">${list1.id}</dl>
			</GetDistributionListRequest>
		</t:request>
        <t:response>
            <t:select path="//admin:GetDistributionListResponse"/>
        </t:response>
	</t:test>	

<t:property name="server.zimbraAccount" value="${test_acct2.server}"/>
	<t:test id="SearchGal15f" required="true">
        <t:request>
			<AuthRequest xmlns="urn:zimbraAccount">
				<account by="name">${test_account2.name}</account>
				<password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

    <t:test depends="SearchGal15e,SearchGal15f">
        <t:request>
            <SearchGalRequest xmlns="urn:zimbraAccount">
                <name >${list1}</name>
            </SearchGalRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" match="${list1}"/>
			<t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email2']" emptyset="1"/>
        </t:response>
    </t:test>

</t:test_case>

</t:tests>
