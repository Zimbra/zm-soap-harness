<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain" value="testgal.com${COUNTER}${TIME}"/>
<t:property name="domain1" value="testgal1.com${COUNTER}${TIME}"/>

<t:property name="account1" value="hiddengal1"/>
<t:property name="account2" value="hiddengal2"/>
<t:property name="account3" value="hiddengal3"/>
<t:property name="account4" value="hiddengal4"/>
<t:property name="account5" value="hiddengal5"/>
<t:property name="account6" value="hiddengal6"/>
<t:property name="account7" value="hiddengal7"/>
<t:property name="account8" value="hiddengal8"/>
<t:property name="account9" value="allhidegal9"/>
<t:property name="account10" value="hiddengal10"/>

<t:property name="accalias1" value="aliashiddengal1"/>
<t:property name="accalias2" value="aliashiddengal2"/>
<t:property name="accalias3" value="aliashiddengal3"/>
<t:property name="accalias4" value="aliashiddengal4"/>
<t:property name="accalias5" value="allaliashiddengal5"/>
<t:property name="accalias6" value="aliasallhidegal6"/>

<t:property name="list1" value="testhiddengal1@${domain}"/>
<t:property name="list2" value="testhiddengal2@${domain}"/>
<t:property name="list3" value="testhiddengal3@${domain}"/>
<t:property name="list4" value="testallhidegal4@${domain}"/>

<t:property name="Resource1.name" value="resourcehidegal1.${TIME}${COUNTER}"/>
<t:property name="Resource2.name" value="resourcehidegal2.${TIME}${COUNTER}"/>
<t:property name="Resource3.name" value="resourcehidegal3.${TIME}${COUNTER}"/>
<t:property name="Resource4.name" value="resourcehidegal4.${TIME}${COUNTER}"/>
<t:property name="Resource5.name" value="resourceallhidegal5.${TIME}${COUNTER}"/>
<t:property name="Resource6.name" value="resourceallhidegal6.${TIME}${COUNTER}"/>

<t:property name="displayName1" value="DisplayNameHideGAL1.${TIME}${COUNTER}"/>
<t:property name="displayName2" value="DisplayNameHideGAL2.${TIME}${COUNTER}"/>
<t:property name="displayName3" value="DisplayNameHideGAL3.${TIME}${COUNTER}"/>
<t:property name="displayName4" value="DisplayNameHideGAL4.${TIME}${COUNTER}"/>
<t:property name="displayName5" value="DisplayNameallhidegal5.${TIME}${COUNTER}"/>
<t:property name="displayName6" value="DisplayNameallhidegal6.${TIME}${COUNTER}"/>

<t:property name="Resource.equipment" value="Equipment"/>
<t:property name="Resource.location" value="Location"/>
<t:property name="active" value="active"/>
<t:property name="closed" value="closed"/>

<t:property name="spchar" value="!@^*()_+"/>
<t:property name="sometext" value="some text"/>
<t:property name="number" value="1234"/>
<t:property name="zero" value="0"/>
<t:property name="negative" value="-2"/>
<t:property name="decimal" value="2.4"/>
<t:property name="blank" value=""/>
<t:property name="space" value="         "/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid = "Ping" type="always">
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>
 

<t:test_case testcaseid = "acctSetup1_hideaccounts_gal" type="always">
    <t:objective>Account Setup </t:objective>
	<t:steps>
			1. Login into admin.
			2. Create test domains.
			3. Create test account without using zimbraHideInGal .
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id="CreateDomain1a" required="true" depends="adminlogin">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain}</name>
                <a n="zimbraNotes">Domain for testing zimbraHideInGal</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse"/>
        </t:response>
    </t:test>

    <t:test id="CreateDomain1b" required="true" depends="adminlogin">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain1}</name>
                <a n="zimbraNotes">Domain1 for testing zimbraHideInGal</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse"/>
        </t:response>
    </t:test>

	<t:test id="CreateAccount1a" required="true" depends="adminlogin">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1}@${domain}</name>
                <password>${defaultpassword.value}</password>

            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
		</t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid = "hideaccounts_gal01" type="smoke">
    <t:objective>Verify that after selecting zimbraHideInGal=true account is not visible</t:objective>
	<t:steps>
			1. Login into admin.
			2. Create test account2 with zimbraHideInGal=true.
			3. Login to account1.
			4. Search for account2 with type=account.
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test id="CreateAccount1a" required="true" depends="adminlogin">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2}@${domain}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraHideInGal">${globals.true}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
		</t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="account"> 
				<name>${account2}@${domain}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
 			<t:select path="//admin:SearchGalResponse/admin:cn[@n='email']" match="${account2}@${domain}" emptyset="1" />
		</t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid = "hideaccounts_gal02" type="smoke">
    <t:objective>Verify that after selecting zimbraHideInGal=false account is visible</t:objective>
	<t:steps>
			1. Login into admin.
			2. Create test account3 with zimbraHideInGal=false.
			3. Login to account1.
			4. Search for account3 with type=account.
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
	
	<t:test id="CreateAccount2a" required="true" depends="adminlogin">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account3}@${domain}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraHideInGal">${globals.false}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account3.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct3.server"/>
		</t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="account"> 
				<name>${account3}@${domain}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
 			<t:select path="//admin:SearchGalResponse/admin:cn[@n='email']" match="${account3}@${domain}" emptyset="1" />
		</t:response>
    </t:test>  

</t:test_case>



<t:test_case testcaseid = "hideaccounts_gal03" type="smoke">
    <t:objective>Verify that after modifying the account with zimbraHideInGal=false account is visible</t:objective>
	<t:steps>
			1. Login into admin.
			2. Modify test account2 with zimbraHideInGal=false.
			3. Login to account1.
			4. Search for account2 with type=account.
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test id="ModifyAccount3a" required="true" depends="adminlogin">
        <t:request>
            <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                <id>${account2.id}</id>
				<a n="zimbraHideInGal">${globals.false}</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyAccountResponse/admin:account" attr="id" set="account2.id"/>
		</t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="account"> 
				<name>${account2}@${domain}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
  			<t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='fullName']" match="${account2}" />
		</t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid = "hideaccounts_gal04" type="functional">
    <t:objective>Verify that the resource with zimbraHideInGal=true is not visible</t:objective>
	<t:steps>
			1. Login into admin.
			2. Create resources=Location with zimbraHideInGal=true.
			3. Login to account1.
			4. Search for resource.
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test id="CreateRes4a" required="true" >
        <t:request>
			<CreateCalendarResourceRequest xmlns="urn:zimbraAdmin">
				<name>${Resource1.name}@${domain}</name>
				<a n="zimbraCalResType">${Resource.location}</a>
				<a n="zimbraAccountStatus">${active}</a>
				<a n="displayName">${displayName1}@${domain}</a>
				<a n="zimbraCalResAutoAcceptDecline">${globals.true}</a>
				<a n="zimbraCalResAutoDeclineIfBusy">${globals.false}</a>
				<a n="zimbraHideInGal">${globals.true}</a>
			</CreateCalendarResourceRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource/admin:a[@n='displayName']"  set="resourceloc1.name"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="resource"> 
				<name>${displayName1}@${domain}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
  			<t:select path="//admin:SearchGalResponse/admin:cn/admin:a[@n='email']" match="${displayName1}@${domain}" emptyset="1" />
 		</t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid = "hideaccounts_gal05" type="functional">
    <t:objective>Verify that the resource with zimbraHideInGal=true is visible</t:objective>
	<t:steps>
			1. Login into admin.
			2. Create a resource=equipment with zimbraHideInGal=true.
			3. Login to account1.
			4. Search for resource.
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test id="CreateRes5a" required="true" >
        <t:request>
			<CreateCalendarResourceRequest xmlns="urn:zimbraAdmin">
				<name>${Resource2.name}@${domain}</name>
				<a n="zimbraCalResType">${Resource.equipment}</a>
				<a n="zimbraAccountStatus">${active}</a>
				<a n="displayName">${displayName2}@${domain}</a>
				<a n="zimbraCalResAutoAcceptDecline">${globals.true}</a>
				<a n="zimbraCalResAutoDeclineIfBusy">${globals.false}</a>
				<a n="zimbraHideInGal">${globals.true}</a>
			</CreateCalendarResourceRequest>
        </t:request>
        <t:response>
             <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource/admin:a[@n='mail']"  set="resourceeq2.name" />
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="resource"> 
				<name>${Resource2.name}@${domain}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
  			<t:select path="//admin:SearchGalResponse/admin:cn/admin:a[@n='email']" match="${resourceeq2.name}" emptyset="1" />
 		</t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid = "hideaccounts_gal06" type="functional" bugids="7997">
    <t:objective>Verify that when a resource=Location is modified with zimbraHideInGal=false is  visible</t:objective>
	<t:steps>
			1. Login into admin.
			2. Create a resource=Location with zimbraHideInGal=true.
			3. Verify the resource
			4. Login to account1.
			5. Modify the resource with zimbraHideInGal=false.
			6. Login to account1.
			7. Search for resource.
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test id="CreateRes6a" required="true" >
        <t:request>
			<CreateCalendarResourceRequest xmlns="urn:zimbraAdmin">
				<name>${Resource3.name}@${domain}</name>
				<a n="zimbraCalResType">${Resource.location}</a>
				<a n="zimbraAccountStatus">${active}</a>
				<a n="displayName">${displayName3}@${domain}</a>
				<a n="zimbraCalResAutoAcceptDecline">${globals.true}</a>
				<a n="zimbraCalResAutoDeclineIfBusy">${globals.false}</a>
				<a n="zimbraHideInGal">${globals.true}</a>
			</CreateCalendarResourceRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource/admin:a[@n='mail']"  set="resourceloc3.name"/>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource" attr="id" set="resource3.id"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="resource"> 
				<name>${Resource3.name}@${domain}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
   			<t:select path="//admin:SearchGalResponse/admin:cn/admin:a[@n='email']" match="${resourceloc3.name}" emptyset="1"/>
		</t:response>
    </t:test>  


	<t:test>
		<t:request>
			<ModifyCalendarResourceRequest xmlns="urn:zimbraAdmin">
				<id>${resource3.id}</id>
				<a n="zimbraHideInGal">${globals.false}</a>
			</ModifyCalendarResourceRequest>
		</t:request>
		<t:response>
            <t:select path="//admin:ModifyCalendarResourceResponse/admin:calresource/admin:a[@n='mail']"  set="resourceloc3.name"/>
		</t:response>
	</t:test>

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="resource"> 
				<name>${Resource3.name}@${domain}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
  			<t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" match="${resourceloc3.name}"/>
 		</t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid = "hideaccounts_gal07" type="functional" bugids="7997">
    <t:objective>Verify that when a resource=Equipment is modified with zimbraHideInGal=false is not visible</t:objective>
	<t:steps>
			1. Login into admin.
			2. Create a resource=Equipment with zimbraHideInGal=true.
			3. Verify the resource
			4. Login to account1.
			5. Modify the resource with zimbraHideInGal=false.
			6. Login to account1.
			7. Search for resource.
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test id="CreateRes7a" required="true" >
        <t:request>
			<CreateCalendarResourceRequest xmlns="urn:zimbraAdmin">
				<name>${Resource4.name}@${domain}</name>
				<a n="zimbraCalResType">${Resource.equipment}</a>
				<a n="zimbraAccountStatus">${active}</a>
				<a n="displayName">${displayName4}@${domain}</a>
				<a n="zimbraCalResAutoAcceptDecline">${globals.true}</a>
				<a n="zimbraCalResAutoDeclineIfBusy">${globals.false}</a>
				<a n="zimbraHideInGal">${globals.true}</a>
			</CreateCalendarResourceRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource/admin:a[@n='displayName']"  set="resourceeq4.name"/>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource" attr="id" set="resource4.id"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="resource"> 
				<name>${Resource4.name}@${domain}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
  			<t:select path="//admin:SearchGalResponse/admin:cn/admin:a[@n='email']" match="${resourceeq4.name}" emptyset="1"/>
 		</t:response>
    </t:test>  

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<ModifyCalendarResourceRequest xmlns="urn:zimbraAdmin">
				<id>${resource4.id}</id>
				<a n="zimbraHideInGal">${globals.false}</a>
			</ModifyCalendarResourceRequest>
		</t:request>
		<t:response>
            <t:select path="//admin:ModifyCalendarResourceResponse/admin:calresource/admin:a[@n='mail']"  set="resourceeq4.name"/>
		</t:response>
	</t:test>

 	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="resource"> 
				<name>${Resource4.name}@${domain}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
  			<t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" match="${resourceeq4.name}"/>
 		</t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid = "hideaccounts_gal08" type="smoke">
    <t:objective>Verify that after selecting zimbraHideInGal=true alias is not visible</t:objective>
	<t:steps>
			1. Login into admin.
			2. Create test account and its alias (on the same domain) with zimbraHideInGal=true.
			3. Login to account1.
			4. Search for account with type=account.
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
	
	<t:test id="CreateAccount8a" required="true" depends="adminlogin">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account4}@${domain}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraHideInGal">${globals.true}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account4.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct4.server"/>
		</t:response>
    </t:test>  

	<t:test id="AddAlias8a" required="true" depends="CreateAccount8a">
        <t:request>
			<AddAccountAliasRequest xmlns="urn:zimbraAdmin">
				<id>${account4.id}</id>
				<alias>${accalias1}@${domain}</alias>
			</AddAccountAliasRequest>
        </t:request>
        <t:response>
             <t:select path="//admin:AddAccountAliasResponse"/>
 		</t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="account"> 
				<name>${accalias1}@${domain}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
  			<t:select path="//admin:SearchGalResponse/admin:cn/admin:a[@n='email']" match="${accalias1}@${domain}" emptyset="1" />
 		</t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid = "hideaccounts_gal09" type="functional">
    <t:objective>Verify that after selecting zimbraHideInGal=true alias is not visible</t:objective>
	<t:steps>
			1. Login into admin.
			2. Create test account and its alias (on the different domain) with zimbraHideInGal=true.
			3. Login to account1.
			4. Search for account with type=account.
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
	
	<t:test id="CreateAccount9a" required="true" depends="adminlogin">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account5}@${domain}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraHideInGal">${globals.true}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account5.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct5.server"/>
		</t:response>
    </t:test>  

	<t:test id="AddAlias9a" required="true" depends="CreateAccount9a">
        <t:request>
			<AddAccountAliasRequest xmlns="urn:zimbraAdmin">
				<id>${account5.id}</id>
				<alias>${accalias2}@${domain1}</alias>
			</AddAccountAliasRequest>
        </t:request>
        <t:response>
             <t:select path="//admin:AddAccountAliasResponse"/>
 		</t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="account"> 
				<name>${accalias2}@${domain}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
  			<t:select path="//acct:SearchGalResponse/acct:cn/admin:a[@n='email']" match="${accalias2}@${domain}" emptyset="1" />
 		</t:response>
    </t:test>  

</t:test_case>

<t:test_case testcaseid = "hideaccounts_gal10" type="smoke">
    <t:objective>Verify that after selecting zimbraHideInGal=false alias is visible</t:objective>
	<t:steps>
			1. Login into admin.
			2. Create test account with zimbraHideInGal=false.
			3. Create alias (on the same domain)
			4. Login to account1.
			5. Search for account with type=account.
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
	
	<t:test id="CreateAccount10a" required="true" depends="adminlogin">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account6}@${domain}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraHideInGal">${globals.false}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account6.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct6.server"/>
		</t:response>
    </t:test>  

	<t:test id="AddAlias10a" required="true" depends="CreateAccount10a">
        <t:request>
			<AddAccountAliasRequest xmlns="urn:zimbraAdmin">
				<id>${account6.id}</id>
				<alias>${accalias2}@${domain}</alias>
			</AddAccountAliasRequest>
        </t:request>
        <t:response>
             <t:select path="//admin:AddAccountAliasResponse"/>
 		</t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="account"> 
				<name>${accalias2}@${domain}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
  			<t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email2']" match="${accalias2}@${domain}" />
 		</t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid = "hideaccounts_gal11" type="functional">
    <t:objective>Verify that after selecting zimbraHideInGal=false, alias is visible</t:objective>
	<t:steps>
			1. Login into admin.
			2. Create test account with zimbraHideInGal=false.
			3. Create alias (on the different domain).
			4. Login to account1
			5. Search for account with type=account.
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
	
	<t:test id="CreateAccount11a" required="true" depends="adminlogin">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account7}@${domain}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraHideInGal">${globals.false}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account7.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct7.server"/>
		</t:response>
    </t:test>  

	<t:test id="AddAlias11a" required="true" depends="CreateAccount11a">
        <t:request>
			<AddAccountAliasRequest xmlns="urn:zimbraAdmin">
				<id>${account7.id}</id>
				<alias>${accalias3}@${domain1}</alias>
			</AddAccountAliasRequest>
        </t:request>
        <t:response>
             <t:select path="//admin:AddAccountAliasResponse"/>
 		</t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="account"> 
				<name>${accalias3}@${domain1}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
  			<t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email2']" match="${accalias3}@${domain1}"/>
 		</t:response>
    </t:test>  

</t:test_case>

<t:test_case testcaseid = "hideaccounts_gal12" type="functional">
    <t:objective>Verify that after modifying zimbraHideInGal=false, aliases are not visible</t:objective>
	<t:steps>
			1. Login into admin.
			2. Create test account with zimbraHideInGal=true.
			3. Create 2 alias one on the same domain and other on different domain.
			4. modify the account with zimbraHideInGal=false
			5. Login to account1.
			6. Search for account with type=account.
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
	
	<t:test id="CreateAccount12a" required="true" depends="adminlogin">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account8}@${domain}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraHideInGal">${globals.true}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account8.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct8.server"/>
		</t:response>
    </t:test>  

	<t:test id="AddAlias12a" required="true" depends="CreateAccount12a">
        <t:request>
			<AddAccountAliasRequest xmlns="urn:zimbraAdmin">
				<id>${account8.id}</id>
				<alias>${accalias4}@${domain}</alias>
			</AddAccountAliasRequest>
        </t:request>
        <t:response>
             <t:select path="//admin:AddAccountAliasResponse"/>
 		</t:response>
    </t:test>  

	<t:test id="AddAlias12b" required="true" depends="CreateAccount12a">
        <t:request>
			<AddAccountAliasRequest xmlns="urn:zimbraAdmin">
				<id>${account8.id}</id>
				<alias>${accalias5}@${domain1}</alias>
			</AddAccountAliasRequest>
        </t:request>
        <t:response>
             <t:select path="//admin:AddAccountAliasResponse"/>
 		</t:response>
    </t:test>  

	<t:test id="ModifyAccount12a" required="true" depends="adminlogin">
        <t:request>
            <ModifyAccountRequest xmlns="urn:zimbraAdmin">
                <id>${account8.id}</id>
				<a n="zimbraHideInGal">${globals.false}</a>
            </ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyAccountResponse/admin:account" attr="id" set="account8.id"/>
		</t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="account"> 
				<name>${accalias4}@${domain}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
  			<t:select path="//acct:SearchGalResponse/acct:cn[@n='email']" match="${accalias4}@${domain}" emptyset="1"/>
 		</t:response>
    </t:test>  

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="account"> 
				<name>${accalias5}@${domain1}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
  			<t:select path="//acct:SearchGalResponse/acct:cn[@n='email']" match="${accalias5}@${domain1}" emptyset="1"/>
 		</t:response>
    </t:test>  

</t:test_case>

<t:test_case testcaseid = "hideaccounts_gal13" type="smoke">
    <t:objective>Verify that after selecting zimbraHideInGal=true, DL is not visible</t:objective>
	<t:steps>
			1. Login into admin.
			2. Create DL with zimbraHideInGal=true.
			3. Login to account1.
			4. Search for account with type=account.
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
	
    <t:test required="true">
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${list1}</name>
				<a n="zimbraMailStatus">enabled</a>
				<a n="zimbraHideInGal">${globals.true}</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="list1.id"/>
        </t:response>
    </t:test>
	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="account"> 
				<name>${list1}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
  			<t:select path="//acct:SearchGalResponse/acct:cn[@n='email']" match="${list1}" emptyset="1"/>
 		</t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid = "hideaccounts_gal14" type="functional">
    <t:objective>Verify that after selecting zimbraHideInGal=false, DL is visible</t:objective>
	<t:steps>
			1. Login into admin.
			2. Create DL with zimbraHideInGal=false.
			3. Login to account1.
			4. Search for account with type=account.
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
	
    <t:test required="true">
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${list2}</name>
				<a n="zimbraMailStatus">enabled</a>
				<a n="zimbraHideInGal">${globals.false}</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="list2.id"/>
        </t:response>
    </t:test>
	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="account"> 
				<name>${list2}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
  			<t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" match="${list2}" />
 		</t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid = "hideaccounts_gal15" type="functional">
    <t:objective>Verify that after modifying zimbraHideInGal=true, DL is not visible</t:objective>
	<t:steps>
			1. Login into admin.
			2. Create DL with zimbraHideInGal=false.
			3. Modify the DL with zimbraHideInGal=true.
			4. Login to account1.
			6. Search for account with type=account.
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
	
    <t:test required="true">
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${list3}</name>
				<a n="zimbraMailStatus">enabled</a>
				<a n="zimbraHideInGal">${globals.false}</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="list3.id"/>
        </t:response>
    </t:test>

    <t:test>
        <t:request>
            <ModifyDistributionListRequest xmlns="urn:zimbraAdmin">
                <id>${list3.id}</id>
				<a n="zimbraHideInGal">${globals.true}</a>
            </ModifyDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyDistributionListResponse"/> 
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="account"> 
				<name>${list3}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
  			<t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" match="${list3}" emptyset="1"/>
 		</t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid = "hideaccounts_gal16" type="functional">
    <t:objective>Verify that after select zimbraHideInGal=true, nothing is displayed on searching for all items</t:objective>
	<t:steps>
			1. Login into admin.
			2. Create a account, alias, DL and resource(Location and equipment) with zimbraHideInGal=true.
			3. Login to account1.
			4. Search for account with type=account.
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
	
	<t:test id="CreateAccount16a" required="true" depends="adminlogin">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account9}@${domain}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraHideInGal">${globals.true}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account9.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct9.server"/>
		</t:response>
    </t:test>  

	<t:test id="AddAlias16a" required="true" depends="CreateAccount16a">
        <t:request>
			<AddAccountAliasRequest xmlns="urn:zimbraAdmin">
				<id>${account9.id}</id>
				<alias>${accalias5}@${domain}</alias>
			</AddAccountAliasRequest>
        </t:request>
        <t:response>
             <t:select path="//admin:AddAccountAliasResponse"/>
 		</t:response>
    </t:test>  

    <t:test required="true">
        <t:request>
            <CreateDistributionListRequest xmlns="urn:zimbraAdmin">
                <name>${list4}</name>
				<a n="zimbraMailStatus">enabled</a>
				<a n="zimbraHideInGal">${globals.true}</a>
            </CreateDistributionListRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDistributionListResponse/admin:dl" attr="id" set="list4.id"/>
        </t:response>
    </t:test>

	<t:test id="CreateRes16a" required="true" depends="adminlogin">
        <t:request>
			<CreateCalendarResourceRequest xmlns="urn:zimbraAdmin">
				<name>${Resource5.name}@${domain}</name>
				<a n="zimbraCalResType">${Resource.equipment}</a>
				<a n="zimbraAccountStatus">${active}</a>
				<a n="displayName">${displayName5}@${domain}</a>
				<a n="zimbraCalResAutoAcceptDecline">${globals.true}</a>
				<a n="zimbraCalResAutoDeclineIfBusy">${globals.false}</a>
				<a n="zimbraHideInGal">${globals.true}</a>
			</CreateCalendarResourceRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource/admin:a[@n='displayName']"  set="resourceeq5.name"/>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource" attr="id" set="resource5.id"/>
        </t:response>
    </t:test>

	<t:test id="CreateRes16b" required="true" depends="adminlogin">
        <t:request>
			<CreateCalendarResourceRequest xmlns="urn:zimbraAdmin">
				<name>${Resource6.name}@${domain}</name>
				<a n="zimbraCalResType">${Resource.location}</a>
				<a n="zimbraAccountStatus">${active}</a>
				<a n="displayName">${displayName6}@${domain}</a>
				<a n="zimbraCalResAutoAcceptDecline">${globals.true}</a>
				<a n="zimbraCalResAutoDeclineIfBusy">${globals.false}</a>
				<a n="zimbraHideInGal">${globals.true}</a>
			</CreateCalendarResourceRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource/admin:a[@n='displayName']"  set="resourceloc6.name"/>
            <t:select path="//admin:CreateCalendarResourceResponse/admin:calresource" attr="id" set="resource6.id"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="all"> 
                <name>${account9}@${domain}</name>
				<name>${list4}</name> 
				<name>${accalias5}@${domain}</name>
				<name>${resourceloc6.name}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
			<t:select path="//admin:SearchGalResponse" emptyset="1"/>
  		</t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid = "hideaccounts_gal17" type="functional">
    <t:objective>Verify that 'more' is not truncated, when type="all". </t:objective>
	
	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="all"> 
                <name>${account9}@${domain}</name>
				<name>${list4}</name> 
				<name>${accalias5}@${domain}</name>
				<name>${resourceloc6.name}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
  			<t:select path="//acct:SearchGalResponse" attr="more" match="0" />
 		</t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid = "hideaccounts_gal18" type="functional">
    <t:objective>Verify 'type' with spchar/sometext/number/zero/negative/decimal/blank/space . </t:objective>
	
	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="spchar"> 
                <name>${account9}@${domain}</name>
			</SearchGalRequest> 
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
 		</t:response>
    </t:test>  

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="sometext"> 
                <name>${account9}@${domain}</name>
			</SearchGalRequest> 
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
 		</t:response>
    </t:test>  

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="number"> 
                <name>${account9}@${domain}</name>
			</SearchGalRequest> 
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
 		</t:response>
    </t:test>  

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="zero"> 
                <name>${account9}@${domain}</name>
			</SearchGalRequest> 
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
 		</t:response>
    </t:test>  

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="functional"> 
                <name>${account9}@${domain}</name>
			</SearchGalRequest> 
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
 		</t:response>
    </t:test>  

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="decimal"> 
                <name>${account9}@${domain}</name>
			</SearchGalRequest> 
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
 		</t:response>
    </t:test>  

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="blank"> 
                <name>${account9}@${domain}</name>
			</SearchGalRequest> 
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
 		</t:response>
    </t:test>  

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="space"> 
                <name>${account9}@${domain}</name>
			</SearchGalRequest> 
		</t:request>
		<t:response>
			<t:select path="//zimbra:Code" match="^service.INVALID_REQUEST" />
 		</t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid = "hideaccounts_gal19" type="functional">
    <t:objective>Verify that after selecting zimbraHideInGal=false and is on different domain, the account is not visible</t:objective>
	<t:steps>
			1. Login into admin.
			2. Create a test account1 with zimbraHideInGal=false on domain1.
			3. Login to account on domain.
			4. Search for account with type=account.
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
	
	<t:test id="CreateAccount17a" required="true" depends="adminlogin">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account10}@${domain1}</name>
                <password>${defaultpassword.value}</password>
				<a n="zimbraHideInGal">${globals.false}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account10.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct10.server"/>
		</t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchGalRequest xmlns="urn:zimbraAccount" type="account"> 
				<name>${account10}@${domain1}</name> 
			</SearchGalRequest> 
		</t:request>
		<t:response>
  			<t:select path="//acct:SearchGalResponse/acct:cn/admin:a[@n='email']" match="${account10}@${domain1}" emptyset="1" />
 		</t:response>
    </t:test>  
 
</t:test_case>


</t:tests>