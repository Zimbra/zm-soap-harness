<t:tests xmlns:t="urn:zimbraTestHarness">
<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:property name="test_acct1.server" value="NOT_DEFINED"/>
<t:property name="test_acct2.server" value="NOT_DEFINED"/>

<t:property name="gal.curTime" value="${TIME}"/>
<t:property name="gal.domain1" value="domain1${gal.curTime}${COUNTER}.com"/>
<t:property name="gal.domain2" value="domain2${gal.curTime}${COUNTER}.com"/>
<t:property name="gal.domain3" value="NonExistingdomain3${gal.curTime}${COUNTER}.com"/>

<t:property name="test_account1.name" value="galtest${gal.curTime}@${gal.domain1}"/>
<t:property name="test_account2.name" value="moregaltest${gal.curTime}@${gal.domain1}"/>
<t:property name="test_account1.password" value="${defaultpassword.value}"/>
<t:property name="test_account2.password" value="${defaultpassword.value}"/>
<t:property name="gal.searchstring" value="galtest${gal.curTime}"/>
<t:property name="list1" value="test@${gal.domain1}"/>


<t:test_case testcaseid="Ping" type="always" >
    <t:objective>basic system check</t:objective>
    
    <t:test id="ping">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>

<t:test_case testcaseid="SearchGal_GroupReference_acct_setup" type="always" >
    <t:objective>Create two test account</t:objective>
    <steps>1. Login to admin account  
        2. Create the domains
        3. Create a test accounts 
    </steps>

    <t:test id="admin_login" required="true" depends="ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>
    
    <t:test id="createDomainRequest1" required="true">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${gal.domain1}</name>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse/admin:domain" attr="id" set="domain1.id"/>            
        </t:response>
    </t:test>
    
    <t:test id="create_test_account1" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account1.name}</name>
                <password>${test_account1.password}</password>               
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account1.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct1.server"/>
        </t:response>
    </t:test>
    
    <t:test id="create_test_account2" required="true" depends="admin_login">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${test_account2.name}</name>
                <password>${test_account2.password}</password>               
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id"  set="test_account2.id"/>
            <t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="test_acct2.server"/>
        </t:response>
    </t:test>
        
</t:test_case>

<t:property name="server.zimbraAccount" value="${test_acct1.server}"/>
<t:test_case testcaseid="SearchGal_GroupReference_01" type="bhr">
    <t:objective>Verify that SearchGALResponse has contact group reference.</t:objective>
    
    <t:staftask >
		<t:request>
			<server>${zimbraLDAPServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/bin/zmlocalconfig -s ldap_root_password'" RETURNSTDOUT WAIT</params>
		</t:request>
		<t:response>
        	<!--t:select regex=".*Data\s+:\s+ldap_root_password\s+=\s+(!\s)(.*)" group="0" set="ldap.password"/-->
            <t:select regex="(?s)(RC.*)(Data.*:\sldap_root_password\s=\s)([0-9a-zA-Z].*[0-9a-zA-Z])(.*)" group="3" set="ldap.password"/>
        </t:response> 
    </t:staftask>

	<t:staftask >
		<t:request>
			<server>${zimbraServer.name}</server>
			<service>PROCESS</service>
			<params>START SHELL COMMAND "su - zimbra -c \'/opt/zimbra/common/bin/ldapsearch -x -D cn=config -w ${ldap.password} -h ${zimbraLDAPServer.name} mail=${test_account1.name} dn -LLL'" RETURNSTDOUT WAIT</params>
		</t:request>
		<t:response>
        	<t:select regex="(?s)(RC.*)(Data.*:\sdn:\s)([0-9a-zA-Z].*[0-9a-zA-Z])(.*)" group="3" set="account1.ldap.base"/>
        </t:response> 
    </t:staftask>

    
    <t:test required="true">
        <t:request>
        <AuthRequest xmlns="urn:zimbraAccount">
            <account by="name">${test_account1.name}</account>
            <password>${test_account1.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:lifetime"  match="^\d+$"/>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>
  
    <t:test id="SearchGal1">
        <t:request>
            <SearchGalRequest xmlns="urn:zimbraAccount">
                <name >${test_account1.name}</name>
            </SearchGalRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:SearchGalResponse/acct:cn" attr="ref" match="${account1.ldap.base}"/>
            <t:select path="//acct:SearchGalResponse/acct:cn/acct:a[@n='email']" match="${test_account1.name}"/>                        
        </t:response>
    </t:test>

</t:test_case>


</t:tests>
