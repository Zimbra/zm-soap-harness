<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain" value="${COUNTER}.${TIME}.testgal.com"/>

<t:property name="account1" value="syncgal.${COUNTER}.${TIME}"/>
<t:property name="account2" value="syncgal.${COUNTER}.${TIME}"/>
<t:property name="account3" value="syncgal.${COUNTER}.${TIME}"/>

<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>
 

<t:test_case testcaseid="SyncGalRequest_AccountSetup_01" type="always">
    <t:objective>Account Setup </t:objective>
	<t:steps>
			1. Login into admin.
			2. Create test domains.
			3. Create test account without using zimbraHideInGal .
	</t:steps>

    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test id="CreateDomain1a" required="true" depends="adminlogin">
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
                <name>${domain}</name>
                <a n="zimbraNotes">Domain for testing SyncGalRequest</a>
            </CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse"/>
        </t:response>
    </t:test>


	<t:test id="CreateAccount1a" required="true" depends="adminlogin">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account1}@${domain}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account1.server"/>
		</t:response>
    </t:test>  

	<t:test id="CreateAccount1a" required="true" depends="adminlogin">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${account2}@${domain}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="account2.server"/>
		</t:response>
    </t:test>  

</t:test_case>


<t:test_case testcaseid="SyncGalRequest_Basic_01" type="smoke">
    <t:objective>Verify basic SyncGalRequest and SyncGalResponse</t:objective>
	<t:steps>
	1. Login as account1
	2. Send SyncGalRequest without a token
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SyncGalRequest xmlns="urn:zimbraAccount"/> 
		</t:request>
		<t:response>
 			<t:select path="//acct:SyncGalResponse"/>
		</t:response>
    </t:test>  

</t:test_case>

<t:test_case testcaseid="SyncGalRequest_Basic_02" type="smoke">
    <t:objective>Verify basic SyncGalResponse contains valid CN entries</t:objective>
	<t:steps>
	1. Login as account1
	2. Send SyncGalRequest with no token
	3. Verify that a valid account is returned
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SyncGalRequest xmlns="urn:zimbraAccount"/> 
		</t:request>
		<t:response>
 			<t:select path="//acct:SyncGalResponse/acct:cn[contains(@id,'${account1}')]">
 				<t:select path="//acct:a[@n='email']" match="${account1}@${domain}"/>
 			</t:select>
		</t:response>
    </t:test>  

</t:test_case>

<t:test_case testcaseid="SyncGalRequest_Basic_03" type="smoke" bugids="23956, 36679">
    <t:objective>Verify that using the token results in no further updates</t:objective>
	<t:steps>
	1. Login as account1
	2. Send SyncGalRequest (no token) to get the latest token
	3. Send SyncGalRequest (token from step 2), verify that no accounts are shown
	</t:steps>

	<t:property name="server.zimbraAccount" value="${account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${account1}@${domain}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>

        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SyncGalRequest xmlns="urn:zimbraAccount"/> 
		</t:request>
		<t:response>
 			<t:select path="//acct:SyncGalResponse" attr="token" set="token.id"/>
		</t:response>
    </t:test>  

	<t:test>
		<t:request>
			<SyncGalRequest xmlns="urn:zimbraAccount" token="${token.id}"/> 
		</t:request>
		<t:response>
 			<t:select path="//acct:SyncGalResponse" attr="token" set="token.id"/>
 			<t:select path="//acct:SyncGalResponse/acct:cn" emptyset="1"/>
		</t:response>
    </t:test>  

	<t:test>
		<t:request>
			<SyncGalRequest xmlns="urn:zimbraAccount" token="${token.id}"/> 
		</t:request>
		<t:response>
 			<t:select path="//acct:SyncGalResponse" attr="token" set="token.id"/>
 			<t:select path="//acct:SyncGalResponse/acct:cn" emptyset="1"/>
		</t:response>
    </t:test>  

</t:test_case>



</t:tests>