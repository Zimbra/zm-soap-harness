<t:tests xmlns:t="urn:zimbraTestHarness">

<t:property name="domain1.name" value="${COUNTER}.${TIME}.${defaultdomain.name}"/>
<t:property name="domain1.galaccount.name" value="galaccount${TIME}${COUNTER}@${domain1.name}"/>
<t:property name="domain1.galaccount.datasource.name" value="name${TIME}${COUNTER}"/>
<t:property name="domain1.account1.name" value="account${COUNTER}${TIME}@${domain1.name}"/>
<t:property name="domain1.account2.name" value="account${COUNTER}${TIME}@${domain1.name}"/>
<t:property name="domain1.account3.user" value="account${COUNTER}${TIME}"/>
<t:property name="domain1.account3.name" value="${domain1.account3.user}@${domain1.name}"/>
<t:property name="domain1.account4.user" value="account${COUNTER}${TIME}"/>
<t:property name="domain1.account4.name" value="${domain1.account4.user}@${domain1.name}"/>
<t:property name="domain1.account4.displayname" value="account${COUNTER}${TIME}"/>
<t:property name="domain1.account4.displayname.new" value="account${COUNTER}${TIME}"/>
<t:property name="domain1.account5.user" value="account${COUNTER}${TIME}"/>
<t:property name="domain1.account5.name" value="${domain1.account5.user}@${domain1.name}"/>

<t:property name="domain2.name" value="${COUNTER}.${TIME}.${defaultdomain.name}"/>
<t:property name="domain2.galaccount.name" value="galaccount${TIME}${COUNTER}@${domain2.name}"/>

<t:property name="domain3.name" value="${COUNTER}.${TIME}.${defaultdomain.name}"/>
<t:property name="domain3.galaccount.name" value="galaccount${TIME}${COUNTER}@${domain3.name}"/>

<t:property name="domain4.name" value="${COUNTER}.${TIME}.${defaultdomain.name}"/>
<t:property name="domain4.galaccount.name" value="galaccount${TIME}${COUNTER}@${domain4.name}"/>

<t:property name="domain5.name" value="${COUNTER}.${TIME}.${defaultdomain.name}"/>
<t:property name="domain5.galaccount.name" value="galaccount${TIME}${COUNTER}@${domain5.name}"/>

<t:property name="domain6.name" value="${COUNTER}.${TIME}.${defaultdomain.name}"/>
<t:property name="domain6.galaccount.name" value="galaccount${TIME}${COUNTER}@${domain6.name}"/>


<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

</t:test_case>
 

<t:test_case testcaseid="Ping" type="always">
    <t:objective>basic system check</t:objective>

    <t:test required="true">
        <t:request>
            <PingRequest xmlns="urn:zimbraAdmin"/>
        </t:request>
        <t:response>
            <t:select path="//admin:PingResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

    <t:test required="true" >
        <t:request>
            <CreateDomainRequest xmlns="urn:zimbraAdmin">
            	<name>${domain1.name}</name>
            	<a n="zimbraGalMode">zimbra</a>
            	<a n="zimbraGalMaxResults">100</a>
        	</CreateDomainRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateDomainResponse"/>
        </t:response>
    </t:test>

	<t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${domain1.account1.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="domain1.account1.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="domain1.account1.server"/>
		</t:response>
    </t:test>  

	<t:test >
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${domain1.account2.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="domain1.account2.id"/>
			<t:select path='//admin:CreateAccountResponse/admin:account/admin:a[@n="zimbraMailHost"]' set="domain1.account2.server"/>
		</t:response>
    </t:test>  

	<t:test >
        <t:request>
            <CreateGalSyncAccountRequest xmlns="urn:zimbraAdmin" name="${domain1.galaccount.datasource.name}" type="zimbra" domain="${domain1.name}" server="${domain1.account2.server}">
        		<account by="name">${domain1.galaccount.name}</account>
                <password>${defaultpassword.value}</password>
    		</CreateGalSyncAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateGalSyncAccountResponse/admin:account" attr="id" set="domain1.galaccount.id"/>
		</t:response>
    </t:test>  

	<t:test>
		<t:request>
			<GetAccountRequest xmlns="urn:zimbraAdmin">
				<account by="id">${domain1.galaccount.id}</account>
			</GetAccountRequest>
		</t:request>
		<t:response>
			<t:select path="//admin:GetAccountResponse">
				<t:select path="//admin:a[@n='zimbraMailHost']" set="domain1.galaccount.server"/>
			</t:select>
		</t:response>
	</t:test>

	<t:test >
        <t:request>
            <SyncGalAccountRequest xmlns="urn:zimbraAdmin" >
  				<account id="${domain1.galaccount.id}">
    				<datasource by="name" fullSync="true" reset="true">${domain1.galaccount.datasource.name}</datasource>
  				</account>
			</SyncGalAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:SyncGalAccountResponse"/>
		</t:response>
    </t:test>  

</t:test_case>
 

<t:test_case testcaseid="GalAccount_SyncGalRequest_01" type="bhr">
    <t:objective>Verify basic SyncGalResponse</t:objective>
	<t:steps>
	1. Login as account1
	6. Send SyncGalRequest
	</t:steps>


	<t:property name="server.zimbraAccount" value="${domain1.account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${domain1.account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>


	<t:test>
		<t:request>
			<SyncGalRequest idOnly="${globals.true}" xmlns="urn:zimbraAccount"/> 
		</t:request>
		<t:response>
 			<t:select path="//acct:SyncGalResponse"/>
		</t:response>
    </t:test>  


</t:test_case>


<t:test_case testcaseid="GALAccount_SyncGalRequest_02" type="bhr" bugids="54418">
    <t:objective>Verify a new account is returned in GalSyncResponse</t:objective>
	<t:steps>
	1. Login as account1
	2. Send SyncGalRequest (no token) to get the latest token
	3. Login as admin
	4. Create a new account
	5. Login as account1
	6. Send SyncGalRequest (token from step 2), verify that new account is contained in the response
	</t:steps>

	<t:property name="server.zimbraAccount" value="${domain1.account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${domain1.account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

   <t:delay msec="5000" /> 
	<t:test>
		<t:request>
			<SyncGalRequest  idOnly="${globals.true}" xmlns="urn:zimbraAccount"/> 
		</t:request>
		<t:response>
 			<t:select path="//acct:SyncGalResponse" attr="token" set="token.id"/>
		</t:response>
    </t:test>  


	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test id="CreateAccount1a" required="true" depends="adminlogin">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${domain1.account3.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse"/>
		</t:response>
    </t:test>  
   <t:delay msec="5000" /> 
    <t:test >
        <t:request>
			<SyncGalAccountRequest xmlns="urn:zimbraAdmin">
				<account id="${domain1.galaccount.id}">
			    	<datasource by="name">${domain1.galaccount.datasource.name}</datasource>
				</account>
			</SyncGalAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:SyncGalAccountResponse"/>
        </t:response>
    </t:test>

   <t:delay msec="5000" /> 
	<t:property name="server.zimbraAccount" value="${domain1.galaccount.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${domain1.galaccount.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="contact">
				<query>${domain1.account3.name}</query>
			</SearchRequest> 
		</t:request>
		<t:response>
 			<t:select path="//mail:SearchResponse">
 				<t:select path="//mail:cn" attr="id" set="contact.id"/>
 			</t:select>
		</t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${domain1.account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${domain1.account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

   <t:delay msec="5000" /> 
	<t:test>
		<t:request>
			<SyncGalRequest xmlns="urn:zimbraAccount" token="${token.id}"  idOnly="${globals.true}"/> 
		</t:request>
		<t:response>
 			<t:select path="//acct:SyncGalResponse">
 				<t:select path="//acct:cn[@id='${domain1.galaccount.id}:${contact.id}']"/>
 			</t:select>
		</t:response>
    </t:test>  


</t:test_case>

<t:test_case testcaseid="GALAccount_SyncGalRequest_03" type="bhr">
    <t:objective>Verify a modified account is returned in GalSyncResponse</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test id="CreateAccount1a" required="true" depends="adminlogin">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${domain1.account4.name}</name>
                <password>${defaultpassword.value}</password>
				<a n="displayName">${domain1.account4.displayname}</a>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="domain1.account4.id"/>
		</t:response>
    </t:test>  
    
   <t:delay msec="5000" /> 
    <t:test >
        <t:request>
			<SyncGalAccountRequest xmlns="urn:zimbraAdmin">
				<account id="${domain1.galaccount.id}">
			    	<datasource by="name">${domain1.galaccount.datasource.name}</datasource>
				</account>
			</SyncGalAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:SyncGalAccountResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${domain1.account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${domain1.account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SyncGalRequest xmlns="urn:zimbraAccount" idOnly="${globals.true}"/> 
		</t:request>
		<t:response>
 			<t:select path="//acct:SyncGalResponse" attr="token" set="token.id"/>
		</t:response>
    </t:test>  


	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test >
        <t:request>
			<ModifyAccountRequest xmlns="urn:zimbraAdmin">
				<id>${domain1.account4.id}</id>
				<a n="displayName">${domain1.account4.displayname.new}</a>
			</ModifyAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:ModifyAccountResponse"/>
		</t:response>
    </t:test>  

   <t:delay msec="5000" /> 
    <t:test >
        <t:request>
			<SyncGalAccountRequest xmlns="urn:zimbraAdmin">
				<account id="${domain1.galaccount.id}">
			    	<datasource by="name">${domain1.galaccount.datasource.name}</datasource>
				</account>
			</SyncGalAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:SyncGalAccountResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${domain1.galaccount.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${domain1.galaccount.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SearchRequest xmlns="urn:zimbraMail" types="contact">
				<query>${domain1.account4.name}</query>
			</SearchRequest> 
		</t:request>
		<t:response>
 			<t:select path="//mail:SearchResponse">
 				<t:select path="//mail:cn" attr="id" set="contact.id"/>
 			</t:select>
		</t:response>
    </t:test>  

	<t:property name="server.zimbraAccount" value="${domain1.account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${domain1.account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SyncGalRequest xmlns="urn:zimbraAccount" token="${token.id}" idOnly="${globals.true}"/> 
		</t:request>
		<t:response>
 			<t:select path="//acct:SyncGalResponse">
 				<t:select path="//acct:cn[@id='${domain1.galaccount.id}:${contact.id}']"/>
 			</t:select>
		</t:response>
    </t:test>  


</t:test_case>

<t:test_case testcaseid="GALAccount_SyncGalRequest_04" type="bhr">
    <t:objective>Verify a deleted account is not returned in GalSyncResponse</t:objective>

	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test id="CreateAccount1a" required="true" depends="adminlogin">
        <t:request>
            <CreateAccountRequest xmlns="urn:zimbraAdmin">
                <name>${domain1.account5.name}</name>
                <password>${defaultpassword.value}</password>
            </CreateAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:CreateAccountResponse/admin:account" attr="id" set="domain1.account5.id"/>
		</t:response>
    </t:test>  
    
	<t:property name="server.zimbraAccount" value="${domain1.account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${domain1.account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SyncGalRequest xmlns="urn:zimbraAccount" idOnly="${globals.true}"/> 
		</t:request>
		<t:response>
 			<t:select path="//acct:SyncGalResponse" attr="token" set="token.id"/>
		</t:response>
    </t:test>  


	<t:property name="server.zimbraAdmin" value="${zimbraServer.name}"/>
	
    <t:test id="adminlogin" required="true" depends="Ping">
        <t:request>
            <AuthRequest xmlns="urn:zimbraAdmin">
                <name>${admin.user}</name>
                <password>${admin.password}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:AuthResponse/admin:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test >
        <t:request>
            <DeleteAccountRequest xmlns="urn:zimbraAdmin">
                <id>${domain1.account5.id}</id>
            </DeleteAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:DeleteAccountResponse"/>
        </t:response>
    </t:test>  

    <t:test >
        <t:request>
			<SyncGalAccountRequest xmlns="urn:zimbraAdmin">
				<account id="${domain1.galaccount.id}">
			    	<datasource by="name">${domain1.galaccount.datasource.name}</datasource>
				</account>
			</SyncGalAccountRequest>
        </t:request>
        <t:response>
            <t:select path="//admin:SyncGalAccountResponse"/>
        </t:response>
    </t:test>

	<t:property name="server.zimbraAccount" value="${domain1.account1.server}"/>

    <t:test>
        <t:request>
            <AuthRequest xmlns="urn:zimbraAccount">
                <account by="name">${domain1.account1.name}</account>
                <password>${defaultpassword.value}</password>
            </AuthRequest>
        </t:request>
        <t:response>
            <t:select path="//acct:AuthResponse/acct:authToken" set="authToken"/>
        </t:response>
    </t:test>

	<t:test>
		<t:request>
			<SyncGalRequest xmlns="urn:zimbraAccount" token="${token.id}" idOnly="${globals.true}"/> 
		</t:request>
		<t:response>
 			<t:select path="//acct:SyncGalResponse/acct:cn[contains(@id,'${domain1.account5.user}')]" emptyset="1">
 			</t:select>
		</t:response>
    </t:test>  

	<t:test>
		<t:request>
			<SyncGalRequest xmlns="urn:zimbraAccount"  idOnly="${globals.true}"/> 
		</t:request>
		<t:response>
 			<t:select path="//acct:SyncGalResponse/acct:cn[contains(@id,'${domain1.account5.user}')]" emptyset="1">
 			</t:select>
		</t:response>
    </t:test>  


</t:test_case>


</t:tests>
