<project name="zm-soap-harness" default="jar" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
	<import file="../zm-zcs/ant-global.xml"/>

	<property name="build.staf.dir" location="${build.dir}/staf"/>
	<property name="build.staf.jars.dir" location="${build.dir}/staf/STAF-INF/jars"/>
	<property name="build.staf.classes.dir" location="${build.dir}/staf/STAF-INF/classes"/>
	<property name="server.jars.dir" location="${server.dir}/jars"/>
	<property name="deployDir" location="${build.dir}/dist"/>
	<property name="dist.dir.root" location="${deployDir}"/>
	<property name="build.customauth.classes.dir" location="${build.dir}/customauth/classes"/>
	<property name="build.storemanager.classes.dir" location="${build.dir}/storemanager/classes"/>
	<property name="build.scalityhttpstore.classes.dir" location="${build.dir}/scalityhttpstore/classes"/>
	<property name="zm-network-soap-harness.dir" location="../zm-network-soap-harness"/>
	<property name="build.temp.dir" location="${build.dir}/temp"/>

  	<target name="jar" depends="compile" description="Creates the jar file">
		<antcall target="zimbra-jar">
			<param name="implementation.title" value="Zimbra QA"/>
		</antcall>
	</target>

	<target name="compress-move">
		<apply executable="gzip" failonerror="true">
			<arg value="-v"/>
			<fileset dir="${build.dir}" includes="*.tar"/>
		</apply>
		<copy todir="${dist.dir.root}" verbose="true" overwrite="true">
			<fileset dir="${build.dir}" includes="*.tar.gz"/>
			<mapper type="glob" from="*.tar.gz" to="*.tgz"/>
		</copy>
		<checksum>
			<fileset dir="${dist.dir.root}">
				<include name="*.tgz"/>
			</fileset>
		</checksum>
	</target>

	<target name="build-tools-setup">
		<tar longfile="gnu" destfile="${build.dir}/tools.tar">
			<tarfileset dir="src/bin"  prefix="tools" mode="555">
				<include name="**/*"/>
			</tarfileset>
		</tar>
	</target>

	<target name="build-smtp-service-file" depends="staf-jar">
		<copy todir="${build.dir}">
			<fileset dir="src/STAF/SMTP">
				<include name="smtp.pl"/>
			</fileset>
		</copy>
		<fixcrlf srcdir="${build.dir}" eol="lf" eof="remove" includes="*.sh" />
		<tar longfile="gnu" destfile="${build.dir}/smtpservice.tar">
			<tarfileset dir="${build.dir}" prefix="smtpservice/bin" mode="555">
				<include name="smtp.pl"/>
			</tarfileset>
			<tarfileset dir="${build.staf.jars.dir}" prefix="smtpservice/bin" mode="555">
				<include name="**/json-20160810.jar"/>
				<include name="**/activation.jar"/>
				<include name="**/commons-cli-1.2.jar"/>
				<include name="**/commons-logging-1.0.3.jar"/>
				<include name="**/commons-httpclient-3.1.jar"/>
				<include name="**/dom4j-1.5.2.jar"/>
				<include name="**/log4j-1.2.16.jar"/>
				<include name="**/javamail-1.4.5.jar"/>
				<include name="**/mail-1.4.5.jar"/>
			</tarfileset>
		</tar>
	</target>

	<target name="ScalityHttpStore compile" description="Create a  store manager extension jar">
		<mkdir dir="${build.scalityhttpstore.classes.dir}" />
		<javac destdir="${build.scalityhttpstore.classes.dir}" srcdir="${src.java.dir}" debug="false" classpathref="class.path">
			<include name="**/*.java" />
		</javac>
	</target>

	<target name="ScalityHttpStore jar" depends="ScalityHttpStore compile" description="Creates jar files">
		<jar manifest="conf/ZimbraExtensions/ScalityHttpStore/MANIFEST.MF" destfile="${build.dir}/ScalityHttpStore.jar" basedir="${build.scalityhttpstore.classes.dir}"/>
	</target>

	<target name="storemanager compile" description="Create a  store manager extension jar">
		<mkdir dir="${build.storemanager.classes.dir}" />
		<javac destdir="${build.storemanager.classes.dir}" srcdir="${src.java.dir}" debug="false" classpathref="class.path">
			<include name="**/*.java" />
		</javac>
	</target>

	<target name="storemanager jar" depends="storemanager compile" description="Creates jar files">
		<jar manifest="conf/ZimbraExtensions/StoreManager/MANIFEST.MF" destfile="${build.dir}/zimbra-extns-storemanager.jar" basedir="${build.storemanager.classes.dir}"/>
	</target>

	<target name="AuthExtension jar" depends="AuthExtension compile" description="Create a custom auth extension jar">
		<property name="manifest" value="conf/ZimbraExtensions/CustomAuthQA/MANIFEST.MF"/>
		<property name="jar.file" value="ExtensionCustomAuthQA.jar"/>
		<property name="destfile" value="${build.dir}/${jar.file}"/>
		<jar manifest="${manifest}" destfile="${destfile}" basedir="${build.customauth.classes.dir}"/>
	</target>

	<target name="AuthExtension compile" description="Create a custom auth extension jar">
		<mkdir dir="${build.customauth.classes.dir}" />
		<javac destdir="${build.customauth.classes.dir}" srcdir="${src.java.dir}" debug="false" classpathref="class.path">
			<include name="**/*.java" />
		</javac>
	</target>

	<target name="staf-bugreports" depends="compile" description="Creates the STAF jar file for the Bug Reports service">
		<property name="build.staf.bugreports" location="${build.dir}/staf/bugreports" />
		<property name="build.staf.bugreports.classes.dir" location="${build.staf.bugreports}/STAF-INF/classes"/>
		<property name="build.staf.bugreports.jars.dir" location="${build.staf.bugreports}/STAF-INF/jars"/>

		<copy todir="${build.staf.bugreports.classes.dir}">
			<fileset dir="${build.classes.dir}" />
		</copy>

		<ivy:install organisation="log4j" module="apache-log4j-extras" revision="1.0" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="jaxen" module="jaxen" revision="1.1.3" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>

		<copy todir="${build.staf.bugreports.jars.dir}">
			<fileset dir="${dist.dir}">
				<include name="apache-log4j-extras-1.0.jar" />
				<include name="commons-cli-1.2.jar" />
				<include name="dom4j-1.5.2.jar" />
				<include name="jaxen-1.1.3.jar" />
				<include name="log4j-1.2.16.jar" />
			</fileset>
		</copy>

		<jar destfile="${dist.lib.dir}/zimbratestngresults.jar" basedir="${build.staf.bugreports}">
			<manifest>
				<attribute name="Main-Class" value="staf.Driver" />
				<section name="staf/service/info">
					<attribute name="Service-Class" value="com.zimbra.qa.bugreports.ResultsStaf" />
					<attribute name="Packaged-Jars" value="apache-log4j-extras-1.0 commons-cli-1.2 dom4j-1.5.2 jaxen-1.1.3 log4j-1.2.16"/>
				</section>
			</manifest>
		</jar>
	</target>

	<target name="staf-results" depends="compile" description="Creates the result service jar file">
		<property name="build.staf.result.classes.dir" location="${build.dir}/staf/result/STAF-INF/classes"/>
		<property name="build.staf.result.jars.dir" location="${build.dir}/staf/result/STAF-INF/jars"/>

		<copy todir="${build.staf.result.classes.dir}">
			<fileset dir="${build.classes.dir}"/>
		</copy>

		<copy todir="${build.staf.result.jars.dir}">
			<fileset dir="${build.tmp.dir}">
				<include name="postgresql-9.1-901.jdbc4.jar"/>
			</fileset>
		</copy>

		<copy todir="${build.staf.result.jars.dir}">
			<fileset dir="${dist.dir}">
				<include name="json-20160810.jar"/>
				<include name="log4j-1.2.16.jar"/>
				<include name="commons-logging-1.0.3"/>
			</fileset>
		</copy>

		<jar destfile="${dist.lib.dir}/zimbraresults.jar" basedir="${build.staf.dir}/result">
			<manifest>
				<attribute name="Main-Class" value="com.zimbra.qa.results.ResultsCore"/>
				<section name="staf/service/info">
					<attribute name="Service-Class" value="com.zimbra.qa.results.ResultsStaf"/>
					<attribute name="Packaged-Jars" value="json-20160810 postgresql-9.1-901.jdbc4 log4j-1.2.16 commons-logging-1.0.3"/>
				</section>
			</manifest>
		</jar>
	</target>

	<target name="staf-inject" depends="compile" description="Creates the inject service jar file">
		<property name="build.staf.inject.classes.dir" location="${build.dir}/staf/inject/STAF-INF/classes"/>
		<property name="build.staf.inject.jars.dir" location="${build.dir}/staf/inject/STAF-INF/jars"/>
		<copy todir="${build.staf.inject.classes.dir}">
			<fileset dir="${build.classes.dir}"/>
		</copy>

		<copy todir="${build.staf.inject.jars.dir}">
			<fileset dir="${dist.dir}">
				<include name="log4j-1.2.16.jar"/>
				<include name="javamail-1.4.5.jar"/>
				<include name="mail-1.4.5.jar"/>
			</fileset>
		</copy>

		<jar destfile="${dist.lib.dir}/zimbrainject.jar" basedir="${build.staf.dir}/inject">
			<manifest>
				<attribute name="Main-Class" value="com.zimbra.qa.inject.Driver"/>
				<section name="staf/service/info">
					<attribute name="Service-Class" value="com.zimbra.qa.inject.INJECTStaf"/>
					<attribute name="Packaged-Jars" value="zimbrainject mail-1.4.5 javamail-1.4.5 activation log4j-1.2.16"/>
				</section>
			</manifest>
		</jar>
	</target>

	<target name="staf-importer" depends="compile,getJarVersion" description="Creates the inject service jar file">
		<property name="build.staf.importer.classes.dir" location="${build.dir}/staf/importer/STAF-INF/classes"/>
		<property name="build.staf.importer.jars.dir" location="${build.dir}/staf/importer/STAF-INF/jars"/>

		<copy todir="${build.staf.importer.classes.dir}">
			<fileset dir="${build.classes.dir}"/>
		</copy>

		<ivy:install organisation="commons-cli" module="commons-cli" revision="1.2" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="log4j" module="log4j" revision="1.2.16" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-httpclient" module="commons-httpclient" revision="3.1" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="dom4j" module="dom4j" revision="1.5.2" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-logging" module="commons-logging" revision="1.0.3" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-codec" module="commons-codec" revision="1.7" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.json" module="json" revision="20160810" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="javax.mail" module="mail" revision="1.4.5" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="libidn" module="libidn" revision="1.24" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>

		<copy todir="${build.staf.importer.jars.dir}">
			<fileset dir="${build.tmp.dir}">
				<include name="*.jar"/>
			</fileset>
		</copy>

		<copy todir="${build.staf.importer.jars.dir}">
			<fileset dir="${dist.dir}">
				<include name="commons-cli-1.2.jar"/>
				<include name="log4j-1.2.16.jar"/>
				<include name="commons-httpclient-3.1.jar"/>
				<include name="dom4j-1.5.2.jar"/>
				<include name="commons-logging-1.0.3.jar"/>
				<include name="commons-codec-1.7.jar"/>
				<include name="json-20160810.jar"/>
				<include name="javamail-1.4.5.jar"/>
				<include name="mail-1.4.5.jar"/>
				<include name="libidn-1.24.jar"/>
			</fileset>
		</copy>

		<jar destfile="${dist.lib.dir}/zimbraimporter.jar" basedir="${build.staf.dir}/importer">
			<manifest>
				<attribute name="Main-Class" value="com.zimbra.qa.importer.Driver"/>
				<section name="staf/service/info">
					<attribute name="Service-Class" value="com.zimbra.qa.importer.StafIntegration"/>
					<attribute name="Packaged-Jars" value="commons-cli-1.2 log4j-1.2.16 commons-httpclient-3.1 dom4j-1.5.2 commons-logging-1.0.3 commons-codec-1.6 json-20160810 mail-1.4.5 javamail-1.4.5 libidn-1.24 ${zimbraJarPath}"/>
				</section>
			</manifest>
		</jar>
	</target>

	<target name="staf-nunit" depends="compile" description="Creates the nunit STAF jar file">
		<property name="build.staf.nunit.classes.dir" location="${build.dir}/staf/nunit/STAF-INF/classes"/>
		<property name="build.staf.nunit.jars.dir" location="${build.dir}/staf/nunit/STAF-INF/jars"/>

		<copy todir="${build.staf.nunit.classes.dir}">
			<fileset dir="${build.classes.dir}"/>
		</copy>

		<ivy:install organisation="log4j" module="log4j" revision="1.2.16" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>

		<copy todir="${build.staf.nunit.jars.dir}">
			<fileset dir="${dist.dir}">
				<include name="log4j-1.2.16.jar"/>
			</fileset>
		</copy>

		<jar destfile="${dist.lib.dir}/zimbranunit.jar" basedir="${build.staf.dir}/nunit">
			<manifest>
				<attribute name="Main-Class" value="com.zimbra.qa.nunit.Driver"/>
				<section name="staf/service/info">
					<attribute name="Service-Class" value="com.zimbra.qa.nunit.StafService"/>
					<attribute name="Packaged-Jars" value="zimbranunit log4j-1.2.16"/>
				</section>
			</manifest>
		</jar>
	</target>

	<target name="gatherZimbraJars" depends="init-ivy">
		<ivy:install organisation="zimbra" module="zm-native" revision="latest.integration" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar" />
		<ivy:install organisation="zimbra" module="zm-common" revision="latest.integration" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar" />
		<ivy:install organisation="zimbra" module="zm-soap" revision="latest.integration" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar" />
		<ivy:install organisation="zimbra" module="zm-client" revision="latest.integration" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" 	transitive="true" type="jar" />
		<ivy:install organisation="zimbra" module="zm-store" revision="latest.integration" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar" />
		<ivy:install organisation="postgresql" module="postgresql" revision="9.1-901.jdbc4" settingsRef="dev.settings" from="chain-resolver" to="build-tmp" overwrite="true" transitive="true" type="jar" />
	</target>

	<target name="getJarVersion" depends="gatherZimbraJars">
		<echo>${build.dir}/tmp</echo>
		<fileset id="dist.contents" dir="${build.dir}/tmp" includes="*.jar"/>
		<property name="prop.dist.contents" refid="dist.contents"/>
		<propertyregex property="zimbraJarPath" input="${prop.dist.contents}" regexp=".jar;|.jar" replace=" "  global="true" />
		<echo>${zimbraJarPath}</echo>
	</target>

	<target name="staf-jar" depends="getJarVersion,staf-nunit,staf-importer,staf-inject,staf-results,staf-bugreports,compile,AuthExtension jar,storemanager jar, ScalityHttpStore jar" description="Creates the jar file">
		<copy todir="${build.staf.classes.dir}">
			<fileset dir="${build.classes.dir}"/>
		</copy>
		<ivy:install organisation="com.google.guava" module="guava" revision="23.0" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="ical4j" module="ical4j" revision="0.9.16-patched" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="com.unboundid" module="unboundid-ldapsdk" revision="2.3.5" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.apache.httpcomponents" module="httpclient" revision="4.5.2" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.apache.httpcomponents" module="httpasyncclient" revision="4.1.2" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.apache.httpcomponents" module="httpcore" revision="4.4.5" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.apache.httpcomponents" module="httpcore-nio" revision="4.4.5" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>

		<!-- <ivy:install organisation="ant-contrib" module="ant-contrib" revision="1.0b3" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.bouncycastle" module="bcprov-jdk15" revision="1.46" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-dbcp" module="commons-dbcp" revision="1.1" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-fileupload" module="commons-fileupload" revision="1.2.2" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="commons-pool" module="commons-pool" revision="1.1" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="ch.ethz.ganymed" module="ganymed-ssh2" revision="build210" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="com.google.guava" module="guava" revision="23.0" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="ical4j" module="ical4j" revision="0.9.16-patched" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.apache.james" module="apache-jsieve-core" revision="0.5" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="com.jcraft" module="jzlib" revision="1.0.7" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="jaxen" module="jaxen" revision="1.1.3" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.apache.lucene" module="lucene-core" revision="3.5.0" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="com.unboundid" module="unboundid-ldapsdk" revision="2.3.5" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.mariadb.jdbc" module="mariadb-java-client" revision="1.1.8" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="	true" transitive="true" type="jar"/>
		<ivy:install organisation="net.sourceforge.nekohtml" module="nekohtml" revision="1.9.13.1z" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="org.igniterealtime.whack" module="core" revision="2.0.0" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="xerces" module="xercesImpl" revision="2.9.1-patch-01" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/>
		<ivy:install organisation="xpp3" module="xpp3" revision="1.1.3.4.O" settingsRef="dev.settings" from="chain-resolver" to="build-dist" overwrite="true" transitive="true" type="jar"/> -->
		<copy todir="${build.staf.jars.dir}">
		<fileset dir="${build.dir}">
			<include name="ExtensionCustomAuthQA.jar"/>
			<include name="zimbra-extns-storemanager.jar" />
			<include name="ScalityHttpStore.jar" />
		</fileset>
			<fileset dir="${build.dir}/tmp">
				<include name="*.jar"/>
			</fileset>

			<fileset dir="${dist.dir}">
				<include name="json-20160810.jar"/>
				<include name="ant-contrib-1.0b3.jar"/>
				<include name="bcprov-jdk15-1.46.jar"/>
				<include name="commons-cli-1.2.jar"/>
				<include name="commons-codec-1.7.jar"/>
				<include name="commons-dbcp-1.1.jar"/>
				<include name="commons-fileupload-1.2.2.jar"/>
				<include name="commons-httpclient-3.1.jar"/>
				<include name="commons-logging-1.0.3.jar"/>
				<include name="commons-pool-1.1.jar"/>
				<include name="dom4j-1.5.2.jar"/>
				<include name="ganymed-ssh2-build209.jar"/>
				<include name="guava-23.0.jar"/>
				<include name="ical4j-0.9.16-patched.jar"/>
				<include name="apache-jsieve-core-0.5.jar"/>
				<include name="jzlib-1.0.7.jar"/>
				<include name="jaxen-1.1.3.jar"/>
				<include name="log4j-1.2.16.jar"/>
				<include name="lucene-3.5.0.jar"/>
				<include name="unboundid-ldapsdk-2.3.5.jar"/>
				<include name="mariadb-java-client-1.1.8.jar"/>
				<include name="javamail-1.4.5.jar"/>
				<include name="mail-1.4.5.jar"/>
				<include name="nekohtml-1.9.13.1z.jar"/>
				<include name="whack-2.0.0.jar"/>
				<include name="xercesImpl-2.9.1-patch-01"/>
				<include name="xpp3-1.1.3.4.O.jar"/>
				<include name="httpclient-4.5.2.jar"/>
				<include name="httpasyncclient-4.1.2.jar"/>
				<include name="httpcore-4.4.5.jar"/>
				<include name="httpcore-nio-4.4.5.jar"/>
			</fileset>
		</copy>

		<jar destfile="${dist.lib.dir}/zimbrastaf.jar" basedir="${build.staf.dir}">
			<manifest>
				<attribute name="Main-Class" value="com.zimbra.qa.soap.SoapTestMain"/>
				<section name="staf/service/info">
					<attribute name="Service-Class" value="com.zimbra.qa.soap.StafIntegration"/>
					<attribute name="Packaged-Jars" value="webservices-api webservices-rt metro-zcs-soapservice testng-6.8 guava-23.0 json-20160810 commons-codec-1.7 zimbrastore activation ical4j-0.9.16-patched mail-1.4.5 javamail-1.4.5 commons-cli-1.2 servlet-api junit-4.8.2 dom4j-1.5.2 commons-httpclient-3.1 unboundid-ldapsdk-2.3.5 commons-logging-1.0.3 log4j-1.2.16 jaxen-1.1.3 httpclient-4.5.2 httpasyncclient-4.1.2 httpcore-4.4.5 httpcore-nio-4.4.5 ${zimbraJarPath}"/>
				</section>
			</manifest>
		</jar>

		<jar destfile="${dist.lib.dir}/zimbrasmtp.jar" basedir="${build.staf.dir}">
			<manifest>
				<attribute name="Main-Class" value="com.zimbra.qa.smtp.StafTestSMTP"/>
				<section name="staf/service/info">
					<attribute name="Service-Class" value="com.zimbra.qa.smtp.StafTestSMTP"/>
					<attribute name="Packaged-Jars" value="json-20160810 commons-codec-1.7.jar activation ical4j-0.9.16-patched mail-1.4.5 javamail-1.4.5 commons-cli-1.2 servlet-api junit-4.8.2 dom4j-1.5.2 commons-httpclient-3.1 log4j-1.2.16 jaxen-1.1.3 commons-logging-1.0.3 ${zimbraJarPath}"/>
				</section>
			</manifest>
		</jar>

		<jar destfile="${dist.lib.dir}/zimbrasample.jar" basedir="${build.staf.dir}">
			<manifest>
				<attribute name="Main-Class" value="com.zimbra.qa.sample.StafCore"/>
				<section name="staf/service/info">
					<attribute name="Service-Class" value="com.zimbra.qa.sample.StafMain"/>
					<attribute name="Packaged-Jars" value="json-20160810 commons-codec-1.7.jar activation ical4j-0.9.16-patched mail-1.4.5 javamail-1.4.5 commons-cli-1.2 servlet-api junit-4.8.2 dom4j-1.5.2 commons-httpclient-3.1 log4j-1.2.16 jaxen-1.1.3 commons-logging-1.0.3 ${zimbraJarPath}"/>
				</section>
			</manifest>
		</jar>

		<jar destfile="${dist.lib.dir}/zimbraemail.jar" basedir="${build.staf.dir}">
			<manifest>
				<attribute name="Main-Class" value="com.zimbra.qa.email.INJECTCore"/>
				<section name="staf/service/info">
					<attribute name="Service-Class" value="com.zimbra.qa.email.INJECTStaf"/>
					<attribute name="Packaged-Jars" value="json-20160810 commons-codec-1.7.jar activation ical4j-0.9.16-patched mail-1.4.5 javamail-1.4.5 commons-cli-1.2 servlet-api junit-4.8.2 dom4j-1.5.2 commons-httpclient-3.1 log4j-1.2.15 jaxen-1.1.3 commons-logging-1.0.3 ${zimbraJarPath}"/>
				</section>
			</manifest>
		</jar>
	</target>

	<target name="zm-network-soap-content" description="Copies network related soap data and tests">
		<mkdir dir="${build.temp.dir}"/>
		<echo message="Copying network related data and tests..."/>
		<!--Current set of network related changes do not need these steps to be executed in zimbraX. Hence this part has been commented.-->
		<if><available file="${zm-network-soap-harness.dir}/conf/setup.sh" type="file"/>
			<then><delete file="./conf/setup.sh"/></then>
		</if>
		<if> <available file="${zm-network-soap-harness.dir}" type="dir"/>
		<then>
			<copy todir="${build.temp.dir}/data">
				<fileset dir="${zm-network-soap-harness.dir}/data">
					<include name="**/*"/>
				</fileset>
			</copy>
		</then>
		</if>
  	</target>

   	<target name="soap-build-set-up" depends="zm-network-soap-content">
		<copy todir="${build.temp.dir}/data/TestMailRaw">
			<fileset dir="data/TestMailRaw" includes="**"/>
		</copy>

		<copy todir="${build.temp.dir}/data/soapvalidator">
			<fileset dir="data/soapvalidator" includes="**"/>
		</copy>
  	</target>

	<target name="build-soap-data-file" depends="soap-build-set-up,staf-jar">
		<copy todir="${build.dir}">
			<fileset dir="src/bin">
				<include name="runreports.sh"/>
				<include name="runtmssoap.sh"/>
				<include name="runreports_p.sh"/>
			</fileset>
		</copy>

		<fixcrlf srcdir="${build.dir}" eol="lf" eof="remove" includes="*.sh" />

		<tar longfile="gnu" destfile="${build.dir}/soapdata.tar">
			<tarfileset dir="${build.temp.dir}/data/soapvalidator" prefix="soapvalidator/data/soapvalidator" mode="555" includes="**"/>

			<tarfileset dir="${build.dir}" prefix="soapvalidator/bin" mode="555">
				<include name="runreports.sh"/>
				<include name="runtmssoap.sh"/>
				<include name="runreports_p.sh"/>
			</tarfileset>

			<tarfileset dir="${build.temp.dir}/data/TestMailRaw" prefix="soapvalidator/data/TestMailRaw" mode="555" includes="**"/>

			<tarfileset dir="conf" prefix="soapvalidator/conf" mode="555">
				<include name="**/*"/>
			</tarfileset>

			<tarfileset dir="${build.staf.jars.dir}" prefix="soapvalidator/bin/jars" mode="555">
				<include name="**/*.jar"/>
				<exclude name="**/ExtensionCustomAuthQA.jar"/>
			</tarfileset>

			<tarfileset dir="${build.staf.jars.dir}" prefix="soapvalidator/build" mode="555">
				<include name="**/ExtensionCustomAuthQA.jar"/>
			</tarfileset>

			<tarfileset dir="${build.staf.jars.dir}" prefix="soapvalidator/build" mode="555">
				<include name="**/zimbra-extns-storemanager.jar"/>
			</tarfileset>

			<tarfileset dir="${build.staf.jars.dir}" prefix="soapvalidator/build" mode="555">
				<include name="**/ScalityHttpStore.jar"/>
			</tarfileset>

			<tarfileset dir="${dist.lib.dir}" prefix="soapvalidator/bin" mode="555">
				<include name="**/*.jar"/>
			</tarfileset>
		</tar>

		<!-- Delete the build/tmp directory after build-->
		<!-- <delete dir="${build.tmp.dir}"/> -->
	</target>

	<target name="build-testware-one" description="testware one" depends="build-soap-data-file" />
	<target name="build-testware-two" description="testware two" depends="build-smtp-service-file" />
	<target name="build-testware" description="Build soap harness testware" depends="clean,build-testware-one,build-testware-two,build-tools-setup,compress-move" />

	<target name="Run-SoapTestCore" depends="compile,zm-network-soap-content" description="Run Staf Tests in non-STAF environment">
		<property name="testRoot" value="build/temp/data/soapvalidator/"/>
		<property name="testSuite" value="smoke"/>
		<property name="testResultDir" value="."/>
		<echo>STAF: Executing ${testRoot} ${testSuite}</echo>
		<java classname="com.zimbra.qa.soap.SoapTestMain" classpathref="test.class.path" fork="true" failonerror="true">
			<arg line="-sf ${testRoot} -l conf/log4j-dev.properties -p conf/global.properties -z . -t ${testSuite} -j -o ${testResultDir}"/>
		</java>
	</target>

	<target name="Run-SoapTestSanity" depends="compile,zm-network-soap-content" description="Run Staf Tests in non-STAF environment">
			<property name="testRoot" value="build/temp/data/soapvalidator/SanityTest/"/>
			<echo>STAF: Executing ${testRoot}</echo>
			<java classname="com.zimbra.qa.soap.SoapTestMain" classpathref="test.class.path" fork="true" failonerror="true">
					<arg line="-f ${testRoot} -l conf/log4j-dev.properties -p conf/global.properties -z . -t sanity -j"/>
			</java>
	</target>

	<target name="Execute_Tests" depends="build-init,resolve" description="Run Staf Tests in non-STAF environment">
		<echo>STAF: Executing ${testRoot}</echo>
		<echo>class path value ${class.path}</echo>
		<java classname="com.zimbra.qa.soap.SoapTestMain" classpathref="test.class.path" fork="true" failonerror="true">
			<arg line="-f ${testRoot} -l conf/log4j-dev.properties -p conf/global.properties -z . -j -k none -t ${suite}"/>
		</java>
	</target>
</project>
